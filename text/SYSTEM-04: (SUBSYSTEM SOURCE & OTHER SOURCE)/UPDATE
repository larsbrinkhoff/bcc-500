       IDENT UPDATE;

* THIS PROGRAM UPDATES THE PRESENT MASTERFILE (EITHER INITIALIZED OR  
* PARTIALLY FILLED) BY MERGING THE ACCOUNT-USER FILE INTO THE MASTER-
* FILE.  THE END RESULT IS A MASTERFILE SORTED BY USER NUMBERS WITH THE
* FIRST RECORD OF EACH USER CONTAINING THE YEAR TO DATE CHARGES, FOLLOWED
* BY THE DETAILED USAGE DATA IN TIME SEQUENCE MERGED FROM THE ACCOUNT-
* USER FILE.  THIS PROGRAM CAN BE USED AS OFTEN AS REQUIRED WHENEVER THE
* #1:ACCOUNT-FILE GETS TOO BIG.  SINCE A NEW MASTERFILE IS PRODUCED,
* THERE MUST BE NO CONFUSION BETWEEN THE OLD AND NEW VERSIONS.

       DECLARE INTEGER CURMAS;     *CURRENT MASTERFILE FILE NUMBER
       DECLARE INTEGER NEWMAS;     *NEW MASTERFILE FILE NUMBER
       DECLARE INTEGER ACCUSR;     *ACCOUNT-USER FILE NUMBER
       DECLARE INTEGER CURUNO;     *CURRENT USER NO. BEING LOOKED FOR IN A-U
       DECLARE INTEGER MASUNO;     *USER NO. OF LINE READ FROM MASTERFILE
       DECLARE INTEGER ACCUNO;     *USER NO. OF LINE JUST READ IN A-U
       DECLARE INTEGER FIRST;      *FLAG SAYING THIS IS 1ST PASS THROUGH A-U
       DECLARE INTEGER LIMIT;      *TOTAL NUMBER OF LINES FOUND FOR A USER IN A-U
       DECLARE INTEGER FNDUSR;     *NUMBER OF LINES FOR A USER THUS FAR FOUND
       DECLARE INTEGER I;          *LOOP COUNTER


       DECLARE PARAMETER FRSTUSR←5;      *USERS 1,2,3,4 ARE SYSTEM NOS.
       DECLARE PARAMETER MAXUSR←128;     *MAXIMUM NUMBER OF USERS
       DECLARE PARAMETER BLNKCHR←135B;   *MULTIPLE BLANK CHARACTER
       DECLARE PARAMETER EOFCHR←137B;    *END OF FILE CHARACTER
       DECLARE PARAMETER CRCHR←155B;     *CARRIAGE RETURN CHARACTER
       DECLARE PARAMETER LFCHR←152B;     *LINE FEED CHARACTER


       DECLARE STRING CMFILE(20);     *CURRENT MASTERFILE FILE NAME
       DECLARE STRING NMFILE(20);     *NEW MASTERFILE FILE NAME
       DECLARE STRING TEMPS(3);       *TEMPORARY STRING
       DECLARE STRING MFLINE(300);    *A LINE FROM THE MASTERFILE
       DECLARE STRING ACCLINE(132);   *A LINE FROM THE ACCOUNT-USER FILE

       DECLARE FIXED ARRAY FOUND[MAXUSR+1];  *CONTAINS HOW MANY LINES
                                             *FOUND IN A-U FOR EACH USER


START: SOUT("UPDATE    VERSION 2/6/79"); CRLF(1);

       * OPEN CURRENT MASTERFILE *
OPENCM:CRLF(1);
       SOUT("CURRENT MASTERFILE: ");
       INNAME(CMFILE:OPENCM);  CRLF(1);
       CURMAS ← INFILE(CMFILE:OPENCM);

       * OPEN NEW MASTERFILE *
OPENNM:CRLF(1);
       SOUT("NEW MASTERFILE: ");
       OUTNAME(NMFILE:OPENNM);  CRLF(1);
       NEWMAS ← OUTFIL(NMFILE,3B6:OPENNM);

       * OPEN ACCOUNT-USER FILE *
       ACCUSR ← INFILE("ACCNT-USERS":NOACC);

       * SCAN A-U FILE FOR CONTENTS, MARKING ARRAY "FOUND" *
       WHILE 1 DO;
          ACCLINE ← RRCORD(ACCUSR,ACCLINE:NEXT);
          FOUND[ACCUNO] ← FOUND[ACCUNO←GETUNO(ACCLINE,ACCUNO)]+1;
       ENDFOR;

       * GET FIRST LINE OF MASTERFILE TO DETERMINE FIRST USER NUMBER
NEXT:  MFLINE ← RRCORD(CURMAS,MFLINE:SHRTMAS);
       MASUNO ← GETUNO(MFLINE,MASUNO);

       ***  MAIN PROCESSING LOOP  ***
       * SCAN ARRAY "FOUND" BY USER NUMBER, PROCESSING A-U FILE FOR ANY
       * NON-EMPTY ENTRIES.
       FOR CURUNO ← FRSTUSR TO MAXUSR DO;

          * COPY ANY UNCOPIED PRECEDING INFORMATION FROM OLD MASTERFILE *
          WHILE (MASUNO <=CURUNO) DO;
             SOUT(MFLINE,NEWMAS);
             MFLINE ← RRCORD(CURMAS,MFLINE:PAU);
             MASUNO ← GETUNO(MFLINE,MASUNO);
          ENDFOR;

          * SKIP PROCESSING ANY USER NOT FOUND IN A-U
          IF (LIMIT←FOUND[CURUNO]) > 0 DO;

             * RESET THE A-U FILE READ POINTER TO THE BEGINNING *
             BRS(144,0,10001B,ACCUSR);

             FNDUSR ← 0;
             SOUT("   USER- "); IOUT(CURUNO); CRLF(1);

             * NOW COPY FROM A-U ALL REFERENCES TO CURRENT USER.
             * BUT ONLY COPY UNTIL THE KNOWN NO. OF REFERENCES APPEARS.
             WHILE FNDUSR < LIMIT DO;
                ACCLINE ← RRCORD(ACCUSR,ACCLINE:ENDAU);
                IF (ACCUNO←GETUNO(ACCLINE,ACCUNO)) = CURUNO DO;
                   SOUT(ACCLINE,NEWMAS);
                   FNDUSR ← FNDUSR + 1;
                ENDIF;
             ENDFOR;
ENDAU:    ENDIF;
       ENDFOR;

       * THE DATA IN A-U IS NOW EXHAUSTED.  COPY REST OF CURRENT
       * MASTERFILE INTO THE NEW ONE.
       WHILE (CURUNO <= MAXUSR) DO;
          SOUT(MFLINE,NEWMAS);
          MFLINE ← RRCORD(CURMAS,MFLINE:PAU);
       ENDFOR;

       * CLOSE FILES AND QUIT.
PAU:   COUT(EOFCHR,NEWMAS);
       CLOSALL();
       CRLF(1); SOUT("NEW MASTERFILE "); SOUT(NMFILE); SOUT(" COMPLETE.");
       SOUT(" SAVE IT ON PFS!");
       EXIT();

NOACC: SOUT("ACCNT-USERS FILE NOT FOUND.  PROGRAM TERMINATED.");
       EXIT();

SHRTMAS: SOUT("MASTERFILE ENDED PREMATURELY.  IS IT OK?");
       EXIT();

       FUNCTION RRCORD(INTEGER FILENO, STRING LINE);

* FUNCTION TO READ ONE LINE FROM A FILE DESIGNATED BY FILENO.  A LINE
* IS A STRING IN THE FILE ENDED BY A CARRIAGE RETURN, LINE FEED.  THIS
* FUNCTION FAIL RETURNS WHEN END OF FILE IS REACHED.

       DECLARE INTEGER CHR, NUMBLK;

       SETS(LINE,0,0);

       WHILE 1 DO;
          RETURN IF (CHR←CIN(FILENO)) = EOFCHR;
          IF CHR = BLNKCHR DO;
             NUMBLK←CIN(FILENO);               *MULTIPLE BLANK CHAR,
             FOR I ← 1 TO NUMBLK DO;           *SO PAD THE LINE WITH
                WCI(' ',LINE);                 *CORRECT NUMBER OF
             ENDFOR;                           *BLANKS
          ELSEIF CHR = '[' DO;
             WCI('[',LINE);
             WHILE (CHR←CIN(FILENO)) # ']' DO;
                RETURN IF CHR = EOFCHR;
                IF CHR = BLNKCHR DO;           *MULTIPLE BLANKS
                   NUMBLK←CIN(FILENO);
                   FOR I ← 1 TO NUMBLK DO;
                      WCI(' ',LINE);
                   ENDFOR;
                ELSE DO;
                   WCI(CHR,LINE);
                ENDIF;
             ENDFOR;
             WCI(CHR,LINE);
          ELSEIF CHR = CRCHR DO;
             WCI(CRCHR,LINE);
             WCI(CIN(FILENO),LINE);
             SRETURN LINE;
          ELSE DO;
             WCI(CHR,LINE);
          ENDIF;
       ENDFOR;

       FUNCTION GETUNO(LINE, INTEGER UNO);

* FUNCTION TO RETURN THE USER NUMBER OF AN ACCOUNT LINE, WHICH IS ALWAYS
* FOUND IN THE FIRST 3 CHARACTERS OF THE LINE.
* (MOST VARIABLES USED IS DECLARED IN FUNCTION RRCORD OR THE MAIN PROGRAM)

       DECLARE STRING USRNO(3);   *STRING VERSION OF UNO


       SETS(USRNO,0,0);

       FOR I ← 1 TO 3 DO;    *EXTRACT THE FIRST 3 CHARACTERS.
          WCI(GCI(LINE), USRNO);
       ENDFOR;

       UNO ← CSN(USRNO);
       SETR(LINE,0);         *RESET LINE BACK TO WHAT IT WAS BEFORE

       RETURN UNO;


       END;
