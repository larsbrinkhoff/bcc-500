ATED
$BASE   BSS    0                   BASE
*FL SCALAR BASE
$LAST   BSS    0
$FLSBAS HLT    0        LIST MEMORY (INITIALIZED TO =LSTMEM)
*
$FLSLMT BSS    0                   FL SCALAR LIMIT
$LIMIT  BSS    0                   LIMIT
*FX SCALAR BASE
$FXSBA  HLT    7000B               7000
        HLT    7400B               7400
        HLT    7600B               7600
        HLT    7700B               7700
        HLT    7710B               7710
*GLOBAL SPROG BASE
$GLSBAS HLT    7720B               7720
        HLT    7730B               7730
        HLT    7740B               7740
        HLT    7750B               7750
        HLT    7760B               7760
*EXTIV DATA BASE
$QVDTBS HLT    7770B               7770
        HLT    7777B               7777
*CODE BASE
$CDBASE HLT    7777B               7777
        HLT    7777B               7777
*PLEX BASE
$PLXBAS HLT    7777B               7777
*WORK BASE
$WRKBAS HLT    7777B               7777
*EXIT BASE
$XBASE  HLT    7777B               7777
*EXIT LIMIT
$XLIMIT HLT    7777B               7777
        HLT    7777B               7777
$SVLIMI BSS    0                   SAVE LIMIT
*PUNCH BASE
$PCHBAS HLT    7777B               7777
$START  HLT                        START
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
$QVDSTR HLT    0                   EXTIV DATA START
        HLT
        HLT
$QVHSTR HLT    0                   EXTIV HOLD START
        HLT
        HLT
        HLT
        HLT
        HLT
$PCHSTR HLT    0                   PUNCH START
$TOP    HLT    0                   TOP
        HLT
        HLT
        HLT
        HLT
$ARYTOP HLT    0                   ARRAY TOP
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
        HLT
$CODTOP HLT    0                   CODE TOP
$QVHTOP HLT    0                   EXTIV HOLD TOP
        HLT
        HLT
        HLT
        HLT
        HLT
$PCHTOP HLT    0                   PUNCH TOP
$BOTTOM BSS    0                   BOTTOM
$FLSCBT HLT    0                   FL SCALAR BOTTOM
$FXSBOT HLT    0                   FX SCALAR BOTTOM
        HLT
        HLT
        HLT
        HLT
$GLSBOT HLT    0                   GLOBAL SPROG BOTTOM
        HLT
        HLT
        HLT
        HLT
$QVDBOT HLT    0                   EXTIV DATA BOTTOM
DOLOBM EXT     *                  DO LOOPS OPEN BOTTOM
$MODBOT HLT    0                   MODE BOTTOM
$CODBOT HLT    0                   CODE BOTTOM
        HLT    0
$PLEXBT HLT    0                   PLEX BOTTOM
$WRKBOT HLT    0                   WORK BOTTOM
$EXIBOT HLT    0                   EXIT BOTTOM
        HLT
$SVBOT  HLT    0                   SAVE BOTTOM
$PNCHBT HLT    0                   PUNCH BOTTOM
NCARDS EQU     9
NCARDS EXT     9                   NUMBER OF CONTINUATION CARDS
IBSIZE EQU     73*NCARDS/4+39
IBSIZE EXT    73*NCARDS/4+39      INPUT BUFFER SIZE
$NPBUFF BSS    IBSIZE              INPUT BUFFER


$LSTMEM HLT    0               START OF  LIST MEMORY
*
*E N D   O F    L I S T    M E M O R Y 
*
       PAGE    L I S T   D E F I N I T I O N S
FLSLST EXT    0                   FL SCALAR LIST
FXSLST EXT    1                   FX SCALAR LIST
LBLLST EXT    2                   LBL LIST
*FL CONST LIST
FLCLST EXT    3                   ERROR SYMBOL LIST
ERSYLS EXT    3
FXCLST EXT    4                   FX CONST LIST
AYYLST EXT    5                   ARRAY LIST
GLSLST EXT    6                   GLOBAL SPROG LIST
GDLIST EXT    7                   GLOBAL DMY LIST
LOCSPL EXT    10B                 LOCAL SPROG LIST
LOCDML EXT    11B                 LOCAL DMY LIST
*COMMON LIST
*SPROG ARGUMENT LIST
*DIMENS LIST
*ERROR OPUT LIST
COLIST EXT    12B                 SUM LIST
SPARGL EXT    12B
DIMLST EXT    12B
ERLIST EXT    12B
SUMLST EXT    12B
*EXTIV DATA LIST
*PROD LIST
*TERM LIST
*SCRIPT EXP LIST
QDATLS EXT    13B                 ERROR STOP LIST
PRODLS EXT    13B
TERMLS EXT    13B
SCREXL EXT    13B
ERSTLS EXT    13B
*DO LOOPS OPEN LIST
*EXTIV OPUT LIST
DOLST  EXT    14B                 MODE LIST
QOPTLS EXT    14B
MODLST EXT    14B
*CODE LIST
CODLST EXT    15B                 EXTIV TEMP LIST
QTPLS  EXT    15B
*SCRIPT LIST
SCRLST EXT    16B                 EXTIV HOLD LIST
QHDLS  EXT    16B
PLEXLS EXT    17B                 PLEX LIST
WORKLT EXT    20B                 WORK LIST
XITLS  EXT    21B                 EXIT LIST
FAILDL EXT    22B                 FAIL DATA LIST
SAVELS EXT    23B                 SAVE LIST
PUNCHL EXT    24B                 PUNCH LIST
       PAGE     POP, LOP, AND MOP DEFINITIONS (DOUBLED)
SETUDP EXT    200B                SET UP DMY POP
STRPOP EXT    210B                STORE POP
DTRPOP EXT    220B                DO TRAP POP
AGTPOP EXT    224B                ASSIGN GO TO POP
FARGPO EXT    230B                FIRST ARG POP
NEXTAP EXT    234B                NEXT ARG POP
IOTPOP EXT    240B                IO TRAP POP
FTCHPO EXT    244B                FETCH POP
OKFPOP EXT    250B                OK FETCH POP
ADDPOP EXT    254B                ADD POP
SUBPOP EXT    264B                SUB POP
MPYPOP EXT    274B                MPY POP
DIVPOP EXT    304B                DIV POP
CHSPOP EXT    314B                CHS POP
ASLPOP EXT    320B                ASSIGN LBL POP
LBLLOP EXT    6                   LBL LOP
DELLOP EXT    10B                 DEL LOP
SYSLOP EXT    12B                 SYS LOP
NOPLOP EXT     40B             NOP LOP
BLKLOP EXT     14B                BLK LOP
ABSLOP EXT    22B                 ABS LOP
BRUMOP EXT    2                   BRU MOP
BRRMOP EXT    123B                BRR* MOP
BRROP  EXT     122B              BRR OP
ADDMOP EXT    132B                ADD MOP
SKGMOP EXT    166B                SKG MOP
HLTMOP EXT    0                   HLT MOP
HLTIOP EXT     1
HLTINS EXT     23B
BRMOP  EXT    11361B              SBRM* MOP
BRMMOP EXT    106B                BRM MOP
NOPMOP EXT    40B                 NOP MOP
LDXMOP EXT    162B                LDX MOP
LDAMOP EXT     174B            LDA MOP
STAMOP EXT     72B
STLMOP EXT     334B            STATEMENT LABEL MOP
EAXOPP EXT    576B                EAX+MOP
MINOP  EXT    142B                MIN MOP
*
*
*     RUN-TIME LINK DEFINITIONS
STLINK EXT    1                   START OF DMYS LINK
NDYLNK EXT    2                   END OF DMYS LINK
STOPSL EXT    3                   STOP SPROG LINK
WRITSL EXT     4                   WRITE SPROG LINK
STPIOL EXT     5                   STOP I-O LINK
READSL EXT     6                   READ SPROG LINK
PAUSSL EXT     11B                 PAUSE SPROG LINK
DECFSL EXT     12B             DECLARE FILE SPROG LINK
STRTSL EXT     13B             STORE IN TEMP SPROG LINK
CLFSL  EXT     14B                 CLOSE FILE SPROG LINK
CLAFSL EXT     15B             CLOSE ALL FILES SPROG LINK
ERASSL EXT     16B             EEASE FILE SPROG LINK
POSSL EXT      17B             POSITION FILE SPROG LINK
CGTLNK EXT     20B                 COMPUTED GO TO SPROG LINK
EOFSYL EXT     21B             RECORD EOF LABEL VARIABLE
ISSLNK EXT     22B                 IF SENSE SWITCH LINK
ISLLNK EXT     23B                 IF SENSE LIGHT LINK
IOVLNK EXT    24B                 IF OVERFLOW LINK
IPOSTL EXT     25B             CURRENT POSITION SPROG LINK
ISIZSL EXT     26B             FILE SIZE SPROG LINK
SENLSL EXT    27B                 SENSE LIGHT SPROG LINK
EXPSPL EXT     40B              EXPON SPROG LINK (POWER SUBR)
FIXSPL EXT    31B                 FIX SPROG LINK
FLOTSL EXT    32B                 FLOAT SPROG LINK
IOLUAL EXT    33B                 IOL UNSCRIPTED ARRAY LINK
       PAGE     FLAG AND PLEX DEFINITIONS
FLSIDF EXT    0000                FL SCALAR ID FLAG
FXSIDF EXT    0100B               FX SCALAR ID FLAG
FXCSTF EXT    0400B               FX CONST FLAG
AYIDFG EXT    0500B               ARRAY ID FLAG
GSPIDF EXT    0600B               GLOBAL SPROG ID FLAG
LSPIDF EXT    1000B               LOCAL SPROG ID FLAG
LDYIDF EXT    1100B               LOCAL DMY ID FLAG
MINUAP EXT    7741B               MINUS ADDRESSABLE PLEX
*MINUS NONADDRESSABLE PLEX
MINNAP EXT    7701B               MINUS FLAG
MINUSF EXT    7701B
*SUM TERM PLEX
SUMTPX EXT    7600B               SUM FLAG
SUMFLG EXT    7600B
ADDPLX EXT    7602B               ADD PLEX
*PROD TERM PLEX
PRODTP EXT    7500B               PROD FLAG
PRODFG EXT    7500B
MPYPLX EXT    7502B               MPY PLEX
*DIV TERM PLEX
DIVTPX EXT    7402B               DIV FLAG
DIVFG  EXT    7402B
FCTFLG EXT    7302B               FUNCTION FLAG
FCTTPX EXT    7302B               FUNCTION TERM PLEX
*EXPON TERM PLEX
EXPTPX EXT    7202B               EXPON FLAG
EXPFG  EXT    7202B
FIXTPX EXT    7101B               FIX TERM PLEX
*SINGLY SCRIPTED ARRAY PLEX
SCRAPX EXT    6742B               SINGLY SCRIPTED ARRAY FLAG
SCRAFG EXT    6742B
*SPEC SCRIPTED ARRAY PLEX
SPSAPX EXT    6643B               SPEC SCRIPTED ARRAY FLAG
SPSAFG EXT    6643B
*ARRAY DIMENS GROUP PLEX
AYDGP  EXT    6500B               SPROG ARG GROUP PLEX
SPAGPX EXT    6500B
       PAGE     EFFECTIVE ADDRESS DEFINITIONS
W0     EXT    0                   W0
W1     EXT    37777B              W1
W2     EXT    37776B              W2
W3     EXT    37775B              W3
W4     EXT    37774B              W4
W5     EXT    37773B              W5
W6     EXT    37772B              W6
BOTSZ2 EXT    0                   (BOTTOM-SIZE+2)
BOTSZ3 EXT    0                   (BOTTOM-SIZE+3)
SIZEM1 EXT    0                   (SIZE-1)
BOTP1  EXT    0                   (BOTTOM+1)
BOTM1  EXT    0                   (BOTTOM-1)
        END
2C     IDENT   *               FORTRAN COMPILER
****************************
*
*     ORIGIN  AT 4000B     *
*
****************************


*
*R C H   O P   D E F I N I T I O N S
*
FCL    OPD     4600450B,1         FULL CYCLE LEFT
FCR    OPD     4600224B,1         FULL CYCLE RIGHT
BXC    OPD     4600022B,1         B TO X, CLB
XBC    OPD     24600040B,1        X TO B, CLX
CA     EQU     1        CLEAR A
CB     EQU     2
*      CX     EQU     20000000B       NARP DEMANDS  ,2
AB     EQU     4        A TO B
BA     EQU     10B
BX     EQU     20B
XB     EQU     40B
XA     EQU     200B
AX     EQU     400B
*
*M A C R O S
*
SETT   MACRO   D; LD.&D(2) =-1; ST.&D(2) D(1); ENDM
SETF   MACRO   D; CL.&D(2); ST.&D(2) D(1); ENDM
BEQ    MACRO   D  BRU IF EQUAL; SKE D(1); BRU *+2; BRU D(2); ENDM
BNE    MACRO   D  BRU IF NOT EQUAL; SKE D(1); BRU D(2); ENDM
MOVE   MACRO   D
MOVE1  NARG
       IF      'D(1$1,2)'='=0'
       CL.&D(MOVE1)
       ELSF    1
       LD.&D(MOVE1) D(1)
       ENDF
MOVE2  EQU     2
       RPT     MOVE1-2
       ST.&D(MOVE1) D(MOVE2)
MOVE2  EQU     MOVE2+1
       ENDR
       ENDM
*
*
*   P R O G R A M M E D   O P E R A T O R   D E F I N I T I O N S
BAM    OPD     10000000B,2
CSF    OPD     10100000B,2
CSA    OPD     10200000B,2
JAT    OPD     10300000B,2
JAF    OPD     10400000B,2
TRY    OPD     10500000B,2
QSF    OPD     10600000B,2
STD    OPD     10700000B,2
FET    OPD     11000000B,2
SWT    OPD     11100000B,2
JRS    OPD     11200000B,2
BIF    OPD     11300000B,2
MCO    OPD     11400000B,2
SOL    OPD     11500000B,2
SOF    OPD     11600000B,2
RSV    OPD     11700000B,2
CNT    OPD     12000000B,2
RLS    OPD     12100000B,2
TOT    OPD     12200000B,2
FIL    OPD     12300000B,2
MON    OPD     12400000B,2
LDP    OPD     12500000B,2
BLF    OPD     12600000B,2
SAL    OPD     12700000B,2
PUL    OPD     13000000B,2
BNG    OPD     13100000B,2
BAF    OPD     13200000B,2
CAR    OPD     13300000B,2
PLO    OPD     13400000B,2
CAC    OPD     13500000B,2
CIC    OPD     13600000B,2
FIC    OPD     13700000B,2
FAC    OPD     14000000B,2
BOP    OPD     14100000B,2
MOF    OPD     14200000B,2
SNE    OPD     14300000B,2
SER    OPD     14400000B,2
LCF    OPD     14500000B,2
FIP    OPD     14600000B,2
ADR    OPD     14700000B,2
EOS    OPD     15000000B,2
SOB    OPD     15100000B,2
SOT    OPD     15200000B,2
SDP    OPD     15300000B,2
ADP    OPD     15400000B,2
REC    OPD     15500000B,2
COF    OPD     15600000B,2
LCO    OPD     15700000B,2
PRC    OPD     16000000B,2
PRQ    OPD     16100000B,2
SOC    OPD     16200000B,2
BIM    OPD     16300000B,2
FEX    OPD     16400000B,2
ICT    OPD     16500000B,2
*EXEC ENTRY, START AND RESTART
$PS    BRU     INITAZ
$RS    LDA     ONES
       STA     INFLE
       STA     OUTFLE
       PRC     CARRET
       BRU     RUB1
*INITIALIZE MODIFIED CMMDS
INITAZ BRS     88
       STA     ICTIME
       MOVE    A183I,A183A,A
       MOVE    A184I,A184A,A
       MOVE    A185I,A185A,A
       MOVE    A187I,A187A,A
       MOVE    A188I,A188A,A
       MOVE    A232I,A232A,A
       MOVE    A233I,A233A,A
       MOVE    SCENI1,SYMCEN,A
       MOVE    SCENI2,SYMCN2,A
*POP LINKS
       LDX     MINS64              MINUS 64
PLI    LDA     PBRUE,2             POP BRU TABLE END
       STA     200B,2
       BRX     PLI
       SBRM    INITLS              INITIALIZE COMPILER LISTS
       MOVE    =1,COUTF,A          CMMD OUTPUT FILE
*INITIALIZE STRING POINTERS
       LDA     =INNS
       MUL     =3B7
       LSH     2
       STA     INNP
       LDA     =OUTNS
       MUL     =3B7
       LSH     2
       STA     OUTNP
       LDA     =LSTNS
       MUL     =3B7
       LSH     2
       STA     LSTNP
       LDA     ONES
       ADM     INNP
       ADM     OUTNP
       ADM     LSTNP
*SET -1 FLAGS
PS1    LDA     ONES
       STA     BP1             CODE OUTPUT ASSUMED
       STA     INDEX               SYMB INPUT FILE INDEX
       STA     OUTDEX              BINARY OUTPUT FILE INDEX
*SET 0 FLAG
       CLA
       STA     FDBUG               NO DEBUGGING INFO ASSUMED
       STA     BP2                 NO LISTING ASSUMED
       STA     FMAP
       LDA     =2
       STA     LSTFIL
       PRC     CARRET
*SET BREAK TABLE
       CLA
       LDX     =-1
       BRS     12
       MOVE    =PNEWS,TBLE,A
PWAIT  LDA     FTBLE               ADDR OF FORK TBLE
       BRS     9                   OPEN FORK
       BRS     31
       STX     FSTATS              FORK STATUS
       BRS     17
       LDX     ONES
       BRS     29              CLEAR TTY OUTPUT BUFFER
       LDA     ONES
       STA     INFLE
       STA     OUTFLE
       PRC     CARRET
       CLA
       LDX     =-1
       BRS     12              SET BREAK TABLE
       LDX     FSTATS              FORK STATUS
       BRU     *+3,2
       BRU     RUB             (FOR SYSTEM GLITCH)
       BRU     RUB             (DITTO)
       BRU     RUB
       BRU     BADOP
       PRQ     MEMQT               MEMORY PANIC
       BRU     PRLOC
BADOP  PRQ     RDERQT              READ ERROR QUOTE
PRLOC   LDA     TBLE
       ETR     ADRMSK
       LDB     EIGHT
       LDX     ONE
       BRS     36                  PRINT LOCATION
       PRC     CARRET
       BRU     RUB0
RUB    LDA*    TBLE            CHECK FOR DELIBERATE EXIT
       SKE     BRS10
       BRU     *+2
       BRS     10
RUB0   TCO     BELL
RUB1   PRC     PLUS
       LDX     ONES
       BRS     11
       MOVE    =CS2,TBLE,A
       BRU     PWAIT
PNEWS  LDA     =NEWSQT
       LDX     =1
       LDB     =-1
       BRS     34
       BRU     CS
CS2    CIO     ZERO
       STA     FSTATS
       BRU     CS5
$CSBAD PRC     QMARK
       LDX     ONES
       BRS     11              CLEAR TTY INPUT BUFFER AFTER ERROR
*COMMAND INPUT START
$CS    BRS     17
       LDA     ONES
       STA     INFLE
       STA     OUTFLE
       PRC     CARRET
CS7    PRC     PLUS
CS1    CIO     ZERO
       SKE     =155B; BRU CS3; BRU CS7-1
CS3    SKE     =152B; BRU CS5; BRU CS7-1
CS5    CLX; SBRM ACB
       DATA    'C   '+CCOMP
       DATA    'M   '+CMAP
       DATA    'I   '+CSETIN
       DATA    'O   '+CSTOUT
       DATA    'N   '+CNO
       DATA    'D   '+CDEBUG
       DATA    'L   '+CLIST
       DATA    '"   '+CQUOTE
       DATA    'F   '+CFIN
       DATA    'H   '+CHELP
       DATA    6BIT+CSBAD

*HELP COMMAND
CHELP  PRQ     HLQT
       ICT     PERIOD
       BRU     CSBAD
       LDA     =CHLPQT
       LDX     =1
       LDB     =-1
       BRS     34
       BRU     CS
*SET INPUT FILE
CSETIN PRQ     INFQT
       PRQ     FRFQT
       LDA     =23B6
       LDB     INSPA
       CLX
       BRS 15
       BRU     CSBAD
       CBA
       SKE     RTPERD
       BRU     CSBAD
       STA INDEX
       BRU CS
*SET OUTPUT FILE
CSTOUT PRQ OUTFQT
       PRQ TOFQT
CSTOT1 LDA     =22B6
       LDB     OUTSPA
       CLX
       BRS     16
       BRU CSBAD
       CBA
       SKE RTPERD
       BRU CSBAD
       STA     OUTDEX
       BRU CS
CSTOT5 PRQ WHATQT
       BRU CSTOT1
CMAP   PRQ MAPQT
       ICT PERIOD
       BRU CSBAD
       MOVE    ONES,FMAP,A
       BRU     CS
CDEBUG PRQ     DBUGQT
       ICT PERIOD
       BRU     CSBAD
       LDA     ONES
CDB1   STA     FDBUG
       BRU     CS
*LIST STATEMENTS CMMD
CLIST  PRQ LISTQT
       PRQ     TOFQT
       LDA     =23B6
       LDB     LSTSPA
       CLX
       BRS     16
       BRU     CSBAD
       CBA
       SKE     RTPERD
       BRU     CSBAD
       STA     LSTFIL
       LDA     ONES
       STA     BP2                 BREAK POINT SW 2
       STA     FMAP
       BRU     CS
*NO LIST CMMD
CNLIST PRQ LISTQT
       ICT PERIOD
       BRU     CSBAD
       CLA
       LDB     =1
       STA     BP2
       STA     FMAP
       STB     LSTFIL
       BRU     CS
*QUOTE MODE
CQUOTE LDA =2
       LDA =-1
       BRS 12
CQ2    CIO ZERO
       BEQ =144B,CS
       BNE     =155B,CQ1
       PRC     CARRET
CQ1    BNE     =152B,CQ2
       TCO     =155B
       TCO     =155B
       BRU     CQ2
*FINISHED COMMAND
CFIN   PRQ     FINQT
       ICT     PERIOD
       BRU     CSBAD
       LDX     =-1
       BRS     14              WAIT FOR OUTPUT TO TTY TO FINISH
       BRS     10
*NO CMMD

CNO    PRC LETERO
       PRC SPACE
       CIO     ZERO
       CLX; SBRM ACB
       DATA    'M   '+CNMAP
       DATA    'L   '+CNLIST
       DATA    'D   '+CNDBUG

       DATA    6BIT+CSBAD

CNMAP  PRQ MAPQT
       ICT PERIOD
       BRU     CSBAD
       MOVE    =0,FMAP,A
       BRU     CS
CNDBUG PRQ     DBUGQT
       ICT PERIOD
       BRU     CSBAD
       CLA
       BRU     CDB1
CBADLT PRQ     BADLTQ          BAD LIST OPENING
       BRU     CS

CCOMP  PRQ     COMPQT
       ICT PERIOD
       BRU     CSBAD
       PRC     CARRET
       BRS     88
       STA     ICMTM
       LDA     =-1
       SKE     INDEX
       BRU     CCOMP3
CCOMP1 PRQ     WIOQT               WHAT I/O QT
       BRU     CSBAD
CCOMP2 PRQ     WRIOQT              WRONG I/O QT
       BRU     CSBAD
CCOMP3 LDA     =1B7
       LDB     INSPB
       LDX     =-1
       BRS     15
       BRU     CSBAD
       STA     INFLE
       CXA
       ETR     =47B6
       SKE     =3B6
       BRU     CCOMP2
       SKN     OUTDEX
       BRU     CCMPA
       PRQ     SXONQT
       BRU     CCMPB
CCMPA  LDA     =12002000B
       LDB     OUTSPB
       LDX     =-1
       BRS     16
       BRU     CSBAD
       STA     OUTFLE
CCMPB  LDA     MINUS2              MINUS TWO
       STA     LINETP              LINES THIS PAGE
       LDA     LSTFIL
       SKG     =2
       BRU     CCOMP4
       LDA     =13002000B
       LDB     LSTSPB
       LDX     =-1
       BRS     16
       BRU     CBADLT
CCOMP4 STA     COUTF
       CLA
       STA     FLC             LIST CODE (FOR DEBUGGING)
       STA     FEOF                FLAG END OF FILE READ
       STA     INCHCT              INPUT CHAR CNT
       STA     INSTCT              INPUT STOP CNT
       STA     RDCHCT              READ CHAR CNT
       STA     RDSTCT              READ STOP CNT
       LDA     MINUS1              MINUS ONE
       STA     READSC              READ SPACE COUNT
*START OF COMPILER
$STRCMP SBRM   INITLS              INITIALIZE LISTS
       CLA
       SOB     XITLS               EXIT LIST
       STA     ITMPCT              INITIAL TEMP COUNT
       STA     DMYCNT              DMY CNT
       STA     CRNTCH              CRRNT CHAR
       STA     MXTPCT              MAX TEMP CNT
       LDA     ONE                 ONE
       STA     LINECT              LINE CNT
       LDA     MINUS1              MINUS ONE
       STA     SPTRIG              SPROG TRIGGER
       STA     ACTEST              ACTIVE STA TRIGGER
       STA     LASTST              LAST STA TRIGGER
       STA     BLOKCT              BLOCK CNT
       STA     CKSMCT              CHECK SUM CNT
*JOB CARD XLATE
JOBCDX JRS     SINIT               STA INITIALIZE
       CSA     ASTRSK              ASTERISK
       JAF     NOJBCE              NO JOB CARD ENTRY
       JRS     RELPRT              RELEASE AND PRINT
       BRU     JOBCDX              JOB CARD XLATE
*HEAD STA XLATE
HEADSX JRS     SINIT               STA INITIALIZE
*NO JOB CARD ENTRY
NOJBCE TRY     LBFLDX              LBL FIELD XLATE
       JAF     ILLINX              ILLEGAL LINE XLATE
       MOF     CODLST
       MOF     CODLST
       JRS     SVLSDT              SAVE LIST DATA
*SUBROUTINE STA XLATE
SUBRSX FEX     FCTSXL              FUNCTTION STA XLATE
       QSF     SUBRQT              SUBROUTINE QT
       JRS     SCLIDS              SCALAR ID SCAN
       JRS     SPRGHG              SPROG HEAD GEN
       SKN     BP2
       BRU     SUBRS2
       LDA     =1
       BEQ     COUTF,SUBRS1
SUBRS2 LDX     =CSBQT
       BRM    PRQTTY
       LDX     =SYMCEN
       BRM    PRQTTY
       LDA     =155B
       CIO     =1
       LDA     =152B
       CIO     =1
SUBRS1 CSA     LPAREN              L PAREN
       JAF     HEADEX              HEAD EXIT
       BRU     DYSQSC              DMY SEQ SCAN
*FUNCTION STA XLATE
FCTSXL FEX     MAINPX              MAIN PROGRAM XLATE
       QSF     FNCTQT              FUNCTION QT
       JRS     SCLIDS              SCALAR ID SCAN
       JRS     SPRGHG              SPROG HEAD GEN
       SKN     BP2
       BRU     FCTS2
       LDA     =1
       BEQ     COUTF,FCTS1
FCTS2  LDX     =CFNQT
       BRM    PRQTTY
       LDX     =SYMCEN
       BRM    PRQTTY
       LDA     =155B
       CIO     =1
       LDA     =152B
       CIO     =1
FCTS1  CSF     LPAREN              L PAREN
*DMY SEQ SCAN
DYSQSC BLF     STLINK              START OF DMYS LINK
A2     JRS     IDSCAN              ID SCAN
       JAT     INCNFA              ID CONFLICT FAIL
       SER     GDLIST              GLOBAL DMY LIST
       JAT     INCNFA              ID CONFLICT FAIL
       MCO     GDLIST              GLOBAL DMY LIST
       JRS     DYTPMK              DMY TEMP MAKER
       SOB     GDLIST              GLOBAL DMY LIST
       BAM     SETUDP              SET UP DMY POP
       CSA     COMMA               COMMA
       JAT     A2                  A1
       CSF     RPAREN              R PAREN
       BLF     NDYLNK              END OF DMYS LINK
*HEAD EXIT
HEADEX ADR     CODLST              CODE LIST
       CAR     WORKLT              WORK LIST
       CSF     CARET
       BRU     A62
*SPROG HEAD GEN
SPRGHG LDA     W0,2                W0
       STA     NAMESP              NAME OF SPROG PNTR
       FIL     SPTITL              SPROG TITLE
       FIL     ZERO                ZERO
       MCO     CODLST              CODE LIST
       FIL     NMARKR              END MARKER
       JRS     LBLMAK              LBL MAKER
       STA     SPRGLB              START OF PROG LBL
       BIF     LBLLOP              LBL LOP
       FIL     HLTOP
       BRU     CLR1AE              CLEAR ONE AND EXIT
*MAIN PROGRAM XLATE
MAINPX RLS     SAVELS              SAVE LIST
       FIL     MPTITL              MPROG TITLE
       FIL     ZERO                ZERO
       FIL     ALLDOL              ALL DOLLARS
       FIL     ALLDOL              ALL DOLLARS
       FIL     NMARKR              END MARKER
       MIN     SPTRIG              SPROG TRIGGER
       ADR     CODLST              CODE LIST
       CAR     WORKLT              WORK LIST
       JRS     PCHCOD              PUNCH CODE
       SKN     BP2
       BRU     MAINP1
       LDA     =1
       BEQ     COUTF,MAINPE
MAINP1 LDX     =CMNPQT
       BRM    PRQTTY
       BRU     MAINPE              MAIN PROG ENTRY
*BODY STA XLATE
$BODYSX JRS    SINIT
       TRY     LBFLDX              LBL FIELD XLATE
       JAF     ILLINX              ILLEGAL LINE XLATE
       TRY     IBMEND
       SKR     LASTST              LAST STATEMENT TRIG.
       NOP     0
*MAIN PROG ENTRY
MAINPE JRS     SVLSDT              SAVE LIST DATA
       FEX     ASSMSX              ASSIGNMENT STA XLATE
       CSA     G                   G
       JAT     GOTOGP              GO TO GROUP
       CSA     D                   D
       JAT     DORDIM              DO OR DIMENSION
       CSA     LETERO
       JAT     OPENSX              OPEN FILE STA XLATE
       CSA     E
       JAT     ERASSX          ERASE STA XLATE
       CSA     P
       JAT     POSSX           POSITION STA XLATE
*IF STA XLATE
IFSTAX QSF     IFQT                IF QT
       CSA     LPAREN              L PAREN
       JAF     FAIL                FAIL
       JRS     EXPXLT              EXP REMEMBER MODE XLATE
       JRS     MODREL              MODE RELEASE
       CSF     RPAREN              R PAREN
       JRS     LBCOMA              LBL COMMA SCAN
       FIL     SKARI               SKA RUN TIME SIGN BIT INST
       BIF     BRUMOP              BRU MOP
       JRS     LBCOMA              LBL COMMA SCAN
       FIL     SKGRZI              SKG RUN TIME ZERO INST
*IF STA EXITS
$IFSXIT BIF    BRUMOP              BRU MOP
       JRS     LBSCAN              LBL SCAN
       BIF     BRUMOP              BRU MOP
       BRU     JPEOLE              JUMP EOL EXIT
*OPEN FILE STA XLATE
OPENSX QSF     OPENQT              OPEN QT
       CSF     LPAREN
       JRS     FXPXL
       CSF     COMMA
       BLF     DECFSL          DECLARE FILE SPROG LINK
       CSA     I
       JAF     OPNSX3
       QSF     IFLQT           INPUT FILE QT
       FET     INPOP           INPUT OP
       BRU     OPNSX5
OPNSX3 CSA     LETERO
       JAF     OPNSX6
       QSF     OFLQT           OUTPUT FILE QT
       FET     OUTPOP          OUTPUT OP
      BRU      OPNSX5
OPNSX6 QSF     RANDQT
       CSA     I
       JAF     OPNSX9
       CSA     N
       JAF     OPNSXA
       FET     RINOP
       BRU     OPNSX5
OPNSXA CSF     LETERO
       FET     RIOOP
       BRU     OPNSX5
OPNSX9 QSF     OUTQT
       FET     ROUTOP
OPNSX5 CSF     COMMA
       CSA     B
       JAF     OPNSXB
       QSF     BINQT
       LDA     BINIOF
       BRU     OPNSXD
OPNSXC LDA     SYMIOF
       ADM     W0,2
       BRU     OPNSXE
OPNSXB CSA     S
       JAF     OPNSXC
       QSF     SYMBQT
       LDA     SYMIOF
OPNSXD ADM     W0,2
       CSF     COMMA
OPNSXE SOC     FNQTFG
       JAF     FAIL
       BAF     NOPLOP          NOP LOP
       LDA     CRNTCH
       STA     FNTERM
       FET     LACHCT          LAST ACTIVE CHARACTER COUNT
       SBRM    NXACCH
OPNSX2 CSA     FNTERM
       JAT     OPNSX4
       SBRM    NXACCH
       BRU     OPNSX2
OPNSX4 CSF     RPAREN
       LDA     ILINCT          INITIAL LINE CNT
       STA     LINECT          LINE CNT
       JRS     LMBRUG          LBL MAKER BRU GEN
       LDA     W1,2
       XMA     INCHCT          INPUT CHAR CNT
       SUB     W1,2
       ADD     FOUR
       ABC
       LSH     1
       DIV     THREE
       STA     W1,2
       SOB     WORKLT          WORK LIST
       BAF     ABSLOP          WORD COUNT
       BRU     OPNSX8
OPNSX7 JRS     PAKSTR          PACK STRING
       SOB     CODLST
OPNSX8 SKR     W1,2
       BRU     OPNSX7
       BIF     LBLLOP
       SKR     WRKBOT
       BRU     ACEOLE
*POSITION STATEMENT TRANSLATOR
POSSX   QSF     POSQT
       CSF     LPAREN
       JRS     FXPXL
       CSF     COMMA
       BLF     STRTSL          STORE A IN TEMP 0
       FET     CONZRO
       BAF     NOPLOP
       JRS     FXPXL
       CSF     RPAREN
       BLF     POSSL
       BRU     ACEOLE
*ERASE STATEMENT TRANSLATOR
ERASSX QSF     ERASQT
       CSF     LPAREN
       JRS     FXPXL
       CSF     COMMA
       BLF     STRTSL          STORE A IN TEMP 0
       FET     CONZRO
       BAF     NOPLOP
       JRS     FXPXL
       CSF     COMMA
       BLF    STRTSL  STORE A IN TEMP 1
       FET     CONONE
       BAF     NOPLOP
       JRS     FXPXL
       CSF     RPAREN
       BLF     ERASSL
       BRU     ACEOLE


*DO OR DIMENSION
DORDIM CSA     LETERO              LETTER O
       JAF     DIMSX               DIMENSION STA XLATE
*DO STA XLATE
DOSX   JRS     LBSCAN              LBL SCAN
       CSA     COMMA               COMMA
       JRS     SCLIDS              SCALAR ID SCAN
       CSF     EQUAL               EQUAL
       JRS     DOCTLX              DO CONTROL XLATE
       MON     DOLST               DO LOOPS OPEN LIST
       BRU     JPEOLE              JUMP EOL EXIT
*DO CONTROL XLATE
DOCTLX JRS     MODSET              MODE SET
       JRS     XPMDX               EXP BY MODE XLATE
       CSF     COMMA               COMMA
       FET     W0,2                W0
       BIM     STRPOP              STORE POP
       JRS     LMBRUG              LBL MAKER BRU GEN
       JRS     LMLBLG              LBL MAKER LBL GEN
       FET     W2,2                W2
       JRS     XPSCAN              EXP SCAN
       JRS     SCRGEN              SCRIPT GEN
       JRS     GRNMOD              GRNTEE ADDRESSABLE BY MODE GEN
       CSA     COMMA               COMMA
       JAT     A3                  A1
       JRS     ISMDFL              IS MODE FL
       JAT     A4                  A2
       FET     W1,2                W1
       BIF     MINOP               MIN MOP
       JRS     XPBYMG              EXP BY MODE GEN
       FIL     RTAFX1              RUN TIME ADD FX ONE
       BIF     SKGMOP              SKG MOP
       BRU     A6                  A4
A3     JRS     GRNMOD              GRNTEE ADDRESSABLE BY MODE GEN
       JRS     XPMDX               EXP BY MODE XLATE
       BRU     A5                  A3
A4     JRS     GRNMOD              GRNTEE ADDRESSABLE BY MODE GEN
       FIL     RTLFL1              RUN TIME LDP FL ONE
A5     BAM     DTRPOP              DO TRAP POP
       BIF     HLTMOP              HLT MOP
A6     JRS     LMBRUG              LBL MAKER BRU GEN
       BIF     LBLLOP              LBL LOP
       BIF     BRUMOP              BRU MOP
       SKR     MODBOT              MODE BOTTOM
       MOF     CODLST              CODE LIST
       MON     DOLST               DO LOOPS OPEN LIST
       MOF     CODLST              CODE LIST
       MON     DOLST               DO LOOPS OPEN LIST
       BIF     LBLLOP              LBL LOP
       BRU     CLR1AE              CLEAR ONE AND EXIT
*DIMENSION STA XLATE
DIMSX  QSF     IMENQT              IMENSION QT
       RLS     PLEXLS              PLEX LIST
       RSV     DIMLST              DIMENS LIST
A7     JRS     IDSCAN              ID SCAN
       JAT     INCNFA              ID CONFLICT FAIL
       MCO     AYYLST              ARRAY LIST -- NAME OF VARIABLE
       CSF     LPAREN              L PAREN
       FET     ONE                 ONE
       FET     ZERO                ZERO
       FET     ZERO                ZERO
       BRU     A9                  A3
A8     JRS     RGFXCS              REGISTER FX CONST
       MON     DIMLST              DIMENS LIST
A9     JRS     SIGNIS              SIGNED INTEGER SCAN
       CSA     VRGULE              VIRGULE
       JAT     A10                 A4
       LDP     DPONE               DP ONE
       STD     DIMTPA              DIMENS TEMP A
       BRU     A11                 A5
A10    LDP     CTL1                CENTRAL 1
       STD     DIMTPA              DIMENS TEMP A
       JRS     SIGNIS              SIGNED INTEGER SCAN
A11    LDA     DIMTPB              DIMENS TEMP B
       MUL     W2,2                W2
       RSH     1                   1
       ADP     W1,2                W1
       STD     W1,2                W1
       SOL     MAXASA              MAX ARRAY SIZE ALLOWED
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
       LDP     CTL1                CENTRAL 1
       SDP     DIMTPA              DIMENS TEMP A
       SKA     SIGNBT              SIGN BIT
       BRU     ILALFA              ILLEGAL ALLOCATION FAIL
       ADP     DPONE               DP ONE
       STD     CTL1                CENTRAL 1
       CBA
       MUL     W2,2                W2
       RSH     1                   1
       STB     W2,2                W2
       SOL     MAXASA              MAX ARRAY SIZE ALLOWED
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
       CSA     COMMA               COMMA
       JAT     A8                  A2
       CSF     RPAREN              R PAREN
       MON     AYYLST              ARRAY LIST
       SKR     WRKBOT              WORK BOTTOM
       MON     AYYLST              ARRAY LIST
       PLO     AYDGP               ARRAY DIMENS GROUP PLEX
       CAC     DIMLST              DIMENS LIST
       MON     AYYLST              ARRAY LIST
       CSA     COMMA               COMMA
       JAT     A7                  A1
       CSA     CARRET              CAR RETURN
       JAF     A7                  A1
       RLS     DIMLST              DIMENS LIST
       RSV     PLEXLS              PLEX LIST
       BRU     CUAOUT              CLEAN UP AND OUTPUT
*GO TO GROUP
GOTOGP QSF          OTOQT               OTO QT
       SOC     DIGTFL              DIGIT FLAG
       JAF     CORAGT              COMPUTED OR ASSIGN GO TO
*GO TO STA XLATE
GOTOSX JRS     LBSCAN              LBL SCAN
       BIF     BRUMOP              BRU MOP
       BRU     JPEOLE              JUMR EOL EXIT
*COMPUTED OR ASSIGN GO TO
CORAGT CSA     LPAREN              L PAREN
       JAF     AGTOSX              ASSIGN GO TO STA XLATE
*COMPUTED GO TO STA XLATE
CGTOSX RSV     WORKLT              WORK LIST
A12    JRS     LBSCAN              LBL SCAN
       CSA     COMMA               COMMA
       JAT     A12                 A1
       CSF     RPAREN              R PAREN
       CSA     COMMA               COMMA
       JRS     FXPXL               FX EXP XLATE
       BLF     CGTLNK              COMPUTED GO TO LINK
       CNT     WORKLT              WORK LIST
       BAF     HLTMOP              HLT MOP
A13    TOT     WORKLT              WORK LIST
       JAF     A14                 A3
       BIF     BRUMOP              BRU MOP
       BRU     A13                 A2
A14    RLS     WORKLT              WORK LIST
       BRU     JPEOLE              JUMP EOL EXIT
*ASSIGN GO TO STA XLATE
AGTOSX JRS     VARSCN              VAR SCAN
       JRS     SCRGEN              SCRIPT GEN
       BAM     AGTPOP              ASSIGN GO TO POP
       CSA     COMMA               COMMA
       JAF     JPEOLE              JUMP EOL EXIT
       CSF     LPAREN              L PAREN
A15    JRS     LBSCAN              LBL SCAN
       CSA     COMMA               COMMA
       JAT     A15                 A1
       CSF     RPAREN              R PAREN
       BRU     JPEOLE              JUMP EOL EXIT
*ASSIGNMENT STA XLATE
ASSMSX FEX     AFDFSX              ARITH FUN DEF STA XLATE
       JRS     VARSCN              VAR SCAN
       CSA     EQUAL               EQUAL
       JAF     FAIL                FAIL
       JRS     XPSCAN              EXP SCAN
       CSF     CARET               CAR RETURN
       SKN     BP1
       BRU     ACEXIT              ACTIVE EXIT
       JRS     SETMTG              SET MODE THEN GEN
       JRS     STFMG               STORE FORGET MODE GEN
       BRU     ACEXIT              ACTIVE EXIT
*ARITH FUN DEF STA XLATE
AFDFSX SKN     ACTEST              ACTIVE STA TRIGGER
       BRU     FORSXL              FORMAT STA XLATE
       FEX     FORSXL              FORMAT STA XLATE
       JRS     IDSCAN              ID SCAN
       JAT     FAIL                FAIL
       CSA     LPAREN              L PAREN
       JAF     FAIL                FAIL
       SOC     LETRFG              LETTER FLAG
       JAF     FAIL                FAIL
       FET     ZERO                ZERO
       JRS     STDMEV              STANDARD MODE EVAL
       MON     MODLST              MODE LIST
       MCO     LOCSPL              LOCAL SPROG LIST
       JRS     LMBRUG              LBL MAKER BRU GEN
       JRS     LMLBLG              LBL MAKER LBL GEN
       SOB     LOCSPL              LOCAL SPROG LIST
       FIL     HLTOP               HALT INSTRUCTION
       BLF     STLINK              START OF DMYS LINK
A16    JRS     SYMBSC              SYMBOL SCAN
       SER     LOCDML              LOCAL DMY LIST
       JAT     FAIL                FAIL
       MCO     LOCDML              LOCAL DMY LIST
       JRS     DYTPMK              DMY TEMP MAKER
       SOB     LOCDML              LOCAL DMY LIST
       BAM     SETUDP              SET UP DMY POP
       CSA     COMMA               COMMA
       JAT     A16                 A1
       CSA     RPAREN              R PAREN
       JAF     FAIL                FAIL
       CSA     EQUAL               EQUAL
       JAF     FAIL                FAIL
       BLF     NDYLNK              END OF DMYS LINK
       JRS     XPMDX               EXP BY MODE XLATE
       RLS     LOCDML              LOCAL DMY LIST
       BIF     BRROP               BRR OP
       BIF     LBLLOP              LBL LOP
       SKR     MODBOT              MODE BOTTOM
       LDA     TMPCNT              TEMP COUNT
       STA     ITMPCT              INITIAL TEMP COUNT
       BRU     IAEOLX          INACTIVE EOL EXIT
*FORMAT STA XLATE
FORSXL FEX     FORKSX              FORK STA XLATE
       QSF     FRMTQT              FORMAT QT
       CSF     LPAREN              L PAREN
       FET     LACHCT              LAST ACTIVE CHAR CNT
       JRS     FLSTSC              FORMAT LIST SCAN
       LDA     ILINCT              INITIAL LINE CNT
       STA     LINECT              LINE CNT
       JRS     LMBRUG              LBL MAKER BRU GEN
       LDA     W1,2                W1
       XMA     INCHCT              INPUT CHAR CNT
       SUB     W1,2                W1
       ADD     FOUR                FOUR
       ABC
       LSH     1
       DIV     THREE               CALCULATE NO. OF WORDS
       STA     W1,2                W1
       SOB     WORKLT              WORK LIST
       BAF     ABSLOP              ABS LOP
       BRU     A18                 A2
A17    JRS     PAKSTR              PACK STRING
       SOB     CODLST              CODE LIST
A18    SKR     W1,2                W1
       BRU     A17                 A1
       BIF     LBLLOP              LBL LOP
       SKR     WRKBOT              WORK BOTTOM
       BRU     IAEOLX              INACTIVE EOL EXIT
*FORMAT LIST SCAN
FLSTSC EQU     *
A19    CSA     RPAREN              R PAREN
       JAT     EXIT                EXIT
A20    CSA     VRGULE              VIRGULE
       JAT     A21                 A3
       JRS     FBASSC              FORMAT BASIC SCAN
       CSA     VRGULE              VIRGULE
       JAF     A22                 A4
A21    CSA     VRGULE              VIRGULE
       JAT     A21                 A3
       CSA     COMMA               COMMA
       JAT     A20                 A2
       BRU     A19                 A1
A22    CSA     COMMA               COMMA
       JAT     A20                 A2
       CSA     RPAREN              R PAREN
       JAF     A20                 A2
       BRU     EXIT                EXIT
*FORMAT BASIC SCAN
FBASSC CSA     PRIME           QUOTE
       JAT     A30                 A8
       CSA     MINUS               MINUS
       JAT     A23                 A1
       CSA     PLUS                PLUS
       JAF     A24                 A2
A23    JRS     INSCAN              INTEGER SCAN
       CSF     P                   P
       BRU     A25                 A4
A24    SOC     DIGTFL              DIGIT FLAG
       JAF     A27                 A5
       JRS     INSCAN              INTEGER SCAN
       CSA     P                   P
       JAF     A26                 A3
A25    SOC     DIGTFL              DIGIT FLAG
       JAF     A27                 A5
       JRS     INSCAN              INTEGER SCAN
A26    LDA     CTL2                CENTRAL 2
       SKG     ZERO                ZERO
       BRU     ILNUFA              ILLEGAL NUMBER FAIL
       CSA     X                   X
       JAT     A33                 A11
       CSA     H                   H
       JAT     A32                 A10
A27    CSA     E                   E
       JAT     A28                 A6
       CSA     F                   F
       JAT     A28                 A6
       CSA     LETERO
       JAT     INSCAN
       CSA     I                   I
       JAT     INSCAN              INTEGER SCAN
       CSA     A                   A
       JAT     INSCAN              INTEGER SCAN
       CSF     LPAREN              L PAREN
       BRU     FLSTSC              FORMAT LIST SCAN
A28    JRS     INSCAN              INTEGER SCAN
       CSF     PERIOD              PERIOD
       BRU     INSCAN              INTEGER SCAN
A29    SBRM    NXACCH              NEXT ACTIVE CHAR
       SOC     TCRBFG              TAB-CAR RETURN-BACKSPACE
       JAT     ILSYFA              ILLEGAL SYNTAX FAIL
A30    CSA     PRIME           QUOTE
       JAF     A29                 A7
       BRU     A33                 A11
A31    LDA     UBLKFG              USE BLANKS FLAG
       STA     SCANMD              SCAN MODE
       SOC     TCRBFG              TAB-CAR RETURN-BACKSPACE FLAG
       JAT     ILSYFA              ILLEGAL SYNTAX FAIL
       LDA     SKBLFG              SKIP BLANKS FLAG
       STA     SCANMD              SCAN MODE
A32    CLA
       STA     CRNTCH              CRRNT CHAR
       SKR     CTL2                CENTRAL 2
       BRU     A31                 A9
A33    SOC     CVRPFG              COMMA-VIRGULE-R PAREN FLAG
       JAT     EXIT                EXIT
       BRU     FBASSC              FORMAT BASIC SCAN
*FORK STA XLATE
FORKSX FEX     WAITSX              WAIT STA XLATE
       QSF     FORKQT
       JRS     LBLMAK          LABEL MAKER
       FET     W0,2
       BIF     LDAMOP
       JRS     LBLMAK
       FET     W0,2
       BIF     STAMOP
       JRS     LBLMAK
       FET     W0,2
       BIF     LDAMOP
       FIL     BRS9            START FORK
       JRS     LMBRUG          LABEL MAKER BRU GEN
       LDA     W0,2
       STA     FORKT1
       SKR     WRKBOT
       BIF     LBLLOP
       FET     W0,2
       BIF     HLTMOP
       LDA     W0,2
       XMA     W1,2
       STA     W0,2
       BIF     LBLLOP
       JRS     LBLMAK
       LDA     W0,2
       STA     FORKT2
       BIF     HLTMOP
       BIF     LBLLOP
       FET     SIX
FK5    FIL     ZERO
       SKR     W0,2
       BRU     FK5
       SKR     WRKBOT
       FET     FORKT2
       BIF     LBLLOP
       JRS     IDSCAN
       JAF     A34A
       SOT     GSPIDF
       JAT     A35A
       BRU     INCNFA
A34A   BOP     GLSLST
       MCO     GLSLST
A35A   CSA     LPAREN
       JAF     A36A
       JRS     SPASQS
       CSF     RPAREN
       JRS     SCRGEN
       JRS     SPASQG
A36A   BIF     BRMOP
       FIL     BRS10           STOP FORK
       FET     FORKT1
       BIF     LBLLOP
       BRU     ACEOLE
*WAIT STA XLATE
WAITSX FEX     CALLSX               CALL STA XLATE
       QSF     WAITQT
       FIL     BRS31
       BRU     ACEOLE               ACTIVE EOL EXIT
*CALL STA XLATE
CALLSX FEX     CLFSX               CLOSE FILE STA XLATE
       QSF     CALLQT              CALL QT
       JRS     IDSCAN              ID SCAN
       JAF     A34                 A1
       SOT     GSPIDF              GLOBAL SPROG ID FLAG
       JAT     A35                 A2
       BRU     INCNFA              ID CONFLICT FAIL
A34    BOP     GLSLST              GLOBAL SPROG LIST
       MCO     GLSLST              GLOBAL SPROG LIST
A35    CSA     LPAREN              L PAREN
       JAF     A36                 A4
       JRS     SPASQS              SPROG ARG SEQ SCAN
       CSF     RPAREN              R PAREN
       JRS     SCRGEN              SCRIPT GEN
       JRS     SPASQG              SPROG ARG SEQ GEN
A36    BIF     BRMOP               BRM* MOP
       BRU     ACEOLE              ACTIVE EOL EXIT
*CLOSE FILE STA XTE
CLFSX  FEX     CONTSX              CONTINUE STA XLATE
       QSF     CLOSQT
       CSA     LPAREN
       JAF     CLFSX7
CLFSX3 JRS     FXPXL           FIXED EXPRESSION XLATE
       BLF     CLFSL           CLOSE FILE SPROG LINK
       CSA     COMMA
       JAT     CLFSX3
       CSF     RPAREN
       BRU     ACEOLE          ACTIVE EOL EXIT
CLFSX7 BLF     CLAFSL          CLOSE ALL FILES SPROG LINK
       BRU     ACEOLE
*CONTINUE STA XLATE
CONTSX FEX     TYPESX              TYPE STA XLATE
       QSF     CONTQT              CONTINUE QT
       BRU     ACEOLE              ACTIVE EOL EXIT
*TYPE STA XLATE
TYPESX FEX     ACCTSX              ACCEPT STA XLATE
       QSF     TYPEQT              TYPE QT
TYPSX1 LDA     =1              TTY OUTPUT
       STA     CTL2
       JRS     RGFXCS          REGISTER FIXED CONSTANT
       BIF     LDAMOP
       BLF     WRITSL              WRITE SPROG LINK
       BRU     LCIOLX              LBL COMMA IOL XLATE
*ACCEPT STA XLATE
ACCTSX FEX     READGP              READ GROUP
       QSF     ACCPTQ          ACCEPT QT
       FIL     CLAOP               I/O UNIT  ZERO
       BLF     READSL              READ SPROG LINK
       BRU     LCIOLX              LBL COMMA IOL XLATE
*READ GROUP
READGP FEX     WRITGP              WRITE GROUP
       QSF     READQT              READ QT
*TSS READ STA XLATE
READSX CLA
       CSA     LPAREN
       JAF     READ1
       LDA     =1
READ1  STA     IOPARI
       JRS     FXPXL               FX EXP XLATE
       BLF     READSL              READ SPROG LINK
       BRU     CLCIOX              COMMA LBL COMMA IOL XLATE
*WRITE GROUP
WRITGP FEX     PCHSX           PUNCH STA XLATE
       QSF     WRITEQ
*TSS WRITE STA XLATE
WRITSX CLA
       CSA     LPAREN
       JAF     WRITE1
       LDA     =1
WRITE1 STA     IOPARI
       JRS     FXPXL               FX EXP XLATE
       BLF     WRITSL              WRITE SPROG LINK
*COMMA LBL COMMA IOL XLATE
CLCIOX CSA     COMMA
       JAT     LCIOLX
       FIL     ZERO            DEFAULT FORMAT
       BRU     CMIO2
*PUNCH STA XLATE
PCHSX  FEX     PRNTSX          PRINT STA XLATE
       QSF     PUNCHQ          PUNCH QUOTE
       BRU     WRITSX
*PRINT STA XLATE
PRNTSX FEX     IFGRUP              IF GROUP
       QSF     PRINTQ              PRINT QT
       BRU     TYPSX1
*LBL COMMA IOL"XLATE
LCIOLX SOC     DIGTFL          DIGIT FLAG
       JAT     D36C
       TRY     UNSCAS          UNSUBSCRIPTED ARRAY SCAN
       JAF     D36E
*ARRAY NAME
       PUL     WORKLT          WORK LIST
       LDA     W1,2
       STA     W0,2
       JRS     LODCTL          LOAD CENTRAL
       SER     GDLIST          GLOBAL DMY LIST
       JAF     D36A
       BNG     TWO             (DUMMY POINTER)
       BIF     HLTIOP          HLT* MOP (INDIRECT)
       SKR     WRKBOT          WORK BOTTOM
       BRU     CMIOLX          COMMA IOL XLATE
D36A   FET     W0,2
       SOF     FLFLAG          FLOATING FLAG
       BNG     TWO             (OFFSET)
       JAF     D36B
       ADD     W0,2            (DOUBLE FOR FLOATING)
       STA     W0,2
D36B   BAF     DELLOP
       BRU     D36D
*STATEMENT LABEL
D36C   JRS     LBSCAN          LBL SCAN
D36D   BIF     HLTMOP          HLT MOP
       BRU     CMIOLX          COMMA IOL XLATE
*SCALAR VARIABLE (TO WHICH FORMAT STA LABEL HAS BEEN ASSIGNED)
D36E   JRS     VARSCN
       SOF     SCAIDF          SCALAR ID FLAG
       JAF     D36F
*UNSUBSCRIPTED SCALAR
       BAM     AGTPOP          ASSIGN GO TO POP
       BRU     CMIOLX          COMMA IOL XLATE
*UNSCRIPTED SCALAR
D36F   JRS     LMBRUG          LBL MAKER BRU GEN
       JRS     LMLBLG          LBL MAKER LBL GEN
       SWT     W2,2
       FIL     HLTINS          HLT INSTRUCTION
       JRS     SCRGEN          SCRIPT GEN
       BAM     FARGPO          FIRST ARG POP
       BIF     LBLLOP          LBL LOP
       BIF     BRRMOP          BRR MOP


*COMMA IOL XLATE
CMIOLX CSA     COMMA               COMMA
       JAT     CMIO1
CMIO2  LDA     IOPARI
       SKG     =0
       BRU     CMIO3
       CSF     RPAREN
       CLA
       STA     IOPARI
       CSA     CARRET
       JAF     CMIO1
CMIO4  BLF     STPIOL
       BRU     CUAOUT
CMIO3  CSF     CARRET
       BRU     CMIO4
CMIO1  JRS     IOLXLA              IOL XLATE
*IOL END
IOLEND BLF     STPIOL              STOP I-O LINK
       BRU     ACEOLE              ACTIVE EOL EXIT
*IOL XLATE
IOLXLA RSV     CODLST              CODE LIST
A37    CSA     LPAREN              L PAREN
       JAF     A38                 A1
       JRS     IOLXLA              IOL XLATE
       CSF     RPAREN              R PAREN
       BRU     A41                 A3
A38    TRY     UNSCAS              UNSCRIPTED ARRAY SCAN
       JAF     A39                 A2
       FET     W0,2                W0
       BAM     FARGPO              FIRST ARG POP
       PUL     WORKLT              WORK LIST
       SKR     WRKBOT              WORK BOTTOM
       BNG     THREE               THREE
       BAF     NEXTAP              NEXT ARG POP
       BLF     IOLUAL              IOL UNSCRIPTED ARRAY LINK
       BRU     A41                 A3
A39    JRS     VARSCN              VAR SCAN
       JRS     SCRGEN              SCRIPT GEN
A40    BAM     IOTPOP              IO TRAP POP
A41    CSA     COMMA               COMMA
       JAF     A42                 A7
       TRY     SCLIDS              SCALAR ID SCAN
       JAF     A37                 A4
       CSA     EQUAL               EQUAL
       JAF     A40                 A5
       ADR     DOLST               DO LOOPS OPEN LIST
       COF     CODLST              CODE LIST
       JRS     DOCTLX              DO CONTROL XLATE
       BRU     A43                 A6
A42    ADR     DOLST               DO LOOPS OPEN LIST
       COF     CODLST              CODE LIST
A43    ADR     CODLST              CODE LIST
       CAR     DOLST               DO LOOPS OPEN LIST
       BRU     EXIT                EXIT
*IF GROUP
IFGRUP FEX     ASSNSX              ASSIGN STA XLATE
       QSF     IFQT                IF QT
       CSA     LPAREN              L PAREN
       JAT     IFSPAR              IF SENSE PAIR
*IF OVERFLOW STA XLATE
IFOVSX QSF     FLQT                FLOATING QT
       QSF     OVFLQT              OVERFLOW QT
       ADR     IOVLNK              IF OVERFLOW LINK
       BRU     IFSOVX              IF SENSE-OVERFLOW XLATE
$NLIST ZRO     PS-1                END OF COMPILER LISTS
6BIT   EQU     400000B
DATE1  ZRO     0
DATE2  ZRO     0
DATE   BSS     6
NEWSQT ASC     'VERSION 3-23-76$/'
HLQT   ASC     '.ELP.'
CHLPQT ASC     '$ALL COMMANDS REQUIRE A CONFIRMING "."'
       ASC     '$$INPUT$OUTPUT$LIST$DEBUG$MAP$FINISHED'
       ASC     '$NO MAP$NO LIST$NO DEBUG$COMPILE'
       ASC     '$$*T SPECIFIES THE TELETYPE FILE'
       ASC     '$CONTROL-K RETURNS TO "+" COMMAND PROCESSOR$$/'
*                     SEMICOLON FOR CR/LF.
       NOLIST EXT,GO
       END
3C     IDENT   *               FORTRAN COMPILER, CODE 3



SETT   MACRO   D; LD.&D(2) =-1; ST.&D(2) D(1); ENDM
SETF   MACRO   D; CL.&D(2); ST.&D(2) D(1); ENDM

BAM    OPD     10000000B,2
CSF    OPD     10100000B,2
CSA    OPD     10200000B,2
JAT    OPD     10300000B,2
JAF    OPD     10400000B,2
TRY    OPD     10500000B,2
QSF    OPD     10600000B,2
STD    OPD     10700000B,2
FET    OPD     11000000B,2
SWT    OPD     11100000B,2
JRS    OPD     11200000B,2
BIF    OPD     11300000B,2
MCO    OPD     11400000B,2
SOL    OPD     11500000B,2
SOF    OPD     11600000B,2
RSV    OPD     11700000B,2
CNT    OPD     12000000B,2
RLS    OPD     12100000B,2
TOT    OPD     12200000B,2
FIL    OPD     12300000B,2
MON    OPD     12400000B,2
LDP    OPD     12500000B,2
BLF    OPD     12600000B,2
SAL    OPD     12700000B,2
PUL    OPD     13000000B,2
BNG    OPD     13100000B,2
BAF    OPD     13200000B,2
CAR    OPD     13300000B,2
PLO    OPD     13400000B,2
CAC    OPD     13500000B,2
CIC    OPD     13600000B,2
FIC    OPD     13700000B,2
FAC    OPD     14000000B,2
BOP    OPD     14100000B,2
MOF    OPD     14200000B,2
SNE    OPD     14300000B,2
SER    OPD     14400000B,2
LCF    OPD     14500000B,2
FIP    OPD     14600000B,2
ADR    OPD     14700000B,2
EOS    OPD     15000000B,2
SOB    OPD     15100000B,2
SOT    OPD     15200000B,2
SDP    OPD     15300000B,2
ADP    OPD     15400000B,2
REC    OPD     15500000B,2
COF    OPD     15600000B,2
LCO    OPD     15700000B,2
PRC    OPD     16000000B,2
PRQ    OPD     16100000B,2
SOC    OPD     16200000B,2
BIM    OPD     16300000B,2
FEX    OPD     16400000B,2
*IF SENSE PAIR
$IFSPAR QSF     SENSEQ              SENSE QT
       CSA     S                   S
       JAF     IFSLX               IF SENSE LIGHT STA XLATE
*IF SENSE SWITCH STA XLATE
IFSSSX QSF     WITCHQ              WITCH QT
       ADR     ISSLNK              IF SENSE SWITCH LINK
       BRU     IFSLSX              IF SENSE LIGHT-SWITCH XLATE
*IF SENSE LIGHT STA XLATE
IFSLX  QSF     LIGHTQ              LIGHT QT
       ADR     ISLLNK              IF SENSE LIGHT LINK
*IF SENSE LIGHT-SWITCH XLATE
IFSLSX JRS     FXPXL               FX EXP XLATE
       CSF     RPAREN              R PAREN
*IF SENSE-OVERFLOW XLATE
$IFSOVX BLF*    W0,2                W0
       SKR     WRKBOT              WORKBOTTOM
       JRS     LBCOMA              LBL COMMA SCAN
       BRU     IFSXIT              IF STA EXITS
*ASSIGN STA XLATE
$ASSNSX FEX     SENLSX              SENSE LIGHT STA XLATE
       QSF     ASSGNQ              ASSIGN QT
       JRS     LBSCAN              LBL SCAN
       QSF     TOQT                TO QT
       JRS     VARSCN              VAR SCAN
       JRS     SCRGEN              SCRIPT GEN
       BAM     ASLPOP              ASSIGN LBL POP
       BIF     BRUMOP              BRU MOP
       BRU     ACEOLE              ACTIVE EOL EXIT
*SENSE LIGHT STA XLATE
SENLSX FEX     COMMSX              COMMON STA XLATE
       QSF     SENSEQ              SENSE QT
       QSF     LIGHTQ              LIGHT QT
       JRS     FXPXL               FX EXP XLATE
       BLF     SENLSL              SENSE LIGHT SPROG LINK
       BRU     ACEOLE              ACTIVE EOL EXIT
*COMMON STA XLATE
COMMSX FEX     EQUXLA              EQUIVALENCE STA XLATE
       QSF     CMONQT              COMMON QT
A45    JRS     SYMBSC              SYMBOL SCAN
       SER     COLIST              COMMON LIST
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
       ADR     QDATLS              EQUIV DATA LIST
       JRS     QLSRCH              EQUIV LIST SEARCH
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
       MCO     COLIST              COMMON LIST
       CSA     COMMA               COMMA
       JAT     A45                 A1
       BRU     IAEOLX              INACTIVE EOL EXIT
*EQUIVALENCE STA XLATE
EQUXLA FEX     RTRNSX              RETURN STA XLATE
       QSF     EQUIVQ              EQUIVALENCE QT
       JRS     CYEQDT              COPY EQUIV DATA
       RSV     QTPLS               EQUIV TEMP LIST
A44    CSF     LPAREN              L PAREN
       JRS     QSEGX               EQUIV SEG XLATE
       CSF     RPAREN              R PAREN
       CSA     COMMA               COMMA
       JAT     A44                 A1
       CSA     CARRET              CAR RETURN
       JAF     A44                 A1
       RLS     QTPLS               EQUIV TEMP LIST
A46    RLS     QDATLS              EQUIV DATA LIST
       SNE     QDATLS              EQUIV DATA LIST
       JAT     A46                 A2
A47    ADR     QDATLS              EQUIV DATA LIST
       COF     QHDLS               EQUIV HOLD LIST
       JAT     A47                 A3
       BRU     CUAOUT              CLEAN UP AND OUTPUT
*EQUIV SEG XLATE
QSEGX  EQU     *
A48    JRS     QSCSR               EQUIV SCAN AND SEARCH
       JAF     A52                 A4
       JRS     APINSC              APPENDED INTEGER SCAN
       SUB     W0,2                W0
       STA     W0,2                W0
       BRU     A51                 A3
A49    JRS     QSCSR               EQUIV SCAN AND SEARCH
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
A50    MCO     QTPLS               EQUIV TEMP LIST
       JRS     APINSC              APPENDED INTEGER SCAN
       SOB     QTPLS               EQUIV TEMP LIST
A51    CSA     COMMA               COMMA
       JAT     A49                 A2
       FET     ZERO                ZERO
       BRU     A53                 A1
A52    MCO     QTPLS               EQUIV TEMP LIST
       JRS     APINSC              APPENDED INTEGER SCAN
       SOB     QTPLS               EQUIV TEMP LIST
       CSA     COMMA               COMMA
       JAT     A48                 A6
       RSV     QHDLS               EQUIV HOLD LIST
       FET     ZERO                ZERO
       FET     ONE                 ONE
A53    LCO     QTPLS               EQUIV TEMP LIST
       JAF     CLR2AE              CLEAR TWO AND EXIT
       MCO     QHDLS               EQUIV HOLD LIST
       TOT     QTPLS               EQUIV TEMP LIST
       SUB     W2,2                W2
       STA     W0,2                W0
       MON     QHDLS               EQUIV HOLD LIST
       SER     COLIST              COMMON LIST
       JAF     A53                 A1
       SKR     WRKBOT              WORK BOTTOM
       SKR*    WRKBOT              WORK BOTTOM
       BRU     A53                 A1
       BRU     ILALFA              ILLEGAL ALLOCATION FAIL
*EQUIV SCAN AND SEARCH
QSCSR  JRS     SYMBSC              SYMBOL SCAN
       SER     QTPLS               EQUIV TEMP LIST
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
       ADR     QHDLS               EQUIV HOLD LIST
       JRS     QLSRCH              EQUIV LIST SEARCH
       JAF     XTF                 EXIT FALSE
       BRU     EXITRU              EXIT TRUE
*EQUIV LIST SEARCH
QLSRCH RSV     QTPLS               EQUIV TEMP LIST
A54    SER*    W0,2                W0
       JAT     A56                 A3
       ADR     QTPLS               EQUIV TEMP LIST
       COF*    W1,2                W1
       JAT     A54                 A1
A55    ADR*    W0,2                W0
       COF     QTPLS               EQUIV TEMP LIST
       JAT     A55                 A2
       RLS     QTPLS               EQUIV TEMP LIST
       BRU     CLR1EF              CLEAR ONE EXIT FALSE
A56    BNG     TWO                 TWO
       ADR     QOPTLS              EQUIV OPUT LIST
       COF*    W2,2                W2
A57    ADR*    W1,2                W1
       COF     QTPLS               EQUIV TEMP LIST
       JAT     A57                 A4
       RLS     QTPLS               EQUIV TEMP LIST
       ADR*    W1,2                W1
       COF     QOPTLS              EQUIV OPUT LIST
       SWT     W1,2                W1
       BRU     CLR1ET              CLEAR ONE EXIT TRUE
*APPENDED INTEGER SCAN
APINSC FET     ZERO                ZERO
       JRS     STDMEV              STANDARD MODE EVAL
       CSA     LPAREN              L PAREN
       LDA     ONE                 ONE
       STA     CTL2                CENTRAL 2
       JAF     A58                 A1
       JRS     INSCAN              INTEGER SCAN
       SOL     MAXASA              MAX ARRAY SIZE ALLOWED
       JAT     ILALFA              ILLEGAL ALLOCATION FAIL
       CSF     RPAREN              R PAREN
A58    SOF     FLFLAG              FL FLAG
       LDA     CTL2                CENTRAL 2
       JAF     CLR1AE              CLEAR ONE AND EXIT
       ADD     CTL2                CENTRAL 2
       BRU     CLR1AE              CLEAR ONE AND EXIT
*COPY EQUIV DATA
CYEQDT LDA     ONE                 ONE
       STA     CTCOPY              COUNT OF COPY
       BRU     A60                 A2
A59    CAX
       LDA     0,2                 0
       SOB     QHDLS               EQUIV HOLD LIST
       MIN     CTCOPY              COUNT OF COPY
A60    LDA     CTCOPY              COUNT OF COPY
       ADD     QVDTBS              EQUIV DATA BASE
       SKG     QVDBOT              EQUIV DATA BOTTOM
       BRU     A59                 A1
       LDA     QVDSTR              EQUIV DATA START
       SUB     QVDTBS              EQUIV DATA BASE
       ADM     QVHSTR              EQUIV HOLD START
       ADM     QVHTOP              EQUIV HOLD TOP
       BRU     EXIT                EXIT
*RETURN STA XLATE
RTRNSX FEX     PAUSSX              PAUSE STA XLATE
       QSF     RTURNQ              RETURN QT
       SKN     SPTRIG              SPROG TRIGGER
       BLF     STOPSL              STOP SPROG LINK
       SKN     SPTRIG              SPROG TRIGGER
       BRU     JPEOLE              JUMP EOL EXIT
       FET     NAMESP              NAME OF SPROG PNTR
       BAM     OKFPOP              OK FETCH POP
       FET     SPRGLB              START OF PROG LBL
       BIF     BRRMOP              BRR MOP
       BRU     JPEOLE              JUMP EOL EXIT
*PAUSE STA XLATE
PAUSSX FEX     STOPSX              STOP STA XLATE
       QSF     PAUSEQ              PAUSE QT
       BLF     PAUSSL              PAUSE SPROG LINK
       TRY     INSCAN              INTEGER SCAN
       JAF     A61                 A1
       FET     CTL2                CENTRAL 2
       BAF     NOPMOP              NOP MOP
       BRU     ACEOLE              ACTIVE EOL EXIT
A61    FIL     NOPINS              NOP INST
       BRU     ACEOLE              ACTIVE EOL EXIT
*STOP STA XLATE
STOPSX FEX     ILLSX               ILLEGAL STATEMENT XLATE
       QSF     STOPQT              STOP QT
       TRY     INSCAN              INTEGER SCAN
       BLF     STOPSL              STOP SPROG LINK
       BRU     JPEOLE              JUMP EOL EXIT
*INACTIVE EOL EXIT -- FINISH STATEMENT PROCESSING BUT SUPPRESS CODE GEN
$IAEOLX CSF     CARET               CAR RETURN
       BRU     CUAOUT              CLEAN UP AND OUTPUT
*ACTIVE EOL EXIT
$ACEOLE CSF     CARET               CAR RETURN
*ACTIVE EXIT
$ACEXIT LDA     MINUS1              MINUS ONE
       BRU     JUPACX              JUMP-ACTIVE EXIT
*JUMP EOL EXIT
$JPEOLE CSF     CARET               CAR RETURN
       LDA     ZERO                ZERO
*JUMP-ACTIVE EXIT
$JUPACX STA     JPSTRG              JUMP STA TRIGGER
       MIN     ACTEST              ACTIVE STA TRIGGER
*CLEAN UP AND OUTPUT
$CUAOUT SKN     BP2
       BRU     ENDFIX
$A62   JRS     RELPRT              RELEASE AND PRINT
       JAF     A62                 A1
       BRU     SFINAL              STA FINAL
ENDFIX LDA     LINECT              LINE COUNT
       STA     ILINCT              INITIAL LINE COUNT
       LDA     INCHCT              INPUT CHAR COUNT
       STA     IICHCT              INIT INPUT CHAR COUNT
       BRU     SFINAL              STA FINAL
*ILLEGAL STA XLATE
$ILLSX  SNE     FAILDL              FAIL DATA LIST
       JAT     OPDIAG              OUTPUT DIAGNOSTICS
       FEX     OPDIAG              OUTPUT DIAGNOSTICS
       JRS     VARSCN              VAR SCAN
       BRU     ILSYFA              ILLEGAL SYNTAX FAIL
*ILLEGAL LINE XLATE
$ILLINX JRS     SVLSDT              SAVE LIST DATA
*OUTPUT DIAGNOSTICS
$OPDIAG FEX     ENDSX               END STA XLATE
       CSA     ASTRSK              ASTERISK
       JAT     FAIL                FAIL
       SKN     FEOF
       BRU     ILLN1
       LDA     INSTCT
       SKG     INCHCT
       BRU     NONCDF
ILLN1  RSV     ERLIST              ERROR OPUT LIST
       RSV     ERSTLS              ERROR STOP LIST
       SETT    FTTYON,A
A63    JRS     PRTALN              PRINT A LINE
       JRS     PRERMK              PRINT ERROR MARKS
       JAF     A63                 A1
       RLS     FAILDL              FAIL DATA LIST
A64    TOT     ERLIST              ERROR OPUT LIST
       JAF     A65                 A2
       PRQ*    W0,2                W0
       SKR     WRKBOT              WORK BOTTOM
       PRC     CARET               CAR RETURN
       BRU     A64                 A3
A65    RLS     ERLIST              ERROR OPUT LIST
       RLS     ERSTLS              ERROR STOP LIST
       SETF    FTTYON,A
*STA FINAL
$SFINAL JRS     STACUP              STA CLEAN UP
       JRS     RELPCH              RELEASE AND PUNCH
       BRU     BODYSX              BODY STA XLATE
*END STA XLATE
$ENDSX  FEX     NONCDF              NO END CARD FINISH
       CSF     ASTRSK              ASTERISK
$IBMEND MIN     LASTST              LAST STA TRIGGER
       QSF     ENDQT               END QT
       CSF     CARET               CARRAIGE RETURN
       JRS     RELPRT              RELEASE AND PRINT
       BRU     FINCOP              FINISH CODE OPUT
*NO END CARD FINISH
$NONCDF LDA     IICHCT              INITIAL INPUT CHAR CNT
       STA     INCHCT              INPUT CHAR CNT
*FINISH CODE OPUT
$FINCOP BLF     STOPSL              STOP SPROG LINK
       JRS     RELPCH              RELEASE AND PUNCH
       BRU     PRTSUM              PRINT SUMMARY
*STA INITIALIZE
$SINIT  LDA     LINECT              LINE CNT
       STA     ILINCT              INITIAL LINE CNT
A66    LDA     INCHCT              INPUT CHAR CNT
       STA     IICHCT              INITIAL INPUT CHAR CNT
       STA     RDSTCT              READ STOP CNT
       SBRM    NXINCH              NEXT INPUT CHAR
       CSA     CARET               CAR RETURN
       JAT     A66                 A1
*COMMENT STA XLATE
$COMTSX CSA     C                   C
       JAF     EXIT                EXIT
       SKN     BP2
       BRU     A67                 A1
       JRS     RELPRT              RELEASE AND PRINT
       BRU     SINIT               STA INITIALIZE
A67    LDA     INCHCT              INPUT CHAR CNT
       STA     RDSTCT              READ STOP CNT
       SBRM    NXINCH              NEXT INPUT CHAR
       CSA     CARET               CAR RETURN
       JAF     A67                 A1
       MIN     LINECT              LINE CNT
       BRU     SINIT               STA INITIALIZE
*LBL FIELD XLATE
$LBFLDX FET     FOUR                FOUR
       JRS     DGCVIN              DIGIT CONV INITIAL
       BRU     A69                 A2
A68    SBRM    NXINCH              NEXT INPUT CHAR
A69    SOC     DIGTFL              DIGIT FLAG
       JAF     A70                 A3
       JRS     CNV1DG              CONV ONE DIGIT
       BRU     A71                 A5
A70    CSF     SPACE               SPACE
A71    SKR     W0,2                W0
       BRU     A68                 A1
       SBRM    NXINCH              NEXT INPUT CHAR
       CSA     SPACE               SPACE
       JAT     A72                 A4
       CSF     NO                  N0
A72    SKR     WRKBOT              WORK BOTTOM
       LDA     CTL2                CENTRAL 2
       STA     STLBPT              STA LBL PNTR
*PASS STATEMENT LABEL TO RUNTIME
       SKG     ZERO
       BRU     A72A
       JRS     REGLBL              REGISTER LBL
       LDA     W0,2                W0
       STA     STLBPT              STA LBL PNTR
       SOB     WORKLT              WORK LIST
       BIF     LBLLOP              LBL LOP
       JRS     PRPNTR              PROCESS PNTR
       LDA*    ADRPTO              ADDRESS POINTED TO
       SKA     PDEFLM              PREVIOUSLY DEF LBL MASK
       MRG     MPYDLM              MULTIPLY DEF LBL MASK
       MRG     PDEFLM              PREVIOUSLY DEF LBL MASK
       STA*    ADRPTO              ADDRESS POINTED TO
       NOP
A72A   SKN     FDBUG           DEBUGGING INFO FLAG
       BRU     EXIT
       FET     CTL2
       BAF     STLMOP          STATEMENT LABEL MOP
       BRU     EXIT
*STA CLEAN UP
$STACUP FET     STLBPT              STA LBL PNTR
       SKN     JPSTRG              JUMP STA TRIGGER
       BRU     CLR1AE              CLEAR ONE AND EXIT
A73    SNE     DOLST               DO LOOPS OPEN LIST
       JAF     CLR1AE              CLEAR ONE AND EXIT
       LDA     W0,2                W0
       SKE*    DOLOBM              DO LOOPS OPEN BOTTOM
       BRU     CLR1AE              CLEAR ONE AND EXIT
       SKR     DOLOBM              DO LOOPS OPEN BOTTOM
       MOF     DOLST               DO LOOPS OPEN LIST
       MOF     DOLST               DO LOOPS OPEN LIST
       MON     CODLST              CODE LIST
       MON     CODLST              CODE LIST
       BRU     A73                 A1
*RELEASE AND PUNCH
$RELPCH RLS     SAVELS              SAVE LIST
       RLS     FAILDL              FAIL DATA LIST
       RLS     PLEXLS              PLEX LIST
       RLS     WORKLT              WORK LIST
       RLS     SCRLST              SCRIPT LIST
       BRU     PCHCOD              PUNCH CODE
*RELEASE AND PRINT
$RELPRT RLS    FAILDL              FAIL DATA LIST
*PRINT A LINE
$PRTALN LDA     IICHCT              INITIAL INPUT CHAR CNT
       STA     INCHCT              INPUT CHAR CNT
A74    SBRM    NXINCH              NEXT INPUT CHAR
       SKA     CARRFG              CAR RETURN FLAG
       BRU     A74
       LDA     ONES
       STA     NSTTRG              END OF STATEMENT TRIGGER
       STA     EOLTRG              END OF LINE TRIGGER
       FET     ZERO
A76    LDA     INCHCT              INPUT CHAR CNT
       BRU     A76A
A75    SBRM    NXACCH              NEXT ACTIVE CHAR
       SKE     CARET               CAR RETURN
       BRU     A75A
       LDA     INCHCT              INPUT CHAR CNT
       SKG     EOLTRG              END OF LN TRG(ADDR OF NO. 1 CHAR RET)
       MIN     NSTTRG              END OF STATMENT TRIGGER
A75A   LDA     EOLTRG              END OF LINE TRIGGER
       SKG     ONES                END OF LINE.
       BRU     A75B                           .NO
       LDB     CARET               CAR RETURN .YES
       BRU     A75C
A75B   LDA     LACHCT              LAST ACTIVE CHAR CNT
       ADD     ONE
       LDB     FRSTCH              FIRST CHAR READ BY NXACCH
A75C   STB     CRNTCH              CURRENT CHAR
       STA     INCHCT              INPUT CHAR CNT
A76A   STA     RDSTCT              READ STOP CNT
       STA     CTL2                CENTRAL 2
       PRC     CRNTCH              CURRENT CHAR
       SER     FAILDL              FAIL DATA LIST
       JAF     A77
       BNG     ONE
       MON     ERLIST              ERROR OUTPUT LIST
       MON     ERSTLS              ERROR STOP LIST
       FET     MINUS1              MINUS ONE
A77    MIN     W0,2
       LDA     CRNTCH              CURRENT CHAR
       SKE     CARET               CAR RETURN
       BRU     A75
       LDA     INCHCT              INPUT CHAR CNT
       STA     IICHCT              INITIAL INPUT CHAR CNT
       MIN     ILINCT              INITIAL LINE CNT
       LDA     ILINCT              INITIAL LINE CNT
       STA     LINECT              LINE CNT
       SKN     NSTTRG              END OF STATEMENT TRIGGER
       BRU     CLR1ET              CLEAR ONE EXIT TRUE
       BRU     CLR1EF              CLEAR ONE EXIT FALSE
*PRINT ERROR MARKS
$PRERMK SNE     ERSTLS              ERROR STOP LIST
       JAF     EXIT                EXIT
A80    TOT     ERSTLS              ERROR STOP LIST
       JAT     A82                 A1
       PRC     CARET               CAR RETURN
       BRU     EXIT                EXIT
A81    PRC     SPACE               SPACE
A82    SKR     W0,2                W0
       BRU     A81                 A2
       PRC     ERMRK               ERROR MARK
       SKR     WRKBOT              WORK BOTTOM
       BRU     A80                 A3
*PRINT SUMMARY
$PRTSUM SETT   FTTYON,A
       SNE     DOLST               DO LOOPS OPEN LIST
       JAF     A84                 A2
       PRQ     DONEQT              DO NEST ERRORS QT
A83    MOF     DOLST               DO LOOPS OPEN LIST
       JAF     A84                 A2
       SKR     DOLOBM              DO LOOPS OPEN BOTTOM
       SKR     DOLOBM              DO LOOPS OPEN BOTTOM
       BNG     ZERO                ZERO
       ETR     ABSATM              ALL BUT SIGN AND TAG MASK
       STA     W0,2                W0
       JRS     PR5DEC              PRINT 5 DEC
       JRS     TSEOLP              TEST FOR EOL PRINT
       BRU     A83                 A1
A84    MOF     LBLLST              LBL LIST
       JAF     A85                 A3
       SKA     PDEFLM              PREVIOUSLY DEF LBL MASK
       SKA     MPYDLM              MULTIPLY DEF LBL MASK
       FET     W0,2                W0
       SKR     WRKBOT              WORK BOTTOM
       BRU     A84                 A2
A85    SNE     WORKLT              WORK LIST
       JAF     OPCNST              OUTPUT CONSTANTS
       PRQ     LBLERQ              LABLING ERRORS QT
A86    JRS     PR5DEC              PRINT 5 DEC
       JRS     TSEOLP              TEST FOR EOL PRINT
       SNE     WORKLT              WORK LIST
       JAT     A86                 A4
*OUTPUT CONSTANTS
$OPCNST CNT     FXCLST              FX CONST LIST
       CNT     FLCLST              FL CONST LIST
       ADD     W1,2                W1
       SOB     WORKLT              WORK LIST
       BAF     ABSLOP              ABS LOP
       ADR     CODLST              CODE LIST
       CAR     FXCLST              FX CONST LIST
       ADR     CODLST              CODE LIST
       CAR     FLCLST              FL CONST LIST
       JRS     PCHCOD              PUNCH CODE
*ALLOCATE MEMORY
$ALCMEM FET     ZERO                ZERO
       LDA     GLSBOT              GLOBAL SPROG BOTTOM
       SUB     GLSBAS              GLOBAL SPROG BASE
       RSH     1                   1
       SOB     WORKLT              WORK LIST
       ADD     DMYCNT              DMY CNT
       SOB     WORKLT              WORK LIST
       ADD     MXTPCT              MAX TEMP CNT
       SOB     WORKLT              WORK LIST
       STA     PROGBK              PROGRAM BREAK
       CLA
       STA     COMBRK              COMMON BREAK


$COMALC SETF    FTTYON,A
       LDA     COUTF
       STA     LFTMP
       LDA     =2
       SKN     FMAP
       STA     COUTF
       RSV     LBLLST          (TEMP STORAGE FOR DEBUG INFO)
*COMMON ALLOCATION
       SNE     COLIST              COMMON LIST
       JAF     PROGAL              PROGRAM ALLOCATION
       PRQ     CMALQT              COMMON ALLOCATION QT
A87    LCO     COLIST              COMMON LIST
       JAF     COMOVL              COMMON OVERLAY
       JRS     CMEMRQ              CALC MEMORY REQUIRED
       LDA     W0,2                W0
       ADM     COMBRK              COMMON BREAK
       LDA     ZERO                ZERO
       SUB     COMBRK              COMMON BREAK
       STA     W0,2                W0
A88    ADR     QHDLS               EQUIV HOLD LIST
       COF     QDATLS              EQUIV DATA LIST
       JAF     A89                 A3
       SER     QHDLS               EQUIV HOLD LIST
       JAF     A88                 A2
       BNG     TWO                 TWO
       FET     W1,2                W1
       ADR     MXOVNC              MAX EQUIV IN COMMON
       JRS     PROCQG              PROCESS EQUIV GROUP
A89    JRS     SETPUB              SET AND PUBLISH
A90    ADR     QDATLS              EQUIV DATA LIST
       COF     QHDLS               EQUIV HOLD LIST
       JAT     A90                 A4
       BRU     A87                 A1
*COMMON OVERLAY
$COMOVL FET     ONE                 ONE
       LDA     ZERO                ZERO
       SUB     COMBRK              COMMON BREAK
       SOB     WORKLT              WORK LIST
       JRS     PROQOP              PROCESS EQUIV OUTPUT
*PROGRAM ALLOCATION
$PROGAL PRQ     PROGQT              PROGRAM ALLOCATION QT
A91    SNE     QDATLS              EQUIV DATA LIST
       JAF     A94                 A4
       RSV     QHDLS               EQUIV HOLD LIST
       FET     SIGN
A92    LCO     QDATLS          EQUIV DATA LIST
       JAF     A93                 A2
       MCO     QHDLS               EQUIV HOLD LIST
       TOT     QDATLS              EQUIV DATA LIST
       MON     QHDLS               EQUIV HOLD LIST
       SKG     W0,2                W0
       BRU     A92                 A1
       STA     W0,2                W0
       BRU     A92                 A1
A93    FET     PROGBK              PROGRAM BREAK
       ADR     PROGBK              PROGRAM BREAK
       JRS     PROCQG              PROCESS EQUIV GROUP
       RLS     QDATLS              EQUIV DATA LIST
       BRU     A91                 A3
A94    FET     POSFSC              POS FULL SCALE
       FET     NEGFS               NEG FULL SCALE
       JRS     PROQOP              PROCESS EQUIV OUTPUT
       RLS     QOPTLS              EQUIV OPUT LIST
       FIL     NMARKR              END MARKER
*ARRAY ALLOCATION
ARAYAL EQU     *
A95    LCF     AYYLST              ARRAY LIST
       JAF     A96                 A2
       JRS     PUBALC              PUBLISH AND ALLOCATE
       FIL     CTL2                CENTRAL 2
*SAVE ARRAY INFO FOR DEBUG
       FET     ONE
A95A   MIN     ARYTOP
       LDA*    ARYTOP
       SKN     VARBAS
       SOB     LBLLST
       SKR*    WRKBOT
       BRU     A95A
       LDA     VARBAS
       SKN     VARBAS
       SOB     LBLLST
       LDA     THREE
       ADM     ARYTOP
       SKR     WRKBOT
       BRU     A95
A96    FIL     NMARKR              END MARKER
*SCALAR ALLOCATION
SCALAL FET     PROGBK              PROGRAM BREAK
       ADR     FXSLST              FX SCALAR LIST
       JRS     PROSCA              PROCESS SCALARS
       FIL     NMARKR              END MARKER
       FET     PROGBK              PROGRAM BREAK
       ADR     FLSLST              FL SCALAR LIST
       JRS     PROSCA              PROCESS SCALARS
       FIL     NMARKR              END MARKER
       ADR     CODLST              CODE LIST
       CAR     WORKLT              WORK LIST
       FIL     PROGBK              PROGRAM BREAK
       FIL     COMBRK              COMMON BREAK
       JRS     PCHCOD              PUNCH CODE
*PROCESS LINKAGES
PROCLK SNE     GLSLST              GLOBAL SPROG LIST
       JAF     A97A
       PRQ     SBREQT              SUBPROGRAMS REQUIRED QT
A97    LCO     GLSLST              GLOBAL SPROG LIST
       JAF     A97A
       PRC     SPACE               SPACE
       PRC     SPACE               SPACE
       PRQ     SYMCEN              SYMBOLIC CENTRAL
       JRS     TSEOLP              TEST FOR EOL PRINT
       FIL     CTL1                CENTRAL 1
       FIL     CTL2                CENTRAL 2
       BRU     A97                 A1



*PASS VARIABLE NAMES TO RUN-TIME
A97A   SKN     FDBUG
       BRU     A97B
       CNT     LBLLST
       BAF     BLKLOP
       ADR     CODLST
       CAR     LBLLST
       BRU     TRMCPL
A97B   FIL     NMARKR


*TERMINATE COMPILE
$TRMCPL JRS    PCHCOD              PUNCH CODE
       SKN     CKSMCT              CHECK SUM CNT
       JRS     PCHFIN              PUNCH FINISH
       LDA     PRGEND              PROGRAM END WORD
       SKN     OUTFLE
       WIO     OUTFLE
*      LDA     =1
*      STA     COUTF               CMMD OUTPUT FILE
*      PRC     CARET
*      PRC     CARET
       CLA
       STA     LINETP              LINES THIS PAGE
       LDA     INSTCT          INPUT START COUNTER
       SKG     INCHCT          INPUT CHAR COUNTER
       BRU     A98             TERMINATE COMPILE
       SKN     LASTST          -1=LAST STATEMENT OF FILE
       BRU     A98A
       BRU     A98
       SKN     FEOF
       BRU     A98A
       BRU     A98             EOF READ
A98A   SKN     BP2             -1=LISTING DESIRED
       BRU     STRCMP              START COMPL
       LDA     LFTMP
       STA     COUTF
       PRQ     10CRQT              TEN CARRIAGE RETURNS
       BRU     STRCMP
A98    LDA     EOFWRD               END OF FILE WORD
       SKN     OUTFLE
       WIO     OUTFLE
       SKN     OUTFLE
       WIO     OUTFLE
       LDA     COUTF
       SKE     =1
       BRU     *+2
       BRU     A98B
       LDA     EOFWRD
       WIO     COUTF
A98B   BRS     17
       LDA     ONES
       STA     BP1
       STA     INFLE
       STA     OUTFLE
       LDA     =1
       STA     LSTFIL
       STA     COUTF
       PRC     CARET
       CLA
       STA     FDBUG
       STA     BP2
       STA     FMAP
       TCO     BELL
       BRU     CS                  COMMAND START
*
*PROCESS EQUIV GROUP
PROCQG EQU     *
A99    LCO     QHDLS               EQUIV HOLD LIST
       JAF     A100                A2
       TOT     QHDLS               EQUIV HOLD LIST
       JRS     CMEMRQ              CALC MEMORY REQUIRED
       LDA     W4,2                W4
       ADD     W5,2                W5
       SUB     W2,2                W2
       STA     W2,2                W2
       ADM     W0,2                W0
       LDA*    W3,2                W3
       SKG     W0,2                W0
       LDA     W0,2                W0
       STA*    W3,2                W3
       SWT     W1,2                W1
       MON     QOPTLS              EQUIV OPUT LIST
       MON     QOPTLS              EQUIV OPUT LIST
       MON     QOPTLS              EQUIV OPUT LIST
       BRU     A99                 A1
A100   RLS     QHDLS               EQUIV HOLD LIST
       BRU     CLR3AE              CLEAR THREE AND EXIT
*PROCESS EQUIV OUTPUT
PROQOP EQU     *
A101   TOT     QOPTLS              EQUIV OPUT LIST
       JAF     CLR2AE              CLEAR TWO AND EXIT
       LCO     QOPTLS              EQUIV OPUT LIST
       LDA     W2,2                W2
       SKG     CTL1                CENTRAL 1
       BRU     A102                A2
       LDA     W1,2                W1
       SKG     CTL2                CENTRAL 2
       BRU     A103                A3
A102   PRC     SPACE               SPACE
       PRC     SPACE               SPACE
       PRQ     ERRORQ              ERROR QT
       JRS     LODCTL              LOAD CENTRAL
       JRS     PRTSYM              PRINT SYMBOL
       BRU     A101                A1
A103   FET     CTL2                CENTRAL 2
       JRS     SETPUB              SET AND PUBLISH
       BRU     A101                A1
*SET AND"PUBLISH
SETPUB FET     W1,2                W1
       JRS     LODCTL              LOAD CENTRAL
       FET     W0,2                W0
       JRS     PUBLSH              PUBLISH
       JAF     CLR2AE              CLEAR TWO AND EXIT
       JRS     CFROFS              CORRECT FOR OFFSET
A104   JRS     PRPNTR              PROCESS PNTR
       LDA     ALLDOL              ALL DOLLARS
       LDB     W0,2                W0
       STD*    ADRPTO              ADDRESS POINTED TO
       BRU     CLR1AE              CLEAR ONE AND EXIT
*PUBLISH AND ALLOCATE
PUBALC FET     PROGBK              PROGRAM BREAK
       JRS     PUBLSH              PUBLISH
       JAF     XTF                 EXIT FALSE
       JRS     CMEMRQ              CALC MEMORY REQUIRED
       LDA     W0,2                W0
       XMA     PROGBK              PROGRAM BREAK
       ADM     PROGBK              PROGRAM BREAK
       STA     W0,2                W0
       JRS     CFROFS              CORRECT FOR OFFSET
       LDA     W1,2                W1
       STA     CTL2                CENTRAL 2
       BRU     CLR2ET              CLEAR TWO EXIT TRUE
*PROCESS SCALARS
PROSCA EQU     *
A105   LCF*    W0,2                W0
       JAF     CLR1AE              CLEAR ONE AND EXIT
       JRS     PUBALC              PUBLISH AND ALLOCATE
       JAT     A106                A2
       LDX     W0,2                W0
       LDA     TOP,2               TOP
       SUB     BASE,2              BASE
       RSH     0,2                 0
       SOB     CODLST              CODE LIST
       FIL     CTL2                CENTRAL 2
A106   LCO*    W0,2                W0
*PASS SCALER INFO ON TO RUNTIME
       SKN     VARBAS
       BRU     *+2
       BRU     A105            DUMMY SYMBOL, SKIP
       LDA     CTL1
       SOB     LBLLST
       LDA     CTL2
       SOB     LBLLST
       LDA     VARBAS          VARIABLE BASE ADDRESS
       SOB     LBLLST
       BRU     A105                A1
*CORRECT FOR OFFSET
CFROFS SWT     W1,2                W1
       SOT     AYIDFG              ARRAY ID FLAG
       JAF     EXIT                EXIT
       FET     W0,2                W0
       SOF     FLFLAG              FL FLAG
       BNG     TWO                 TWO
       JAF     A107                A1
       ADM     W0,2                W0
A107   LDA     W2,2                W2
       ETR     SIGNBT              SIGN BIT
       XMA     W2,2                W2
       SUB     W0,2                W0
       ETR     ADRMSK              ADR MASK
       ADM     W2,2                W2
       BRU     CLR1AE              CLEAR ONE AND EXIT
*CALC MEMORY REQUIRED
CMEMRQ JRS     IDCLAS              ID CLASSIFY
       JAF     A108                A1
       SOT     AYIDFG              ARRAY ID FLAG
       JAT     A110                A3
       SOF     SCAIDF              SCALAR ID FLAG
       JAT     A109                A2
       MCO     ERSYLS              ERROR SYMBOL LIST
       FET     ZERO                ZERO
       BRU     EXIT                EXIT
A108   JRS     RGSCID              REGISTER SCALAR ID
A109   SOF     FLFLAG              FL FLAG
       FET     ONE                 ONE
       BRU     A111                A4
A110   FET     W0,2                W0
       SOF     FLFLAG              FL FLAG
       BNG     THREE               THREE
A111   JAF     EXIT                EXIT
       ADM     W0,2                W0
       BRU     EXIT                EXIT
*PUBLISH
PUBLSH LDA     CTL1                CENTRAL 1
       SKE     ALLDOL              ALL DOLLARS
       BRU     A112                A1
       BRU     CLR1EF              CLEAR ONE EXIT FALSE
A112   PRC     SPACE               SPACE
       PRC     SPACE               SPACE
       SER     GDLIST              GLOBAL DMY LIST
       JAT     A114                A4
       SER     ERSYLS              ERROR SYMBOL LIST
       JAF     A116                A2
A113   SETT    FTTYON,A
       PRQ     ERRORQ              ERROR QT
       BRU     A115                A5
A114   PRQ     DYQT                DUMMY QT
A115   JRS     PRTSYM              PRINT SYMBOL
       LDA     =-1
       STA     VARBAS
       SETF    FTTYON,A
       LDA     =2
       SKN     FMAP
       STA     COUTF
       CLA
       STA     CTL2                CENTRAL 2
       BRU     CLR2EF              CLEAR TWO EXIT FALSE
A116   FET     W0,2                W0
       STA     VARBAS          VARIABLE BASE
       LSH     9                   11
       STA     W0,2                W0
       FET     FIVE                FIVE
       JRS     POCTAL              PRINT OCTAL
       JRS     PRTSYM              PRINT SYMBOL
       BRU     CLR1ET              CLEAR ONE EXIT TRUE
*PRINT SYMBOL
PRTSYM PRC     SPACE               SPACE
       PRQ     SYMCEN              SYMBOLIC CENTRAL
PRTSY7 JRS     TSEOLP              TEST FOR EOL PRINT
       BRU     EXIT                EXIT
*TEST FOR EOL PRINT
TSEOLP LDA     SIXTY
       SKG     CHTSLN              CHARS THIS LINE
       PRC     CARET               CAR RETURN
       BRU     EXIT                EXIT
*FX EXP XLATE
$FXPXL  FET     ZERO                ZERO
       MON     MODLST              MODE LIST
       JRS     XPMDX               EXP BY MODE XLATE
*MODE RELEASE
$MODREL SKR    MODBOT              MODE BOTTOM
       BRU     EXIT                EXIT
*EXP REMEMBER MODE XLATE
$EXPXLT JRS     XPSCAN              EXP SCAN
*SET MODE THEN GEN
$SETMTG JRS     MODSET              MODE SET
       BRU     SCAEGE              SCRIPT AND EXP GEN
*EXP BY MODE XLATE
$XPMDX  JRS     XPSCAN              EXP SCAN
*SCRIPT AND EXP GEN
$SCAEGE JRS     SCRGEN              SCRIPT GEN
       BRU     XPBYMG              EXP BY MODE GEN
       NOLIST EXT,GO
       END
4C     IDENT   *               FORTRAN COMPILER, CODE 4




BAM    OPD     10000000B,2
CSF    OPD     10100000B,2
CSA    OPD     10200000B,2
JAT    OPD     10300000B,2
JAF    OPD     10400000B,2
TRY    OPD     10500000B,2
QSF    OPD     10600000B,2
STD    OPD     10700000B,2
FET    OPD     11000000B,2
SWT    OPD     11100000B,2
JRS    OPD     11200000B,2
BIF    OPD     11300000B,2
MCO    OPD     11400000B,2
SOL    OPD     11500000B,2
SOF    OPD     11600000B,2
RSV    OPD     11700000B,2
CNT    OPD     12000000B,2
RLS    OPD     12100000B,2
TOT    OPD     12200000B,2
FIL    OPD     12300000B,2
MON    OPD     12400000B,2
LDP    OPD     12500000B,2
BLF    OPD     12600000B,2
SAL    OPD     12700000B,2
PUL    OPD     13000000B,2
BNG    OPD     13100000B,2
BAF    OPD     13200000B,2
CAR    OPD     13300000B,2
PLO    OPD     13400000B,2
CAC    OPD     13500000B,2
CIC    OPD     13600000B,2
FIC    OPD     13700000B,2
FAC    OPD     14000000B,2
BOP    OPD     14100000B,2
MOF    OPD     14200000B,2
SNE    OPD     14300000B,2
SER    OPD     14400000B,2
LCF    OPD     14500000B,2
FIP    OPD     14600000B,2
ADR    OPD     14700000B,2
EOS    OPD     15000000B,2
SOB    OPD     15100000B,2
SOT    OPD     15200000B,2
SDP    OPD     15300000B,2
ADP    OPD     15400000B,2
REC    OPD     15500000B,2
COF    OPD     15600000B,2
LCO    OPD     15700000B,2
PRC    OPD     16000000B,2
PRQ    OPD     16100000B,2
SOC    OPD     16200000B,2
BIM    OPD     16300000B,2
FEX    OPD     16400000B,2
*
*
BEQ    MACRO   D  BRU IF EQUAL; SKE D(1); BRU *+2; BRU D(2); ENDM
BNE    MACRO   D  BRU IF NOT EQUAL; SKE D(1); BRU D(2); ENDM
MOVE   MACRO   D
       IF      'D(1$2)'='0'          ZERO
       CL.D(3)
       ELSF    1
       LD.D(3) D(1)
       ENDF
       ST.D(3) D(2)
       ENDM
*
STZ    MACRO   A   STORE ZERO; CLA ; STA A(1) ; ENDM
*
*SPROG ARG SEQ SCAN
$SPASQS RSV     SPARGL              SPROG ARGUMENT LIST
A117   TRY     UNSCAS              UNSCRIPTED ARRAY SCAN
       JAT     A118                A2
       JRS     XPSCAN              EXP SCAN
A118   MON     SPARGL              SPROG ARGUMENT LIST
       CSA     COMMA               COMMA
       JAT     A117                A1
       BRU     EXIT                EXIT
*EXP SCAN
$XPSCAN RSV     SUMLST              SUM LIST
       RSV     PRODLS              PROD LIST
       JRS     MINUFS              MINUS FACTOR SCAN
       JAT     A119                A1
       CSA     PLUS                PLUS
       JRS     FACTSC              FACTOR SCAN
A119   JRS     PLUSFS              PLUS FACTOR SCAN
       JAT     A120                A2
       JRS     MINUFS              MINUS FACTOR SCAN
       JAF     A122                A4
A120   SWT     W1,2                W1
       MON     SUMLST              SUM LIST
A121   MON     SUMLST              SUM LIST
       JRS     PLUSFS              PLUS FACTOR SCAN
       JAT     A121                A3
       JRS     MINUFS              MINUS FACTOR SCAN
       JAT     A121                A3
       PLO     SUMTPX              SUM TERM PLEX
       CIC     SUMLST              SUM LIST
A122   RLS     SUMLST              SUM LIST
       RLS     PRODLS              PROD LIST
       BRU     EXIT                EXIT
*PLUS FACTOR SCAN
$PLUSFS CSA     PLUS                PLUS
       JAF     XTF                 EXIT FALSE
       JRS     FACTSC              FACTOR SCAN
       BRU     EXITRU              EXIT TRUE
*MINUS FACTOR SCAN
$MINUFS CSA     MINUS               MINUS
       JAF     XTF                 EXIT FALSE
       JRS     FACTSC              FACTOR SCAN
       SOF     ADDRFG              ADDRESSABLE FLAG
       JAT     A123                A1
       FIC     MINNAP              MINUS NONADDRESSABLE PLEX
       BRU     EXITRU              EXIT TRUE
A123   FIC     MINUAP              MINUS ADDRESSABLE PLEX
       BRU     EXITRU              EXIT TRUE
*FACTOR SCAN
$FACTSC JRS     ELETSC              ELEMENT SCAN
A124   CSA     ASTRSK              ASTERISK
       JAF     A128                A5
       CSA     ASTRSK              ASTERISK
       JAF     A125                A2
       JRS     ELETSC              ELEMENT SCAN
       FIP     EXPTPX              EXPON TERM PLEX
       BRU     A124                A1
A125   MON     PRODLS              PROD LIST
       JRS     ELETSC              ELEMENT SCAN
A126   CSA     ASTRSK              ASTERISK
       JAF     A127                A4
       CSA     ASTRSK              ASTERISK
       JAF     A125                A2
       JRS     ELETSC              ELEMENT SCAN
       FIP     EXPTPX              EXPON TERM PLEX
       BRU     A126                A3
A127   MON     PRODLS              PROD LIST
       PLO     PRODTP              PROD TERM PLEX
       CIC     PRODLS              PROD LIST
A128   CSA     VRGULE              VIRGULE
       JAF     EXIT                EXIT
       JRS     ELETSC              ELEMENT SCAN
A129   CSA     ASTRSK              ASTERISK
       JAF     A131                A8
       CSA     ASTRSK              ASTERISK
       JAF     A130                A7
       JRS     ELETSC              ELEMENT SCAN
       FIP     EXPTPX              EXPON TERM PLEX
       BRU     A129                A6
A130   FIP     DIVTPX              DIV TERM PLEX
       BRU     A125                A2
A131   FIP     DIVTPX              DIV TERM PLEX
       BRU     A124                A1
*VAR SCAN
$VARSCN JRS     IDSCAN              ID SCAN
       JAF     RGSCID              REGISTER SCALAR ID
       SOF     SCAIDF              SCALAR ID FLAG
       JAT     EXIT                EXIT
       SOT     AYIDFG              ARRAY ID FLAG
       JAT     AYSCAN              ARRAY SCAN
       BRU     INCNFA              ID CONFLICT FAIL
*ELEMENT SCAN
$ELETSC SOC     LETRFG              LETTER FLAG
       JAT     A132                A1
       CSA     LPAREN              L PAREN
       JAF     CSTSCN              CONST SCAN
       JRS     XPSCAN              EXP SCAN
       CSF     RPAREN              R PAREN
       BRU     EXIT                EXIT
A132   JRS     IDSCAN              ID SCAN
       JAT     A133                A3
       CSA     LPAREN              L PAREN
       JAF     RGSCID              REGISTER SCALAR ID
       BOP     GLSLST              GLOBAL SPROG LIST
       JRS     STDMEV              STANDARD MODE EVAL
       MCO     GLSLST              GLOBAL SPROG LIST
       SER     GDLIST              GLOBAL DMY LIST
       JAT     INCNFA              ID CONFLICT FAIL
       BRU     FCTSC               FUNCTION SCAN
A133   SOF     SCAIDF              SCALAR ID FLAG
       JAT     EXIT                EXIT
       SOT     AYIDFG              ARRAY ID FLAG
       JAT     AYSCAN              ARRAY SCAN
       CSF     LPAREN              L PAREN
*FUNCTION SCAN
$FCTSC  JRS     SPASQS              SPROG ARG SEQ SCAN
       CSF     RPAREN              R PAREN
       PLO     SPAGPX              SPROG ARG GROUP PLEX
       CAC     SPARGL              SPROG ARGUMENT LIST
       RLS     SPARGL              SPROG ARGUMENT LIST
       FIC     FCTTPX              FUNCTION TERM PLEX
       BRU     EXIT                EXIT
*ARRAY SCAN
$AYSCAN CSA     LPAREN              L PAREN
       JAT     A134                A6
       BRU     NUOFSF              NUMBER OF SUBSCRIPTS FAIL
A134   RSV     DIMLST              DIMENS LIST
       FET     W0,2                W0
       BNG     FOUR                FOUR
       PUL     DIMLST              DIMENS LIST
A135   RSV     SCREXL              SCRIPT EXP LIST
A136   JRS     XPSCAN              EXP SCAN
       MON     SCREXL              SCRIPT EXP LIST
       CSA     COMMA               COMMA
       JAT     A136                A2
       CSF     RPAREN              R PAREN
       MOF     SCREXL              SCRIPT EXP LIST
       JRS     GRTEFX              GRNTEE FIXED
A137   SNE     SCREXL              SCRIPT EXP LIST
       JAF     A138                A4
       MOF     DIMLST              DIMENS LIST
       JAF     NUOFSF              NUMBER OF SUBSCRIPTS FAIL
       FIC     MPYPLX              MPY PLEX
       MOF     SCREXL              SCRIPT EXP LIST
       JRS     GRTEFX              GRNTEE FIXED
       FIC     ADDPLX              ADD PLEX
       BRU     A137                A3
A138   SNE     DIMLST              DIMENS LIST
       JAT     NUOFSF              NUMBER OF SUBSCRIPTS FAIL
       RLS     SCREXL              SCRIPT EXP LIST
       RLS     DIMLST              DIMENS LIST
       SOT     MINUSF              MINUS FLAG
       JAT     A138A
       SOF     ADDRFG              ADDRESSABLE FLAG
       JAT     A139                A5
A138A  MON     SCRLST              SCRIPT LIST
       JRS     FXTMKR              FX TEMP MAKER
       FET     W0,2                W0
       MON     SCRLST              SCRIPT LIST
A139   FIC     SCRAPX              SINGLY SCRIPTED ARRAY PLEX
       BRU     EXIT                EXIT
*SCALAR ID SCAN
$SCLIDS JRS     IDSCAN              ID SCAN
       JAF     RGSCID              REGISTER SCALAR ID
       SOF     SCAIDF              SCALAR ID FLAG
       JAT     EXIT                EXIT
       BRU     INCNFA              ID CONFLICT FAIL
*UNSCRIPTED ARRAY SCAN
$UNSCAS SOC     LETRFG              LETTER FLAG
       JAF     FAIL                FAIL
       JRS     IDSCAN              ID SCAN
       JAF     FAIL                FAIL
       SOT     AYIDFG              ARRAY ID FLAG
       JAF     FAIL                FAIL
       CSA     LPAREN              L PAREN
       JAT     FAIL                FAIL
       FET     W0,2                W0
       MIN     W0,2                W0
       JRS     LODCTL              LOAD CENTRAL
       JRS     RGFXCS              REGISTER FX CONST
       FIC     SCRAPX              SINGLY SCRIPTED ARRAY PLEX
       BRU     EXIT                EXIT
*GRNTEE FIXED
$GRTEFX SOF     FLFLAG              FL FLAG
       JAF     EXIT                EXIT
       FAC     FIXTPX              FIX TERM PLEX
       BRU     EXIT                EXIT
*ID SCAN
$IDSCAN JRS     SYMBSC              SYMBOL SCAN
*ID CLASSIFY
$IDCLAS SER     LOCDML              LOCAL DMY LIST
       JAT     A140                A2
       SER     FXSLST              FX SCALAR LIST
       JAT     EXITRU              EXIT TRUE
       SER     FLSLST              FL SCALAR LIST
       JAT     EXITRU              EXIT TRUE
       SER     AYYLST              ARRAY LIST
       JAT     A140                A2
       SER     GLSLST              GLOBAL SPROG LIST
       JAT     A140                A2
       SER     LOCSPL              LOCAL SPROG LIST
       JAF     XTF                 EXIT FALSE
A140   JRS     STDMEV              STANDARD MODE EVAL
       BRU     EXITRU              EXIT TRUE
*STANDARD MODE EVAL
$STDMEV LDA     CTL1                CENTRAL 1
       LRSH    16
       ETR     CH4MSK              CHAR 4 MASK
       CAX
       LDA     CHTTBL,2            CHAR TRANSL TABLE
       SKA     IJKLMN              IJKLMN FLAG
       BRU     A141                A1
       LDA*    WRKBOT              WORK BOTTOM
       MRG     MODEMS              MODE MASK
       STA*    WRKBOT              WORK BOTTOM
A141   LDA*    WRKBOT              WORK BOTTOM
       BRU     EXIT                EXIT
*SYMBOL SCAN
$SYMBSC SOC     LETRFG              LETTER FLAG
       JAF     ILSYFA              ILLEGAL SYNTAX FAIL
       JRS     PAKSYM              PACK SYMBOL
       STA     CTL1                CENTRAL 1
       JRS     PAKSYM              PACK SYMBOL
       STA     CTL2                CENTRAL 2
A142   JAT     EXIT                EXIT
       JRS     PAKSYM              PACK SYMBOL
       BRU     A142                A1
*PACK STRING
$PAKSTR LDA     UBLKFG              USE BLANKS FLAG
       STA     SCANMD              SCAN MODE
       LDA     NOTCRF              NOT CAR RETURN FLAG
       JRS     PAK3CW              PACK 3 CHARS/WORD
       LDB     SKBLFG              SKIP BLANKS FLAG
       STB     SCANMD              SCAN MODE
       BRU     EXIT                EXIT
*PACK SYMBOL
$PAKSYM LDA     LTRDGF              LETTER OR DIGIT FLAG
*PACK 3 CHAR/WORD
$PAK3CW STA     PAKTP3          TERMINAL CHARACTER INDICATOR
       CLA
       STA     PAKTP1          CHARACTER COUNTER
       STA     PAKTP2          WORD ASSEMBLY REGISTER
A143   SOC     PAKTP3
       JAF     A144
       LDX     PAKTP1
       EXU     CHR3ST,2
       ETR     CHMT3B,2
       ADM     PAKTP2
       CLA
       STA     CRNTCH
       MIN     PAKTP1
       LDA     PAKTP1
       SKE     =3
       BRU     A143
       LDA     PAKTP2
       BRU     XTF
A144   LDX     PAKTP1              PACK TEMP 1
       CLA                         PACK BLANKS
       MRG     PAKTP2              PACK TEMP 2
       BRU     EXITRU              EXIT TRUE
*LBL COMMA SCAN
$LBCOMA JRS     LBSCAN              LBL SCAN
       CSF     COMMA               COMMA
       BRU     EXIT                EXIT
*LBL SCAN
$LBSCAN JRS     INSCAN              INTEGER SCAN
       SOL     MAXLBL              MAX LBL ALLOWED
       JAT     ILNUFA              ILLEGAL NUMBER FAIL
       LDA     CTL2                CENTRAL 2
       SKG     ZERO                ZERO
       BRU     ILNUFA              ILLEGAL NUMBER FAIL
       BRU     REGLBL              REGISTER@LBL
*CONST SCAN
$CSTSCN JRS     DGCVIN              DIGIT CONV INITIAL
       CLAB
       STD     CHARA               CHARACTERISTIC A
       SOC     DIGTFL              DIGIT FLAG
       JAF     A145                A1
       JRS     DGCVSC              DIGIT CONV SCAN
       LDP     DGSCTA              DIGITS SCANED CNT A
       STD     CHARA               CHARACTERISTIC A
       CSA     PERIOD              PERIOD
       JAT     A146                A3
       CSA     E                   E
       JAT     A147                A4
*HOLLERITH LITERAL XLATE
       CSA     H
       JAF     A145A
HOLIT  LDA     CTL2
       STA     HOLIT1              CT
       SUB     ONE
       SKG     FIVE
       BRU     *+2
       BRU     A145A               NOT A HOL LIT
       STA     HOLIT9              CT TO TEST LATER FL OR FX
       LDA     CTL1
       SKE     ZERO
       BRU     A145A
       STA     CRNTCH              CURRENT CHAR
       LDB     UBLKFG              USED BLANKS FLAG
       STB     SCANMD              SCAN MODE
       LDA     ONE
       STA     HOLIT3
HOLIT8 STB     CTL2
       LDA     TWO
       STA     HOLIT2              CT4
HOLIT7 LDA     SPACE
       SKR     HOLIT1
       BRU     HOLIT4
HOLIT5 LRSH    2
       LDB     HOLIT6
       LCY     8
       STB     HOLIT6
       SKR     HOLIT2
       BRU     HOLIT7
       SKR     HOLIT3
       BRU     HOLIT8
       STB                                     CTL1
       LDA     SKBLFG              SKIP BLANKS FLAG
       STA     SCANMD              SCAN MODE
       LDA     HOLIT9
       SKG     TWO
       BRU     RGFXCS              REGISTER FIXED CONSTANT
       BRU     RGFLCS              REGISTER FL CONSTANT
HOLIT4 SOC     TCRBFG              TAB-CAR RETURN-BACKSPACE FLAG
       CLB
       JAF     HOLITA
       STB     HOLIT1
       BRU     HOLIT7
HOLITA STB     CRNTCH              CURRENT CHAR
       BRU     HOLIT5
A145A  LDP     CTL1                CENTRAL 1
       SOL     MAXINT              MAX INTEGER ALLOWED
       JAT     ILNUFA              ILLEGAL NUMBER FAIL
       BRU     RGFXCS              REGISTER FX CONST
A145   CSF     PERIOD              PERIOD
       SOC     DIGTFL              DIGIT FLAG
       JAF     ILSYFA              ILLEGAL SYNTAX FAIL
A146   JRS     DGCVSC              DIGIT CONV SCAN
       CSA     E                   E
A147   LDP     CHARA               CHARACTERISTIC A
       SDP     DGUCTA              DIGITS USED CNT A
       STD     CHARA               CHARACTERISTIC A
       LDP     CTL1                CENTRAL 1
       JAF     FLCSTM              FL CONST MAKER
       STD     CNSTPA              CONST TEMP A
       JRS     SIGNIS              SIGNED INTEGER SCAN
       LDP     CHARA               CHARACTERISTIC A
       ADP     CTL1                CENTRAL 1
       STD     CHARA               CHARACTERISTIC A
       LDP     CNSTPA              CONST TEMP A
       STD     CTL1                CENTRAL 1
*FL CONST MAKER
$FLCSTM EAX     47                  57
       NOD     48                  60
       STD     CTL1                CENTRAL 1
A148   SKN     CHARB               CHARACTERISTIC B
       BRU     A150                A1
       MIN     CHARB               CHARACTERISTIC B
       LDP     TENTH3              ONE TENTH B-3
       SBRM    DBFXMU              DOUBLE FX MULT
       NOD     47                  57
       STD     CTL1                CENTRAL 1
       EAX     -3,2                -3
       BRU     A148                A2
A149   LDP     TENB4               TEN B4
       SBRM    DBFXMU              DOUBLE FX MULT
       NOD     47                  57
       STD     CTL1                CENTRAL 1
       EAX     4,2                 4
A150   SKR     CHARB               CHARACTERISTIC B
       BRU     A149                A3
       SKG     ZERO                ZERO
       BRU     RGFLCS              REGISTER FL CONST
       LDE
       STB     CTL2                CENTRAL 2
       CXA
       ETR     ADRMSK              ADR MASK
       SKG     CLNEGL              CHARIS LOWER NEG LIMIT
       SKG     CUPOSL              CHARIS UPPER POS LIMIT
       BRU     RGFLCS              REGISTER FL CONST
       BRU     ILNUFA              ILLEGAL NUMBER FAIL
*SIGNED INTEGER SCAN
$SIGNIS CSA     MINUS               MINUS
       JAF     A151                A1
       JRS     INSCAN              INTEGER SCAN
       CLAB
       SDP     CTL1                CENTRAL 1
       STD     CTL1                CENTRAL 1
       BRU     EXIT                EXIT
A151   CSA     PLUS                PLUS
       BRU     INSCAN              INTEGER SCAN
*INTEGER SCAN
$INSCAN SOC     DIGTFL              DIGIT FLAG
       JAF     ILSYFA              ILLEGAL SYNTAX FAIL
       JRS     DGCVIN              DIGIT CONV INITIAL
       JRS     DGCVSC              DIGIT CONV SCAN
       LDP     CTL1                CENTRAL 1
       SOL     MAXINT              MAX INTEGER ALLOWED
       JAT     ILNUFA              ILLEGAL NUMBER FAIL
       BRU     EXIT                EXIT
*DIGIT CONV INITIAL
$DGCVIN CLAB
       STD     DGSCTA              DIGITS SCANED CNT A
       STD     DGUCTA              DIGITS USED CNT A
       STD     SCDIGA              SCANED DIGIT A
       STD     CTL1                CENTRAL 1
       BRU     EXIT                EXIT
*DIGIT CONV SCAN
DGCVSC EQU     *
A152   SOC     DIGTFL              DIGIT FLAG
       JAF     EXIT                EXIT
       JRS     CNV1DG              CONV ONE DIGIT
       BRU     A152                A1
*CONV ONE DIGIT
$CNV1DG LDA     CRNTCH              CRRNT CHAR
       MUL     RSH18               RIGHT SHIFTER 18
       ETR     CH4MSK              CHAR 4 MASK
       SUB     ASCNB               ASCII NUMBER BASE
       STA     SCDIGB              SCANED DIGIT B
       MIN     DGSCTB              DIGITS SCANED CNT B
       CLA
       STA     CRNTCH              CRRNT CHAR
       LDP     CTL1                CENTRAL 1
       SKA     TOP5BM              TOP 5 BITS MASK
       BRU     EXIT                EXIT
       LSH     4                   4
       STD     CTL1                CENTRAL 1
       LDP     TENB4E              TEN B4 EXACT
       SBRM    DBFXMU              DOUBLE FX MULT
       ADP     SCDIGA              SCANED DIGIT A
       STD     CTL1                CENTRAL 1
       MIN     DGUCTB              DIGITS USED CNT B
       BRU     EXIT                EXIT
*DOUBLE FX MULT
$DBFXMU HLT     LDBFXM
       STD     DPMPYA              DP MPY A
       LDA     CTL2                CENTRAL 2
       CLB
       RCY     1                   1
       MUL     DPMPYA              DP MPY A
       RSH     23                  27
       STD     DPMPYC              DP MPY C
       LDA     DPMPYB              DP MPY B
       CLB
       RCY     1                   1
       MUL     CTL1                CENTRAL 1
       RSH     23                  27
       ADP     DPMPYC              DP MPY C
       STD     DPMPYC              DP MPY C
       LDA     CTL1                CENTRAL 1
       MUL     DPMPYA              DP MPY A
       ADP     DPMPYC              DP MPY C
       SBRR    DBFXMU              DOUBLE FX MULT
*EXP REMEMBER MODE GEN
$XPREMG JRS     MODSET              MODE SET
*EXP BY MODE GEN
$XPBYMG JRS     ISTMSA              IS TERM SIGNED ADDRESSABLE
       JAT     FASSG               FETCH AND SET SIGN GEN
*SIGNED CMPLX BY MODE GEN
$SIGCMG JRS     ISMDOK              IS MODE OK
       JRS     MODSET              MODE SET
       JRS     SUMTG               SUM TERM GEN
       JRS     SXPSGG              SET EXP SIGN GEN
       JRS     MODREL              MODE RELEASE
       JAT     EXIT                EXIT
*SET EXP MODE GEN
$SEXMG  JRS     ISMDFL              IS MODE FL
       JAT     A153                A1
       BLF     FIXSPL              FIX SPROG LINK
       BRU     EXIT                EXIT
A153   BLF     FLOTSL              FLOAT SPROG LINK
       BRU     EXIT                EXIT
*FETCH AND SET SIGN GEN
FASSG  BIM     FTCHPO              FETCH POP
*SET EXP SIGN GEN
$SXPSGG LDA     W0,2                W0
       SKE     NEGTRT              NEGATIVE TRAIT
       BRU     CLR1AE              CLEAR ONE AND EXIT
       LDA*    MODBOT              MODE BOTTOM
       ADD*    MODBOT              MODE BOTTOM
       ADD     CGSGIN              CHANGE SIGN INST
       SOB     CODLST              CODE LIST
       BRU     CLR1AE              CLEAR ONE AND EXIT
*TERM BY MODE GEN
$TMBYMG JRS     ISTMSA              IS TERM SIGNED ADDRESSABLE
       JAF     CTBYMG              CMPLX TERM BY MODE GEN
       BIM     FTCHPO              FETCH POP
       BRU     EXIT                EXIT
*CMPLX TERM BY MODE GEN
$CTBYMG JRS     ISMDOK              IS MODE OK
       JAT     SUMTG               SUM TERM GEN
       SOF     FLFLAG              FL FLAG
       JAF     SUMTG               SUM TERM GEN
       JRS     MODSET              MODE SET
       JRS     SUMTG               SUM TERM GEN
       BLF     FIXSPL              FIX SPROG LINK
       BRU     MODREL              MODE RELEASE
*SUM TERM GEN
$SUMTG  SOT     SUMFLG              SUM FLAG
       JAF     PRODTG              PROD TERM GEN
       JRS     SUMPSU              SUM-PROD SET UP
A154   MOF     TERMLS              TERM LIST
       JAF     SUMPEX              SUM-PROD EXIT
       JRS     GRSAG               GRNTEE SIGNED ADDRESSABLE GEN
       LDA     W1,2                W1
       SKE     W2,2                W2
       BRU     A155                A1
       BIM     ADDPOP              ADD POP
       BRU     A156                A3
A155   BIM     SUBPOP              SUB POP
A156   SKR     WRKBOT              WORK BOTTOM
       BRU     A154                A2
*PROD TERM GEN
$PRODTG SOT     PRODFG              PROD FLAG
       JAF     FCTTG               FUNCTION TERM GEN
       JRS     SUMPSU              SUM-PROD SET UP
A157   MOF     TERMLS              TERM LIST
       JAF     SUMPEX              SUM-PROD EXIT
       JRS     GRSAG               GRNTEE SIGNED ADDRESSABLE GEN
       BIM     MPYPOP              MPY POP
       EOS     W1,2                W1
       BRU     A157                A5
*SUM-PROD SET UP
$SUMPSU RSV     TERMLS              TERM LIST
       PUL     TERMLS              TERM LIST
       RSV     WORKLT              WORK LIST
A158   MOF     TERMLS              TERM LIST
       JAF     A159                A2
       SOF     ADDRFG              ADDRESSABLE FLAG
       JAT     A158                A1
A159   ADR     TERMLS              TERM LIST
       CAR     WORKLT              WORK LIST
       MOF     TERMLS              TERM LIST
       BRU     TMBYMG              TERM BY MODE GEN
*SUM-PROD EXIT
$SUMPEX EOS     W1,2                W1
       RLS     TERMLS              TERM LIST
       BRU     EXIT                EXIT
*FUNCTION TERM GEN
$FCTTG  SOT     FCTFLG              FUNCTION FLAG
       JAF     DVTMGN              DIV TERM GEN
       PUL     WORKLT              WORK LIST
       RSV     SPARGL              SPROG ARGUMENT LIST
       PUL     SPARGL              SPROG ARGUMENT LIST
       JRS     SPASQG              SPROG ARG SEQ GEN
       JRS     ISMDOK              IS MODE OK
       JRS     SPJPGN              SPROG JUMP GEN
       JAF     SEXMG               SET EXP MODE GEN
       BRU     EXIT                EXIT
*SPROG JUMP GEN
$SPJPGN SOT     LSPIDF              LOCAL SPROG ID FLAG
       JAF     A160                A1
       BNG     TWO                 TWO
       BIF     BRMMOP              BRM MOP
       BRU     EXIT                EXIT
A160   BIF     BRMOP               BRM* MOP
       BRU     EXIT                EXIT
*DIV TERM GEN
$DVTMGN SOT     DIVFG               DIV FLAG
       JAF     EXPNTG              EXPON TERM GEN
       PUL     WORKLT              WORK LIST
       JRS     ISTMSA              IS TERM SIGNED ADDRESSABLE
       JAT     A161                A1
       JRS     CTBYMG              CMPLX TERM BY MODE GEN
       JRS     SNTBMG              STORE IN TEMP BY MODE GEN
A161   SWT     W2,2                W2
       JRS     TMBYMG              TERM BY MODE GEN
       EOS     W1,2                W1
       SWT     W1,2                W1
       BIM     DIVPOP              DIV POP
       EOS     W1,2                W1
       BRU     EXIT                EXIT
*EXPON TERM GEN
$EXPNTG SOT     EXPFG               EXPON FLAG
       JAF     FIXTGN              FIX TERM GEN
       PUL     WORKLT              WORK LIST
       JRS     GRNMOD              GRNTEE ADDRESSABLE BY MODE GEN
       SWT     W1,2                W1
       JRS     GRNMOD              GRNTEE ADDRESSABLE BY MODE GEN
       BAM     FARGPO              FIRST ARG POP
       BAM     NEXTAP              NEXT ARG POP
       BLF     EXPSPL              EXPON SPROG LINK
       BRU     EXIT                EXIT
*FIX TERM GEN
$FIXTGN JRS     MODSET              MODE SET
       PUL     WORKLT              WORK LIST
       JRS     TMBYMG              TERM BY MODE GEN
       EOS     W1,2                W1
       BRU     MODREL              MODE RELEASE
*SPROG ARG SEQ GEN
$SPASQG RSV     WORKLT              WORK LIST
A162   TOT     SPARGL              SPROG ARGUMENT LIST
       JAF     A163                A2
       JRS     GAOMGN              GRNTEE ADDRESSABLE OWN MODE GEN
       BRU     A162                A1
A163   RLS     SPARGL              SPROG ARGUMENT LIST
       TOT     WORKLT              WORK LIST
       BAM     FARGPO              FIRST ARG POP
A164   TOT     WORKLT              WORK LIST
       JAF     A165                A4
       BAM     NEXTAP              NEXT ARG POP
       BRU     A164                A3
A165   RLS     WORKLT              WORK LIST
       BRU     EXIT                EXIT
*SCRIPT GEN
SCRGEN EXT     *
SCRGEN EQU     *
A166   TOT     SCRLST              SCRIPT LIST
       JAF     EXIT                EXIT
       JRS     XPREMG              EXP REMEMBER MODE GEN
       TOT     SCRLST              SCRIPT LIST
       JRS     STFMG               STORE FORGET MODE GEN
       BRU     A166                A1
*GRNTEE ADDRESSABLE OWN MODE GEN
$GAOMGN JRS     MODSET              MODE SET
       JRS     GRNMOD              GRNTEE ADDRESSABLE BY MODE GEN
       BRU     MODREL              MODE RELEASE
*GRNTEE ADDRESSABLE BY MODE GEN
$GRNMOD JRS     ISTMSA              IS TERM SIGNED ADDRESSABLE
       JAF     A167                A1
       LDA     POSTRT              POSITIVE TRAIT
       SKE     W1,2                W1
       BRU     A168                A2
       JRS     ISMDOK              IS MODE OK
       JAF     A168                A2
       SWT     W1,2                W1
       BRU     CLR1AE              CLEAR ONE AND EXIT
A167   JRS     SIGCMG              SIGNED CMPLX BY MODE GEN
       BRU     SNTBMG              STORE IN TEMP BY MODE GEN
A168   JRS     FASSG               FETCH AND SET SIGN GEN
       BRU     SNTBMG              STORE IN TEMP BY MODE GEN
*GRNTEE SIGNED ADDRESSABLE GEN
$GRSAG  JRS     ISTMSA              IS TERM SIGNED ADDRESSABLE
       JAT     EXIT                EXIT
       JRS     SNTBMG              STORE IN TEMP BY MODE GEN
       SWT     W1,2                W1
       JRS     TMBYMG              TERM BY MODE GEN
       SWT     W3,2                W3
       SWT     W2,2                W2
       EOS     W3,2                W3
       BRU     EXIT                EXIT
*STORE IN TEMP BY MODE GEN
$SNTBMG JRS     TPBMKR              TEMP BY MODE MAKER
       FET     W0,2                W0
       BIM     STRPOP              STORE POP
       BRU     EXIT                EXIT
*STORE FORGET MODE GEN
$STFMG  BIM     STRPOP              STORE POP
       BRU     MODREL              MODE RELEASE
*IS TERM SIGNED ADDRESSABLE
$ISTMSA FET     POSTRT              POSITIVE TRAIT
       SWT     W1,2                W1
A169   SOT     MINUSF              MINUS FLAG
       JAF     A170                A2
       PUL     WORKLT              WORK LIST
       FET     NEGTRT              NEGATIVE TRAIT
       EOS     W2,2                W2
       BRU     A169                A1
A170   SOF     ADDRFG              ADDRESSABLE FLAG
       JAF     XTF                 EXIT FALSE
       JRS     ISMDOK              IS MODE OK
       JAT     EXITRU              EXIT TRUE
       SOT     FXCSTF              FX CONST FLAG
       JAF     EXITRU              EXIT TRUE
       JRS     LODCTL              LOAD CENTRAL
       CLB
       EAX     23                  27
       NOD     23                  27
       LDE
       STD     CTL1                CENTRAL 1
       JRS     RGFLCS              REGISTER FL CONST
       BRU     EXITRU              EXIT TRUE
*IS MODE FL
$ISMDFL LDA     FLFLAG              FL FLAG
       BRU     OKFLTS              OK-FL TEST
*IS MODE OK
$ISMDOK LDA*   WRKBOT              WORK BOTTOM
       ETR     MODEMS              MODE MASK
*OK-FL TEST
$OKFLTS SKE*    MODBOT              MODE BOTTOM
       BRU     XTF                 EXIT FALSE
       BRU     EXITRU              EXIT TRUE
*MODE SET
$MODSET LDA*    WRKBOT              WORK BOTTOM
       ETR     MODEMS              MODE MASK
       SOB     MODLST              MODE LIST
       BRU     EXIT                EXIT
*DMY TEMP MAKER
$DYTPMK FET     DYPTCD              DMY PNTR CODE
       MIN     DMYCNT              DMY CNT
       LDA     DMYCNT              DMY CNT
       MIN     DMYCNT              DMY CNT
       ADD     W0,2                W0
       STA     W0,2                W0
       BRU     STDMEV              STANDARD MODE EVAL
*TEMP BY MODE MAKER
$TPBMKR JRS     FXTMKR              FX TEMP MAKER
       LDA*    WRKBOT              WORK BOTTOM
       MRG*    MODBOT              MODE BOTTOM
       STA*    WRKBOT              WORK BOTTOM
       BRU     EXIT                EXIT
*FX TEMP MAKER
$FXTMKR FET     FXTPCD              FX TEMP PNTR CODE
       MIN     TMPCNT              TEMP CNT
       LDA     TMPCNT              TEMP CNT
       MIN     TMPCNT              TEMP CNT
       ADM     W0,2                W0
       ADD     ONE                 ONE
       SKG     MXTPCT              MAX TEMP CNT
       BRU     EXIT                EXIT
       STA     MXTPCT              MAX TEMP CNT
       BRU     EXIT                EXIT
*LBL MAKER BRU GEN
$LMBRUG JRS     LBLMAK              LBL MAKER
       FET     W0,2                W0
       BIF     BRUMOP              BRU MOP
       LDA     W0,2                W0
       BRU     EXIT                EXIT
*LBL MAKER LBL GEN
$LMLBLG JRS     LBLMAK              LBL MAKER
       FET     W0,2                W0
       BIF     LBLLOP              LBL LOP
       LDA     W0,2                W0
       BRU     EXIT                EXIT
*LBL MAKER
$LBLMAK FET     MADELB              MADE LBL
       BRU     RGRMLB              REGISTER OR MAKE LBL
*REGISTER LBL
$REGLBL SER     LBLLST              LBL LIST
       JAT     EXIT                EXIT
       FET     CTL2        CENTRAL 2, MOVE LABEL TO BOT OF WORK LIST
*REGISTER OR MAKE LBL
$RGRMLB BOP     LBLLST              LBL LIST
       SWT     W1,2                W1
       MON     LBLLST              LBL LIST
       LDA     W0,2                W0
       BRU     EXIT                EXIT
*REGISTER SCALAR ID
$RGSCID FET     ZERO                ZERO
       JRS     STDMEV              STANDARD MODE EVAL
       SOF     FLFLAG              FL FLAG
       JAT     A171            FLOATING SCALER
       BOP     FXSLST              FX SCALAR LIST
       MCO     FXSLST              FX SCALAR LIST
       BRU     A172                A1
A171   BOP     FLSLST              FL SCALAR LIST
       MCO     FLSLST              FL SCALAR LIST
A172   SWT     W1,2                W1
       BRU     CLR1AE              CLEAR ONE AND EXIT
*REGISTER FX CONST
$RGFXCS SER     FXCLST              FX CONST LIST
       JAT     EXIT                EXIT
       BOP     FXCLST              FX CONST LIST
       LDA     CTL2                CENTRAL 2
       SOB     FXCLST              FX CONST LIST
       BRU     EXIT                EXIT
*REGISTER FL CONST
$RGFLCS LDP     CTL1                CENTRAL 1
       XAB
       STD     CTL1                CENTRAL 1
       SER     FLCLST              FL CONST LIST
       JAT     EXIT                EXIT
       BOP     FLCLST              FL CONST LIST
       MCO     FLCLST              FL CONST LIST
       BRU     EXIT                EXIT
*LOAD CENTRAL
$LODCTL JRS    PRPNTR              PROCESS PNTR
       LDP*    ADRPTO              ADDRESS POINTED TO
       STD     CTL1                CENTRAL 1
       BRU     EXIT                EXIT
*INITIALIZE ALL LISTS FROM BOTTOM
$INITLS HLT    LINITL
       LDX     ZERO
       LDA     =LSTMEM         START OF LIST MEMORY
       STA     FLSBAS
       BRU     A174
A173   CAX
       LDA     NLIST               END OF LIST MEMORY
       STA     BASE,2              BASE
A174   STA     START,2             START
       STA     TOP,2               TOP
       STA     BOTTOM,2            BOTTOM
       CXA
       ETR     ADRMSK              ADR MASK
       ADD     ONE                 ONE
       SKE     NOLIST              NUMBER OF LISTS
       BRU     A173                A1
       SBRR    INITLS              INITIALIZE LISTS
*OVERFLOW FAIL
$OVFAIL ADR    OVFLQT              OVERFLOW QT
       BRU     SETLSA              SET LAST ACTIVE
*ILLEGAL ALLOCATION FAIL
$ILALFA ADR     ALOCAQ              ALLOCATION QT
       BRU     SETLSA              SET LAST ACTIVE
*ILLEGAL NUMBER FAIL
$ILNUFA ADR     NUMBQT              NUMBER QT
       BRU     SETLSA              SET LAST ACTIVE
*NUMBER OF SUBSCRIPTS FAIL
$NUOFSF ADR     SUBSCQ              SUBSCRIPTS QT
       BRU     SETLSA              SET LAST ACTIVE
*ID CONFLICT FAIL
$INCNFA ADR     IDECQT              ID DECLARATION QT
*SET LAST ACTIVE
$SETLSA LDA     LACHCT              LAST ACTIVE CHAR CNT
       BRU     NOTEF               NOTE FAIL
*ILLEGAL SYNTAX FAIL
$ILSYFA ADR    SYTAXQ              SYNTAX QT
       LDA     INCHCT              INPUT CHAR CNT
*NOTE FAIL
$NOTEF  SOB     FAILDL              FAIL DATA LIST
       MON     FAILDL              FAIL DATA LIST
       BRU     FAIL                FAIL
       NOLIST EXT,GO
       END
5C     IDENT   *               PROGRAMMED OPERATORS
PAGE   MACRO   D                   DUMMY MACRO FOR PAGE HEADINGS
       ENDM




BAM    OPD     10000000B,2
CSF    OPD     10100000B,2
CSA    OPD     10200000B,2
JAT    OPD     10300000B,2
JAF    OPD     10400000B,2
TRY    OPD     10500000B,2
QSF    OPD     10600000B,2
STD    OPD     10700000B,2
FET    OPD     11000000B,2
SWT    OPD     11100000B,2
JRS    OPD     11200000B,2
BIF    OPD     11300000B,2
MCO    OPD     11400000B,2
SOL    OPD     11500000B,2
SOF    OPD     11600000B,2
RSV    OPD     11700000B,2
CNT    OPD     12000000B,2
RLS    OPD     12100000B,2
TOT    OPD     12200000B,2
FIL    OPD     12300000B,2
MON    OPD     12400000B,2
LDP    OPD     12500000B,2
BLF    OPD     12600000B,2
SAL    OPD     12700000B,2
PUL    OPD     13000000B,2
BNG    OPD     13100000B,2
BAF    OPD     13200000B,2
CAR    OPD     13300000B,2
PLO    OPD     13400000B,2
CAC    OPD     13500000B,2
CIC    OPD     13600000B,2
FIC    OPD     13700000B,2
FAC    OPD     14200000B,2
BOP    OPD     14100000B,2
MOF    OPD     14200000B,2
SNE    OPD     14300000B,2
SER    OPD     14400000B,2
LCF    OPD     14500000B,2
FIP    OPD     14600000B,2
ADR    OPD     14700000B,2
EOS    OPD     15000000B,2
SOB    OPD     15100000B,2
SOT    OPD     15200000B,2
SDP    OPD     15300000B,2
ADP    OPD     15400000B,2
REC    OPD     15500000B,2
COF    OPD     15600000B,2
LCO    OPD     15700000B,2
PRC    OPD     16000000B,2
PRQ    OPD     16100000B,2
SOC    OPD     16200000B,2
BIM    OPD     16300000B,2
FEX    OPD     16400000B,2
ICT    POPD    16500000B,2
ICTPOP EAX* 0
       LDB 0,2
       CLA
       LSH 6
       STA ICTTMP
       CIO ZERO
       SKE ICTTMP
       BRR 0
       MIN 0
       BRR 0
*FEX POP       FAIL EXIT 164
FEX    POPD    16400000B,2
FEXPOP SBRM    PONTRY              POP ENTRY
       CXA
       STA*    SVBOT               SAVE BOTTOM
       LDA     ITMPCT              INITIAL TEMP COUNT
       STA     TMPCNT              TEMP CNT
       LDA     SKBLFG              SKIP BLANKS FLAG
       STA     SCANMD              SCAN MODE
       RSV     PLEXLS              PLEX LIST
       BRU     EXIT                EXIT
*TRY POP       TRY 105
TRY    POPD    10500000B,2
TRYPOP SBRM    PONTRY              POP ENTRY
       SBRM    FEXTYS              FEX-TRY SAVE
       BRU     XTF                 EXIT FALSE
       JRS     0,2                 0
       LDA     MINU17              MINUS SEVENTEEN
       ADM     SVBOT               SAVE BOTTOM
       BRU     EXITRU              EXIT TRUE
*FEX-TRY SAVE
FEXTYS HLT     LFEXTY
       STA     SAVET1              SAVE TEMP 1
       SAL     FLSLST              FL SCALAR LIST
       SAL     FXSLST              FX SCALAR LIST
       SAL     WORKLT              WORK LIST
       SAL     XITLS               EXIT LIST
       LDA     LINECT              LINE CNT
       SOB     SAVELS              SAVE LIST
       LDA     INCHCT              INPUT CHAR CNT
       SOB     SAVELS              SAVE LIST
       LDA     CRNTCH              CRRNT CHAR
       SOB     SAVELS              SAVE LIST
       LDA*    FEXTYS              FEX-TRY SAVE
       SOB     SAVELS              SAVE LIST
       SOB     SAVELS              SAVE LIST
       LDA     SAVET1              SAVE TEMP 1
       MIN*    FEXTYS              FEX-TRY SAVE
       SBRR    FEXTYS              FEX-TRY SAVE
*FAIL
$FAIL   LDX     SVBOT               SAVE BOTTOM
       LDA     W0,2                W0
       SUB     ONE                 ONE
       STA     FAILEX              FAIL EXIT
       LDA     W1,2                W1
       STA*    FEXTYS              FEX-TRY SAVE
       LDA     W2,2                W2
       STA     CRNTCH              CRRNT CHAR
       LDA     W3,2                W3
       STA     INCHCT              INPUT CHAR CNT
       LDA     W4,2                W4
       STA     LINECT              LINE CNT
       LDA     MINUS5              MINUS FIVE
       ADM     SVBOT               SAVE BOTTOM
       REC     XITLS               EXIT LIST
       REC     WORKLT              WORK LIST
       REC     FXSLST              FX SCALAR LIST
       REC     FLSLST              FL SCALAR LIST
       SBRR    FEXTYS              FEX-TRY SAVE
*SAVE LIST DATA
$SVLSDT LDA     NOFLSV              NUMBER OF FIRST LIST SAVED
       STA     SAVET1              SAVE TEMP 1
       LDX     NOLSVB              NUMBER OF LISTS SAVED BRXER
A175   SAL*    SAVET1              SAVE TEMP 1
       MIN     SAVET1              SAVE TEMP 1
       BRX     A175                A1
       SBRM    FEXTYS              FEX-TRY SAVE
       BRU     RCFAIL              RECOVER FROM FAIL
       BRU     EXIT                EXIT
*RECOVER FROM FAIL
RCFAIL LDA     FAILEX              FAIL EXIT
       STA*    EXIBOT              EXIT BOTTOM
       LDA     NOLLSV              NUMBER OF LAST LIST SAVED
       STA     SAVET1              SAVE TEMP 1
       LDX     NOLSVB              NUMBER OF LISTS SAVED BRXER
A176   REC*    SAVET1              SAVE TEMP 1
       SKR     SAVET1              SAVE TEMP 1
       BRX     A176                A1
       LDA     NOITSV              NUMBER OF ITEMS SAVED
       ADM     SVBOT               SAVE BOTTOM
       BRU     EXIT                EXIT
*SAL POP       SAVE A LIST 127
SAL    POPD    12700000B,2
SALPOP SBRM    NONESE              NO NEST ENTRY
       LDA     START,2             START
       SUB     BASE,2              BASE
       SOB     SAVELS              SAVE LIST
       LDA     TOP,2               TOP
       SUB     BASE,2              BASE
       SOB     SAVELS              SAVE LIST
       LDA     BOTTOM,2            BOTTOM
       SUB     BASE,2              BASE
       SOB     SAVELS              SAVE LIST
       BRU     INDXEX              INDEX EXIT
*REC POP       RECOVER
REC    POPD    15500000B,2
RECPOP SBRM    NONESE              NO NEST ENTRY
       LDA*    SVBOT               SAVE BOTTOM
       ADD     BASE,2              BASE
       STA     BOTTOM,2            BOTTOM
       SKR     SVBOT               SAVE BOTTOM
       LDA*    SVBOT               SAVE BOTTOM
       ADD     BASE,2              BASE
       STA     TOP,2               TOP
       SKR     SVBOT               SAVE BOTTOM
       LDA*    SVBOT               SAVE BOTTOM
       ADD     BASE,2              BASE
       STA     START,2             START
       SKR     SVBOT               SAVE BOTTOM
       BRU     INDXEX              INDEX EXIT
*BAM POP       BUILD BY ADDRESS MODE 100
BAM    POPD    10000000B,2
BAMPOP SBRM    PONTRY              POP ENTRY
       STX     BIAMT1              BIM-BAM TEMP 1
       BRU     BIMBAM              BIM-BAM
*BIM POP       BUILD INSTRUCTION BY MODE
BIM    POPD    16300000B,2
BIMPOP SBRM    PONTRY              POP ENTRY
       STX     BIAMT1              BIM-BAM TEMP 1
       JRS     ISMDOK              IS MODE OK
*BIM-BAM
BIMBAM SOF     FLFLAG              FL FLAG
       LDA*    EXIBOT              EXIT BOTTOM
       MUL     RSH16               RIGHT SHIFTER 16
       ADM     BIAMT1              BIM-BAM TEMP 1
       ADM     BIAMT1              BIM-BAM TEMP 1
       BIF*    BIAMT1              BIM-BAM TEMP 1
       BRU     EXIT                EXIT
*BLF POP       BUILD LINK AND FILE
BLF    POPD    12600000B,2
BLFPOP SBRM    PONTRY              POP ENTRY
       CXA
       ADD     STOFLK              START OF LINKS
       SOB     WORKLT              WORK LIST
       BAF     SYSLOP              SYS LOP
       BRU     EXIT                EXIT
*BIF POP       BUILD INSTRUCTION AND FILE 113
BIF    POPD    11300000B,2
BIFPOP SBRM    PONTRY              POP ENTRY
       CXA
       XMA*    WRKBOT              WORK BOTTOM
       SOB     WORKLT              WORK LIST
       SOF     PTIDFG              PART ID FLAG
       JAT     A178                A4
       SOT     SCRAFG              SINGLY SCRIPTED ARRAY FLAG
       JAF     A180                A7
       PUL     WORKLT              WORK LIST
       BIF     LDXMOP              LDX MOP
       JRS     DYTEST              DMY TEST
       JAF     A177                A3
       MIN     W0,2                W0
       BRU     A179                A5
A177   LDA     W1,2                W1
       MRG     OPTAGB              MOP TAG BIT
       STA     W1,2                W1
       BRU     A180                A7
A178   JRS     DYTEST              DMY TEST
       JAF     A180                A7
A179   LDA     W1,2                W1
       MRG     OPINDB              MOP IND BIT
       STA     W1,2                W1
A180   LDA*    WRKBOT              WORK BOTTOM
       MUL     RSH18               RIGHT SHIFTER 18
       MUL     KEYVAL              KEY VALUE
       CBA
       ADD*    WRKBOT              WORK BOTTOM
       SUB     ONE                 ONE
       MUL     RSH14               RIGHT SHIFTER 14
       SKR     WRKBOT              WORK BOTTOM
       LDA*    WRKBOT              WORK BOTTOM
       MRG     ONEA14              ONE IN 14TH BIT
       BRU     BAFBIF              BAF-BIF
*BAF POP       BUILD ABSOLUTE AND FILE
BAF    POPD    13200000B,2
BAFPOP SBRM    PONTRY              POP ENTRY
       LDA*    WRKBOT              WORK BOTTOM
       MUL     RSH14               RIGHT SHIFTER 14
       CXA
*BAF-BIF
BAFBIF RSH     10                  12
       CBA
       SOB     CODLST              CODE LIST
       BRU     CLR1AE              CLEAR ONE AND EXIT
*DMY TEST
DYTEST SOT     LDYIDF              LOCAL DMY ID FLAG
       JAT     A181                A1
       SKN     SPTRIG              SPROG TRIGGER
       BRU     XTF                 EXIT FALSE
       FET     W0,2                W0
       JRS     LODCTL              LOAD CENTRAL
       SER     GDLIST              GLOBAL DMY LIST
       JAF     XTF                 EXIT FALSE
       SWT     W1,2                W1
       SOT     AYIDFG              ARRAY ID FLAG
       BNG     TWO                 TWO
       SKR     WRKBOT              WORK BOTTOM
       JAF     A181                A1
       CNA
       SOB     WORKLT              WORK LIST
       BAF     EAXOPP              EAX+ OP
A181   BNG     TWO                 TWO
       BRU     EXITRU              EXIT TRUE
*FIL POP       FILE INSTRUCTION 123
FIL    POPD    12300000B,2
FILPOP SBRM    NONESE              NO NEST ENTRY
       LDA     0,2                 0
       SOB     CODLST              CODE LIST
       BRU     BOTEXT              BOTTOM EXIT
       PAGE
*SER POP       SEARCH
SER    POPD    14400000B,2
SERPOP SBRM    PONTRY              POP ENTRY
       LDA     TOP,2               TOP
       SUB     BOTTOM,2            BOTTOM
       STA     SERTP1              SER TEMP 1
       SKN     SERTP1              SER TEMP 1
       BRU     XTF                 EXIT FALSE
       LDA     CODE,2              CODE
       ETR     SIZMSK              SIZE MASK
       SUB     ONE                 ONE
       STA     SERTP2              SER TEMP 2
       MRG     EAXOP               LIVE EAX+ MOP
       STA*    A183                A2
       STA*    A187                A6
       LDA     BOTTOM,2            BOTTOM
       SUB     SERTP2              SER TEMP 2
       ADD     ONE                 ONE
       STA     SERTP3              SER TEMP 3
       MRG     SKEOP               LIVE SKE+ MOP
       STA*    A184                A3
       ADD     ONE                 ONE
       STA*    A185                A4
       ETR     ADRMSK              ADR MASK
       SUB     ONE                 ONE
       MRG     SKMOP               LIVE SKM+ MOP
       STA*    A188                A7
       STX     SERTP4              SER TEMP 4
       LDA     CODE,2              CODE
       SKA     INTGLM              INTEGER LIST MASK
       BRU     A186                A5
       LDX     SERTP1              SER TEMP 1
       LDA     CTL2                CENTRAL 2
       LDB     CTL1                CENTRAL 1
A182   XAB
A183   EXU     A183A               (SIZE-1)
A184   EXU     A184A               (BOTTOM-SIZE+2)
       BRX     A183                A2
       XAB
A185   EXU     A185A               (BOTTOM-SIZE+3)
       BRX     A182                A1
       BRU     A189                A8
A186   LDX     SERTP1              SER TEMP 1
       LDB     ONES
       SKA     LBLSTM              LABEL LIST MASK
       LDB     ABSATM              ALL BUT SIGN AND TAG MASK
       LDA     CTL2                CENTRAL 2
A187   EXU     A187A               (SIZE-1)
A188   EXU     A188A               (BOTTOM-SIZE+2)
       BRX     A187                A6
A189   CXA
       ETR     ADRMSK              ADR MASK
       SKG     ONE                 ONE
       BRU     XTF                 EXIT FALSE
       MRG     ABAM                ALL BUT ADR MASK
       STA     SERTP5              SER TEMP 5
       LDX     SERTP4              SER TEMP 4
       LDA     CODE,2              CODE
       ETR     CDMASK              CODE MASK
       ADD     SERTP3              SER TEMP 3
       ADD     SERTP5              SER TEMP 5
       SUB     BASE,2              BASE
       SOB     WORKLT              WORK LIST
       BRU     EXITRU              EXIT TRUE
*BOP POP       BOTTOM POINTER
BOP    POPD    14100000B,2
BOPPOP SBRM    NONESE              NO NEST ENTRY
       LDA     CODE,2              CODE
       ETR     CDMASK              CODE MASK
       ADD     BOTTOM,2            BOTTOM
       SUB     BASE,2              BASE
       ADD     ONE                 ONE
       SOB     WORKLT              WORK LIST
       BRU     BOTEXT              BOTTOM EXIT
*MCO POP    MOVE CENTRAL ON -- COPY CENTRAL TO BOTTOM OF ADDRESSED LIST
MCO    POPD    11400000B,2
MCOPOP SBRM    NONESE              NO NEST ENTRY
       LDA     CTL1                CENTRAL 1
       SOB     0,2                 0
       LDA     CTL2                CENTRAL 2
       SOB     0,2                 0
       BRU     BOTEXT              BOTTOM EXIT
*SOF POP       SET ON FLAG 116
SOF    POPD    11600000B,2
SOFPOP SBRM    PONTRY              POP ENTRY
       LDA*    WRKBOT              WORK BOTTOM
       SKA     0,2                 0
       BRU     EXITRU              EXIT TRUE
       BRU     XTF                 EXIT FALSE
*SOT POP       SET ON TEST
SOT    POPD    15200000B,2
SOTPOP SBRM    PONTRY              POP ENTRY
       CXA
       LSH     12                  14
       LDB     CH1MSK              CHAR 1 MASK
       SKM*    WRKBOT              WORK BOTTOM
       BRU     XTF                 EXIT FALSE
       BRU     EXITRU              EXIT TRUE
*BNG POP       BRING
BNG    POPD    13100000B,2
BNGPOP SBRM    PONTRY              POP ENTRY
       FET     0,2                 0
       SWT     W1,2                W1
       JRS     PRPNTR              PROCESS PNTR
       LDA     W0,2                W0
       ADM     ADRPTO              ADDRESS POINTED TO
       LDA*    ADRPTO              ADDRESS POINTED TO
       STA*    WRKBOT              WORK BOTTOM
       BRU     EXIT                EXIT
*PROCESS PNTR -- RETURN ABS ADDR OF LIST ELT GIVEN ITS REL ADDR IN LIST
$PRPNTR LDA*    WRKBOT              WORK BOTTOM
       MUL     RSH18               RIGHT SHIFTER 18
       ETR     CH4MSK              CHAR 4 MASK
       CAX
       LDA*    WRKBOT              WORK BOTTOM
       ETR     PNTRAM              PNTR ADR MASK
       ADD     BASE,2              BASE
       STA     ADRPTO              ADDRESS POINTED TO
       BRU     CLR1AE              CLEAR ONE AND EXIT
       PAGE
*SNE POP       SET NOT EMPTY
SNE    POPD    14300000B,2
SNEPOP SBRM    TSTMTY              TEST FOR EMPTY
       BRU     EXITRU              EXIT TRUE
*CNT POP       COUNT 120
CNT    POPD    12000000B,2
CNTPOP SBRM    NONESE              NO NEST ENTRY
       LDA     BOTTOM,2            BOTTOM
       SUB     TOP,2               TOP
       SOB     WORKLT              WORK LIST
       BRU     BOTEXT              BOTTOM EXIT
*FET POP       FETCH 110
FET    POPD    11000000B,2
FETPOP SBRM    NONESE              NO NEST ENTRY
       LDA     0,2                 0
       SOB     WORKLT              WORK LIST
       BRU     BOTEXT              BOTTOM EXIT
*SWT POP       SWITCH ADDRESSED WORD WITH WORD ON BOT OF WORK LIST
SWT    POPD    11100000B,2
SWTPOP SBRM    NONESE              NO NEST ENTRY
       LDA     0,2                 0
       XMA*    WRKBOT              WORK BOTTOM
       STA     0,2                 0
       BRU     BOTEXT              BOTTOM EXIT
*MON POP       MOVE ON, MOVE WORD ON W.L. BOT TO LIST NUMBER IN ADDR
*POP UP THE WORK LIST
MON    POPD    12400000B,2
MONPOP SBRM    NONESE              NO NEST ENTRY
       LDA*    WRKBOT              WORK BOTTOM
       SKR     WRKBOT              WORK BOTTOM
       SOB     0,2                 0
       BRU     BOTEXT              BOTTOM EXIT
*MOF POP   MOVE OFF -- MOVE WORD ON BOTTOM OF ADDRESSED LIST TO W.L. BOTTOM
MOF    POPD    14200000B,2
MOFPOP SBRM    TSTMTY              TEST FOR EMPTY
       LDA*    BOTTOM,2            BOTTOM
       SKR     BOTTOM,2            BOTTOM
       SOB     WORKLT              WORK LIST
       BRU     EXITRU              EXIT TRUE
*TOT POP   TAKE OFF TOP -- WORD ON TOP OF ADDRESSED LIST TO BOTTOM OF W.L.
TOT    POPD    12200000B,2
TOTPOP SBRM    TSTMTY              TEST FOR EMPTY
       MIN     TOP,2               TOP
       LDA*    TOP,2               TOP
       SOB     WORKLT              WORK LIST
       BRU     EXITRU              EXIT TRUE
*LCF POP       LOAD CENTRAL FROM -- COPY 2 WRDS FROM LIST M TO CENTRAL
LCF    POPD    14500000B,2
LCFPOP SBRM    TSTMTY              TEST FOR EMPTY
       SUB     ONE                 ONE
       BRU     LCOLCF              LCO-LCF COMMON
*LCO POP   LOAD CENTRAL OFF -- UNSTACK 2 WRDS FROM LIST M. PUT IN CENTRAL
LCO    POPD    15700000B,2
LCOPOP SBRM    TSTMTY              TEST FOR EMPTY
       ADD     ONE                 ONE
*LCO-LCF COMMON
LCOLCF XMA     TOP,2               TOP
       CAX
       LDP     1,2                 1
       STD     CTL1                CENTRAL 1
       BRU     EXITRU              EXIT TRUE
*TEST FOR EMPTY
TSTMTY HLT     LTSTMT
       SBRM    PONTRY              POP ENTRY
       LDA     TOP,2               TOP
       ADD     ONE                 ONE
       SKG     BOTTOM,2            BOTTOM
       SBRR    TSTMTY              TEST FOR EMPTY
       LDA     START,2             START
       STA     TOP,2               TOP
       STA     BOTTOM,2            BOTTOM
       BRU     XTF                 EXIT FALSE
*RSV POP       SERESERVE 117
RSV    POPD    11700000B,2
RSVPOP SBRM    NONESE              NO NEST ENTRY
       LDA     START,2             START
       SUB     BASE,2              BASE
       SOB     0,2                 0
       LDA     TOP,2               TOP
       SUB     BASE,2              BASE
       SOB     0,2                 0
       LDA     BOTTOM,2            BOTTOM
       STA     START,2             START
       STA     TOP,2               TOP
       BRU     BOTEXT              BOTTOM EXIT
*RLS POP       RELEASE 121
RLS    POPD    12100000B,2
RLSPOP SBRM    PONTRY              POP ENTRY
*RELEASE LIST, LIST NUMBER IN X
RELIST LDA     START,2             START
       STA     TOP,2               TOP
       STA     BOTTOM,2            BOTTOM
       SKG     BASE,2              BASE
       BRU     EXIT                EXIT
       LDA*    START,2             START
       ADD     BASE,2              BASE
       STA     TOP,2               TOP
       SKR     START,2             START
       LDA*    START,2             START
       ADD     BASE,2              BASE
       SKR     START,2             START
       LDB     START,2             START
       STA     START,2             START
       STB     BOTTOM,2            BOTTOM
       BRU     EXIT                EXIT
       PAGE
*FIP POP       FLESH AND INHERIT PLEX
FIP    POPD    14600000B,2
FIPPOP CLA
       SBRM    FFF                 FIC-FAC-FIP
       LDA     MOFCPY              MERG OF COPY
       MRG*    WRKBOT              WORK BOTTOM
       STA*    WRKBOT              WORK BOTTOM
       BRU     EXIT                EXIT
*FAC POP       FLESH AND COUNT
FAC    POPD    14000000B,2
FACPOP CLA
       BRU     FFCOM               FIC-FAC COMMON
*FIC POP       FLESH INHERIT AND COUNT
FIC    POPD    13700000B,2
FICPOP LDA     MODEMS              MODE MASK
*FIC-FAC COMMON
FFCOM  SBRM    FFF                 FIC-FAC-FIP
       BRU     EXIT                EXIT
*FIC-FAC-FIP
FFF    HLT     LFFF
       SBRM    PONTRY              POP ENTRY
       STA     FFFTP1              FIC-FAC-FIP TEMP 1
       STA     MOFCPY              MERG OF COPY
       PLO     0,2                 0
       STA     CTPLEX              COUNT OF PLEX
       STA     CTCOPY              COUNT OF COPY
A190   LDA     WRKBOT              WORK BOTTOM
       SUB     CTCOPY              COUNT OF COPY
       CAX
       LDA     0,2                 0
       SOB     PLEXLS              PLEX LIST
       ETR     MODEMS              MODE MASK
       MRG     MOFCPY              MERG OF COPY
       STA     MOFCPY              MERG OF COPY
       SKR     CTCOPY              COUNT OF COPY
       BRU     A190                A1
       LDA     WRKBOT              WORK BOTTOM
       SUB     CTPLEX              COUNT OF PLEX
       STA     WRKBOT              WORK BOTTOM
       LDA*    WRKBOT              WORK BOTTOM
       ETR     FFFTP1              FIC-FAC-FIP TEMP 1
       MRG*    PLEXBT              PLEX BOTTOM
       STA*    WRKBOT              WORK BOTTOM
       SKR     PLEXBT              PLEX BOTTOM
       SBRR    FFF                 FIC-FAC-FIP
*PLO POP       PLEX OPEN
PLO    POPD    13400000B,2
PLOPOP SBRM    NONESE              NO NEST ENTRY
       CXA
       LSH     12                  14
       ETR     CDMASK              CODE MASK
       ADD     PLEXBT              PLEX BOTTOM
       SUB     PLXBAS              PLEX BASE
       ADD     ONE                 ONE
       SOB     WORKLT              WORK LIST
       CXA
       ETR     LOW2BM              LOW 2 BITS MASK
       SOB     PLEXLS              PLEX LIST
       BRU     BOTEXT              BOTTOM EXIT
*PUL POP       PULL 130
PUL    POPD    13000000B,2
PULPOP SBRM    PONTRY              POP ENTRY
       STX     TGTLCY              TARGET LIST OF COPY
       LDA*    WRKBOT              WORK BOTTOM
       SKR     WRKBOT              WORK BOTTOM
       ETR     PNTRAM              PNTR ADR MASK
       STA     STOCXX              SOURCE TOP OF COPY
       ADD     PLXBAS              PLEX BASE
       CAX
       LDA     0,2                 0
       STA     CTCOPY              COUNT OF COPY
       BRU     A192                A2
A191   MIN     STOCXX              SOURCE TOP OF COPY
       LDA     STOCXX              SOURCE TOP OF COPY
       ADD     PLXBAS              PLEX BASE
       CAX
       LDA     0,2                 0
       SOB*    TGTLCY              TARGET LIST OF COPY
A192   SKR     CTCOPY              COUNT OF COPY
       BRU     A191                A1
       BRU     EXIT                EXIT
*ADR POP       ADDRESS
ADR    POPD    14700000B,2
ADRPOP SBRM    PONTRY              POP ENTRY
       CXA
       SOB     WORKLT              WORK LIST
       BRU     EXIT                EXIT
*CAR POP       COPY AND RELEASE
CAR    POPD    13300000B,2
CARPOP LDA*    WRKBOT              WORK BOTTOM
       SKR     WRKBOT              WORK BOTTOM
       SBRM    CPYLST              COPY LIST
       LDX     SLSTCY              SOURCE LIST OF COPY
       BRU     RELIST              RELEASE LIST
*COF POP       COPY FILE
COF    POPD    15600000B,2
COFPOP SBRM    PONTRY              POP ENTRY
       STX     COFTP1              COF TEMP 1
       SNE*    COFTP1              COF TEMP 1
       JAF     CLR1EF              CLEAR ONE EXIT FALSE
       RSV*    W0,2                W0
       CAR*    COFTP1              COF TEMP 1
       BRU     EXITRU              EXIT TRUE
*CAC POP       COPY AND COUNT
CAC    POPD    13500000B,2
CACPOP LDA     LHPLIN              LIVE HLT PLEX LIST INST
       SBRM    CPYLST              COPY LIST
       BRU     CICACT              CIC-CAC COUNT
*CIC POP       COPY INHERIT AND COUNT
CIC    POPD    13600000B,2
CICPOP LDA     LHPLIN              LIVE HLT PLEX LIST INST
       SBRM    CPYLST              COPY LIST
       LDA     MOFCPY              MERG OF COPY
       MRG*    WRKBOT              WORK BOTTOM
       STA*    WRKBOT              WORK BOTTOM
*CIC-CAC COUNT
CICACT LDA*    WRKBOT              WORK BOTTOM
       ETR     PNTRAM              PNTR ADR MASK
       ADD     PLXBAS              PLEX BASE
       STA     ADRPTO              ADDRESS POINTED TO
       LDA     CTCOPY              COUNT OF COPY
       ADM*    ADRPTO              ADDRESS POINTED TO
       BRU     EXIT                EXIT
*COPY LIST
CPYLST HLT     LCPYLS
       SBRM    PONTRY              POP ENTRY
       STA     TGTLCY              TARGET LIST OF COPY
       STX     SLSTCY              SOURCE LIST OF COPY
       CLA
       STA     CTCOPY              COUNT OF COPY
A193   STA     MOFCPY              MERG OF COPY
       TOT*    SLSTCY              SOURCE LIST OF COPY
       JAF     A194                A2
       MON*    TGTLCY              TARGET LIST OF COPY
       MIN     CTCOPY              COUNT OF COPY
       ETR     MODEMS              MODE MASK
       MRG     MOFCPY              MERG OF COPY
       BRU     A193                A1
A194   SBRR    CPYLST              COPY LIST
       PAGE
*EOS POP       EXCLUSIVE OR TO STORAGE
EOS    POPD    15000000B,2
EOSPOP SBRM    PONTRY              POP ENTRY
       LDA*    WRKBOT              WORK BOTTOM
       EOR     0,2                 0
       STA     0,2                 0
       BRU     CLR1AE              CLEAR ONE AND EXIT
*SOL POP       SET OUT OF LIMIT 115
SOL    POPD    11500000B,2
SOLPOP SBRM    PONTRY              POP ENTRY
       STD     FOLTPA              FOL TEMP A
       SKN     FOLTPA              FOL TEMP A
       CLAB
       SKN     FOLTPA              FOL TEMP A
       SDP     FOLTPA              FOL TEMP A
       ADP     0,2                 0
       SKA     SIGNBT              SIGN BIT
       BRU     EXITRU              EXIT TRUE
       LDP     FOLTPA              FOL TEMP A
       BRU     XTF                 EXIT FALSE
*LDP POP       LOAD DOUBLE 125
LDP    POPD    12500000B,2
LDPPOP SBRM    NONESE              NO NEST ENTRY
       LDA     0,2                 0
       LDB     1,2                 1
       BRU     INDXEX              INDEX EXIT
*STD POP       STORE DOUBLE 107
STD    POPD    10700000B,2
STDPOP SBRM    NONESE              NO NEST ENTRY
       STA     0,2                 0
       STB     1,2                 1
       BRU     INDXEX              INDEX EXIT
*ADP POP       ADD DOUBLE PRECISION
ADP    POPD    15400000B,2
ADPPOP SBRM    NONESE              NO NEST ENTRY
       XAB
       ADD     1,2                 1
       XAB
       ADC     0,2                 0
       BRU     INDXEX              INDEX EXIT
*SDP POP       STORE DOUBLE PRECISION
SDP    POPD    15300000B,2
SDPPOP SBRM    NONESE              NO NEST ENTRY
       XAB
       SUB     1,2                 1
       XAB
       SUC     0,2                 0
       BRU     INDXEX              INDEX EXIT
       PAGE
*SOC POP       SET ON CHARACTER
SOC    POPD    16200000B,2
SOCPOP SBRM    RDYSCH              READY SCAN CHAR
       SKA     0,2                 0
       BRU     EXITRU              EXIT TRUE
       BRU     XTF                 EXIT FALSE
*CSF POP       CHAR SCAN OR FAIL 101
CSF    POPD    10100000B,2
CSFPOP SBRM    PONTRY              POP ENTRY
       CSA     0,2                 0
       JAT     EXIT                EXIT
       BRU     ILSYFA              ILLEGAL SYNTAX FAIL
*CSA POP       CHAR SCAN OR ALTERNATE 102
CSA    POPD    10200000B,2
CSAPOP SBRM    RDYSCH              READY SCAN CHAR
       SKE     0,2                 0
       BRU     XTF                 EXIT FALSE
       CLA
       STA     CRNTCH              CRRNT CHAR
       BRU     EXITRU              EXIT TRUE
*PRC POP       PRINT CHARACTER
PRC    POPD    16000000B,2
PRCPOP SBRM    PONTRY              POP ENTRY
       LDB     0,2                 0
       CLA
       LSH     6                   6
       SBRM    PRINT               PRINT
       BRU     EXIT                EXIT
*PRQ POP       PRINT QUOTE
PRQ    POPD    16100000B,2
PRQPOP SBRM    PONTRY              POP ENTRY
       SBRM    INITQS              INITIALIZE QUOTE SCAN
A195   SBRM    QSNEXC              QUOTE SCAN NEXT CHAR
       BRU     EXIT                EXIT
       RSH     18                  22
       SBRM    PRINT               PRINT
       BRU     A195                A1
*QSF POP       QUOTE SCAN OF FAIL
QSF    POPD    10600000B,2
QSFPOP SBRM    RDYSCH              READY SCAN CHAR
       SBRM    INITQS              INITIALIZE QUOTE SCAN
A196   SBRM    QSNEXC              QUOTE SCAN NEXT CHAR
       BRU     EXIT                EXIT
       SKE     CRNTCH              CRRNT CHAR
       BRU     FAIL                FAIL
       SBRM    NXACCH              NEXT ACTIVE CHAR
       BRU     A196                A1
*SOB POP       STORE ON BOTTOM
SOB    POPD    15100000B,2
SOBPOP STA     INCAR               INCOMING A REGISTER
       STX     INCXR               INCOMING X REGISTER
       EAX*    0                   0
       LDA     BOTTOM,2            BOTTOM
       SKE     LIMIT,2             LIMIT
       BRU     A228                A1
       SBRM    REASGM       REASSIGN MEMORY -- THIS LIST NEEDS MORE SPACE
       EAX     0,2                 0
A228   LDA     INCAR               INCOMING A REGISTER
       MIN     BOTTOM,2            BOTTOM
       STA*    BOTTOM,2            BOTTOM
       LDX     INCXR               INCOMING X REGISTER
       BRR     0                   0
*JAF POP       JUMP ANSWER FALSE
JAF    POPD    10400000B,2
JAFPOP STA     XITTP1              EXIT TEMP 1
       CLA
       BRU     JATAFC              JAT-JAF COMMON
*JAT POP       JUMP ANSWER TRUE
JAT    POPD    10300000B,2
JATPOP STA     XITTP1              EXIT TEMP 1
       LDA     XTRUEM              EXIT TRUE MASK
*JAT-JAF COMMON
JATAFC EOR*    EXIBOT              EXIT BOTTOM
       SKA     XTRUEM              EXIT TRUE MASK
       BRU     XTONZO              EXIT ON ZERO
       EAX*    0                   0
       BRU     JJJUMP              JRS-JAT-JAF JUMP
*JRS POP       JUMP RECURSIVELY TO SUBRU
JRS    POPD    11200000B,2
JRSPOP SBRM    PONTRY              POP ENTRY
*JRS-JAT-JAF JUMP
JJJUMP STX     0                   0
       SKR     0                   0
       BRU     XTONZO              EXIT ON ZERO
*POP LINK INITIALIZATION
$POPBRU BRU   BAMPOP
       BRU    CSFPOP
       BRU    CSAPOP
       BRU    JATPOP
       BRU    JAFPOP
       BRU    TRYPOP
       BRU    QSFPOP
       BRU    STDPOP
       BRU    FETPOP
       BRU    SWTPOP
       BRU    JRSPOP
       BRU    BIFPOP
       BRU    MCOPOP
       BRU    SOLPOP
       BRU    SOFPOP
       BRU    RSVPOP
       BRU    CNTPOP
       BRU    RLSPOP
       BRU    TOTPOP
       BRU    FILPOP
       BRU    MONPOP
       BRU    LDPPOP
       BRU    BLFPOP
       BRU    SALPOP
       BRU    PULPOP
       BRU    BNGPOP
       BRU    BAFPOP
       BRU    CARPOP
       BRU    PLOPOP
       BRU    CACPOP
       BRU    CICPOP
       BRU    FICPOP
       BRU    FACPOP
       BRU    BOPPOP
       BRU    MOFPOP
       BRU    SNEPOP
       BRU    SERPOP
       BRU    LCFPOP
       BRU    FIPPOP
       BRU    ADRPOP
       BRU    EOSPOP
       BRU    SOBPOP
       BRU    SOTPOP
       BRU    SDPPOP
       BRU    ADPPOP
       BRU    RECPOP
       BRU    COFPOP
       BRU    LCOPOP
       BRU    PRCPOP
       BRU    PRQPOP
       BRU    SOCPOP
       BRU    BIMPOP
       BRU    FEXPOP
       BRU     ICTPOP
       BSS     10
$PBRUE ZRO     0
       NOLIST EXT,GO
       END
6C     IDENT   *                END OF COMP CODE, R.O. STORAGE
PAGE   MACRO   D                   DUMMY MACRO FOR PAGE HEADINGS
       ENDM
*
*
*
*
BFS    MACRO   D; SKN D(1); BRU D(2); ENDM
DEC    MACRO   D; DATA D(1); ENDM
OCT    MACRO   D; DATA D(1)B; ENDM
BEQ    MACRO   D  BRU IF EQUAL; SKE D(1); BRU *+2; BRU D(2); ENDM 
BNE    MACRO   D  BRU IF NOT EQUAL; SKE D(1); BRU D(2); ENDM
NCARDS EQU     9
IBSIZE EQU     73*NCARDS/4+39
BAM    OPD     10000000B,2
CSF    OPD     10100000B,2
CSA    OPD     10200000B,2
JAT    OPD     10300000B,2
JAF    OPD     10400000B,2
TRY    OPD     10500000B,2
QSF    OPD     10600000B,2
STD    OPD     10700000B,2
FET    OPD     11000000B,2
SWT    OPD     11100000B,2
JRS    OPD     11200000B,2
BIF    OPD     11300000B,2
MCO    OPD     11400000B,2
SOL    OPD     11500000B,2
SOF    OPD     11600000B,2
RSV    OPD     11700000B,2
CNT    OPD     12000000B,2
RLS    OPD     12100000B,2
TOT    OPD     12200000B,2
FIL    OPD     12300000B,2
MON    OPD     12400000B,2
LDP    OPD     12500000B,2
BLF    OPD     12600000B,2
SAL    OPD     12700000B,2
PUL    OPD     13000000B,2
BNG    OPD     13100000B,2
BAF    OPD     13200000B,2
CAR    OPD     13300000B,2
PLO    OPD     13400000B,2
CAC    OPD     13500000B,2
CIC    OPD     13600000B,2
FIC    OPD     13700000B,2
FAC    OPD     14000000B,2
BOP    OPD     14100000B,2
MOF    OPD     14200000B,2
SNE    OPD     14300000B,2
SER    OPD     14400000B,2
LCF    OPD     14500000B,2
FIP    OPD     14600000B,2
ADR    OPD     14700000B,2
EOS    OPD     15000000B,2
SOB    OPD     15100000B,2
SOT    OPD     15200000B,2
SDP    OPD     15300000B,2
ADP    OPD     15400000B,2
REC    OPD     15500000B,2
COF    OPD     15600000B,2
LCO    OPD     15700000B,2
PRC    OPD     16000000B,2
PRQ    OPD     16100000B,2
SOC    OPD     16200000B,2
BIM    OPD     16300000B,2
FEX    OPD     16400000B,2
*PRINT COMPUTE TIME SINCE FORTRAN SYSTEM ENTERED
$CTME   ZRO     CTMER           PRINT COMPUTE TIME SINCE ENTRY
       BRS     88
       SUB     ICTIME
CTME2  LRSH    23              PRINT TIME IN A
       DIV     =216000
       STB     TEMP1
       LDB     =10
       LDX     =1
       BRS     36
       LDA     ='   :'
       CIO     =1
       LDA     TEMP1
       LRSH    23
       DIV     =3600
       STB     TEMP1
       LDB     =10
       LDX     =1
       BRS     36
       LDA     ='   :'
       CIO     =1
       LDA     TEMP1
       LRSH    23
       DIV     =60
       LDB     =10
       LDX     =1
       BRS     36
       BRR     CTMER
$CTME1  ZRO     CTMER           PRINT TIME IN A
       BRU     CTME2
CTMER  ZRO     0
$TEMP1 ZRO     0
*TTY PRINTING FOR QUOTE STRING
$PRQTTY ZRO    0
       SBRM    INITQS
PRQTT1 SBRM    QSNEXC
       BRR     PRQTTY
       LRSH     18
       SKE     =33B
       BRU     PRQTT3
       LDA     =155B
       CIO     =1
       LDA     =152B
PRQTT3 CIO     =1
       BRU     PRQTT1
*INITIALIZE QUOTE SCAN
$INITQS HLT     LINITQ
       STX     QSFWAD              QSF WORD ADR
       LDA     TWO
       STA     QSFCTR              QSF COUNTER
       LDA*    QSFWAD              QSF WORD ADR
       STA     QSFWRD              QSF WORD
A197   SBRM    QSNEXC              QUOTE SCAN NEXT CHAR
       SBRR    INITQS              INITIALIZE QUOTE SCAN
       BRU     A197                A1
*QUOTE SCAN NEXT CHAR
$QSNEXC HLT     LQSNEX
       LDA     QSFWRD              QSF WORD
       LDB     =77600000B
       SKM     ='   .'*200000B     PERIOD
       MIN*    QSNEXC              QUOTE SCAN NEXT CHAR
       ABC
       LSH     8
       STB     QSFWRD              QSF WORD
       CAX
       SKR     QSFCTR              QSF COUNTER
       BRU     A198                A1
       MIN     QSFWAD              QSF WORD ADR
       LDA*    QSFWAD              QSF WORD ADR
       STA     QSFWRD              QSF WORD
       LDA     TWO
       STA     QSFCTR              QSF COUNTER
A198   LDA     CHTTBL,2            CHAR TRANSL TABLE
       SBRR    QSNEXC              QUOTE SCAN NEXT CHAR
*PRINT 5 DEC
$PR5DEC FET     FIVE                FIVE
       FET     ZERO                ZERO
A199   LDA     W2,2                W2
       ETR     FIVMSK              FIVE DEC MASK
       MUL     TEN                 TEN
       DIV     ONEMIL              ONE MILLION
       STB     W2,2                W2
       CAX
       MRG*    WRKBOT              WORK BOTTOM
       STA*    WRKBOT              WORK BOTTOM
       EAX     20B,2                ZERO STARTS AT 20
       SKG     ZERO                ZERO
       CLX                         SPACE
       PRC     CHTTBL,2            CHAR TRANSL TABLE
       SKR     W1,2                W1
       BRU     A199                A1
       PRC     SPACE               SPACE
       PRC     SPACE               SPACE
       BRU     CLR3AE              CLEAR THREE AND EXIT
*PRINT OCTAL
$POCTAL BRU     A201                A1
A200   CLA
       LDB     W1,2                W1
       LSH     3                   3
       STB     W1,2                W1
       CAX
       EAX     20B,2               LIFT NUMBER BASE FOR ASCII CODE
       PRC     CHTTBL,2            CHAR TRANSL TABLE
A201   SKR     W0,2                W0
       BRU     A200                A2
       BRU     CLR2AE              CLEAR TWO AND EXIT
*PRINT, 6 BIT CHAR RT JUSTIFIED IN A, X SAVED
$PRINT HLT     LPRINT
       CLB
       RSH     6
       CBA
       MIN     CHTSLN              CHARS THIS LINE
       SKE     CAROLO              CAR RETURN ZERO LOW
       BRU     A204                A4
A201A  LDA     =155B
       CIO     COUTF
       BFS     FTTYON,A201B
       LDB COUTF
       SKB =77777776B
       CIO     =1
*LF FOLLOWING CR
A201B  LDA     =152B
       CIO     COUTF           CMMD OUTPUT FILE
       BFS     FTTYON,A202A
       LDB COUTF
       SKB =77777776B
       CIO     =1
A202A  MIN     LINETP              LINES THIS PAGE
       LDA     LINETP              LINES THIS PAGE
       SKE     LINEPP              LINES PER PAGE
       BRU     A203                A5
       BRU     A203            DONT BOTHER SPACING PAGE
       LDA     ONE
       STA     LINETP              LINES THIS PAGE
       LDA     TEN                 TEN
       STA     PRTTP1              PRINT TEMP 1
A202   LDA     LF                  LINE FEED
       CIO     COUTF
       BFS     FTTYON,A203A
       LDB COUTF
       SKB =77777776B
       CIO     =1
A203A  SKR     PRTTP1              PRINT TEMP 1
       BRU     A202                A6
A203   CLA
       STA     CHTSLN              CHARS THIS LINE
       SBRR    PRINT
A204   LSH     6
       CIO     COUTF               CMMD OUTPUT FILE
       BFS     FTTYON,A204A
       LDB COUTF
       SKB =77777776B
       CIO     =1
A204A  SBRR    PRINT               PRINT
*
*PUNCH FINISH
$PCHFIN MIN     CKSMCT              CHECK SUM CNT
*PUNCH CODE
PCHCOD EXT     *
PCHCOD EQU     *
A205   SNE     CODLST              CODE LIST
       JAF     EXIT                EXIT
       SKN     CKSMCT              CHECK SUM CNT
       BRU     A206                A1
       MIN     BLOKCT              BLOCK CNT
       LDA     BLOKCT              BLOCK CNT
       STA     CKSUM               CHECK SUM
       LDA     BLOKLG              BLOCK LENGTH
       STA     CKSMCT              CHECK SUM CNT
A206   TOT     CODLST              CODE LIST
       JAF     A205
       ADD     CKSUM               CHECK SUM
       ADC     ZERO                ZERO
       STA     CKSUM               CHECK SUM
       LDA*    WRKBOT              WORK BOTTOM
       SKN     OUTFLE
       WIO     OUTFLE              BINARY OUTPUT FILE
       SKN     FLC
       BRU     *+2
       SBRM    WIOPTH
       SKR     WRKBOT              WORK BOTTOM
       SKR     CKSMCT              CHECK SUM CNT
       BRU     A206                A1
       BRU     A205
*READY SCAN CHAR
$RDYSCH HLT     LRDYSC
       SBRM    PONTRY              POP ENTRY
       LDA     CRNTCH              CRRNT CHAR
       SKE     ZERO                ZERO
       SBRR    RDYSCH              READY SCAN CHAR
       STX     RDYCT1              READY CHAR TEMP 1
       SBRM    NXACCH              NEXT ACTIVE CHAR
       LDX     RDYCT1              READY CHAR TEMP 1
       SBRR    RDYSCH              READY SCAN CHAR
*NEXT ACTIVE CHAR
$NXACCH HLT     LNXACC
       LDA     INCHCT              INPUT CHAR CNT
       STA     LACHCT              LAST ACTIVE CHAR CNT
       SBRM    NXINCH              NEXT INPUT CHAR
       STA     FRSTCH              FIRST CHAR READ BY NXACCH
       BRU     A208A
A208   SBRM    NXINCH              NEXT INPUT CHAR
A208A  SKE     SPACE               SPACE
       BRU     A209                A7
       LDA     SCANMD              SCAN MODE
       SKE     UBLKFG              USE BLANKS FLAG
       BRU     A208                A1
       LDA     SPACE               SPACE
A209   SKE     CARET               CAR RETURN
       BRU     A215                A9
       SKN     EOLTRG              END OF LINE TRIGGER
       BRU     A209A
       LDB     INCHCT              INPUT CHAR CNT
       STB     EOLTRG              END OF LINE TRIGGER
A209A  SKN     LASTST              LAST STA TRIGGER
       BRU     A215                A9
       LDA     INCHCT              INPUT CHAR CNT
       STA     ACHTP1              ACTIVE CHAR TEMP 1
       MIN     LINECT              LINE CNT
A211   SBRM    NXINCH              NEXT INPUT CHAR
       SKA     CARRFG              CAR RETURN FLAG
       BRU     A211                A8
       LDX     FOUR                FOUR
       STX     ACHTP2              ACTIVE CHAR TEMP 2
A213   SKE     SPACE               SPACE
       BRU     A214                A5
       SBRM    NXINCH              NEXT INPUT CHAR
       SKR     ACHTP2              ACTIVE CHAR TEMP 2
       BRU     A213                A6
       SKA     CNCHFG              CONTINUATION CHAR FLAG
       BRU     A208                A1
A214   LDA     ACHTP1              ACTIVE CHAR TEMP 1
       STA     INCHCT              INPUT CHAR CNT
       LDA     CARET               CAR RETURN
       STA     CRNTCH              CRRNT CHAR
A215   LDX     WRKBOT              WORK BOTTOM
       SBRR    NXACCH              NEXT ACTIVE CHAR
       PAGE
*NEXT INPUT CHAR
$NXINCH HLT     LNXINC
A216   LDA     INCHCT              INPUT CHAR CNT
       SKE     INSTCT              INPUT STOP CNT
       BRU     A218                A3
A217   SBRM    READ                READ
       BRU     OVFAIL              OVERFLOW FAIL
       LDA     INSTCT              INPUT STOP CNT
       BRU A218                THIS FIXES NO END CARD PROBLEM
       SKG     INCHCT              INPUT CHAR CNT
       BRU     A217                A4
A218   MIN     INCHCT              INPUT CHAR CNT
       LDA     THREE               THREE
       SUB     INCHCT              INPUT CHAR CNT
       ETR     THREE               THREE
       STA     INCHT1              INPUT CHAR TEMP 1
       LDA     INCHCT              INPUT CHAR CNT
       RSH     1                   1
       ABC
       DIV     NPBFLG              INPUT BUFF LENGTH
       CBX
       LDA     NPBUFF,2            INPUT BUFFER
       LDX     INCHT1              INPUT CHAR TEMP 1
       EXU     CHARST,2            CHAR SHIFTER TABLE
       ETR     CH4MSK              CHAR 4 MASK
       CAX
       LDA     CHTTBL,2            CHAR TRANSL TABLE
A219   STA     CRNTCH              CRRNT CHAR
       LDX     WRKBOT              WORK BOTTOM
       SBRR    NXINCH              NEXT INPUT CHAR
       PAGE
*READ
$READ   HLT     LREAD
       LDA     RDSTCT              READ STOP CNT
       ADD     NBCHCT              IN BUFF CHAR CNT
       SKG     RDCHCT              READ CHAR CNT
       SBRR    READ                READ
       MIN*    READ                READ
A224   CLA
       SKR     READSC              READ SPACE COUNT
       BRU     A222
A220   CIO     INFLE               READ CHAR FROM INPUT FILE
       LDX     ONE
       SBRM    ACB                 ACCEPT CHAR AND BRANCH
       DATA    15500000B+A221      ASCII CR
       DATA    13700000B+A225      ASCII END OF FILE
       DATA    14400000B+A225          END OF TEXT (ALSO AN EOF)
       DATA    13500000B+A223       MULTIPLE SPACE
       DATA    9BIT+*+1
       SKG     CH4MSK 
       SKG     ONES
       BRU     A220                DISCARD
A222   ETR     CH4MSK              CHAR 4 MASK
       CAX
       LDA     CHTTBL,2            CHAR TRANSL TABLE
       STA     WIMCH               WIMED CHAR
       SBRM    NTERAC              ENTER A CHAR
       MIN     INSTCT              INPUT STOP CNT
       LDA     RDSTCT              READ STOP CNT
       ADD     NBCH                IN BUFF CHAR CNT-1
       SKG     RDCHCT              READ CHAR CNT
       SBRR    READ
       BRU     A224
A221   LDA     ICR                 INTERNAL RT JUST CR
       BRU     A222
A223   CIO     INFLE               READ CHAR FROM INPUT FILE
       STA     READSC              READ SPACE COUNT
       BRU     A224
A225   SKR     FEOF                FLAG END OF FILE READ
       SBRR READ
       SBRR READ
$NPBFLG ZRO     IBSIZE              INPUT BUFFER LENGTH
$NBCHCT ZRO     4*IBSIZE            INPUT BUFFER CHAR CNT
$NBCH   ZRO     4*IBSIZE-1          INPUT BUFFER CHAR CNT-1
*ENTER A CHAR
$NTERAC HLT     LNTERA
A226   MIN     RDCHCT              READ CHAR CNT
       LDA     RDCHCT              READ CHAR CNT
       ETR     THREE               THREE
       STA     ECHTP1              ENTER CHAR TEMP 1
       LDA     RDCHCT              READ CHAR CNT
       RSH     1                   1
       ABC
       DIV     NPBFLG              INPUT BUFF LENGTH
       CBX
       STB     ECHTP2              ENTER CHAR TEMP 2
       LDA     NPBUFF,2            INPUT BUFFER
       LDX     ECHTP1              ENTER CHAR TEMP 1
       ETR     NOTCMT,2            NOT CHAR MASK TABLE
       STA     ECHTP1              ENTER CHAR TEMP 1
       LDA     WIMCH               WIMED CHAR
       EXU     CHARST,2            CHAR SHIFTER TABLE
       ETR     CHMTBL,2            CHAR MASK TABLE
       MRG     ECHTP1              ENTER CHAR TEMP 1
       LDX     ECHTP2              ENTER CHAR TEMP 2
       STA     NPBUFF,2            INPUT BUFFER
       SBRR    NTERAC              ENTER A CHAR
*NO NEST ENTRY
$NONESE HLT     LNONES
       STX     NNTP1               NN TEMP 1
       XMA     0                   0
       STA     NNTP2               NN TEMP 2
       XMA     0                   0
       EAX*    0                   0
       SBRR    NONESE              NO NEST ENTRY
*POP ENTRY
$PONTRY HLT     LPONTR
       STA     XITTP1              EXIT TEMP 1
       LDA     EXIBOT              EXIT BOTTOM
       SKE     XLIMIT              EXIT LIMIT
       BRU     A229                A2
       SBRM    REASGM              REASSIGN MEMORY
       EAX     XITLS               EXIT LIST
A229   LDA     0                   0
       ETR     ADRMSK              ADR MASK
       MIN     EXIBOT              EXIT BOTTOM
       STA*    EXIBOT              EXIT BOTTOM
       LDA     XITTP1              EXIT TEMP 1
DEBUG  NOP     0                   (BRM DEBUG)
       STA     XITTP1              EXIT TEMP 1
       CXA
       ETR     ADRMSK              ADR MASK
       SKG     NLIST               END OF LISTS
       SKG     FLSBAS              FL SCALAR BASE, START OF LISTS
       BRU     A230                A1
       LDX     WRKBOT              WORK BOTTOM
A230   EAX*    0                   0
       CXA
       ETR     ADRMSK              ADR MASK
       CAX
       LDA     XITTP1              EXIT TEMP 1
       SBRR    PONTRY              POP ENTRY
       PAGE
*REASSIGN MEMORY
$REASGM HLT     LREASG
       STX     RSGNT3              REASSIGN TEMP 3
       LDA     FLSLMT              FL SCALAR LIMIT
       SUB     FLSCBT              FL SCALAR BOTTOM
       SKG     ONE                 ONE
       BRU     PRESSM              PRESS MEMORY
*MOVE LISTS UP
$MVLST  LDX     RSGNT3              REASSIGN TEMP 3
       MIN*    REASGM              REASSIGN MEMORY
       EXU*    LREASG               REASSIGN MEMORY
       CXA
       ETR     ADRMSK              ADR MASK
       STA     RSGNT1              REASSIGN TEMP 1
       LDA     ONE                 ONE
       BRU     A235                A5
A231   STA     RSGNT2              REASSIGN TEMP 2
       CAX
       LDA     BOTTOM,2            BOTTOM
       ADD     ONE                 ONE
       MRG     LIVELO              LIVE LDA+ OP
       STA*    A232                A1
       LDA     BOTTOM,2            BOTTOM
       SUB     ONE                 ONE
       MRG     LIVESO              LIVE STA+ OP
       STA*    A233                A2
       LDA     BASE,2              BASE
       SUB     BOTTOM,2            BOTTOM
       SUB     ONE                 ONE
       STA     RSGNT4              REASSIGN TEMP 4
       LDA     MINUS2              MINUS TWO
       ADM     BASE,2              BASE
       ADM     START,2             START
       ADM     TOP,2               TOP
       ADM     BOTTOM,2            BOTTOM
       LDX     RSGNT4              REASSIGN TEMP 4
       BRU     A234                A3
A232   EXU     A232A               (BOTTOM+1)
A233   EXU     A233A               (BOTTOM-1)
A234   BRX     A232                A1
       LDA     RSGNT2              REASSIGN TEMP 2
       ADD     ONE                 ONE
A235   SKG     RSGNT1              REASSIGN TEMP 1
       BRU     A231                A4
       LDX     RSGNT3              REASSIGN TEMP 3
       SBRR    REASGM              REASSIGN MEMORY
*PRESS MEMORY
$PRESSM LDA     NOLASL              NO OF LAST LIST
       STA     RSGNT1              REASSIGN TEMP 1
A236   LDX     RSGNT1              REASSIGN TEMP 1
       LDA     LIMIT,2             LIMIT
       STA     RSGNT2              REASSIGN TEMP 2
       XMA     BOTTOM,2            BOTTOM
       STA     RSGNT4              REASSIGN TEMP 4
       SUB     BOTTOM,2            BOTTOM
       CNA
       ADM     START,2             START
       ADM     TOP,2               TOP
       ADD     BASE,2              BASE
       STA     BASE,2              BASE
       SUB     BOTTOM,2            BOTTOM
       SUB     ONE                 ONE
       CAX
       BRU     A238                A5
A237   LDA*    RSGNT4              REASSIGN TEMP 4
       STA*    RSGNT2              REASSIGN TEMP 2
       SKR     RSGNT4              REASSIGN TEMP 4
       SKR     RSGNT2              REASSIGN TEMP 2
A238   BRX     A237                A3
A239   SKR     RSGNT1              REASSIGN TEMP 1
       LDA     RSGNT1              REASSIGN TEMP 1
       SKE     ZERO                ZERO
       BRU     A236                A1
       LDA     FLSCBT              FL SCALAR BOTTOM
       SUB     FLSLMT              FL SCALAR LIMIT
       SKG     MINUS2              MINUS TWO
       BRU     MVLST               MOVE LISTS UP
*MEMORY OVERFLOW
$MEMOVF SBRM    INITLS              INITIALIZE LISTS
       SKN     LASTST              LAST STA TRIGGER
       BRU     A240                A1
       JRS     RELPRT              RELEASE AND PRINT
       PRC     CARET               CAR RETURN
A240   PRQ     OVFLQT              OVERFLOW QUOTE
       BRU     TRMCPL              TERMINATE COMPILE
       PAGE
*BOTTOM EXIT - EXIT FOR POPS WHICH BEGAN WITH "NO NOST ENTRY"
$BOTEXT LDX     NNTP2               NN TEMP 2
       STX     0                   0
       LDX     WRKBOT              WORK BOTTOM
       BRR     0                   0
*INDEX EXIT
$INDXEX LDX     NNTP2               NN TEMP 2
       STX     0                   0
       LDX     NNTP1               NN TEMP 1
       BRR     0                   0
*CLEAR TWO EXIT FALSE
$CLR2EF SKR     WRKBOT              WORK BOTTOM
*CLEAR ONE EXIT FALSE
$CLR1EF SKR     WRKBOT              WORK BOTTOM
*EXIT FALSE
$XTF    EAX     ZERO                ZERO
       BRU     XTRXF               EXIT TRUE OR EXIT FALSE
*CLEAR TWO EXIT TRUE
$CLR2ET SKR     WRKBOT              WORK BOTTOM
*CLEAR ONE EXIT TRUE
$CLR1ET SKR     WRKBOT              WORK BOTTOM
*EXIT TRUE
$EXITRU EAX     XTRUEM              EXIT TRUE MASK
*EXIT TRUE OR EXIT FALSE
$XTRXF  STA     XITTP1              EXIT TEMP 1
       LDA     0,2                 0
       LDX     EXIBOT              EXIT BOTTOM
       ADD     W1,2                W1
       ETR     TESTNM              TEST NODE MASK
       ADM     W1,2                W1
       BRU     XONLST              EXIT ON LIST
*CLEAR FOUR AND EXIT
$CLR4AE SKR     WRKBOT              WORK BOTTOM
*CLEAR THREE AND EXIT
$CLR3AE SKR     WRKBOT              WORK BOTTOM
*CLEAR TWO AND EXIT
$CLR2AE SKR     WRKBOT              WORK BOTTOM
*CLEAR ONE AND EXIT
$CLR1AE SKR     WRKBOT              WORK BOTTOM
*EXIT
$EXIT   STA     XITTP1              EXIT TEMP 1
*EXIT ON LIST
$XONLST LDA*    EXIBOT              EXIT BOTTOM
       SKR     EXIBOT              EXIT BOTTOM
       STA     0                   0
*EXIT ON ZERO
$XTONZO LDA     XITTP1              EXIT TEMP 1
       LDX     WRKBOT              WORK BOTTOM
       BRR     0                   0
*CHAR TRANSL TABLE
CHTTBL EXT     *
CHTTBL EQU     *
$SPACE  DATA    00002600B           SPACE
$TAPEMK OCT     01003200            TAPE MARK
$DOUBQT DATA    02013200B           QUOTE
$SHARP  DATA   03003200B
$DOLLAR DATA   04013200B           DOLLAR
$SCRPTM OCT     05003200            SCRIPT M
$L0261  DATA   06003200B          AND SIGN
$PRIME  OCT     07013200            PRIME
LPAREN EXT     *
LPAREN EQU     *                   L PAREN
$L026   OCT     10003200            026L
RPAREN EXT     *
RPAREN EQU     *                   R PAREN
$R026   OCT     11003210            026R
ASTRSK EXT     *
ASTRSK EQU     *                   ASTERISK
$ASTRCH OCT     12003200            ASTERISK CHAR
PLUS   EXT     *
PLUS   EQU     *                   PLUS
$PLUSCH OCT     13003200            PLUS CHAR
COMMA  EXT     *
COMMA  EQU     *                   COMMA
COMACH OCT     14003210            COMMA CHAR
MINUS  EXT     *
MINUS  EQU     *                   MINUS
$MINUSC OCT     15003200            MINUS CHAR
$PERIOD OCT     16003200            PERIOD
VRGULE EXT     *
VRGULE EQU     *                   VIRGULE
$SLASHC OCT     17013210            SLASH CHAR
$NO     OCT     20002205            N0
$N1     OCT     21003205            N1
$N2     OCT     22003205            N2
$N3     OCT     23003205            N3
$N4     OCT     24003205            N4
$N5     OCT     25003205            N5
$N6     OCT     26003205            N6
$N7     OCT     27003205            N7
$N8     OCT     30003205            N8
$N9     OCT     31003205            N9
$COLON  OCT     32003200            COLON
SEMICO EQU     *                   SEMI COLON
CARRET EXT     *
CARRET EQU     *                   CAR RET
$CARET  OCT     33000320            CAR RETURN
$LESSTH OCT     34003200            LESS THAN
EQUAL  EXT     *
EQUAL  EQU     *                   EQUAL
$EQSNCH OCT     35003200            EQUAL SIGN CHAR
$GRTHAN OCT     36003200            GREATER THAN
$QMARK DATA     37002200B           QUESTION MARK
$ATSYM  DATA   40003200B
$A      OCT     41003206            A
$B      OCT     42003206            B
$C      OCT     43003206            C
$D      OCT     44003206            D
$E      OCT     45003206            E
$F      OCT     46003206            F
$G      OCT     47003206            G
$H      OCT     50003206            H
$I      OCT     51003246            I
$J      OCT     52003246            J
$K      OCT     53003246            K
$L      OCT     54003246            L
$M      OCT     55003246            M
$N      OCT     56003246            N
$LETERO OCT     57003206            LETTER O
$P      OCT     60003206            P
$Q      OCT     61003206            Q
$R      OCT     62003206            R
$S      OCT     63003206            S
$T      OCT     64003206            T
$U      OCT     65003206            U
$V      OCT     66003206            V
$W      OCT     67003206            W
$X      OCT     70003206            X
$Y      OCT     71003206            Y
$Z      OCT     72003206            Z
$LBRAKT OCT     73003200            L BRAKET
$BKWDVR OCT     74003200            BACKWARDS VIRGULE
$RBRACK OCT     75003210            R BRACKET
MODECG EQU     *                   MODE CHANGE
$ERMRK  OCT     76003200            ERROR MARK
$DELETE OCT     77006000            DELETE
*
*ACCEPT CHAR AND BRANCH
*I/ A=CHAR RT ADJ,X=0,1 FOR 6,9 BIT CHAR
*B LOST, A SAVED
$ACB   ZRO     LACB
       SKG     ACBLIM,2            LIMIT
       SKG     ZERO
       CLA
       STA     ACBCHR
       LDB     B6,2
       STB     ACBBIT
       CLB
       LSH*    ACBSCT,2            SHIFT COUNT
       LDB     ACBMSK,2            MASK
       EAX*    LACB
ACB1   EAX     1,2
       SKM     0,2
       BRU     *+2
       BRU     ACBOUT
       XMA     ACBBIT
       SKA     0,2
       BRU     ACBOUT
       XMA     ACBBIT
       BRU     ACB1
ACBOUT LDA     ADRMSK
       ETR     0,2
       CAX
       LDA     ACBCHR
       BRU     0,2
*



*WIO PATCH  --  FOR SYSTEM DEBUGGING ONLY -- TYPES FTC OCTAL OUTPUT
*CALL FROM A206+6
$WIOPTH ZRO    LWIOPT
       ABC
       LDX     MIN8
WIO1   CLA
       LSH     3
       ADD     M20B
       CIO     ONE
       BRX     WIO1
       TCO     CR
       TCO     LF
       BRR     LWIOPT
$MIN8  DATA    -8
$M20B   DATA    20B
*
*
*
*
$INSPA ZRO     INNP,4          STRING POINTER POINTERS
$OUTSPA ZRO    OUTNP,4
$LSTSPA ZRO    LSTNP,4
$INSPB ZRO     INNP
$OUTSPB ZRO    OUTNP
$LSTSPB ZRO    LSTNP
*
*
*
*
*
*RUN TIME ADD FX ONE
$RTAFX1 ADD     RNTFX1              RUN TIME FX ONE
*RUN TIME LDP FL ONE
$RTLFL1 LDP     RNTFL1              RUN TIME FL ONE
*SKA RUN T    SIGN BIT INST
$SKARI  SKA     RNTSBT              RUN TIME SIGN BIT
*SKG RUN TIME ZERO INST
$SKGRZI SKG     RUNTMO              RUN TIME ZERO
*LIVE EAX+ MOP
$EAXOP  EAX     0,2                 0
*LIVE SKM+ MOP
$SKMOP  SKM     0,2                 0
$INPOP  DATA    0               INPUT OP
$NOPOP  NOP     0                   LIVE NOP MOP
$OUTPOP DATA   4               OUTPUT OP
$RINOP DATA    2               RANDOM INPUT OP
$ROUTOP DATA   6               RANDOM OUTPUT OP
$RIOOP DATA    7               RANDOM I/O OP
$SYMIOF DATA   30B             SYMBOLIC I/O FLAG
$BINIOF DATA   20B             BINARY I/O FLAG
*LIVE HLT PLEX LIST INST
$LHPLIN HLT     PLEXLS              PLEX LIST
*LIVE BRU MOP
$BRUOP  BRU     0                   0
*LIVE SKE+ MOP
$SKEOP  SKE     0,2                 0
$CLAOP CLA
*LIVE LDA+ OP
$LIVELO LDA     0,2                 0
*LIVE STA+ OP
$LIVESO STA     0,2                 0
*
$EMPTQT ASC    '.. '
$CSBQT ASC     '.;;SUBROUTINE .'
$CFNQT ASC     '.;;FUNCTION .'
$CMNPQT ASC    '.;;MAIN PROGRAM;.'
$FORKQT ASC    '.FORK.'
$COMPQT ASC    '.OMPILE.'
$MEMQT ASC     '.MEMORY PANIC - .'
$RDERQT ASC    '.READ ERROR .'
$INFQT ASC     '.NPUT.'
$FRFQT ASC     '. FROM .'
$TOFQT ASC     '. TO .'
$OHQT  ASC     '.O.'
$OUTFQT ASC    '.UTPUT.'
$WHATQT ASC    '. ?.'               WHAT QT
$ECHOQT ASC    '.CHO.'            ECHO QT
$WIOQT  ASC    '.;SPECIFY I-O FILES.'
$WRIOQT ASC    '.;INPUT FILE NOT SYMBOLIC.'
$SUBRQT ASC    '.SUBROUTINE.'
$FNCTQT ASC    '.FUNCTION.'
$IFQT  ASC     '.IF.'
$ERASQT ASC    '.RASE.'
$POSQT ASC     '.OSITION.'
$IMENQT ASC    '.IMENSION.'
$OTOQT ASC     '.OTO.'              OTO QT
$FRMTQT ASC    '.FORMAT.'           FORMAT QT
$CALLQT ASC    '.CALL.'
$CONTQT ASC    '.CONTINUE.'
$TYPEQT ASC    '.TYPE.'
$ACCPTQ ASC    '.ACCEPT.'
$READQT ASC    '.READ.'
$WRITEQ ASC    '.WRITE.'
$PUNCHQ ASC    '.PUNCH.'
$PRINTQ ASC    '.PRINT.'
$FLQT  ASC     '.FLOATING.'
$OVFLQT ASC    '.OVERFLOW.'
$SENSEQ ASC    '.SENSE.'
$WITCHQ ASC    '.WITCH.'
$LIGHTQ ASC    '.LIGHT.'
$ASSGNQ ASC    '.ASSIGN.'
$CMONQT ASC    '.COMMON.'
$TOQT  ASC     '.TO.'
$EQUIVQ ASC    '.EQUIVALENCE.'
$RTURNQ ASC    '.RETURN.'
$PAUSEQ ASC    '.PAUSE.'
$STOPQT ASC    '.STOP.'
$DONEQT ASC    '.;DO NEST ERRORS;.'
$LBLERQ ASC    '.;;LABELING ERRORS;;.'
$CMALQT ASC    '.;;COMMON ALLOCATION;;.'
$PROGQT ASC    '.;PROGRAM ALLOCATION;.'
$SBREQT ASC    '.;;SUBPROGRAMS REQUIRED;.'
$ERRORQ ASC    '.ERROR.'
$DYQT  ASC     '.DUMMY.'
$ALOCAQ ASC    '.ALLOCATION.'
$NUMBQT ASC    '.NUMBER.'
$IDECQT ASC    '.ID DECLARAION.'
$SYTAXQ ASC    '.SYNTAX.'
$SUBSCQ ASC    '.SUBSCRIPTS.'
$ENDQT ASC     '.END.'
$LISTQT ASC    '.IST.'
$FINQT ASC     '.INISHED.'
$DBUGQT ASC    '.EBUG.'              DEBUG QT
$ASQT  ASC     '.AS.'               AS QT
$OPENQT ASC    '.PEN.'            OPEN QT
$WAITQT ASC    '.WAIT.'
$10CRQT ASC    '.;;;;;;;;;;.'        TEN CARRIAGE RETURNS
$IFLQT  ASC    '.NPUT.'      INPUT FILE QT
$OFLQT ASC     '.UTPUT.'     OUTPUT FILE QT
$OUTQT ASC     '.OUT.'
$RANDQT ASC    '.RAND.'
$SXONQT ASC    '.;SYNTAX CHECK ONLY - NO OUTPUT FILE SPECIFIED;.'
$SYMBQT ASC    '.YMBOLIC.'
$BINQT ASC     '.INARY.'
$MAPQT  ASC    '.AP.'
$CLOSQT ASC    '.CLOSE.'       CLOSE FILE QT
$BADLTQ ASC    '.CANT OPEN LIST FILE.'
$PTIDFG OCT     00100000            PART ID FLAG
$ADDRFG OCT     00400000            ADDRESSABLE FLAG
OPTAGB EXT     *
OPTAGB EQU     *                   MOP TAG BIT
$TRBRSF OCT     400                 TAB OR BLANK OR SPACE FLAG
$NOTCRF OCT     2000                NOT CAR RETURN FLAG
INTGLM EXT     *
INTGLM EQU     *                   INTEGER LIST MASK
$TCRBFG OCT     100                 TAB-CAR RETURN-BACKSPACE FLAG
ASCNB  EXT     *
ASCNB  EQU     *                   ASCII NUMBER BASE
$CARRFG OCT     20                  CAR RETURN FLAG
$FNQTFG DATA   10000B          SLASH-QUOTE-DOLLAR FLAG
$NOLLSV OCT     17                  NUMBER OF LAST LIST SAVED
$NOITSV DEC     59                  NUMBER OF ITEMS SAVED
$LINEPP DEC     55                  LINES PER PAGE
$NOLIST DEC     21                  NUMBER OF LISTS
$NOLASL DEC     20                  NO OF LAST LIST
$CGSGIN OCT     14600000            CHANGE SIGN INST
$ABL2MK OCT     77777774            ALL BUT LOW 2 MASK
$MPTITL OCT     04000000            MPROG TITLE
SPTITL EXT     *
SPTITL EQU     *                   SPROG TITLE
$NOPINS OCT     02000000            NOP INST
$NMARKR OCT     00600000            END MARKER
$TOP5BM OCT     76000000            TOP 5 BITS MASK
$TENB4E OCT     24000000            TEN B4 EXACT
       OCT     00000000
$ALLDOL ASC    '$$$'               ALL DOLLARS
$CAROLO DATA    33000000B           CAR RETURN ZERO LOW
$CR     ZRO     155B                 CARRIAGE RETURN
$LF     ZRO     152B                 LINE FEED
$ICR    ZRO     33B                 INTERNAL CARRIAGE RETURN
$TESTNM OCT     77600000            TEST NODE MASK
ABAM   EXT     *
ABAM   EQU     *                   ALL BUT ADR MASK
$CDMASK OCT     77740000            CODE MASK
SCAIDF EXT     *
SCAIDF EQU     *                   SCALAR ID FLAG
$XTRUEM OCT     00200000            EXIT TRUE MASK
PDEFLM EXT     *
PDEFLM EQU     *                   PREVIOUSLY DEF LBL MASK
$TAGBIT OCT     20000000            TAG BIT
FLFLAG EXT     *
FLFLAG EQU     *                   FL FLAG
$MODEMS OCT     00040000            MODE MASK
$MINU17 DEC     -17                 MINUS SEVENTEEN
$NOLSVB DEC     -14                 NUMBER OF LISTS SAVED BRXER
$MINUS5 DEC     -5                  MINUS FIVE
$MINUS2 DEC     -2                  MINUS TWO
NOFLSV EXT     *
NOFLSV EQU     *                   NUMBER OF FIRST LIST SAVED
LDTPFG EQU     *                   LOAD TAPE FLAG
TYBYWF EQU     *                   TYPING BY W FLAG
LETRFG EXT     *
LETRFG EQU     *                   LETTER FLAG
$TWO   DEC     2                   TWO
LOW2BM EXT     *
LOW2BM EQU     *                   LOW 2 BITS MASK
$THREE DEC     3                   THREE
LTRDGF EXT     *
LTRDGF EQU     *                   LETTER OR DIGIT FLAG
$FOUR   DEC     4                   FOUR
$FIVE   DEC     5                   FIVE
$SIX    DEC     6                   SIX
$SEVEN  EQU     *                   SEVEN
$OCTDMS DEC     7                   OCT DIGIT MASK
$EIGHT   EQU   *
$CVRPFG OCT     00000010            COMMA-VIRGULE-R PAREN FLAG
$NINE   DEC     9                   NINE
$TEN    DEC     10                  TEN
$SIXTY  DEC     60                  SIXTY
$BLOKLG DEC     90                  BLOCK LENGTH
$ONEMIL DEC     1000000             ONE MILLION
$TENTH3 OCT     31463146            ONE TENTH B-3
       OCT     31463160
$TENB4  OCT     24000000            TEN B4
       OCT     00000010
$KEYVAL DEC     910                 KEY VALUE
CHMTBL EQU     *                   CHAR MASK TABLE
$CH1MSK OCT     77000000            CHAR 1 MASK
$CH2MSK OCT     00770000            CHAR 2 MASK
$CH3MSK OCT     00007700            CHAR 3 MASK
SIZMSK EXT     *
SIZMSK EQU     *                   SIZE MASK
KYCMSK EQU     *                   KEY CODE MASK
$CH4MSK OCT     00000077            CHAR 4 MASK
$NOTCMT OCT     00777777            NOT CHAR MASK TABLE
       OCT     77007777
       OCT     77770077
$MINS64 OCT     77777700            MINUS 64 (MUST FOLLOW NOTCMT)
$CHARST NOP     0                   CHAR SHIFTER TABLE
       MUL     RSH6                RIGHT SHIFTER 6
       MUL     RSH12               RIGHT SHIFTER 12
       MUL     RSH18               RIGHT SHIFTER 18
$BRS9  BRS     9               START FORK
$BRS10 BRS     10              STOP FORK
$BRS31 BRS     31              WAIT
$CHR3ST LRSH   2                   CHAR SHIFTER TBLE , 3C/W
       LRSH    10
       LRSH    18
$CHMT3B DATA   37700000B,00177400B,377B
$CLNEGL DATA    00037377B           CHARIS LOWER NEG LIMIT
CUPOSL EXT     *
CUPOSL EQU     *                   CHARIS UPPER POS LIMIT
$TREMSK OCT     00000377            TREE FIELD MASK
$MAXLBL DEC     0                   MAX LBL ALLOWED
       DEC     100000
$MAXINT OCT     00000000            MAX INTEGER ALLOWED
MADELB EXT     *
MADELB EQU     *                   MADE LBL
ALBUTS EQU     *                   ALL BUT S
ABSM   EQU     *                   ALL BUT SIGN MASK
$POSFSC OCT     37777777            POS FULL SCALE
FIVMSK EQU     *                   FIVE DEC MASK
$ABSATM OCT     17777777            ALL BUT SIGN AND TAG MASK
$MAXASA OCT     00000000            MAX ARRAY SIZE ALLOWED
$RSH6   OCT     00400000            RIGHT SHIFTER 6
RSH12  EQU     *                   RIGHT SHIFTER 12
$DECHFG OCT     00004000            DELETE CHAR FLAG
CNCHFG EQU     *                   CONTINUATION CHAR FLAG
ONEA14 EXT     *
ONEA14 EQU     *                   ONE IN 14TH BIT
$RSH14  OCT     00001000            RIGHT SHIFTER 14
LBLSTM EXT     *
LBLSTM EQU     *                   LABEL LIST MASK
STFLK  EXT     200B
STFLK  EQU     200B                START OF LINKS
STOFLK EXT     *
STOFLK EQU     *                   START OF LINKS
$RSH16  OCT     00000200            RIGHT SHIFTER 16
$IJKLMN DATA    40B                 IJKLMN FLAG
$RSH18  OCT     00000040            RIGHT SHIFTER 18
$FOURK  DATA    00010000            4 THOUSAND
$FXTPCD OCT     07600000            FX TEMP PNTR CODE
$DYPTCD OCT     10400000            DMY PNTR CODE
$CODE   OCT     00740002            CODE
       OCT     01700002
       OCT     02400301            LABEL LIST CODE
       OCT     03440002
       OCT     04400101
       OCT     05500005
       OCT     06500002
       OCT     07000003
       OCT     10500003
       OCT     11700003
       OCT     12000002
       OCT     13000003
       OCT     14000101
       OCT     15000003
       OCT     16000003
       OCT     17000101
       OCT     20000101
       OCT     21000101
       OCT     22000102
       OCT     23000101
       OCT     24000101
*
9BIT   EXT     40000B
9BIT   EQU     40000B
$LFTMP ZRO     0
$ACBLIM ZRO     77B
       ZRO     177B                (MUST FOLLOW 77B
$ACBSCT ZRO     18                  SHIFT COUNT
       ZRO     15                  (MUST FOLLOW
$ACBMSK DATA    77400000B
       DATA    77740000B
$B6     DATA    400000B
$B9     DATA    40000B
$FTBLE  ZRO     TBLE,1          FORK TABLE ADDRESS
$BELL   ZRO     147B
$TWOH  DATA    200
$RTPERD ZRO    16B                 RIGHT JUSTIFIED PERIOD
$COMPL7 DATA    77777770B
$HBPTI BSS     2                   HEADING BUFFER PTRS INITIAL
HLTOP  EXT     *
HLTOP  EQU     *                   HLT INST
POSTRT EXT     *
POSTRT EQU     *                   POSITIVE TRAIT
SKBLFG EXT     *
SKBLFG EQU     *                   SKIP BLANKS FLAG
DPONE  EXT     *
DPONE  EQU     *                   DP ONE
RUNTMO EXT     414B
RUNTMO EQU     414B                RUN TIME ZERO
$ZERO   ZRO     0                   ZERO
DIGTFL EXT     *
DIGTFL EQU     *                   DIGIT FLAG
OPINDB EXT     *
OPINDB EQU     *                   MOP IND BIT
NEGTRT EXT     *
NEGTRT EQU     *                   NEGATIVE TRAIT
UBLKFG EXT     *
UBLKFG EQU     *                   USE BLANKS FLAG
RSH23  EQU     *                   R SHIFTER 23
RNTFL1 EQU     415B                RUN TIME FL ONE
RNTFL1 EXT     415B
RNTFX1 EQU     415B                RUN TIME FX ONE
RNTFX1 EXT     415B
$ONE   ZRO     1                   ONE
RELADB EQU     *                   RELATIVE ADR BIT
MPYDLM EXT     *
MPYDLM EQU     *                   MULTIPLY DEF LBL MASK
SIGNBT EXT     *
SIGNBT EQU     *                   SIGN BIT
RNTSBT EXT     417B
RNTSBT EQU     417B                RUN TIME SIGN BIT
$SIGN  ZRO     0,4                 SIGN BIT
ALONES EQU     *                   ALL ONES WORD
NEGFS  EXT     *
NEGFS  EQU     *                   NEG FULL SCALE
MINUS1 EXT     *
MINUS1 EQU     *                   MINUS ONE
$ONES  DATA    -1
$CONONE DATA   1
$CONZRO DATA   0
PNTRAM EXT     *
PNTRAM EQU     *                   PNTR ADR MASK
$ADRMSK ZRO    37777B              ADDRESS MASK
$A183I  EAX     SIZEM1,2            INITIAL CONTENTS FOR MODIFIED COMMAND
$A184I  SKE     BOTSZ2,2
$A185I  SKE     BOTSZ3,2
$A187I  EAX     SIZEM1,2
$A188I  SKM     BOTSZ2,2
$A232I  LDA     BOTP1,2
$A233I  STA     BOTM1,2
$SCENI1 ASC    '  .'               SYMBOLIC CENTRAL INITIALIZE
$SCENI2 ASC    '.  '
$PRGEND DATA   32465152B              PROGRAM END WORD
$EOFWRD DATA   27657537B          END OF FILE WORD
       NOLIST EXT,GO
       END
→100                 TAB-CAR RETURN-BACKSPACE FLAG
ASCNB  EXT     *
ASCNB  EQU     *                   ASCII NUMBER BASE
$CARRFG OCT     20                  CAR RETURN FLAG
$FNQTFG DATA   10000B          SLASH-QUOTE-DOLLAR FLAG
$NOLLSV OCT     17                  NUMBER OF LAST LIST SAVED
$NOITSV DEC     59                  NUMBER OF ITEMS SAVED
$LINEPP DEC     55                  LINES PER PAGE
$NOLIST DEC     21                  NUMBER OF LISTS
$NOLASL DEC     20                  NO OF LAST LIST
$CGSGIN OCT     14600000            CHANGE SIGN INST
$ABL2MK OCT     77777774            ALL BUT LOW 2 MASK
$MPTITL OCT     04000000            MPROG TITLE
SPTITL EXT     *
SPTITL EQU     *                   SPROG TITLE
$NOPINS OCT     02000000            NOP INST
$NMARKR OCT     00600000            END MARKER
$TOP5BM OCT     76000000            TOP 5 BITS MASK
$TENB4E OCT     24000000            TEN B4 EXACT
       OCT     00000000
$ALLDOL ASC    '$$$'               ALL DOLLARS
$CAROLO DATA    33000000B           CAR RETURN ZERO LOW
$CR     ZRO     155B                 CARRIAGE RETURN
$LF     ZRO     152B                 LINE FEED
$ICR    ZRO     33B                 INTERNAL CARRIAGE RETURN
$TESTNM OCT     77600000            TEST NODE MASK
ABAM   EXT     *
ABAM   EQU     *                   ALL BUT ADR MASK
$CDMASK OCT     77740000            CODE MASK
SCAIDF EXT     *
SCAIDF EQU     *                   SCALAR ID FLAG
$XTRUEM OCT     00200000            EXIT TRUE MASK
PDEFLM EXT     *
PDEFLM EQU     *                   PREVIOUSLY DEF LBL MASK
$TAGBIT OCT     20000000            TAG BIT
FLFLAG EXT     *
FLFLAG EQU     *                   FL FLAG
$MODEMS OCT     00040000            MODE MASK
$MINU17 DEC     -17                 MINUS SEVENTEEN
$NOLSVB DEC     -14                 NUMBER OF LISTS SAVED BRXER
$MINUS5 DEC     -5                  MINUS FIVE
$MINUS2 DEC     -2                  MINUS TWO
NOFLSV EXT     *
NOFLSV EQU     *                   NUMBER OF FIRST LIST SAVED
LDTPFG EQU     *                   LOAD TAPE FLAG
TYBYWF EQU     *                   TYPING BY W FLAG
LETRFG EXT     *
LETRFG EQU     *                   LETTER FLAG
$TWO   DEC     2                   TWO
LOW2BM EXT     *
LOW2BM EQU     *                   LOW 2 BITS MASK
$THREE DEC     3                   THREE
LTRDGF EXT     *
LTRDGF EQU     *                   LETTER OR DIGIT FLAG
$FOUR   DEC     4                   FOUR
$FIVE   DEC     5                   FIVE
$SIX    DEC     6                   SIX
$SEVEN  EQU     *                   SEVEN
$OCTDMS DEC     7                   OCT DIGIT MASK
$EIGHT   EQU   *
$CVRPFG OCT     00000010            COMMA-VIRGULE-R PAREN FLAG
$NINE   DEC     9                   NINE
$TEN    DEC     10                  TEN
$SIXTY  DEC     60                  SIXTY
$BLOKLG DEC     90                  BLOCK LENGTH
$ONEMIL DEC     1000000             ONE MILLION
$TENTH3 OCT     31463146            ONE TENTH B-3
       OCT     31463160
$TENB4  OCT     24000000            TEN B4
       OCT     00000010
$KEYVAL DEC     910                 KEY VALUE
CHMTBL EQU     *                   CHAR MASK TABLE
$CH1MSK OCT     77000000            CHAR 1 MASK
$CH2MSK OCT     00770000            CHAR 2 MASK
$CH3MSK OCT     00007700            CHAR 3 MASK
SIZMSK EXT     *
SIZMSK EQU     *                   SIZE MASK
KYCMSK EQU     *                   KEY CODE MASK
$CH4MSK OCT     00000077            CHAR 4 MASK
$NOTCMT OCT     00777777            NOT CHAR MASK TABLE
       OCT     77007777
       OCT     77770077
$MINS64 OCT     77777700            MINUS 64 (MUST FOLLOW NOTCMT)
$CHARST NOP     0                   CHAR SHIFTER TABLE
       MUL     RSH6                RIGHT SHIFTER 6
       MUL     RSH12               RIGHT SHIFTER 12
       MUL     RSH18               RIGHT SHIFTER 18
$BRS9  BRS     9               START FORK
$BRS10 BRS     10              STOP FORK
$BRS31 BRS     31              WAIT
$CHR3ST LRSH   2                   CHAR SHIFTER TBLE , 3C/W
       LRSH    10
       LRSH    18
$CHMT3B DATA   37700000B,00177400B,377B
$CLNEGL DATA    00037377B           CHARIS LOWER NEG LIMIT
CUPOSL EXT     *
CUPOSL EQU     *                   CHARIS UPPER POS LIMIT
$TREMSK OCT     00000377            TREE FIELD MASK
$MAXLBL DEC     0                   MAX LBL ALLOWED
       DEC     100000
$MAXINT OCT     00000000            MAX INTEGER ALLOWED
MADELB EXT     *
MADELB EQU     *                   MADE LBL
ALBUTS EQU     *                   ALL BUT S
ABSM   EQU     *                   ALL BUT SIGN MASK
$POSFSC OCT     37777777            POS FULL SCALE
FIVMSK EQU     *                   FIVE DEC MASK
$ABSATM OCT     17777777            ALL BUT SIGN AND TAG MASK
$MAXASA OCT     00000000            MAX ARRAY SIZE ALLOWED
$RSH6   OCT     00400000            RIGHT SHIFTER 6
RSH12  EQU     *                   RIGHT SHIFTER 12
$DECHFG OCT     00004000            DELETE CHAR FLAG
CNCHFG EQU     *                   CONTINUATION CHAR FLAG
ONEA14 EXT     *
ONEA14 EQU     *                   ONE IN 14TH BIT
$RSH14  OCT     00001000            RIGHT SHIFTER 14
LBLSTM EXT     1R     IDENT   (TEMPORARY STORAGE)
*
********  ORIGIN AT 400  ********
*
*****  FIXED STORAGE LOCATIONS  *****
*  1-77=TSS STORAGE, 100-177=FORTRAN POPS, 200-277=SYSTEM SUBROUTINES
*  400-450 SYSTEM CONSTANTS
*
*R U N T I M E      T R A N S F E R     V E C T O R        LOC 400
$E0ADR ZRO     0                   ABS. BASE OF ERASABLE STORAGE
$E0TAG ZRO     0
$E0IND ZRO     0
$EADR1 ZRO     0
$E0SIZE ZRO    0
$FLTIND ZRO    0
$SENSLW ZRO    0                   SENSE LIGHT WORD
$SENSSW ZRO    0                   SENSE SWITCH WORD
$TA    ZRO     0               (410)
$TB    ZRO     0
$TX    ZRO     0
$ERRCON ZRO    0
$ZERO  BSS     1     CONSTANTS -- INITIALIZED AT RUN-TIME
RTSH23 EXT     *               RIGHT SHIFT 23
$ONE   EQU     *               FIXED POINT ONE
$FPONE DATA    1               FLOATING POINT 1
       DATA    20000000B
$SIGN  DATA    40000000B
$ONES  DATA    -1              (420)
$ECHO2 ZRO     0               USERS ECHO ROUTINE



*L I N K S
$LACB  ZRO     0
$LCLFLE ZRO    0
$LCMPGO ZRO    0
$LD130 ZRO     0
$LDECLF ZRO    0
$LECHO ZRO     0
$LERROR ZRO    0
$LERMSG ZRO    0
$LFDL00 ZRO    0
$LFIX  ZRO     0
$LFLD00 ZRO    0
$LFLOAT ZRO    0
$LFXBND ZRO    0
$LIFSNL ZRO    0
$LIFSNW ZRO    0
$LIFVFL ZRO    0
$LIOLSA ZRO    0
$LLOCST ZRO    0
$LSENST ZRO    0
$LSTOP ZRO     0
$LPOWER ZRO    0
$LPAUSE ZRO    0
$LIOSUB ZRO    0
$ERARET ZRO    0
$POSITR ZRO    0
$STRRET ZRO    0
$LNDDMY ZRO    0
$LO30  ZRO     0
$LADS00 ZRO    0
$LARC00 ZRO    0
$LARD00 ZRO    0
$LBFD00 ZRO    0
$LCDB00 ZRO    0
$LDNS00 ZRO    0
$LFDT00 ZRO    0
$LFMT00 ZRO    0
$LICD00 ZRO    0
$LICF00 ZRO    0
$LICU00 ZRO    0
$LMPR00 ZRO    0
$LICW00 ZRO    0
$LIMT00 ZRO    0
$LRBI00 ZRO    0
$LTIN  ZRO     0
$LTTI00 ZRO    0
$LINF00 ZRO    0
$LWCS00 ZRO    0
$LFCS00 ZRO    0
$LWOT00 ZRO    0
$LSETT ZRO     0
$LSTRTD ZRO    0
$LRIT00 ZRO    0
$LRNF00 ZRO    0
$LFTSOR ZRO    0
$LDBLXR ZRO    0
$RETURN BSS     1
$LIB1   BSS     1
$LIB2   BSS     2
$LIB3   BSS     1
$LIB4   BSS     2
$LIB5   BSS     2
$LIB6   BSS     1
$LIB7   BSS     1
*
*
*F L A G S
$FARF  ZRO     0        -1=A,R FORMAT,  0=LETTER O FORMAT
$FERR  ZRO     0        -1=ERROR PAUSE, 0=PAUSE
$FEOR  ZRO     0               -1=EOR REACHED ON INPUT
$FEOF  ZRO     0        -1=EOF READ
$FIODIR ZRO    0               I/O DIRECTION  
$FIOLDA ZRO    0
$FNAME ZRO     0
$SERFLG ZRO    0               0=SPECIAL ERROR, -1=NORMAL
$FSSW  ZRO     0        SENSE SW  SET/RESET
$FDBUG ZRO     0        -1=DEBUG MODE, 0=CMMD MODE OR PROG RUN
$CMDF  ZRO     0               CONTAINS FIRST COMMAND CHARACTER
$ERPSF ZRO     0               ERROR AND PAUS FLAG
*


$TRUNQ BSS     1
$PTEMP BSS     1
       BSS     1
$QTEMP BSS     1
$QTEMP1 BSS    1



$QBOOT  BSS    1
$TEMP1  BSS    1
AGTTP1 EXT     TEMP1               AGT
FIXTMP EXT     TEMP1               FIX
$TEMP2  BSS    1
FLAXRG EXT     TEMP2               FLOAT
FXBAXR EXT     TEMP2               FIX
TMPIZ  EXT     TEMP2               FSCAN
$TEMP3  BSS    1
FIXTP2 EXT     TEMP3               FIX
TMPX   EXT     TEMP3               FSCAN
$TEMP4  BSS    1
FLA