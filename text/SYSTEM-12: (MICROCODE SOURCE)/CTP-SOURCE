* THIS IS THE SOURCE FOR THE CTP MICROCODE
* LOCATION 0 IN BANK B

       ORG 2000B;

* INSTRUCTION TABLE.  MUST BE ON 128 WORD BOUNDARY
RSTCTP: Z←MODE, GOTO IRESET;
* ENTER CTP FROM CHIO. LOCATION 1 IN BANK B
CTP:   GOTO ICONT1, M←P;
BRU:     Q←R, Z←-1, GOTO FIXP;
* OVERFLOW FROM BRX
BRX1:    M AND Q, GOTO FIXP IF LB#0, Q←R;
ETR:     FETCH, DGOTO ILOOP;
         AR←M AND Q;
MRG:     FETCH, DGOTO ILOOP;
         AR←M OR Q;
EOR:     FETCH, DGOTO ILOOP;
         AR←M EOR Q;
NOP:     GOTO ILOOP;
* OVERFLOW FROM EXU
EXU1:    Z←READ, GOTO IL0;
EXU:     FETCH, Z←FLAGADR;
         ALERT, GOTO EXU1;
STA:    M←AR, GOTO STOR;
* OVERFLOW FROM SHIFT IN THESE THREE HOLES
ENDLSH:  AR←M AND Q ! Z AND NOT Q, GOTO ILOOP;
STB:     M←BR, GOTO STOR;
ENDRSH:  BR←M AND Q ! Z AND NOT Q, GOTO ILOOP;
STX:     M←XR, GOTO STOR;
GOTSHM:  T←Q←Z, M←BR, GOTO DOSHIFT;
BRX:     M←XR, Z←-1, DGOTO BRX1;
         M←XR←M+1, DGOTO ILOOP, Q←IABIT;
BRM:     M←P, SETA, CALL STOR;
         Q←0, GOTO FIXP;
UPOT:    ALERT, DGOTO ILOOP;
         Z←BR, POT;
UPIN:   ALERT, DGOTO LDB1;
         M←READ, DGOTO ILOOP;
RCH:     M←R, Q←RCHMASK, DGOTO RCH1;
         M←M AND Q LCY 16, T←Z←XR;
SKE:     FETCH, DGOTO TEST;
         M←M EOR Q;
BRR:     Q←ADMASK, FETCH, DGOTO FIXP;
         Q←M AND NOT Q, Z←0;
SKB:     Q←BR, FETCH;
SKB1:    M←M AND Q, GOTO TEST;
SKN:     Q←4B7, FETCH;
SKN1:    M←M AND Q ! Q, GOTO TEST;
SUB:     FETCH, DGOTO ILOOP;
         AR←Q-M;
ADD:     FETCH, DGOTO ILOOP;
         AR←Q+M;
SKR:     Z←R, FETCH, DGOTO SKN1;
         M←M-1, Q←BOUND, SETA, CALL STOR1;
MIN:     Q←1, FETCH;
MIN1:    M←M+Q, GOTO STOR;
XMA:     FETCH, DGOTO CBA;
         Q←M, M←AR, DGOTO STOR;
ADM:     FETCH, GOTO MIN1;
* SKG WHERE SIGNS AGREE
SKG1:  M←M-Q, Q←4B7, GOTO SKN1;
SHIFT:   M←R, Q←SCMASK, DGOTO SHFT1;
         Z←M AND Q, Q←SHOPMSK;
SKM:     Q←BR, FETCH;
         M←M AND Q - Z AND Q, GOTO TEST;
LDX:     Q←0, FETCH, DGOTO ILOOP;
LDX1:    XR←M AND NOT Q ! Z AND Q;
SKA:     FETCH, GOTO SKB1;
* SKG WHERE SIGNS DISAGREE
SKG2:  Q←4B7, GOTO SKN1;
* SKG IS SIGN OF M-AR IF SIGNS AGREE, SIGN OF AR IF NOT
SKG:   FETCH, DGOTO SKG1;
       GOTO SKG2 ON M EOR Q<0;
LDB:     FETCH, DGOTO ILOOP;
LDB1:    BR←M;
LDA:     FETCH, DGOTO ILOOP;
LDA1:    AR←M;
EAX:     M←R, Q←ADMASK, DGOTO LDX1;
         Z←XR, DGOTO ILOOP;
* NOTE THAT UPS1 SETS UP Z AND PROVIDES THE PENDING DGOTO ILOOP
* NEEDED BY UPSTAB
UPS:     Q←R, M←UPSMASK, DGOTO UPS1;
         DGOTO M AND Q LCY 16 MRG UPSTAB+BANKBBIT;
XJ:    T←REL, HFETCH, DGOTO ILOOP;
       REL←M, M←T, STORE, DGOTO IL0;
UCALL: M←Z←R, Q←4B3, CLRA, DGOTO UC2;
       Q←M AND Q LCY 12, Q←P, GOTO UC1 IF Z<0;
* OPCODE 44 IS SPARE
       ALL;
       ALL;

* LOCATION 112B

* START CTP AND SHUT OFF CHIO
CTPGO: Z←0-1, GOTO IRESET;

IRESET: MODE←-1, MAR←CTPREL, FETCH, CALL MAINCHK;
         Z←REL←M, MAR←MAR+1, FETCH;
         BOUND←M, Q←2;
         MAR←Z+Q, M←P, STORE, DGOTO FIXP;
         Z←IOCTL←0, Q←2;

* LOCATION 120B

* UPS TABLE. MUST BE ON 8-WORD BOUNDARY
* DGOTO ILOOP IS PENDING
UPSTAB:  Q, STROBE;
UPR:     Q, CLRPRO;
PRO:     Q, SETPRO, GOTO * IF PRONEX, Z←0;
* PRO FALLS THROUGH WITH Z=0.
* OTHERWISE Z=R
STR2:  Z, SETFAIL, GOTO ILOOP;
CLEARMAP: CLRMAP;
WAIT: Q←P, M←WAITINS, GOTO WAIT1;
WAITGO: M←WAITINS, GOTO WAIT2;
* UPS 7 IS SPARE
       ALL;
      GOTO SKIP IF AT1OFF;
       GOTO SKIP IF AT2OFF;
       GOTO SKIP IF AT3OFF;
       GOTO SKIP IF NOSTROBE;
       CLSTROBE;
       GOTO SKIP IF NOCRASH;
       CLFAIL;
       Q, GOTO SKIP IF PRONEX;

* LOCATION 140B
* RCH TABLE. MUST BE ON 16-WORD BOUNDARY.
*  ENTERED WITH DGOTO ILOOP PENDING, ABX IN MQZ
RCHTAB:  Q←Z←R, GOTO XSA1;
CSA:     Z←R, Q←0, GOTO XSA1;
CLAB:    AR←M←0, GOTO CAB;
CLA:     AR←0;
CLB:     BR←0;
CLX:     XR←0;
CAB:     BR←M, GOTO ILOOP;
* THIS LINE IS EXECUTED FROM SEVERAL PLACES
CBA:     AR←Q, Q←LNGSX+BANKBBIT;
XAB:     AR←Q, GOTO CAB;
CBX:     XR←Q;
CXB:     BR←Z;
XXB:     XR←Q, GOTO CAB, M←T;
CXA:     AR←Z, GOTO ILOOP;
CAX:     XR←M;
XXA:     XR←M, M←T, GOTO CXA;
CNA:   AR←0-M;

*
* CHECK R FOR < BOUND, THEN STORE M WITH MAR AND GOTO ILOOP
* UNLESS A IS SET, IN WHICH CASE RETURN
STOR:    Q←BOUND;
STOR1:   GOTO *+2 ON Z←R<0;
         GOTO RSTCTP ON Q-Z<=0;
         STORE, RETURN IF ASET, Q←4B7;
* FALL THROUGH

ILOOP:   MAR←ABSP←ABSP+1, FETCH;
WAIT2: Q←MODE, Z←FLAGADR;
       Q←P, ALERT, DGOTO IL0 ON NOT Q=0;
       P←Q+1, Z←READ;
       GOTO 547, BANKA;
         Q←1;    *WAS GOTO RETCTP IF AT1ON
        Z←FLAGADR, ALERT, M←P;
        Z←READ;

* CONTINUE EXECUTION, STARTING WITH INSTRUCTION ADDRESSED BY P
* (NOW IN M)
ICONT1:  Q←REL;
         MAR←ABSP←M+Q, FETCH;

IL0:     Q←IOCTL, GOTO *+1;
         GOTO DOIO ON Z←Q AND Z#0, Q←OPMASK;
IL1:     U←Q←M AND Q LCY 8;
         Q←R←Q LCY 2, Z←2*MAXOP+2;
         GOTO POPMB ON Q-Z>=0, Z←REL, CLRA;
IL2:     CALL INDEX ON T←M LCY 1<0, Q←ADMASK;
        Q←R←M AND NOT Q, M←R MRG BANKBBIT;
         MAR←Q+Z;
         DGOTO M, Q←T;
       GOTO *+1 ON Q LCY 8<0, Z←Q←AR;
* INDIRECTION
         Z←REL, R←M MRG BANKBBIT, FETCH;
         GOTO IL2 ON M>=0, Q←75B6;  *LONGAD - PRIMEM
* ABSOLUTE INDIRECTION
         CALL INDEX ON M LCY 1<0;
        R←MAR←M AND NOT Q MRG 4B7, Z←R;
         GOTO Z, Z←Q←AR;
* SUBROUTINE FOR INDEXING
INDEX:   Z←XR, DRETURN;
         M←M+Z, Z←REL;

* OPCODE IN Q GREATER THAN MAX DEFINED.  TRAP UNLESS IT IS >77B,
* IN  WHICH CASE IT IS POP.
POPMB:   Z←POPBIT*2/1B5;
         GOTO RSTCTP ON Q AND Z=0, R←EXPOP;

* EXECUTING POP WITH NUMBER RCY 1 IN U, EFFECTIVE ADDRESS IN R. STORE
* P IN 0, R IN 1 AND JUMP TO U
EXPOP:   Z←MAR←REL;
         M←P MRG IABIT, STORE;
       Z←-1, Q←U, DGOTO FIXP;
       Q←Q LCY 1;

* COME HERE AFTER XCHREGS ON RETURN FROM UCALL
URET1: GOTO FIXP ON Q←P>=0, Q←Z←SIGN;
       P←Q AND NOT Z, GOTO *-1 IF ACLEAR, Z←SIGN+1;
* FALL THROUGH TO FIXP

* SET P TO Q+Z, RECOMPUTE ABSP AND GO TO ILOOP
FIXP:    Q←P←Q+Z;
         Z←REL, DGOTO ILOOP;
         ABSP←Q+Z;

* THESE LINES ARE USED  BY SKIP INSTRUCTIONS
TEST:    M, GOTO ILOOP IF LB#0;
SKIP:    Q←P, Z←1, GOTO FIXP;
*
* REMAINDER OF RCH
RCH1:    DGOTO M MRG RCHTAB + BANKBBIT, Q←BR;
         M←AR, DGOTO ILOOP;

* FINISH SETTING A CONTROL REGISTER.
XSA1:    T←SKZ, Z←Q, DGOTO CBA;
         SKZ←M, Q←T, DGOTO ILOOP;

* FINISH WAIT
WAIT1: P←Q-1, GOTO WAIT2;

* OVERFLOW FROM UPS
UPS1:  Z←R, DGOTO ILOOP;


* REST OF SHIFT
SHFT1:   M←R←M AND Q LCY 16, Q←MAXSHOP;
         GOTO RSTCTP ON Q-M<0, Q←WDLNG;
LNGSHL:  T←BR, GOTO SHORTSH ON Z-Q<0;
         Z←Z-Q, Q←AR, DGOTO CBA;
         T←BR←Q, Q←T, DGOTO *+1;
         GOTO Q+M, Q←WDLNG;
LNGSX:   GOTO LNGSHL;
         BR←0, GOTO LNGSHL;
         AR←-1, GOTO LNGSHL ON T<0;
         AR←0;
         GOTO LNGSHL;
SHORTSH: Q←1;
       M AND NOT Q, GOTO *+2 IF LB=0, M←WDLNG;
         Z←M-Z;
         GOTO GOTSHM ON MAR←Q-Z>=0, Q←0;
SHLOOP:  MAR←MAR+1, Q←Q LCY 1 MRG 1, GOTO SHLOOP IF R0<0;
         M←BR, T←Q;
DOSHIFT: M←M LCL Z, U←AR;
         BR←M LCH Z, M←U;
        M←M LCL Z, Q←SHMRGX+BANKBBIT;
         Z←M LCH Z, M←R;
         DGOTO M+Q, M←BR;
         Q←T;
SHMRGX:  BR←M AND NOT Q ! Z AND Q, GOTO ENDLSH;
         BR←M AND NOT Q, GOTO ENDLSH;
         AR←Z OR NOT Q, GOTO ENDRSH ON U<0;
         AR←Z AND Q, GOTO ENDRSH;
         AR←Z AND Q ! M AND NOT Q, GOTO ENDRSH;
* ENDLSH, ENDRSH AND GOTSHM ARE FILLING EMPTY WORDS IN THE
* INSTRUCTION TABLE

*
* THE AND OF THE FLAG WORD AND IOCTL (IN Z) IS #0. LOOK FOR ACTIVE
* DEVICE
DOIO:    Q←Z, T←R0←0;
         Q←Q LCY 20, Z←T←T+1, DGOTO *;
         Q←R0←Q LCY 3, GOTO *+1 IF R0<0, M←IOPTR-2;
* GOT DEVICE NUMBER+2 IN T AND Z
         M←M+Z, Q←REL;
         MAR←Q+M, FETCH, Q←2B7;
         Q←Q LCL Z;
         Z←Q LCH Z MRG 4B7, Q←REL;
         U←M+Q;
         GOTO *+2 ON Q←R←M←M+1<0, SETA;
         STORE;
         GOTO CTPOUTPUT ON Q LCY OUTSHIFT<0;
* INPUT
         ALERT, MAR←U, DGOTO DONEIO, M←77B6;
         M←READ, R←Q AND NOT M, CALL STOR;
CTPOUTPUT: DGOTO NOEND ON M LCY EOBSHIFT>=0;
       MAR←U, FETCH;
        M EOR Q, GOTO NOEND IF LB#0;
* ENCOUNTERED END-OF-BUFFER
         Q←IOCTL, DGOTO DONEIO;
         IOCTL←Q AND NOT Z;
NOEND:   ALERT;
         Z←M, POT;
* COMPLETED IO. CHECK FOR INTERRUPT
DONEIO: M←U, Q←OPMASK, DGOTO CTP;
       GOTO *+1 ON M LCY INTSHIFT<0, Z←0;
* SHOULD CAUSE IT
         M←T MRG BRMINS+IOINT, GOTO IL1;

*
* SELF-FILL. TURN ON READER AND READ 64 WORDS (256 6-BIT CHARACTERS)
* INTO THE FIRST 64 (RELATIVE) LOCATIONS IN CTP MEMORY, AFTER
* SETTING CTPREL TO 10000B AND CTPBND TO 40000B
XSELFFILL: MAR←CTPREL, CALL MAINCHK;
       M←U+1, STORE;
       MAR←MAR+1, M←40000B, STORE;
         Z←PTRADR, ALERT;
         Z←GOPTR, POT;
* SKIP OVER INITIAL BLANK TAPE
         Z←PTRADR, ALERT;
       GOTO *-1 ON M←E2>=0, PIN, Q←377B, .TAX, .BL←10B, .BR←10B;
         GOTO *-2 ON M AND Q=0, ABSP←-64;
* ASSEMBLE ONE WORD FROM PAPER TAPE. USES AR, R. LEAVES
* RESULTS IN AR,M
SFLOOP:  M←Q←0, R←-4;
         M←M OR Q LCY 4, DGOTO * ON R←R+1<0;
         AR←M←M LCY 2, CALL RBPT;
* STORE ASSEMBLED WORD AND CLOSE LOOP
         M←M OR Q, MAR←U←U+1, STORE, DGOTO CTPGO;
         GOTO SFLOOP ON ABSP←ABSP+1<0, M←0;

* SUBROUTINE TO READ ONE BYTE FROM PAPER TAPE FOR SELF-FILL.
* CHECK FOR SICK READER AND STOP IT IN THAT CASE.
* CHECK PARITY AND STOP THE READER IF IT IS WRONG.  OTHERWISE
* RETURN THE LAST 6 BITS OF THE BUTE IN Q, AR IN M.
* ASSUME THE READER IS RUNNING ON ENTRY.  IF IT IS STOPPED,
* THE INPUT WORD WHICH CAUSED THE TROUBLE IS DISPLAYED IN
* THE SENSE LIGHTS.  CLOBBERS MQZ, R0,T
RBPT:    Z←PTRADR, ALERT;
       GOTO RBPT ON T←Q←E2>=0, PIN, M←PTRERR+PTRSICK, .TAX, .BL←10B, .BR ←10B;
         GOTO STOPTR ON Z←M AND Q#0, R0←-WDLNG;
* GOT A CHARACTER IN Q. COMPUTE PARITY OF THE WHOLE WORD, WHICH
* SHOULD BE EVEN SINCE THE FLAG BIT IS SET
         Z←Q EOR Z, R0←R0+1;
         Q←Q LCY 1, GOTO *-1 IF R0<0, M←77B;
         Q←M AND Q, M←AR, RETURN IF Z>=0;
* STOP READER AND DISPLAY INPUT WORD IN LIGHTS
STOPTR:  Z←PTRADR, ALERT;
         Z←HLTPTR, POT, GOTO *-1, T←T;

*
* OVERFLOW FROM UCALL.
UC1:   SETA;
UC2:   P←Q, R0←@SR0+SIGN+100B, CALL XRS;
* FALL THROUGH INTO XCHREGS

* SIGN OF Z(R0) SET ON CALL, CLEAR ON RET
XCHREGS: M←R1, R1←M, CALL XRS;
       M←R2, R2←M, CALL XRS;
       M←R3, R3←M, CALL XRS;
       M←R4, R4←M, CALL XRS;
       M←R5, R5←M, CALL XRS;
       M←R6, R6←M, CALL XRS;
       Q←SKZ, M←Q, CALL XRS;
       Z←SRR, GOTO URET1 IF Z>=0;
       DGOTO URET;
       CALL *+1, R0←SR0;
CALLZ: GOTO Z, Z←XR, DSETBAS;

* CONTROL RETURNS HERE FROM THE MICRO-CODED ROUTINE
URET:  AR←M, M←R0, DGOTO XCHREGS, SETBBS;
       XR←Z, Z←R0←@SR0+100B, CALL XRS;


XRS:   SKZ←M, Z←R0←R0+1, DRETURN;
       M←SKZ;


* SUBROUTINE TO TRY FOR REL CORE ADDRESS. SETS UP U FOR THE
* CONVENIENCE OF SELFFILL
MAINCHK: U←7777B;
       RETURN;

* RETURN TO HOST
RETCTP: GOTO CTPRET, BANKA;

* UNUSED CELLS
       ALL;
       ALL;



       END;