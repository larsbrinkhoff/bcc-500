*  THE PHILOSOPHY OF STARTUP.


*  WHEN IT COMES TIME TO SEND A COMMAND TO A TSU THE ROUTINES IN THIS
*  PACKAGE ARE CALLED.  THE DISKS AND DRUMS HAVE THE SAME PROPERTIES I.E.
*    A.  THERE ARE SEVERAL UNITS, ANY OF WHICH MAY BE SICK.
*    B.  A DATA STRUCTURE IS ASSOCIATED WITH EACH DEVICE CALLED A 
*        "SECTOR TABLE".
*    C.  IT IS BEST TO AVOID CHANGING UNITS IF POSSIBLE.


*  BECAUSE OF THESE SIMILARITIES A PAIR OF ROUTINES CALLED GET FIRST
*  DEVICE (GTFDV) AND DO STARTUP (DOSTART) DO MOST OF THE WORK OF THE
*  STARTUP.  GET FIRST DEVICE ALSO HAS AN ENTRY POINT AT GET NEXT NODE
*  (GTNND).


*  THE IDEA IS THEN THAT STARTUP FOR THE DRUM INITIALIZES A FEW
*  SCRATCHPAD REGISTERS AND CALLS GET FIRST DEVICE.  IF THIS ROUTINE 
*  RETURNS THE DISK ADDRESS WILL BE IN M, THE CURRENT UNIT IN Z.  BY
*  DOING A DHT SEARCH THE UNIT # CAN BE COMPARED.  IF THEY COMPARE (OR
*  THE SEARCH FAILS), DOSTART IS CALLED.  OTHERWISE, GET NEXT NODE IS
*  CALLED.


*  THE DISK STARTUP IS SIMILAR EXCEPT THAT THE COMPARISON IS MADE ON THE
*  DISK UNIT #.  THIS COMPARISON IS MADE SUCH THAT ADJACENT UNITS
*  (EG 0,1) ARE TREATED AS THE SAME UNIT.  NOTE THE CURRENT FIND 
*  SECTOR ROUTINE COMPUTES THE SECTOR IMPROPERLY FOR A DUAL 
*  POSITIONER DISK WHEN THE FUNCTIONAL UNIT IS CHANGED.  IT WILL 
*  CAUSE ONE WHOLE SECTOR TO BE MISSED.  


*  FEATURES AND IDIOSYNCRASIES


*  THE FLAG WORD CONTAINS TWO BIT TABLES FOR DESIGNATING ACTIVE
*  UNITS.  BITS 20 THROUGH 23 REPRESENT DRUMS UNIT 0-3 RESPECTIVELY,
*  AND BITS 16 THROUGH 19 REPRESENT DISK UNIT 0-3 RESPECTIVELY.


*  IF IT IS DESIRED TO EXECUTE AN APU-CODED STARTUP ROUTINE A NEGATIVE
*  NUMBER IS PLACED IN STAPUFLAG IN CORE.  WHEN THIS OCCURS, THE GET 
*  FIRST DEVICE ROUTINE NOTES THIS AND BRANCHES INTO THE DOSTART ROUTINE.
*  P WILL BE EITHER APUREAD OR APUDISK DEPENDING ON THE TSU VALUE.
*  WHEN STAPUFLAG=-1 THE FOLLOWING APU-CODE PRECEEDING THE NORMAL APU
*  STARTUP ROUTINE WILL ALLOW ONE TSU TO BE STARTED BY THE MICROCODE:
*     CSX SELUNIT; LDS SR5,=GTDV0; CALL FRET,Q;
*  THE OTHER TSU MAY THEN BE STARTED BY WHATEVER METHOD DESIRED.


*  WHEN THE APU CODE IS CALLED, THE NODE HAS BEEN REMOVED FROM ITS
*  QUEUE, AND ITS POINTER IS IN A AND B.  X CONTAINS THE REQUEST CODE.
*  DIRECT I/O REQUESTS (CODES 4,5) ALWAYS CAUSE A STARTUP.


*  IF A STARTUP CANNOT BE BEGUN ONE OF TWO THINGS OCCUR DEPENDING ON THE
*  TSU NUMBER:
*    1.  A WRITE IS CONSIDERED FOR THE DRUM.  IF THE WRITE LIST IS EMPTY
*        THE TSU WILL IDLE.
*    2.  THE NUMBER OF DISK TRANSFERS IN THE SECTOR TABLE (NKT) IS CHECKED
*        IF NKT#0 AND MAXCHECKNKT>=0.  THIS CHECK MERELY INSURES
*        THAT NKT WILL ALWAYS GO TO ZERO AFTER A SUFFICIENTLY LONG TIME.


*  DOSTART NEVER RETURNS TO THE PLACE FROM WHICH IT WAS CALLED, HOWEVER
*  IT DOES UNWIND THE STACK.  THIS KLUDGE IS NECESSARY SINCE IT IS
*  BRANCHED TO FROM THE GET FIRST DEVICE ROUTINE FOR DIRECT I/O.


*  PROTECT 2 IS SET BY GET FIRST DEVICE BEFORE RETURNING THE DISK 
*  ADDRESS.  THEREFORE THE DHT SEARCH IS UNDER PROTECT 2.  UNPROTECTS 
*  ARE SCATTERED THROUGH THE CODE SUCH THAT PROTECT 2 IS RESET AFTER
*  THE SEARCH IS COMPLETED.  IT IS ALWAYS RESET BEFORE THE APU IS CALLED
*  OR CONTROL RETURNED TO THE PROCESS ATTENTION ROUTINE AT RESUMESTARTUP.


*  INITIALIZATION BY MONITOR

*  THE MONITOR MUST INITIALIZE THE FOLLOWING REGISTERS AS FOLLOWS:

*  NAME        LOCATION       CONTENTS        COMMENT

*  STAPUFLAG      164              0   FAST STARTUP
*                                 -1   USE APU CODE
*  NPAGSW         165             ?    NUMBER OF PAGES IN SWAP SPACE
*  NPAGQ          166         777777   NEW PAGE QUEUE
*                 167            161
*  FLAGRG        2523            314   FLAG BITS FOR DRUM UNITS 0,1, 
*                                      DISK UNITS 0,1
*  DSRL          2543             ?    LOCATION OF DRUM SECTOR READ LIST
*  MAXCHECKNKT   2544            200?  NUMBER OF DISK SECTORS BEFORE
*                                      NKT RESET TO 0 WHEN ERRONEOUSLY
*                                      NOT 0
*                                 -1   OR DO NOT CHECK NKT AT ALL
*  DFPT          2554             ?    BASE ADDRESS OF FREE DRUM PAGE 
*                                      TABLE (TABLE BEGINS AT 1 MOD 8)


*  PATCH IN THE FSTR ROUTINE ALSO REQUIRES ONE OTHER CELL TO BE 
*  INITIALIZED:

*  FSTRPM        2542          10-14   POSITION W/IN SECTOR AFTER WHICH
*                                      FSTR FAILS


@SSWAP IDENT;
       ORG 1400B;

*  DECLERATIONS


*SCRATCHPAD PARAMETERS
       DEFINE REGISTER SK35 AS DSRL;
              DEFINE PARAMETER GLBS ← GLBS+1;                      *DRUM SECTOR READ LIST BASE
       DEFINE REGISTER SK36 AS MAXCHECKNKT;
              DEFINE PARAMETER GLBS ← GLBS+1;


*  LOOP VARIABLES
       DEFINE REGISTER SK37 AS SECTORQUEUES;
              DEFINE PARAMETER GLBS ← GLBS+1;              *HOLDS SECTOR QUEUE BASE
       DEFINE REGISTER SK38 AS DEVICEMASK;
              DEFINE PARAMETER GLBS ← GLBS+1;                *BIT TO MASK FLAGRG FOR UNIT TEST
       DEFINE REGISTER SK39 AS CURUNIT;
              DEFINE PARAMETER GLBS ← GLBS+1;
       DEFINE REGISTER SK40 AS CQUEUE;
              DEFINE PARAMETER GLBS ← GLBS+1;
       DEFINE REGISTER SK41 AS LASTNODE;
              DEFINE PARAMETER GLBS ← GLBS+1;
       DEFINE REGISTER SK42 AS CHECKNKT;
              DEFINE PARAMETER GLBS ← GLBS+1;
       DEFINE REGISTER SK43 AS SELUNIT;
              DEFINE PARAMETER GLBS ← GLBS+1;
       DEFINE REGISTER SK44 AS FDPT;
              DEFINE PARAMETER GLBS ← GLBS+1;                      *FREE DRUM PAGE TABLE BASE ADDRESS
       DEFINE REGISTER SK45 AS IDSEQ;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *IDENTIFICATION SEQUENCE NUMBER
       DEFINE REGISTER SK46 AS DHTPT;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *DHT POINTER
       DEFINE REGISTER SK47 AS DRUMAD;
              DEFINE PARAMETER GLBS ← GLBS+1;                    *DRUM ADDRESS
       DEFINE REGISTER SK48 AS DHTST;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *DHT STATE WORD
       DEFINE REGISTER SK49 AS CHTPT;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *CHT POINTER
       DEFINE REGISTER SK50 AS PRTPT;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *PRT POINTER
       DEFINE REGISTER SK51 AS CWSI;
              DEFINE PARAMETER GLBS ← GLBS+1;                      *CWS INDEX
       DEFINE REGISTER SK52 AS BCWS;
              DEFINE PARAMETER GLBS ← GLBS+1;                      *BASE OF CWS
       DEFINE REGISTER SK53 AS BPMT;
              DEFINE PARAMETER GLBS ← GLBS+1;                      *BASE OF PMT
       DEFINE REGISTER SK54 AS CWSPT;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *PTR TO CWS ENTRY
       DEFINE REGISTER SK55 AS CWSWD;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *CWS WORD
       DEFINE REGISTER SK56 AS PMTPT;
              DEFINE PARAMETER GLBS ← GLBS+1;                     *PTR TO PMT ENTRY
       DEFINE REGISTER SK10 AS SR2;                  *IMAGE HOLDING REGISTER IN SKP
       DEFINE REGISTER SK11 AS SR3;
       DEFINE REGISTER SK12 AS SR4;
       DEFINE REGISTER EW0 AS DKACMP;                *DISK ADDRESS COMPARE FLAG, SIGN BIT
       DEFINE REGISTER EW1 AS MAXSOT;*               *MAXIMUM NUMBER OF BITS IN SECTOR
       DEFINE REGISTER EW3 AS OLDAGE;                *OLD CWS
       DEFINE REGISTER EW4 AS OCWSI;                 *OLD CWSI 
                                       *OCCUPIED TABLE
       DEFINE REGISTER BR AS FA1;*                   *FAIL ADDRESS # 1, USES BR


* PARAMETERS
       DEFINE PARAMETER LASTDEVICE ← 3;               *LAST DRUM 
       DEFINE PARAMETER NKTER ← 152B;                 *CORE ADDRESS OF NKT ERRORS
       DEFINE PARAMETER STAPUFLAG ← 164B;             *CORE ADDRESS OF APU START FLAG
       DEFINE PARAMETER APUREAD ← 3B;                 *ADRESS OF DRUM READ START ROUTINE
       DEFINE PARAMETER APUDISK ← 11B;                *ADDRESS OF DISK START ROUTINE
       DEFINE PARAMETER SRKTSU ← 4B6;                   *SELECT REGISTER DISK TSU
       DEFINE PARAMETER CDSDDT ← 4;                   *REQUEST CODE FOR DIRECT I/O STARTUP
       DEFINE PARAMETER DKSLB ← 136B;                 *DISK SECTOR LIST BASE ADDRESS
       DEFINE PARAMETER ACTQ ← 102B;                  * ACTIVATE QUEUE HEADER
       DEFINE PARAMETER NCTX ← 153B;*                 *NUMBER OF CONTEXT BLOCK CONSIDERED
       DEFINE PARAMETER KCQB ← 160B;*                 *DISK CYLINDER QUEUE
       DEFINE PARAMETER RELQ ← 170B;                  *RELEASE QUEUE HEADER
       DEFINE PARAMETER PMTDSP ← 300B-4;              *PMT DISPLACEMENT IN CONTEXT BLOCK
       DEFINE PARAMETER CWSDSP ← 2731B;               *CWS DISPLACEMENT IN CONTEXT BLOCK
       DEFINE PARAMETER PRST ← 8;                     *PRT STATUS INDEX
       DEFINE PARAMETER AMCSTSBITS ← 11710B;          *PRT STATE BITS
       DEFINE PARAMETER INCORM ← 24B6;                *IN CORE MASK
       DEFINE PARAMETER INSTC ← 60B;                 *INSTRUCTION FROM TSU
       DEFINE PARAMETER STATC ← 77B;                  *STATUS REGISTER
       DEFINE PARAMETER TSTAG ← 4B7;                  *TSU TAG ERROR
       DEFINE PARAMETER TSUNE ← 2B7;                  *UNIQUE NAME DOES NOT COMPARE


*  FIELDS

       DEFINE PARAMETER PM0 ← 4*TWO12;
       DEFINE PARAMETER PM1 ← 18*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 22*TWO18/TWO18;
       DEFINE PARAMETER DIORCD ← PM0+PM1+PM2;              *MAPS BOTH DIRECT I/O INTO
*                                      ONE CODE
       DEFINE PARAMETER PM0 ← 2*TWO12;
       DEFINE PARAMETER PM1 ← 2*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 23*TWO18/TWO18;
       DEFINE PARAMETER DISKADDRESS ← PM0+PM1+PM2;
       DEFINE PARAMETER PM0 ← 0*TWO12;
       DEFINE PARAMETER PM1 ← 22*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 23*TWO18/TWO18;
       DEFINE PARAMETER DHTUNIT ← PM0+PM1+PM2;
       DEFINE PARAMETER PM0 ← 0*TWO12;
       DEFINE PARAMETER PM1 ← 20*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 20*TWO18/TWO18;
       DEFINE PARAMETER FLAGDM0 ← PM0+PM1+PM2;            *FLAG FOR DRUM UNITS
       DEFINE PARAMETER PM0 ← 0*TWO12;
       DEFINE PARAMETER PM1 ← 16*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 16*TWO18/TWO18;
       DEFINE PARAMETER FLAGDK0 ← PM0+PM1+PM2;            *FLAG FOR DISK UNITS
       DEFINE PARAMETER PM0 ← 2*TWO12;
       DEFINE PARAMETER PM1 ← 2*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 23*TWO18/TWO18;
       DEFINE PARAMETER DKA ← PM0+PM1+PM2;*                DISK ADDRESS
       DEFINE PARAMETER PM0 ← 2*TWO12;
       DEFINE PARAMETER PM1 ← 0*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 23*TWO18/TWO18;
       DEFINE PARAMETER NCWS ← PM0+PM1+PM2;*               NUMBER OF CWS ENTRIES
       DEFINE PARAMETER PM0 ← 10*TWO12;
       DEFINE PARAMETER PM1 ← 0*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 23*TWO18/TWO18;
       DEFINE PARAMETER SOT ← PM0+PM1+PM2;                *SECTOR OCCUPIED TABLE
       DEFINE PARAMETER PM0 ← 3*TWO12;
       DEFINE PARAMETER PM1 ← 1*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 1*TWO18/TWO18;
       DEFINE PARAMETER RF ← PM0+PM1+PM2;                   *REFERENCE FLAG
       DEFINE PARAMETER PM0 ← 0*TWO12;
       DEFINE PARAMETER PM1 ← 5*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 12*TWO18/TWO18;
       DEFINE PARAMETER UHIST ← PM0+PM1+PM2;               *USE HISTORY FIELD OF CWS
       DEFINE PARAMETER PM0 ← 0*TWO12;
       DEFINE PARAMETER PM1 ← 0*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 12*TWO18/TWO18;
       DEFINE PARAMETER AGEF ← PM0+PM1+PM2;*               *AGE FIELD
       DEFINE PARAMETER PM0 ← 5*TWO12;
       DEFINE PARAMETER PM1 ← 0*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 3*TWO18/TWO18;
       DEFINE PARAMETER IDCOD ← PM0+PM1+PM2;                *IDENTIFICATION CODE
       DEFINE PARAMETER PM0 ← 0*TWO12;
       DEFINE PARAMETER PM1 ← 12*TWO18/TWO12;
       DEFINE PARAMETER PM2 ← 23*TWO18/TWO18;
       DEFINE PARAMETER ERRF ← PM0+PM1+PM2;               *TSU ERROR FIELD IN STATUS REGISTER


*  SPECIAL CONDITIONS
       DEFINE SCONDITION BANKA ← 61B,();                  *SET BANK A
       DEFINE SCONDITION BANKB ← 60B,();                  *SET BANK B


*  GET FIRST DEVICE

1400:  GTFDV:SUBR←Y←GTFDV+1,GOTO STKLK, SECTORQUEUES←M
.BR = 10   82
.BL = 4   79
.SSP = 45   56,54,51
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LRN = 5   71,69
.LSPX = 1   59
.MC = 1   5
.B = 107    11,15,16,17,
.C = 1401   32,33,41,
       
1401:  Z←Z MRG TSFU, CALL ALERTF
.MCONT = 1   7
.BR = 4   83
.BL = 10   78
.TCX = 1   43
.TAX = 1   49
.LZX = 1   76
.MC = 20   1
.VCYP = 1   86
.B = 1173    8,11,12,13,14,16,17,
.C = 400   33,
CHECKBIT IS 56   
       
1402:  ADR←Z←E2,PINSC,.VCY,  Q←MSK1*TWO0
.MS = 16   64,63,62
.TCX = 1   43
.TYW = 1   48
.LQX = 1   74
.LZY = 1   77
.LR0 = 1   58
.TE2Y = 1   89
.C = 3   40,41,
       
1403:  Z←SELUNIT←Z AND Q, FETCH R0←STAPUFLAG
.BL = 10   78
.SSP = 53   56,55,53,51
.MS = 44   63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
.LSPX = 1   59
.C = 164   35,36,37,39,
       
1404:  GOTO DOST0 ON M<0
.BR = 10   82
.BL = 4   79
.TAX = 1   49
.MC = 4   3
.B = 1431    8,9,13,14,17,


1405:  GTDV0: CURUNIT←Z
.BR = 4   83
.BL = 10   78
.SSP = 47   56,55,54,51
.TAX = 1   49
.LSPX = 1   59
CHECKBIT IS 87   
       
1406:  M←SAVEPATI, Q←FINSTART, CALL FSTR
.MCONT = 1   7
.SSP = 40   51
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
.MC = 1   5
.B = 1277    8,10,12,13,14,15,16,17,
.C = 1432   32,33,37,38,40,
CHECKBIT IS 50
       
1407:  Z←Q LCY 1, M←SECTORQUEUES
.BR = 10   82
.BL = 2   80
.SSP = 45   56,54,51
.MS = 1   65
.TSPY = 1   45
.LMY = 1   73
.LZX = 1   76
       
1410:  CQUEUE←M←M+Z, Q←5, DGOTO GTDV1
.BR = 4   83
.BL = 4   79
.SSP = 50   53,51
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LSPX = 1   59
.MC = 1   5
.DGO = 1   87
.B = 1414    8,9,14,15,
.C = 5   39,41,
       
1411:  M←M-Q, Q←NADB
.BR = 15   85,83,82
.BL = 4   79
.LOC = 1   50
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.C = -1000000   18,19,20,21,22,23,
*  FIND NEXT NODE

1412:  GTNND: M←LASTNODE, Q←EQP/1B4, DGOTO GTDV1
.SSP = 51   56,53,51
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
.MC = 1   5
.DGO = 1   87
.B = 1414    8,9,14,15,
.C = 5   39,41,
       
1413:  FETCH R0←M+Q, Q←NADB
.BR = 2   84
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.C = -1000000   18,19,20,21,22,23,

1414:  GTDV1: LASTNODE←M←M AND NOT Q, Q←EQP/1B4
.BR = 10   82
.BL = 14   79,78
.SSP = 51   56,53,51
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LSPX = 1   59
.C = 5   39,41,
       
1415:  FETCH R0←M+Q, CALL STCSTK
.MCONT = 1   7
.BR = 2   84
.BL = 4   79
.MS = 44   63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1
.B = 1074    8,12,13,14,15,
CHECKBIT IS 30   
*  QUEUE EMPTY?
       
1416:  M, GOTO GTDV4 IF ENDLT, Q←NADB
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 14   3,2
.B = 1434    8,9,13,14,15,
.C = -1000000   18,19,20,21,22,23,
CHECKBIT IS 56   
*  STUFF POINTER TO NODE AWAY
       
1417:  T2←M←AR←M AND NOT Q, Q←RCD/1B4
.BR = 10   82
.BL = 14   79,78
.SSP = 5   56,54
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LRN = 3   71,70
.LSPX = 1   59
.C = 4   39,
CHECKBIT IS 87   
       
1420:  FETCH R0←M+Q, Z←TSUNM MRG TSPC0, CALL ALERTF
.MCONT = 1   7
.BR = 2   84
.BL = 4   79
.SSP = 41   56,51
.MS = 44   63,60
.TCY = 1   44
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
.MC = 1   5
.B = 1173    8,11,12,13,14,16,17,
.C = 10000   29,
CHECKBIT IS 42   
       
1421:  Q←E2,PINSC,.VCY,  Z←CDSDDT
.MS = 16   64,63,62
.TCX = 1   43
.LQY = 1   75
.LZX = 1   76
.TE2Y = 1   89
.C = 4   39,
CHECKBIT IS 87
* INSURE CLEANUP NOT PENDING
       
1422:  GOTO FINSTART ON Q LCY 2 < 0, Q←MSK4*TWO1
.BR = 10   82
.BL = 2   80
.MS = 2   64
.TCY = 1   44
.LQY = 1   75
.MC = 4   3
.B = 1432    8,9,13,14,16,
.C = 76   36,37,38,39,40,
CHECKBIT IS 50   
*  DIRECT I/O?
       
1423:  DGOTO DOSTART ON M AND Q-Z=0, Q←MSK5*TWO0
.BR = 13   85,84,82
.LOC = 1   50
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 2   4
.DGO = 1   87
.B = 1427    8,9,13,15,16,17,
.C = 77   36,37,38,39,40,41,
       
1424:  XR←M AND Q, Q←DISKADDRESS/1B4
.BR = 10   82
.SSP = 7   56,55,54
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.LSPX = 1   59
.C = 2   40,
       
1425:  M←T2, .C←2,.TCX,PROTECT,GOTO * IF PRONS
.RRN = 3   68,67
.MS = 25   65,63,61
.TCX = 1   43
.THY = 1   46
.LMY = 1   73
.MC = 30   2,1
.B = 1425    8,9,13,15,17,
.C = 2   40,
CHECKBIT IS 50
*  RETURN W/DISK ADDRESS IN M AND PROTECT 2 SET
       
1426:  FETCH R0←M+Q, Z←CURUNIT,  CALL RET
.MCONT = 1   7
.BR = 2   84
.BL = 4   79
.SSP = 47   56,55,54,51
.MS = 44   63,60
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
.MC = 1   5
.B = 112    11,14,16,
CHECKBIT IS 30   


*  ENTRY POINT INTO FUNCTION (CALL WITH C(DOSTART))
*  BEGINS APU CODE FOR STARTUP
*  AR,BR - POINTER TO NODE RELEASED
*  XR CONTAINS REQUEST CODE

1427:  DOSTART: M←LASTNODE, .C←2,.TCX,UNPROTECT
.SSP = 51   56,53,51
.MS = 20   61
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.C = 2   40,
CHECKBIT IS 87
       
1430:  Q←CQUEUE, Z←PNT, CALL RELEQP
.MCONT = 1   7
.SSP = 50   53,51
.TCX = 1   43
.TSPY = 1   45
.LQY = 1   75
.LZX = 1   76
.MC = 1   5
.B = 362    10,11,12,13,16,
.C = 141   35,36,41,
CHECKBIT IS 50

1431:  DOST0: BR←Q, CALL SICONT
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.SSP = 6   55,54
.TAX = 1   49
.LSPX = 1   59
.MC = 20   1
.B = 44    12,15,
CHECKBIT IS 30   

*  RETURN TO PROCESS ATTENTION STARTUP LOOP

1432:  FINSTART: Z←SAVEPATI, Q←X←2, UNPROTECT
.SSP = 40   51
.MS = 20   61
.TCX = 1   43
.TSPY = 1   45
.LQX = 1   74
.LZY = 1   77
.C = 2   40,
       
1433:  SUBR←RESUMESTARTUP, CALL FRET
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86
.B = 116    11,14,15,16,
.C = 1064   32,36,37,39,

*  FIND NEXT DRUM

1434:  GTDV4: Z←CURUNIT, ADR←0
.SSP = 47   56,55,54,51
.TSPY = 1   45
.TXW = 1   47
.LZY = 1   77
.LR0 = 1   58
CHECKBIT IS 87

1435:  GTDV5: Z←Z+1, M←LASTDEVICE
.BR = 4   83
.BL = 10   78
.LOC = 1   50
.TCY = 1   44
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.C = 3   40,41,
       
1436:  CALL SWITCH ON Z-M>0, M←SELUNIT
.MCONT = 1   7
.BR = 4   83
.BL = 13   81,80,78
.SSP = 53   56,55,53,51
.LOC = 1   50
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.MC = 6   4,3
.B = 1477    8,9,12,13,14,15,16,17,
       
1437:  GOTO NOREAD ON Z-M=0, M←FLAGRG
.BR = 4   83
.BL = 13   81,80,78
.SSP = 23   56,55,52
.LOC = 1   50
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.MC = 2   4
.B = 1442    8,9,12,16,
CHECKBIT IS 30   
       
1440:  M←M LCL Z, Q←DEVICEMASK, DGOTO GTDV0
.BR = 10   82
.BL = 4   79
.SSP = 46   55,54,51
.MS = 11   65,62
.TSPY = 1   45
.LMX = 1   72
.LQY = 1   75
.MC = 1   5
.DGO = 1   87
.B = 1405    8,9,15,17,
CHECKBIT IS 30   
       
1441:  GOTO GTDV5 ON ADR←M AND Q=0
.BR = 10   82
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 2   4
.B = 1435    8,9,13,14,15,17,


*  DRUM OR DISK TSU?

1442:  NOREAD: Q←SAVEPATI, FETCH R0←NPGQ, DGOTO NKTOK
.SSP = 40   51
.MS = 44   63,60
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LQY = 1   75
.LR0 = 1   58
.MC = 1   5
.DGO = 1   87
.B = 1446    8,9,12,15,16,
.C = 166   35,36,37,39,40,
CHECKBIT IS 50
       
1443:  GOTO STWRT ON Q-1<=0, Q←MAXCHECKNKT
.BR = 7   85,84,83
.BL = 2   80
.SSP = 44   54,51
.TSPY = 1   45
.TAX = 1   49
.LQY = 1   75
.MC = 13   5,4,2
.B = 1444    8,9,12,15,
CHECKBIT IS 30   
       

*  START DRUM WRITE

1444:  STWRT: P←NEWPAGE, DGOTO NPAGE
.SSP = 3   56,55
.TCX = 1   43
.LSPX = 1   59
.MC = 1   5
.DGO = 1   87
.B = 1352    8,10,11,12,14,16,
.C = 4   39,
       
1445:  BR←M, CALL SICONT IF NENDLT
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.SSP = 6   55,54
.TAX = 1   49
.LSPX = 1   59
.MC = 15   5,3,2
.B = 44    12,15,
CHECKBIT IS 30   


*  CHECK NKT COUNT

1446:  NKTOK: GOTO FINSTART ON Q<0, M←NKT
.BR = 10   82
.BL = 2   80
.SSP = 22   55,52
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.MC = 4   3
.B = 1432    8,9,13,14,16,
       
1447:  GOTO FINSTART ON M<=0, ADR←DKSLB
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 13   5,4,2
.B = 1432    8,9,13,14,16,
.C = 136   35,37,38,39,40,
       
1450:  Q←CHECKNKT, Z←-NKSECT, FETCH
.SSP = 52   55,53,51
.MS = 44   63,60
.TCX = 1   43
.TSPY = 1   45
.LQY = 1   75
.LZX = 1   76
.C = -6   18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,
*  LOOP WHICH SCANS DISK SECTOR TABLE
       
1451:  M, GOTO NKTK0 IF NENDLT, ADR←ADR+1
.BR = 10   82
.BL = 4   79
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 15   5,3,2
.B = 1457    8,9,12,14,15,16,17,
       
1452:  FETCH R0←ADR+1, GOTO *-1 ON  Z ← Z+1<0
.BR = 4   83
.BL = 10   78
.MS = 44   63,60
.LOC = 1   50
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
.MC = 4   3
.B = 1451    8,9,12,14,17,
       
1453:  CHECKNKT←Q←Q+1
.BR = 10   82
.BL = 2   80
.SSP = 52   55,53,51
.LOC = 1   50
.TAX = 1   49
.LQX = 1   74
.LSPX = 1   59
       
1454:  Z←MAXCHECKNKT, DGOTO FINSTART
.SSP = 44   54,51
.TSPY = 1   45
.LZY = 1   77
.MC = 1   5
.DGO = 1   87
.B = 1432    8,9,13,14,16,
*  IS CHECK NKT TOO BIG?
       
1455:  GOTO *+1 ON Q-Z>0
.BR = 13   85,84,82
.BL = 2   80
.LOC = 1   50
.TAX = 1   49
.MC = 6   4,3
.B = 1456    8,9,12,14,15,16,
CHECKBIT IS 30   
       
1456:  NKT←0, ADR←NKTER,  HFETCH,  CALL MINF
.MCONT = 1   7
.SSP = 22   55,52
.MS = 45   65,63,60
.TCY = 1   44
.TYW = 1   48
.LR0 = 1   58
.LSPX = 1   59
.MC = 1   5
.B = 1212    8,10,14,16,
.C = 152   35,36,38,40,
*  RESET CHECK NKT

1457:  NKTK0: CHECKNKT←0, GOTO FINSTART
.SSP = 52   55,53,51
.LSPX = 1   59
.MC = 20   1
.B = 1432    8,9,13,14,16,
CHECKBIT IS 30


* START DRUM

1460:  STDRUM: DEVICEMASK←MSK0*TWO3
.SSP = 46   55,54,51
.TCX = 1   43
.LSPX = 1   59
.C = 10   38,
CHECKBIT IS 87
       
1461:  M←DSRL, DGOTO STDM1
.SSP = 43   56,55,51
.TSPY = 1   45
.LMY = 1   73
.MC = 20   1
.DGO = 1   87
.B = 1464    8,9,12,13,15,
CHECKBIT IS 30
       
1462:  P←APUREAD, CALL GTFDV
.MCONT = 1   7
.SSP = 3   56,55
.TCX = 1   43
.LSPX = 1   59
.MC = 1   5
.B = 1400    8,9,
.C = 3   40,41,
CHECKBIT IS 50


1463:  STDM0: SUBR←GTNND,CALL STKLK
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86
.B = 107    11,15,16,17,
.C = 1412   32,33,38,40,
*  FIND DRUM ADDRESS, IF CANNOT DO START

1464:  STDM1: Z←STDM3, CALL DHTSCH
.MCONT = 1   7
.TCX = 1   43
.LZX = 1   76
.MC = 1   5
.VCYP = 1   86
.B = 270    10,12,13,14,
.C = 1470   32,33,36,37,38,
CHECKBIT IS 50
       
1465:  FETCH R0←Z, Q←MSK1*TWO0
.BR = 4   83
.BL = 10   78
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.VCYP = 1   86
.C = 3   40,41,
CHECKBIT IS 87   

1466:  STDM2: Z←CURUNIT, .C←2,.TCX,UNPROTECT
.SSP = 47   56,55,54,51
.MS = 20   61
.TCX = 1   43
.TSPY = 1   45
.LZY = 1   77
.C = 2   40,
*  CHECK UNIT NUMBER AGAINST CURRENT UNIT
       
1467:  GOTO STDM0 ON M AND Q - Z # 0
.BR = 13   85,84,82
.LOC = 1   50
.TAX = 1   49
.MC = 3   5,4
.B = 1463    8,9,12,13,16,17,

1470:  STDM3: SUBR←DOSTART,CALL STKLK
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 1   5
.VCYP = 1   86
.B = 107    11,15,16,17,
.C = 1427   32,33,37,39,40,41,


*  START DISK?

1471:  STDISK: DEVICEMASK←MSK0*TWO7
.SSP = 46   55,54,51
.TCX = 1   43
.LSPX = 1   59
.C = 200   34,
CHECKBIT IS 87
       
1472:  M←DKSLB, DGOTO STDK1
.TCX = 1   43
.LMX = 1   72
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 1475    8,9,12,13,14,15,17,
.C = 136   35,37,38,39,40,
       
1473:  P←APUDISK, CALL GTFDV
.MCONT = 1   7
.SSP = 3   56,55
.TCX = 1   43
.LSPX = 1   59
.MC = 20   1
.B = 1400    8,9,
.C = 11   38,41,
CHECKBIT IS 50


1474:  STDK0: SUBR←GTNND,CALL STKLK
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 1   5
.VCYP = 1   86
.B = 107    11,15,16,17,
.C = 1412   32,33,38,40,

1475:  STDK1: Q←X←2, UNPROTECT, DGOTO STDK0
.MS = 20   61
.TCX = 1   43
.LQX = 1   74
.MC = 20   1
.DGO = 1   87
.B = 1474    8,9,12,13,14,15,
.C = 2   40,
CHECKBIT IS 50
                                       *AS THE SAME UNIT
       
1476:  CALL STKLK ON M AND Q - Z = 0, SUBR←DOSTART
.MCONT = 1   7
.BR = 13   85,84,82
.LOC = 1   50
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LRN = 5   71,69
.MC = 2   4
.B = 107    11,15,16,17,
.C = 1427   32,33,37,39,40,41,


*  ROUTINE TO BE USED TO IMPLEMENT CONDITIONALS

1477:  SWITCH: Z←ADR, ADR←Z, RETURN
.MCONT = 2   6
.BR = 4   83
.BL = 10   78
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
CHECKBIT IS 30   


*  BLOCK COPY - NO OVERLAPPING BLOCKS
*  R0 - SOURCE BLOCK
*  Q - DESTINATION BLOCK
*  Z - COUNT

1500:  BCOPY: FETCH, GOTO *+2
.MS = 44   63,60
.MC = 1   5
.VCYP = 1   86
.B = 1502    8,9,11,16,
CHECKBIT IS 30

1501:  BCOP0: R0←Q, Q←R0+1, FETCH
.BR = 10   82
.BL = 2   80
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.VCYP = 1   86
       
1502:  R0←Q, Q←R0+1, STORE, DGOTO BCOP0
.BR = 10   82
.BL = 2   80
.MS = 42   64,60
.IHR = 1   42
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 1501    8,9,11,17,
       
1503:  RETURN ON Z←Z-1<=0
.MCONT = 2   6
.BR = 4   83
.BL = 7   81,80,79
.TAX = 1   49
.LZX = 1   76
.MC = 13   5,4,2
CHECKBIT IS 30   


*  CYCLE Q BY AMOUNT IN Z

1504:  CYLQ:  Q←Q LCH Z, DRETURN
.MCONT = 2   6
.BR = 10   82
.BL = 2   80
.MS = 12   64,62
.LQX = 1   74
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
       
1505:  Q←Q LCL Z
.BR = 10   82
.BL = 2   80
.MS = 11   65,62
.LQX = 1   74
.VCYP = 1   86
CHECKBIT IS 87   


*  FIND ENTRY IN DRUM FREE PAGE TABLE
*  R1 - SECTOR
*  R2 - UNIT
*  RETURN  R0 - ADDRESS OF ENTRY
*           Q - R4
*           Z - 24

1506:  FDPTE: M←R1, Z←24
.RRN = 1   68
.TCX = 1   43
.THY = 1   46
.LMY = 1   73
.LZX = 1   76
.VCYP = 1   86
.C = 30   37,38,
CHECKBIT IS 87
       
1507:  M←M LCY 3, Q←R2
.RRN = 2   67
.BR = 10   82
.BL = 4   79
.MS = 3   65,64
.THY = 1   46
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
       
1510:  Q←Q LCY 1, Q←FDPT, DRETURN
.MCONT = 2   6
.BR = 10   82
.BL = 2   80
.SSP = 54   54,53,51
.MS = 1   65
.TSPY = 1   45
.LQX = 1   74
.LQY = 1   75
.MC = 1   5
.DGO = 1   87
CHECKBIT IS 30   
       
1511:  R0←M+Q, Q←R4
.RRN = 4   66
.BR = 2   84
.BL = 4   79
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
CHECKBIT IS 87   


*  FIND BAND IN FREE DRUM PAGE TABLE
*  FA0 - FAIL ADDRESS
*  R1 - SECTOR
*  R2 - UNIT
*  CALL WITH C(FBFDPT) OR SCALL FBFDPT,FA0
*  RETURN
*  M - DRUM ADDRESS


1512:  FBFDPT: CALL FDPTE, R4←-48
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.MC = 1   5
.VCYP = 1   86
.B = 1506    8,9,11,15,16,
.C = -60   18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,
CHECKBIT IS 50
       
1513:  FETCH R0←R0+1, GOTO FRA0 ON Q←Q+Z>0
.BR = 4   83
.BL = 2   80
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 6   4,3
.B = 133    11,13,14,16,17,
       
1514:  GOTO *-1 ON M=0, R3←0
.BR = 10   82
.BL = 4   79
.TYW = 1   48
.TAX = 1   49
.LRN = 3   71,70
.MC = 2   4
.B = 1513    8,9,11,14,16,17,
       
1515:  Z←M
.BR = 10   82
.BL = 4   79
.TAX = 1   49
.LZX = 1   76
.VCYP = 1   86
       
1516:  M←Z←M LCY 1, DGOTO *+1 IF Z>=0
.BR = 10   82
.BL = 4   79
.MS = 1   65
.LMX = 1   72
.LZX = 1   76
.MC = 16   4,3,2
.DGO = 1   87
.VCYP = 1   86
.B = 1517    8,9,11,14,15,16,17,
       
1517:  M←Z←M LCY 1, DGOTO * IF Z>=0, R3←R3+1
.RRN = 3   68,67
.BR = 10   82
.BL = 4   79
.MS = 1   65
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LMX = 1   72
.LZX = 1   76
.LRN = 3   71,70
.MC = 16   4,3,2
.DGO = 1   87
.VCYP = 1   86
.B = 1517    8,9,11,14,15,16,17,
CHECKBIT IS 30   
       
1520:  M←R3, Z←23, GOTO *+1
.RRN = 3   68,67
.TCX = 1   43
.THY = 1   46
.LMY = 1   73
.LZX = 1   76
.MC = 1   5
.VCYP = 1   86
.B = 1521    8,9,11,13,17,
.C = 27   37,39,40,41,
       
1521:  M←M+Q, Q←R1,  DCALL RET
.MCONT = 1   7
.RRN = 1   68
.BR = 2   84
.BL = 4   79
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 20   1
.DGO = 1   87
.B = 112    11,14,16,
       
1522:  M←M+Z, Z←R2, CALL *+1
.MCONT = 1   7
.RRN = 2   67
.BR = 4   83
.BL = 4   79
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LZY = 1   77
.MC = 1   5
.B = 1523    8,9,11,13,16,17,
*  NOW BAND IS IN M, SECTOR IN Q, UNIT IN Z.
*  FALL THROUGH TO MAKE DRUM ADDRESS


1523:  MDRM:  T←Q, Q←377B
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.VCYP = 1   86
.C = 377   34,35,36,37,38,39,40,41,
       
1524:  M←M AND Q LCL 5, Q←37B
.BR = 10   82
.MS = 1   65
.TCY = 1   44
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = 37   37,38,39,40,41,
       
1525:  T←M LCH 5, M←T
.RRN = 5   68,66
.BR = 10   82
.BL = 4   79
.MS = 4   63
.THY = 1   46
.TXW = 1   47
.LMY = 1   73
.LRN = 5   71,69
.VCYP = 1   86
       
1526:  M←M AND Q, M←T
.RRN = 5   68,66
.BR = 10   82
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LMY = 1   73
.VCYP = 1   86
CHECKBIT IS 87   
       
1527:  M←M LCY 2, Q←3, DRETURN
.MCONT = 2   6
.BR = 10   82
.BL = 4   79
.MS = 2   64
.TCY = 1   44
.LMX = 1   72
.LQY = 1   75
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.C = 3   40,41,
CHECKBIT IS 50   
       
1530:  M←M AND NOT Q ! Z AND Q
.BL = 14   79,78
.TAX = 1   49
.LMX = 1   72
.VCYP = 1   86


*  PARSE DRUM ADDRESS
*  M - DRUM ADDRESS
*  CALL WITH C(PDRM) OR SCALL PDRM
*  RETURN:
*  R1 - SECTOR
*  R2 - UNIT
*  M - DRUM ADDRESS
*  Q - BAND


1531:  PDRM:  Q←3
.TCX = 1   43
.LQX = 1   74
.VCYP = 1   86
.C = 3   40,41,
       
1532:  R2←M AND Q, Q←MSK4*TWO2
.BR = 10   82
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 2   70
.VCYP = 1   86
.C = 174   35,36,37,38,39,
CHECKBIT IS 87   
       
1533:  Q←M AND Q, Z←DSTR*TWO18/TWO18+1, CALL CYLQ
.MCONT = 1   7
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 20   1
.VCYP = 1   86
.B = 1504    8,9,11,15,
.C = 26   37,39,40,
       
1534:  R1←Q, Q←MSK6*TWO7,  DCALL RET
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 1   71
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 112    11,14,16,
.C = 37600   28,29,30,31,32,33,34,
       
1535:  Q←M AND Q, Z←DBND*TWO18/TWO18+1, CALL CYLQ
.MCONT = 1   7
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 20   1
.VCYP = 1   86
.B = 1504    8,9,11,15,
.C = 21   37,41,
CHECKBIT IS 56   


*  CLEAR/SET DRUM FREE PAGE TABLE
*  M - DRUM ADDRESS
*  R3 - 0 FOR CLEAR
*     - -1 FOR SET
*  CALL WITH SCALL CSFDPT


1536:  CSFDPT: SUBR←PDRM,CALL STKLK
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 1   5
.VCYP = 1   86
.B = 107    11,15,16,17,
.C = 1531   32,33,35,37,38,41,
       
1537:  CALL FDPTE, R4←Q
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.TXW = 1   47
.TAX = 1   49
.LRN = 4   69
.MC = 20   1
.VCYP = 1   86
.B = 1506    8,9,11,15,16,
       
1540:  GOTO * ON Q←Q-Z>=0, R0←R0+1
.BR = 13   85,84,82
.BL = 2   80
.LOC = 1   50
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 5   5,3
.B = 1540    8,9,11,12,
       
1541:  Z←0-Q, Q←4B7, CALL CYLQ, HFETCH
.MCONT = 1   7
.BR = 15   85,83,82
.BL = 10   78
.MS = 45   65,63,60
.LOC = 1   50
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.LZX = 1   76
.MC = 20   1
.B = 1504    8,9,11,15,
.C = -40000000   18,
       
1542:  R3←M AND Q, Z←R3
.RRN = 3   68,67
.BR = 10   82
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 3   71,70
.VCYP = 1   86
CHECKBIT IS 87   
       
1543:  M←M AND NOT Q ! Z AND Q, STORE
.BL = 14   79,78
.MS = 42   64,60
.TAX = 1   49
.LMX = 1   72
.VCYP = 1   86
       
1544:  Z←Z AND Q, Q←R3,  DCALL RET
.MCONT = 1   7
.RRN = 3   68,67
.BL = 10   78
.THY = 1   46
.TAX = 1   49
.LQY = 1   75
.LZX = 1   76
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 112    11,14,16,
CHECKBIT IS 30   
       
1545:  CALL PNT ON Q EOR Z = 0
.MCONT = 1   7
.BR = 16   84,83,82
.BL = 10   78
.TAX = 1   49
.MC = 2   4
.B = 141    11,12,17,
CHECKBIT IS 30   


*  INCORE ROUTINE
*  Z - PTR TO REAL NAME
*  CALL WITH SCALL INCOR,FA0
*  RETURN: M - STATUS, SCH WORD OF CHT ENTRY
*          Q,Z - PTR TO CHT ENTRY
****    PROTECT 2 IS LEFT SET BY THIS ROUTINE   ****

1546:  INCOR: HFETCH R0←Z, Z←FRA0
.BR = 4   83
.BL = 10   78
.MS = 45   65,63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
.VCYP = 1   86
.C = 133   35,37,38,40,41,
CHECKBIT IS 87   
       
1547:  UN0←M, FETCH R0←R0+1
.BR = 10   82
.BL = 4   79
.SSP = 33   56,55,53,52
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
CHECKBIT IS 87   
       
1550:  Q←M, FETCH R0←R0+1
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.VCYP = 1   86
       
1551:  DKACMP←X←40000002B, PROTECT, GOTO * IF PRONS
.SSP = 24   54,52
.MS = 25   65,63,61
.TCX = 1   43
.LSPX = 1   59
.MC = 30   2,1
.B = 1551    8,9,11,12,14,17,
.C = -37777776   18,40,
       
1552:  T4←M, M←UN0, CALL CHTSCH
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.SSP = 33   56,55,53,52
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LRN = 1   71
.MC = 1   5
.B = 143    11,12,16,17,
       
1553:          FETCH R0←R0+1
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.VCYP = 1      86
       
1554:  M←M MRG NKAD, Q←T4, .TCY
.RRN = 1   68
.BR = 10   82
.BL = 4   79
.TCX = 1   43
.TCY = 1   44
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = -20000000   18,19,
CHECKBIT IS 87   
       
1555:  GOTO *+2 ON DKACMP←M EOR Q#0, Q←NADB
.BR = 10   82
.BL = 16   80,79,78
.SSP = 24   54,52
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.LSPX = 1   59
.MC = 3   5,4
.B = 1557    8,9,11,12,14,15,16,17,
.C = -1000000   18,19,20,21,22,23,
CHECKBIT IS 42   
       
1556:  Q←Z, FETCH R0←R0+1,  CALL RET
.MCONT = 1   7
.BR = 4   83
.BL = 10   78
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86
.B = 112    11,14,16,
CHECKBIT IS 30   

*  CONTINUE SCANNING CHT
       
1557:  SUBR←CONSCN,CALL STKLK
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86
.B = 107    11,15,16,17,
.C = 1561   32,33,35,36,37,41,
       
1560:  CALL PNT
.MCONT = 1   7
.MC = 1   5
.VCYP = 1   86
.B = 141    11,12,17,
CHECKBIT IS 30

1561:  CONSCN: T←FRA0, GOTO CHTS0
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86
.B = 150    11,12,14,
.C = 133   35,37,38,40,41,
CHECKBIT IS 50


*  CLEAR FLAG REGISTER BIT
*  M - (BIT TO CLEAR) - 1


1562:  CALL PUNT        (CFLG:  Q←M+1, Z←FLAGRG, GOTO SFLG0)  1.03 PATCH
.MCONT = 1   7          .BR = 10   82
.MC = 1   5             .BL = 4   79
.B = 141   11,12,17     .SSP = 23   56,55,52
.VCYP = 1   86          .LOC = 1   50
CHECKBIT IS 30          .TSPY = 1   45
                        .TAX = 1   49
                        .LQX = 1   74
                        .LZY = 1   77
                        .MC = 1   5
                        .B = 1361    8,10,11,12,13,17,


*  EXECUTE COMMAND
*  M - DRUM ADDRESS (DEVICE ADDRESS + TSU# + UNIT#)
*  Q - CHTPT   ==> WORD COUNT =4000B,UNIQUE NAME =$CHTPT
*    - CHTPT,4                =  0               =$CHTPT
*    -   0                    =  0               =  0
*    -   1                    =  1               =  0
*  Z - INSTRUCTION
*  CALL WITH SCALL EXEC


1563:  EXEC:  T←Q, Q←MSK1*TWO19
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.VCYP = 1   86
.C = 6000000   21,22,
       
1564:  T1←M AND Q, Q←MSK1*TWO0
.BR = 10   82
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 4   69
.VCYP = 1   86
.C = 3   40,41,

1565:  KEXC0: T4←M AND Q ! Z AND NOT Q, Q←IDSEQ, .TYW
.BR = 14   83,82
.SSP = 55   56,54,53,51
.TSPY = 1   45
.TXW = 1   47
.TYW = 1   48
.TAX = 1   49
.LQY = 1   75
.LRN = 1   71
CHECKBIT IS 87   
       
1566:  T3←M, Z←4B6
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 2   70
.VCYP = 1   86
.C = 4000000   21,
       
1567:  IDSEQ←Q+Z, GOTO EXEC3 ON Z←T<0
.RRN = 5   68,66
.BR = 4   83
.BL = 2   80
.SSP = 55   56,54,53,51
.THY = 1   46
.TAX = 1   49
.LZY = 1   77
.LSPX = 1   59
.MC = 10   2
.B = 1577    8,9,11,12,13,14,15,16,17,
CHECKBIT IS 30   
       
1570:  GOTO EXEC1 ON Z-1<=0, Q←PG/1B4
.BR = 4   83
.BL = 7   81,80,79
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 13   5,4,2
.B = 1575    8,9,11,12,13,14,15,17,
.C = 3   40,41,
CHECKBIT IS 56   
       
1571:  FETCH R0←Z+Q, Q←MSK6*TWO11
.BR = 4   83
.BL = 2   80
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.C = 774000   24,25,26,27,28,29,30,
CHECKBIT IS 87   
       
1572:  T2←M AND Q, Z←4000B
.BR = 10   82
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 3   71,70
.VCYP = 1   86
.C = 4000   30,

1573:  EXEC0: R0←T+1, HFETCH, DGOTO EXEC2
.RRN = 5   68,66
.MS = 45   65,63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 1576    8,9,11,12,13,14,15,16,
CHECKBIT IS 30
       
1574:  Q←M, FETCH R0←T, DGOTO STSUI
.RRN = 5   68,66
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 1141    8,11,12,17,
CHECKBIT IS 30   

1575:  EXEC1: T2←M←Q←0, DGOTO STSUI
.TXW = 1   47
.LMX = 1   72
.LQX = 1   74
.LRN = 3   71,70
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 1141    8,11,12,17,
CHECKBIT IS 30

1576:  EXEC2: R0←T1
.RRN = 4   66
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.VCYP = 1   86

1577:  EXEC3: T2←Z←0, GOTO EXEC0
.TXW = 1   47
.LZX = 1   76
.LRN = 3   71,70
.MC = 20   1
.VCYP = 1   86
.B = 1573    8,9,11,12,13,14,16,17,
CHECKBIT IS 30


*  FROM THIS POINT ON WE HAVE 1.03 MICROCODE

* EXECUTE DISK COMMAND
* M - INTERNAL DISK ADDRESS
* Q - CHTPT (AS FOR Q ABOVE)
* T2 - INSTRUCTION
*  CALL WITH SCALL KEXEC


1600:  WUEXEC: Q←Q MRG 4B7
.BR = 10   82
.BL = 2   80
.TCX = 1   43
.TAX = 1   49
.LQX = 1   74
.VCYP = 1   86
.C = -40000000   18,

1601:  KEXEC: T←Q, Q←MSK1*TWO20
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.VCYP = 1   86
.C = 14000000   20,21,
       
1602:  Q←M AND Q, Z←23, CALL CYLQ
.MCONT = 1   7
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 1   5
.VCYP = 1   86
.B = 1504    8,9,11,15,
.C = 27   37,39,40,41,
CHECKBIT IS 56   
       
1603:  T1←Q, Q←MSK7*TWO12
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 4   69
.VCYP = 1   86
.C = 3770000   22,23,24,25,26,27,28,29,
CHECKBIT IS 87   
       
1604:  T3←M AND Q LCY 2
.BR = 10   82
.MS = 2   64
.TXW = 1   47
.LRN = 2   70
.VCYP = 1   86
       
1605:  Q←MSK5*TWO6
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.VCYP = 1   86
.C = 7700   30,31,32,33,34,35,
CHECKBIT IS 87   
       
1606:  Z←M AND Q LCY 1, Q←77B
.BR = 10   82
.MS = 1   65
.TCY = 1   44
.LQY = 1   75
.LZX = 1   76
.VCYP = 1   86
.C = 77   36,37,38,39,40,41,
CHECKBIT IS 87   
       
1607:  M←M AND Q ! Z AND NOT Q, M←T3, DGOTO KEXC0
.RRN = 2   67
.BR = 14   83,82
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LMY = 1   73
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 1565    8,9,11,12,13,15,17,
       
1610:  Z←T2, Q←MSK1*TWO0
.RRN = 3   68,67
.BL = 10   78
.TCX = 1   43
.THY = 1   46
.LQX = 1   74
.LZY = 1   77
.VCYP = 1   86
.C = 3   40,41,
CHECKBIT IS 87   


*  SUCCESS/FAIL RETURN ACTIVATE
*  AR - DATA WORD
*  USE GOTO

1611:  SRACT: M←Q←AR←0, GOTO *+2
.BL = 10   78
.SSP = 5   56,54
.LMX = 1   72
.LQX = 1   74
.LSPX = 1   59
.MC = 20   1
.B = 1613    8,9,10,14,16,17,

1612:  FRACT: M←AR, Q←4B7+37B
.BL = 10   78
.SSP = 5   56,54
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
.C = -37777741   18,37,38,39,40,41,
       
1613:  ADR←M AND Q MRG 200B,  HFETCH,  CALL MINF
.MCONT = 1   7
.BR = 10   82
.MS = 45   65,63,60
.TCX = 1   43
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 1212    8,10,14,16,
.C = 200   34,
CHECKBIT IS 56   
       
1614:  M←AR, STORE R0←ACTCL+1, DGOTO RET1
.BL = 10   78
.SSP = 5   56,54
.MS = 42   64,60
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LR0 = 1   58
.MC = 1   5
.DGO = 1   87
.B = 1636    8,9,10,13,14,15,16,
.C = 101   35,41,
       
1615:  M←Q, STORE R0←ACTCL
.BR = 10   82
.BL = 2   80
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LR0 = 1   58
.VCYP = 1   86
.C = 100   35,


*  REMOVE ENTRY FROM ACTIVATE QUEUE
*  Z - FAIL ADDRESS
*  USE CALL REACT,Z
*  RETURN M,Q,Z,EPTR - PTR TO NODE

1616:  REACT: Q←ACTQ, CALL RTEQP
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 1   5
.VCYP = 1   86
.B = 357    10,11,12,14,15,16,17,
.C = 102   35,40,

1617:  REAC0: ADR←NFREL,  HFETCH,  CALL MDCF
.MCONT = 1   7
.BL = 10   78
.MS = 45   65,63,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 1214    8,10,14,15,
.C = 123   35,37,40,41,
CHECKBIT IS 50   

1620:  REAC1: M←EPTR←Z←Q, GOTO CALL3
.BR = 10   82
.BL = 2   80
.SSP = 32   55,53,52
.TAX = 1   49
.LMX = 1   72
.LZX = 1   76
.LSPX = 1   59
.MC = 1   5
.B = 763    9,10,11,12,13,16,17,


*  REMOVE GENERAL RQUEST FROM GRQ
*  USE CALL REGRQ
*  RETURN M,Q,Z,EPTR - PTR TO NODE


1621:  REGRQ: Q←GRQ, DGOTO REAC0
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 1617    8,9,10,14,15,16,17,
.C = 104   35,39,
       
1622:  Z←PNT, CALL RTEQP
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LZX = 1   76
.MC = 1   5
.VCYP = 1   86
.B = 357     10,11,12,14,15,16,17,
.C = 141   35,36,41,
CHECKBIT IS 50   


*  REMOVE ENTRY FROM APPROPRIATE CLEANUP QUEUE
*  USE CALL RECLQ
*  RETURN M,Q,Z,EPTR - PTR TO NODE


1623:  RECLQ: FETCH R0←RELL MRG TSUSTATE, DGOTO REAC1
.BL = 10   78
.SSP = 2   55
.MS = 44   63,60
.TCY = 1   44
.TSPY = 1   45
.TYW = 1   48
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
.B = 1620    8,9,10,13,
.C = 56   36,38,39,40,
CHECKBIT IS 50   
       
1624:  Q←M, Z←PNT, CALL RTEQP
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 1   5
.VCYP = 1   86
.B = 357    10,11,12,14,15,16,17,
.C = 141   35,36,41,


*  REMOVE ENTRY FROM CONTEXT BLOCK QUEUE

1625:  RCTXQ: ADR←NCTX,  HFETCH,  CALL MDCF
.MCONT = 1   7
.BL = 10   78
.MS = 45   65,63,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 1214    8,10,14,15,
.C = 153   35,36,38,40,41,
       
1626:  DGOTO REAC1 ON M>=0, Q←CTXQ
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 5   5,3
.DGO = 1   87
.B = 1620    8,9,10,13,
.C = 116   35,38,39,40,
CHECKBIT IS 56   
       
1627:  Z←PNT, CALL RTEQP
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LZX = 1   76
.MC = 20   1
.VCYP = 1   86
.B = 357    10,11,12,14,15,16,17,
.C = 141   35,36,41,
CHECKBIT IS 50   
       
1630:  M←0, STORE R0←NCTX, GOTO REAC1
.BL = 10   78
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.LMX = 1   72
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86
.B = 1620    8,9,10,13,
.C = 153   35,36,38,40,41,
CHECKBIT IS 50   


*  REMOVE ENTRY FROM SWAPIN QUEUE

1631:  RSWAP: Q←SWAPIN, DGOTO REAC0
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 1617    8,9,10,14,15,16,17,
.C = 106   35,39,40,
CHECKBIT IS 50
       
1632:  Z←RET1, CALL RTEQP
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LZX = 1   76
.MC = 1   5
.VCYP = 1   86
.B = 357     10,11,12,14,15,16,17,
.C = 1636   32,33,34,37,38,39,40,
CHECKBIT IS 50   


*  REMOVE ENTRY FROM RELEASE QUEUE

1633:  RRELQ: Q←RELQ, DGOTO REAC1
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 1620    8,9,10,13,
.C = 170   35,36,37,38,
CHECKBIT IS 50   
       
1634:  CALL RTEQP
.MCONT = 1   7
.BL = 10   78
.MC = 1   5
.VCYP = 1   86
.B = 357    10,11,12,14,15,16,17,


*  FAIL ROUTINE

1635:  FRA1:  SUBR ←FA1,GOTO FRET
.BL = 10   78
.SSP = 6   55,54
.TSPY = 1   45
.TYW = 1   48
.LRN = 5   71,69
.MC = 20   1
.B = 116    11,14,15,16,
CHECKBIT IS 30   


*  RETURN DOING UNPROTECT
*  USE GOTO


1636:  RET1:  .C←17B,.TCX,UNPROTECT,  CALL RET
.MCONT = 1   7
.BL = 10   78
.MS = 20   61
.TCX = 1   43
.MC = 1   5
.B = 112    11,14,16,
.C = 17   38,39,40,41,
CHECKBIT IS 50   


*  RELEASE NODE AND RETURN
*  EPTR - PTR TO NODE OR
*       - 0
*  USE GOTO IF RETURNING TO UCODE ROTINES OTHERWISE,
*  USE SCALL FRENOD

1637:  FRENOD: Q←EPTR, .C←17B,.TCX,UNPROTECT,  DCALL RET
.MCONT = 1   7
.BL = 10   78
.SSP = 32   55,53,52
.MS = 20   61
.TCX = 1   43
.TSPY = 1   45
.LQY = 1   75
.MC = 20   1
.DGO = 1   87
.B = 112    11,14,16,
.C = 17   38,39,40,41,
CHECKBIT IS 50   
       
1640:  CALL SETFL ON Q#0
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.TAX = 1   49
.MC = 3   5,4
.B = 1175    8,11,12,13,14,15,17,


*  FIND DHT ENTRY
*  EPTR - PTR TO NODE
*  BR - FAIL ADDRESS
*  FAILS IF DHT ENTRY DOES NOT EXIST
*  OTHERWISE RETURNS WITH
*  M,DRUMAD - DRUM ADDRESS
*  Q,DHTST - DHT STATUS WORD
*  Z,DHTPT - PTR TO DHT ENTRY


1641:  FDHT:  M←EPTR, Q←DKA/1B4
.BL = 10   78
.SSP = 32   55,53,52
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
.C = 2   40,
       
1642:  FETCH R0←M+Q, Z←FRA1, CALL DHTSCH
.MCONT = 1   7
.BR = 2   84
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
.MC = 1   5
.B = 270    10,12,13,14,
.C = 1635   32,33,34,37,38,39,41,
CHECKBIT IS 56   

1643:  FDHT0: FETCH R0←DHTPT←Z
.BR = 4   83
.BL = 10   78
.SSP = 56   55,54,53,51
.MS = 44   63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
CHECKBIT IS 87   
       
1644:  DRUMAD←Q←M, FETCH R0←R0+1
.BR = 10   82
.BL = 4   79
.SSP = 57   56,55,54,53,51
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.LSPX = 1   59
CHECKBIT IS 87   
       
1645:  DHTST←T←M,  DCALL RET
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.SSP = 60   52,51
.TXW = 1   47
.TAX = 1   49
.LRN = 5   71,69
.LSPX = 1   59
.MC = 20   1
.DGO = 1   87
.B = 112    11,14,16,
       
1646:  M←Q, Q←T
.RRN = 5   68,66
.BR = 10   82
.BL = 2   80
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86


*  APPEND OR STACK ON DRUM SECTOR READ LIST
*  EPTR - PTR TO NODE
*  DRUMAD,DHTST - DHT DATA
*  Z - FAIL ADDRESS
*  RETURN Z - PTR TO QUEUE IN DSRL


1647:  SDRD:  M←DHTST, R1←Q←MSK4*TWO2+4B7, GOTO *+2
.BL = 10   78
.SSP = 60   52,51
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LQX = 1   74
.LRN = 1   71
.MC = 20   1
.B = 1651    8,9,10,12,14,17,
.C = -37777604   18,35,36,37,38,39,
CHECKBIT IS 50   

1650:  ADRD:  M←DHTST, R1←Q←MSK4*TWO2
.BL = 10   78
.SSP = 60   52,51
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LQX = 1   74
.LRN = 1   71
.C = 174   35,36,37,38,39,
CHECKBIT IS 87   
       
1651:  GOTO FRZ ON M LCY 1>=0, M←DRUMAD
.BR = 10   82
.BL = 4   79
.SSP = 57   56,55,54,53,51
.MS = 1   65
.TSPY = 1   45
.LMY = 1   73
.MC = 5   5,3
.B = 131    11,13,14,17,
CHECKBIT IS 30   
       
1652:  Q←M AND Q, Z←DSTR*TWO18/TWO18+1+1, CALL CYLQ
.MCONT = 1   7
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 1   5
.VCYP = 1   86
.B = 1504    8,9,11,15,
.C = 27   37,39,40,41,
CHECKBIT IS 56   
       
1653:  M←Q, Z←24*2
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LZY = 1   77
.VCYP = 1   86
.C = 60   36,37,
       
1654:  GOTO *-1 ON Q←Q-Z>=0, Z←DSRL
.BR = 13   85,84,82
.BL = 2   80
.SSP = 43   56,55,51
.LOC = 1   50
.TSPY = 1   45
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 5   5,3
.B = 1653    8,9,10,12,14,16,17,
       
1655:  R2←M←M+Z, Q←EPTR
.BR = 4   83
.BL = 4   79
.SSP = 32   55,53,52
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LRN = 2   70
       
1656:  CALL AELEQP ON R1>=0
.MCONT = 1   7
.RRN = 1   68
.BL = 10   78
.THY = 1   46
.MC = 7   5,4,3
.B = 340    10,11,12,
CHECKBIT IS 30   
       
1657:  CALL SELEQP ON R1<0
.MCONT = 1   7
.RRN = 1   68
.BL = 10   78
.THY = 1   46
.MC = 10   2
.B = 347    10,11,12,15,16,17,
       
1660:  Z←R2,  CALL RET
.MCONT = 1   7
.RRN = 2   67
.BL = 10   78
.THY = 1   46
.LZY = 1   77
.MC = 1   5
.VCYP = 1   86
.B = 112    11,14,16,
CHECKBIT IS 30   


*  INITIALIZE CONTEXT BLOCK DESCRIPTOR TABLE  (PRTPT,BPMT,BCWS)
*  Z - PTR TO NODE CONTAINING PRT POINTER
*  BR - FAIL ADDRESS
*  USE SCALL ICBTBL,Q;
*  FAILS IF CONTEXT BLOCK NOT IN CORE
*  RETURNS: M - CWSI
*  Q - CHT STATUS WORD FOR CONTEXT BLOCK
*  Z - BCWS


1661:  ICBTBL: FA0←FRA1, CALL SPRTPT
.MCONT = 1   7
.BL = 10   78
.SSP = 16   55,54,53
.TCX = 1   43
.LSPX = 1   59
.MC = 20   1
.B = 1704    8,9,10,11,15,
.C = 1635   32,33,34,37,38,39,41,
CHECKBIT IS 50   
       
1662:  SUBR←INCOR,CALL STKLK
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 1   5
.VCYP = 1   86
.B = 107    11,15,16,17,
.C = 1546   32,33,35,36,39,40,
CHECKBIT IS 50   
       
1663:  DKACMP←Q←INCORM
.BL = 10   78
.SSP = 24   54,52
.TCX = 1   43
.LQX = 1   74
.LSPX = 1   59
.C = 24000000   19,21,
CHECKBIT IS 87   
       
1664:  GOTO FRA1 ON M AND Q # 0, Q←MSK6*TWO11
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 3   5,4
.B = 1635    8,9,10,13,14,15,17,
.C = 774000   24,25,26,27,28,29,30,
CHECKBIT IS 56   
       
1665:  BPMT←M AND Q MRG PMTDSP
.BR = 10   82
.SSP = 65   56,54,52,51
.TCX = 1   43
.TAX = 1   49
.LSPX = 1   59
.C = 274   34,36,37,38,39,
       
1666:  R0←Z←BCWS←M AND Q MRG CWSDSP,  DCALL RET
.MCONT = 1   7
.BR = 10   82
.SSP = 64   54,52,51
.TCX = 1   43
.TXW = 1   47
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
.LSPX = 1   59
.MC = 1   5
.DGO = 1   87
.B = 112    11,14,16,
.C = 2731   31,33,34,35,37,38,41,
       
1667:  Q←M, FETCH R0←R0+1
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.VCYP = 1   86


*  CLEAR/SET SF
*  M - INDEX OF CWS ENTRY
*  SETS CWSI, CWSPT, CWSWD, PMTPT
*  CLEARS OR SETS SF ACCORDING TO ENTRY POINT USED
*  RETURNS PMT[3] IN M
*          Q - OLD SF BIT


1670:  STSF:  M←CWSI, R3←MSK0*TWO11, GOTO *+4
.BL = 10   78
.SSP = 63   56,55,52,51
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LRN = 3   71,70
.MC = 1   5
.B = 1674    8,9,10,12,13,14,15,
.C = 4000   30,
CHECKBIT IS 50   

1671:  CLSF:  M←CWSI, R3←0, GOTO *+3
.BL = 10   78
.SSP = 63   56,55,52,51
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LRN = 3   71,70
.MC = 20   1
.B = 1674    8,9,10,12,13,14,15,
CHECKBIT IS 30   

1672:  ICSF:  CWSI←M, R3←0, GOTO *+2
.BR = 10   82
.BL = 4   79
.SSP = 63   56,55,52,51
.TYW = 1   48
.TAX = 1   49
.LRN = 3   71,70
.LSPX = 1   59
.MC = 1   5
.B = 1674    8,9,10,12,13,14,15,

1673:  ISSF:  CWSI←M, R3←MSK0*TWO11
.BR = 10   82
.BL = 4   79
.SSP = 63   56,55,52,51
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LRN = 3   71,70
.LSPX = 1   59
.C = 4000   30,
       
1674:  Z←BCWS
.BL = 10   78
.SSP = 64   54,52,51
.TSPY = 1   45
.LZY = 1   77
CHECKBIT IS 30   
       
1675:  FETCH R0←CWSPT←Z-M, Q←MSK7*TWO0
.BR = 4   83
.BL = 13   81,80,78
.SSP = 66   55,54,52,51
.MS = 44   63,60
.LOC = 1   50
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.LSPX = 1   59
.C = 377   34,35,36,37,38,39,40,41,
       
1676:  Q←M AND Q LCY 2, Z←BPMT
.BR = 10   82
.SSP = 65   56,54,52,51
.MS = 2   64
.TSPY = 1   45
.LQX = 1   74
.LZY = 1   77
       
1677:  CWSWD←M, M←SF/1B4
.BR = 10   82
.BL = 4   79
.SSP = 67   56,55,54,52,51
.TCY = 1   44
.TAX = 1   49
.LMY = 1   73
.LSPX = 1   59
.C = 3   40,41,
       
1700:  PMTPT←Z←Z+Q
.BR = 4   83
.BL = 2   80
.SSP = 70   53,52,51
.TAX = 1   49
.LZX = 1   76
.LSPX = 1   59
CHECKBIT IS 87   
       
1701:  HFETCH R0←M+Z, Q←MSK0*TWO11
.BR = 4   83
.BL = 4   79
.MS = 45   65,63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.C = 4000   30,
*  FALL THROUGH TO SET/CLEAR SF


*  SET/CLEAR N BITS IN M
*  M - ORIGINAL WORD
*  Q - MASK OF BITS TO REPLACE
*  R0 - ADDRESS OF WORD
*  R3 - REPLACEMENT BITS
*  RETURN
*  M - NEW WORD WHICH IS STORED AT R0
*  Q - BITS WHICH WERE REPLACED


1702:  SCNBT: T←M AND Q, Z←R3
.RRN = 3   68,67
.BR = 10   82
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 5   71,69
.VCYP = 1   86
CHECKBIT IS 87   
       
1703:  M←M AND NOT Q ! Q AND Z, Q←T, STORE, RETURN
.MCONT = 2   6
.RRN = 5   68,66
.BL = 14   79,78
.MS = 42   64,60
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 20   1
.VCYP = 1   86


*  SET PRTPT
*  Z - PTR TO NODE CONTAINING PROCESS TABLE PTR
*  RETURN : Q,Z,PRTPT - POINTER TO PRT FOR PROCESS
*      M - CONTENTS OF T
*  USE CALL SPRTPT

1704:  SPRTPT: R3←M, Q←EPRT/1B4
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 3   71,70
.VCYP = 1   86
.C = 3   40,41,
       
1705:  FETCH R0←Z+Q, Q←NADB, DRETURN
.MCONT = 2   6
.BR = 4   83
.BL = 2   80
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
.C = -1000000   18,19,20,21,22,23,
CHECKBIT IS 56   
       
1706:  Q←Z←PRTPT←M AND NOT Q, M←T
.RRN = 5   68,66
.BR = 10   82
.BL = 14   79,78
.SSP = 62   55,52,51
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.LQX = 1   74
.LZX = 1   76
.LSPX = 1   59
CHECKBIT IS 87   


*  MANIPULATE PROCESS STATUS BITS
*  RETURN: M - PROCESS STATUS WORD
*          Q - OLD VALUE OF BITS
*  BITS AFFECTED: PGF, CBC, PDW, PQ, SWQ, LDD


*  CLEAR/SET PROCESS STATUS BITS
*  PRTPT - POINTER TO PROCESS TABLE
*  R3 VALUE OF RESULTING AMC STATUS BITS
*  USE CALL CSSTS

1707:  CSSTS: Z←PRTPT, M←PRST
.BL = 10   78
.SSP = 62   55,52,51
.TCX = 1   43
.TSPY = 1   45
.LMX = 1   72
.LZY = 1   77
.C = 10   38,

1710:  CSST0: FETCH R0←M+Z, Q←AMCSTSBITS, GOTO SCNBT
.BR = 4   83
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 1   5
.B = 1702    8,9,10,11,16,
.C = 11710   29,32,33,34,35,38,

*  CLEAR/SET PROCESS STATUS BITS
*  EPTR - PTR TO NODE CONTAINING PRTPT
*  M - VALUE OF RESULTING AMC STATUS BITS
*  USE SCALL PSTS

1711:  PSTS:  Z ← EPTR, T←PRST, CALL SPRTPT
.MCONT = 1   7
.BL = 10   78
.SSP = 32   55,53,52
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LZY = 1   77
.LRN = 5   71,69
.MC = 20   1
.B = 1704    8,9,10,11,15,
.C = 10   38,
CHECKBIT IS 50   
       
1712:  CALL CSST0
.MCONT = 1   7
.BL = 10   78
.MC = 1   5
.VCYP = 1   86
.B = 1710    8,9,10,11,14,
        
1713:  CALL RET
.MCONT = 1   7
.BL = 10   78
.MC = 20   1
.VCYP = 1   86
.B = 112    11,14,16,


*  READ PROCESS STATUS BITS
*  Z - POINTER TO NODE CONTAINING PRTPT
*  USE SCALL RSTS

1714:  RSTS:  T←PRST, CALL SPRTPT
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 1   5
.VCYP = 1   86
.B = 1704    8,9,10,11,15,
.C = 10   38,
CHECKBIT IS 50   
       
1715:  FETCH R0←M+Z,  CALL RET
.MCONT = 1   7
.BR = 4   83
.BL = 4   79
.MS = 44   63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1
.B = 112    11,14,16,
CHECKBIT IS 30   


*  SET SECTOR OCCUPIED TABLE
*  DRUMAD - DRUM ADDRESS
*  PRTPT - PTR POINTER
*  BR - FAIL ADDRESS


1716:  SSOT:  M←DRUMAD, SUBR←PDRM,CALL STKLK
.MCONT = 1   7
.BL = 10   78
.SSP = 57   56,55,54,53,51
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LRN = 5   71,69
.MC = 1   5
.B = 107    11,15,16,17,
.C = 1531   32,33,35,37,38,41,
CHECKBIT IS 50   
       
1717:  M←PRTPT, Z←SOT/1B4
.BL = 10   78
.SSP = 62   55,52,51
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LZX = 1   76
.C = 12   38,40,
CHECKBIT IS 87   
       
1720:  HFETCH R0←M+Z
.BR = 4   83
.BL = 4   79
.MS = 45   65,63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
CHECKBIT IS 87   
       
1721:  Q←1, Z←R1, .LRN←4, CALL CYLQ
.MCONT = 1   7
.RRN = 1   68
.BR = 10   82
.BL = 10   78
.LOC = 1   50
.THY = 1   46
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.LRN = 4   69
.MC = 20   1
.VCYP = 1   86
.B = 1504    8,9,11,15,
CHECKBIT IS 30   

1722:  SSOT0: R3←Q, CALL SCNBT
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.TXW = 1   47
.TAX = 1   49
.LRN = 3   71,70
.MC = 1   5
.VCYP = 1   86
.B = 1702    8,9,10,11,16,
CHECKBIT IS 30   
       
1723:  Q, GOTO FRA1 IF BL#0, Z←MAXSOT
.BR = 10   82
.BL = 2   80
.SSP = 25   56,54,52
.TSPY = 1   45
.TAX = 1   49
.LZY = 1   77
.MC = 23   5,4,1
.B = 1635    8,9,10,13,14,15,17,
CHECKBIT IS 30   
       
1724:  Q←M-1, DGOTO *
.BR = 7   85,84,83
.BL = 4   79
.TAX = 1   49
.LQX = 1   74
.MC = 1   5
.DGO = 1   87
.B = 1724    8,9,10,11,13,15,
CHECKBIT IS 30   
       
1725:  M←M AND Q, Q← T1 ← T1+1, GOTO *+1 IF BL=0
.RRN = 4   66
.BR = 10   82
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LRN = 4   69
.MC = 22   4,1
.VCYP = 1   86
.B = 1726    8,9,10,11,13,15,16,
        
1726:  CALL RET ON Z-Q>=0
.MCONT = 1   7
.BR = 4   83
.BL = 15   81,79,78
.LOC = 1   50
.TAX = 1   49
.MC = 5   5,3
.B = 112    11,14,16,
CHECKBIT IS 30   
       
1727:  Q←R3, T1←M←0, GOTO SSOT0
.RRN = 3   68,67
.BL = 10   78
.THY = 1   46
.TXW = 1   47
.LMX = 1   72
.LQY = 1   75
.LRN = 4   69
.MC = 20   1
.VCYP = 1   86
.B = 1722    8,9,10,11,13,16,
CHECKBIT IS 30   


*  AGE CORE WORKING SET
*  PMTPT, CWSPT, CWSWD ALL REQUIRED TO BE ACCURATE
*  MERGES REFERENCE FLAG INTO BIT 5 AND RIGHT SHIFTS  THE USE HISTORY ONE
*  BIT.  RETURNS WITH NEW CWS WORD IN M


1730:  AGECWS: M←PMTPT, Q←RF/1B4, .LRN←3
.BL = 10   78
.SSP = 70   53,52,51
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
.LRN = 3   71,70
.C = 3   40,41,
CHECKBIT IS 87   
       
1731:  HFETCH R0←M+Q, Q←MSK0*TWO22, CALL SCNBT
.MCONT = 1   7
.BR = 2   84
.BL = 4   79
.MS = 45   65,63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 20   1
.B = 1702    8,9,10,11,16,
.C = 20000000   19,
CHECKBIT IS 56   
       
1732:  R3←Q LCY 24- 4, Q←MSK7*TWO11
.BR = 10   82
.BL = 2   80
.MS = 10   62
.TCY = 1   44
.TXW = 1   47
.LQY = 1   75
.LRN = 3   71,70
.VCYP = 1   86
.C = 1774000   23,24,25,26,27,28,29,30,
       
1733:  M←CWSWD, Z←23
.BL = 10   78
.SSP = 67   56,55,54,52,51
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LZX = 1   76
.C = 27   37,39,40,41,
CHECKBIT IS 87   
       
1734:  Q←M AND Q, R0←CWSPT, CALL CYLQ
.MCONT = 1   7
.BR = 10   82
.SSP = 66   55,54,52,51
.TSPY = 1   45
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 1   5
.B = 1504    8,9,11,15,
CHECKBIT IS 30   
       
1735:  R3←Q, R3, .TYW
.RRN = 3   68,67
.BR = 10   82
.BL = 2   80
.THY = 1   46
.TXW = 1   47
.TYW = 1   48
.TAX = 1   49
.LRN = 3   71,70
.VCYP = 1   86
       
1736:  Q←MSK7*TWO11, CALL SCNBT
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 1   5
.VCYP = 1   86
.B = 1702    8,9,10,11,16,
.C = 1774000   23,24,25,26,27,28,29,30,
       
1737:  CWSWD←M,  CALL RET
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.SSP = 67   56,55,54,52,51
.TAX = 1   49
.LSPX = 1   59
.MC = 20   1
.B = 112    11,14,16,
CHECKBIT IS 30   


*  COMPUTE OLDEST CWS ENTRY

1740:  OCWS:  Q←CWSWD, M←MSK12*TWO11
.BL = 10   78
.SSP = 67   56,55,54,52,51
.TCX = 1   43
.TSPY = 1   45
.LMX = 1   72
.LQY = 1   75
.C = -4000   18,19,20,21,22,23,24,25,26,27,28,29,30,
       
1741:  Q←M AND Q LCY 24- 4, M←OLDAGE
.BR = 10   82
.SSP = 27   56,55,54,52
.MS = 10   62
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
       
1742:  RETURN ON Q-M>=0, M←CWSI
.MCONT = 2   6
.BR = 2   84
.BL = 13   81,80,78
.SSP = 63   56,55,52,51
.LOC = 1   50
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.MC = 5   5,3
       
1743:  OLDAGE←Q, DRETURN
.MCONT = 2   6
.BR = 10   82
.BL = 2   80
.SSP = 27   56,55,54,52
.TAX = 1   49
.LSPX = 1   59
.MC = 20   1
.DGO = 1   87
       
1744:  OCWSI←M
.BR = 10   82
.BL = 4   79
.SSP = 30   53,52
.TAX = 1   49
.LSPX = 1   59
CHECKBIT IS 87   


*  EXCHANGE MEMORY AND T
*  R0 - ADDRESS IN MEMORY
*  T - DATA TO STORE
*  RETURN: Q,T - DATA FROM MEMORY


1745:  XMT:   HFETCH, DRETURN
.MCONT = 2   6
.BL = 10   78
.MS = 45   65,63,60
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
CHECKBIT IS 30   
       
1746:  Q←T←M, M←T, STORE
.RRN = 5   68,66
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LQX = 1   74
.LRN = 5   71,69
.VCYP = 1   86
CHECKBIT IS 87   


*  INCREMENT NCWS AND EXCHANGE CWS ENTRIES
*  BCWS - BASE OF CORE WORKING SET
*  CWSPT - POINTER TO ENTRY TO MOVE TO LAST POSITION
*  RETURN: M - CWSI


1747:  XCWS:  Z←BCWS, Q←NCWS/1B4
.BL = 10   78
.SSP = 64   54,52,51
.TCX = 1   43
.TSPY = 1   45
.LQX = 1   74
.LZY = 1   77
.C = 2   40,
       
1750:  ADR←Q+Z,  HFETCH,  CALL MDCF
.MCONT = 1   7
.BR = 4   83
.BL = 2   80
.MS = 45   65,63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 1   5
.B = 1214    8,10,14,15,
CHECKBIT IS 30   
       
1751:  T1←R0←Z-M, CALL XMT
.MCONT = 1   7
.BR = 4   83
.BL = 13   81,80,78
.LOC = 1   50
.TXW = 1   47
.TAX = 1   49
.LRN = 4   69
.LR0 = 1   58
.MC = 20   1
.B = 1745    8,9,10,11,12,15,17,
CHECKBIT IS 30   
       
1752:  R0←CWSPT, CALL XMT
.MCONT = 1   7
.BL = 10   78
.SSP = 66   55,54,52,51
.TSPY = 1   45
.TYW = 1   48
.LR0 = 1   58
.MC = 1   5
.B = 1745    8,9,10,11,12,15,17,
       
1753:  M←Q, STORE R0←T1,  DCALL RET
.MCONT = 1   7
.RRN = 4   66
.BR = 10   82
.BL = 2   80
.MS = 42   64,60
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 112    11,14,16,
       
1754:  M←CWSI
.BL = 10   78
.SSP = 63   56,55,52,51
.TSPY = 1   45
.LMY = 1   73


*  DRUM BASH ROUTINE
*  THIS ROUTINE WILL RUN THE DRUM AT FULL SPEED PROVIDED IT IS STARTED
*  CORRECTLY.  
*  IT USES THE FOLLOWING REGISTERS FOR PARAMETERS
*  REL - BASE REGISTER OF TSU DUMP (AND APU STARTUP ROUTINE)

*  AR - UNIQUE NAME 0 USED IN ALL TRANSFERS
*  BR - UNIQUE NAME 1 USED IN ALL TRANSFERS
*  SR1 - FIRST INSTRUCTION V UNIT NUMBER
*  SR4 - SECOND INSTRUCTION V UNIT NUMBER
*  SR2 - DEVICE ADDRESS (WHICH SHOULD HAVE 0 SECTOR FIELD)

*  THE STRATEGY IS TO USE THE FIRST INSTRUCTION FOR 24 SECTORS (0-23), 
*  THEN REINITIALIZE THE DRUM ADDRERS, CORE ADDRESS, AND SWAP
*  INSTRUCTIONS, THEN LOOP.
*  TWO COUNTERS ARE INCREMENTED BY THIS ROUTINE.  IF AN ERROR OCCURS
*  DURING EXECUTION CELL 4 IS INCREMENTED.  EACH TIME AROUND
*  THE BAND CELL 5 IS INCREMENTED.


1755:  DMBASH: M←AR, Z←4000B
.BL = 10   78
.SSP = 5   56,54
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LZX = 1   76
.C = 4000   30,
CHECKBIT IS 87   
       
1756:  R3←Q←SR3
.BL = 10   78
.SSP = 13   56,55,53
.TSPY = 1   45
.TYW = 1   48
.LQY = 1   75
.LRN = 3   71,70
       
1757:  SR3←Q+Z, R0←0
.BR = 4        83
.BL = 2   80
.SSP = 13   56,55,53
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
       
1760:  Q←BR, SUBR←STSUI,CALL STKLK
.MCONT = 1   7
.BL = 10   78
.SSP = 6   55,54
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LQY = 1   75
.LRN = 5   71,69
.MC = 1   5
.B = 107    11,15,16,17,
.C = 1141   32,35,36,41,
       
1761:  Z←R1, T1←M←4B7, CALL GETPOS IF ATTS
.MCONT = 1   7
.RRN = 1   68
.BL = 10   78
.TCX = 1   43
.THY = 1   46
.TXW = 1   47
.LMX = 1   72
.LZY = 1   77
.LRN = 4   69
.MC = 36   4,3,2,1
.VCYP = 1   86
.B = 1333    8,10,11,13,14,16,17,
.C = -40000000   18,
CHECKBIT IS 50   
       
1762:  GOTO *-1 ON M<0, M←0
.BR = 10   82
.BL = 4   79
.TAX = 1   49
.LMY = 1   73
.MC = 4   3
.B = 1761    8,9,10,11,12,13,17,
CHECKBIT IS 30   
       
1763:  R0←RELL MRG TSUSTATE+1, CALL DPTSU
.MCONT = 1   7
.BL = 10   78
.SSP = 2   55
.TCY = 1   44
.TSPY = 1   45
.TYW = 1   48
.LR0 = 1   58
.MC = 20   1
.B = 1103    8,11,16,17,
.C = 57   36,38,39,40,41,
       
1764:  Z←R2, Q←MSK11*TWO0
.RRN = 2   67
.BL = 10   78
.TCX = 1   43
.THY = 1   46
.LQX = 1   74
.LZY = 1   77
.VCYP = 1   86
.C = 7777   30,31,32,33,34,35,36,37,38,39,40,41,
       
1765:  M AND Q, ADR←Q←TWO2,  HFETCH,  CALL MINF IF BL#0
.MCONT = 1   7
.BR = 10   82
.MS = 45   65,63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 23   5,4,1
.VCYP = 1   86
.B = 1212    8,10,14,16,
.C = 4   39,
       
1766:  R2←M←Q+Z, Q←MSK4*TWO2
.BR = 4   83
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LRN = 2   70
.C = 174   35,36,37,38,39,
       
1767:  M←M AND Q, Q←TWO2*24
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = 140   35,36,
CHECKBIT IS 87   
       
1770:  GOTO DMBASH ON M-Q<0, Q←SR4
.BR = 15   85,83,82
.BL = 4   79
.SSP = 14   54,53
.LOC = 1   50
.TSPY = 1   45
.TAX = 1   49
.LQY = 1   75
.MC = 4   3
.B = 1755    8,9,10,11,12,14,15,17,
       
1771:  R1←Q, Q←R1
.RRN = 1   68
.BR = 10   82
.BL = 2   80
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 1   71
.VCYP = 1   86
       
1772:  SR4←Q, ADR←TWO2+1,  HFETCH,  CALL MINF
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.SSP = 14   54,53
.MS = 45   65,63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
.MC = 1   5
.B = 1212    8,10,14,16,
.C = 5   39,41,
CHECKBIT IS 42   
       
1773:  R2←SR2, DGOTO DMBASH
.BL = 10   78
.SSP = 12   55,53
.TSPY = 1   45
.TYW = 1   48
.LRN = 2   70
.MC = 20   1
.DGO = 1   87
.B = 1755    8,9,10,11,12,14,15,17,
CHECKBIT IS 30   
       
1774:  SR3←20000B
.BL = 10   78
.SSP = 13   56,55,53
.TCX = 1   43
.LSPX = 1   59
.C = 20000   28,


*  DECREMENT SCHEDULED COUNT
*  M - CHT STATUS FIELD
*  R0 - PTR TO CHT STATUS FIELD
*  RETURN
*  M, CHT STATUS - NEW CHT STATUS WORD


1775:  DSCH:  T←Q, Q←MSK7*TWO0
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.VCYP = 1   86
.C = 377   34,35,36,37,38,39,40,41,
       
1776:  M AND Q, Q←T, RETURN IF BL=0
.MCONT = 2   6
.RRN = 5   68,66
.BR = 10   82
.THY = 1   46
.TAX = 1   49
.LQY = 1   75
.MC = 22   4,1
.VCYP = 1   86
CHECKBIT IS 30   
       
1777:  M←M-1, STORE, RETURN
.MCONT = 2   6
.BR = 7   85,84,83
.BL = 4   79
.MS = 42   64,60
.TAX = 1   49
.LMX = 1   72
.MC = 20   1
CHECKBIT IS 30   


       CHECK 2000B;


*  CONCATENATE STANDARD LISTS
*  R0 - ADDRESS OF HEADER OF LIST MOVED
*  R1 - ADDRESS OF HEADER OF DESTINATION LIST


2000:  CONC:  HFETCH, Z←R0, Q←EQP/1B4
.BL = 10   78
.MS = 45   65,63,60
.TCX = 1   43
.THY = 1   46
.LQX = 1   74
.LZY = 1   77
.VCYP = 1   86
.C = 5   39,41,
       
2001:  R2←M, M←777777B, STORE, RETURN IF ENDLT
.MCONT = 2   6
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LRN = 2   70
.MC = 14   3,2
.C = 777777   24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 56   
       
2002:  HFETCH R0←R0+1, AR←Z-Q
.BR = 4   83
.BL = 15   81,79,78
.SSP = 5   56,54
.MS = 45   65,63,60
.LOC = 1   50
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
CHECKBIT IS 87   
       
2003:  Z←M, M←AR, STORE
.BR = 10   82
.BL = 4   79
.SSP = 5   56,54
.MS = 42   64,60
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
CHECKBIT IS 87   
       
2004:  HFETCH R0←R1+1, DGOTO CONC0
.RRN = 1   68
.BL = 10   78
.MS = 45   65,63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 7    15,16,17,
       
2005:  R1←M+Q, Q←NADB, DGOTO *+1
.BR = 2   84
.BL = 4   79
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 1   71
.MC = 20   1
.DGO = 1   87
.B = 6    15,16,
.C = -1000000   18,19,20,21,22,23,
       
2006:  HFETCH R0←R1, DRETURN
.MCONT = 2   6
.RRN = 1   68
.BL = 10   78
.MS = 45   65,63,60
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
CHECKBIT IS 30   

2007:  CONC0: M←M AND Q ! Z AND NOT Q, Z← R2, STORE
.RRN = 2   67
.BR = 14   83,82
.MS = 42   64,60
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LZY = 1   77
.VCYP = 1   86
CHECKBIT IS 87   


*  ERROR CHECK
*  THIS ROUTINE CHECKS ALL SOURCES OF ERRORS
*  IT SUCCEEDS IF THERE ARE NO ERRORS, OTHERWISE IT FAILS WITH A 
*  BIT WORD STATING THE NATURE OF THE ERROR IN Q, AND THE TSU UN MRG IN M,
*  Z CONTAINS EPTR
*  BR - FAIL ADDRESS


2010:  ERRCK: FETCH R0←RELL MRG STATC
.BL = 10   78
.SSP = 2   55
.MS = 44   63,60
.TCY = 1   44
.TSPY = 1   45
.TYW = 1   48
.LR0 = 1   58
.C = 77   36,37,38,39,40,41,
CHECKBIT IS 87   
       
2011:  Q←MSK11*TWO0
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.VCYP = 1   86
.C = 7777   30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 87   
*  INITIALIZE ERROR STATUS WORD
       
2012:  T←M AND Q
.BR = 10   82
.TXW = 1   47
.TAX = 1   49
.LRN = 5   71,69
.VCYP = 1   86
CHECKBIT IS 87   
*  TEST IDENTIFICATION CODE (IS MEANINGLESS IF RLV SET)
       
2013:  T1←Z←EPTR, Q←IDCOD/1B4
.BL = 10   78
.SSP = 32   55,53,52
.TCX = 1   43
.TSPY = 1   45
.TYW = 1   48
.LQX = 1   74
.LZY = 1   77
.LRN = 4   69
.C = 5   39,41,
CHECKBIT IS 87   
       
2014:  FETCH R0←Z+Q, Q←MSK3*TWO20
.BR = 4   83
.BL = 2   80
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.C = -4000000   18,19,20,21,
       
2015:  Z←M, FETCH R0←RELL MRG INSTC
.BR = 10   82
.BL = 4   79
.SSP = 2   55
.MS = 44   63,60
.TCY = 1   44
.TSPY = 1   45
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
.C = 60   36,37,
       
2016:  CALL SETBIT ON M AND Q - Z AND Q #0, Q←TSTAG
.MCONT = 1   7
.BR = 17   85,84,83,82
.LOC = 1   50
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 3   5,4
.B = 27    13,15,16,17,
.C = -40000000   18,
CHECKBIT IS 56   
*TEST UNIQUE NAME
       
2017:  FETCH R0←Z←R0 MRG 6
.BL = 10   78
.MS = 44   63,60
.TCY = 1   44
.THY = 1   46
.TYW = 1   48
.LZY = 1   77
.LR0 = 1   58
.VCYP = 1   86
.C = 6   39,40,
       
2020:  XR←Q←M, FETCH R0←T1, CALL UNTEST
.MCONT = 1   7
.RRN = 4   66
.BR = 10   82
.BL = 4   79
.SSP = 7   56,55,54
.MS = 44   63,60
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.LSPX = 1   59
.MC = 1   5
.B = 26    13,15,16,
       
2021:  FETCH R0←R0+1, AR←Z-1
.BR = 4   83
.BL = 7   81,80,79
.SSP = 5   56,54
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
CHECKBIT IS 87   
       
2022:  Q←M, FETCH R0←AR, CALL UNTEST
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.SSP = 5   56,54
.MS = 44   63,60
.TSPY = 1   45
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 1   5
.B = 26    13,15,16,
CHECKBIT IS 30   
*  MERGE UN IN M FOR ZERO TEST
       
2023:  M←M, M←XR
.BR = 10   82
.BL = 4   79
.SSP = 7   56,55,54
.TSPY = 1   45
.TAX = 1   49
.LMX = 1   72
.LMY = 1   73
       
2024:  Q←T,  DCALL RET, BANKA
.MCONT = 1   7
.RRN = 5   68,66
.BL = 10   78
.MS = 61   61,60,65,
.THY = 1   46
.LQY = 1   75
.MC = 1   5
.DGO = 1   87
.B = 112    11,14,16,
CHECKBIT IS 30
       
2025:  Q, Z←T1, GOTO FRA1 IF BL#0, BANKA
.RRN = 4   66
.BR = 10   82
.BL = 2   80
.MS = 61   61,60,65,
.THY = 1   46
.TAX = 1   49
.LZY = 1   77
.MC = 23   5,4,1
.B = 1635    8,9,10,13,14,15,17,


*  UNIQUE NAME TEST

2026:  UNTEST: RETURN ON M EOR Q = 0, Q←TSUNE
.MCONT = 2   6
.BR = 10   82
.BL = 16   80,79,78
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 2   4
.C = 20000000   19,
CHECKBIT IS 56   
*  FALL THROUGH AND SET BIT 2B7 IN ERROR STATUS WORD


*SET BIT ROUTINE, MERGES BIT INTO T,Q


2027:  SETBIT: Q←T←T, Q←Q, .TXW, RETURN
.MCONT = 2   6
.RRN = 5   68,66
.BR = 10   82
.BL = 2   80
.THY = 1   46
.TXW = 1   47
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LQY = 1   75
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86


*  SEARCH LIST ROUTINES
*  BEGIN SEARCH

2030:  BSCHL: T1←M, Q←DKA/1B4
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 4   69
.VCYP = 1   86
.C = 2   40,
       
2031:  FETCH R0←Z+Q, Q←NADB
.BR = 4   83
.BL = 2   80
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.C = -1000000   18,19,20,21,22,23,
       
2032:  EW2←M, M←T1, GOTO CHTS0-1, BANKA
.RRN = 4   66
.BR = 10   82
.BL = 4   79
.SSP = 26   55,54,52
.MS = 61   61,60,65,
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.LSPX = 1   59
.MC = 1   5
.B = 147    11,12,15,16,17,


*  TEST DISK ADDRESS
*  FAIL IF DISK ADDRESS COMPARE

2033:  TSCH:  FETCH R0←R0+1
.BL = 10   78
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.VCYP = 1   86
CHECKBIT IS 87   
       
2034:  M←M MRG NKAD, Q←EW2, .TCY, DGOTO FT, BANKA
.BR = 10   82
.BL = 4   79
.SSP = 26   55,54,52
.MS = 61   61,60,65,
.TCX = 1   43
.TCY = 1   44
.TSPY = 1   45
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 1   5
.DGO = 1   87
.B = 140    11,12,
.C = -20000000   18,19,
CHECKBIT IS 42
       
2035:  M EOR Q, Q←NADB, RETURN IF BL#0
.MCONT = 2   6
.BR = 10   82
.BL = 16   80,79,78
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 23   5,4,1
.VCYP = 1   86
.C = -1000000   18,19,20,21,22,23,
CHECKBIT IS 56   


*  MAKE NODE
*  AR - REQUEST CODE
*  T - FAIL ADDRESS
*  EPTR - PTR TO REAL NAME
*  RETURN:  EPTR,Q,Z,R1 - PTR TO NODE
*  USE CALL MNODE,T;


2036:  MNODE: Z←FT, CALL REFFL, BANKA
.MCONT = 1   7
.BL = 10   78
.MS = 61   61,60,65,
.TCX = 1   43
.LZX = 1   76
.MC = 1   5
.B = 1202    8,10,16,
.C = 140   35,36,
       
2037:  R0←EPTR, Z←3, CALL BCOPY, BANKA
.MCONT = 1   7
.BL = 10   78
.SSP = 32   55,53,52
.MS = 61   61,60,65,
.TCX = 1   43
.TSPY = 1   45
.TYW = 1   48
.LZX = 1   76
.LR0 = 1   58
.MC = 20   1
.B = 1500    8,9,11,
.C = 3   40,41,
       
2040:  Q←CWSI, Z←18, CALL CYLQ, BANKA
.MCONT = 1   7
.BL = 10   78
.SSP = 63   56,55,52,51
.MS = 61   61,60,65,
.TCX = 1   43
.TSPY = 1   45
.LQY = 1   75
.LZX = 1   76
.MC = 1   5
.B = 1504    8,9,11,15,
.C = 22   37,40,
CHECKBIT IS 50
       
2041:  M←PRTPT, R2←Q
.BR = 10   82
.BL = 2   80
.SSP = 62   55,52,51
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LRN = 2   70
CHECKBIT IS 87   
       
2042:  STORE R0←Q←R0+1
.BL = 10   78
.MS = 42   64,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LQY = 1   75
.LR0 = 1   58
.VCYP = 1   86
       
2043:  M←R2, .SSP←5, .TSPY, STORE R0←Q+1
.RRN = 2   67
.BR = 10   82
.BL = 2   80
.SSP = 5   56,54
.MS = 42   64,60
.LOC = 1   50
.TSPY = 1   45
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LR0 = 1   58
.VCYP = 1   86
       
2044:  Q←R1, GOTO REAC1, BANKA
.RRN = 1   68
.BL = 10   78
.MS = 61   61,60,65,
.THY = 1   46
.LQY = 1   75
.MC = 1   5
.B = 1620    8,9,10,13,
CHECKBIT IS 30


*  ENTER CHT ENTRY
*  M - BITS TO MERGE INTO STATUS WORD IN CHT ENTRY
*  Z - PTR TO CHT ENTRY (CLEAN)
*  EPTR - PTR TO NODE CONTAINING REAL NAME


2045:  ECHTE: Q←M, M←SCH/1B4
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TAX = 1   49
.LMY = 1   73
.LQX = 1   74
.VCYP = 1   86
.C = 3   40,41,
       
2046:  HFETCH R0←Z+M
.BR = 4   83
.BL = 4   79
.MS = 45   65,63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
CHECKBIT IS 87   
       
2047:  M←M OR Q, STORE
.BR = 10   82
.BL = 6   80,79
.MS = 42   64,60
.TAX = 1   49
.LMX = 1   72
.VCYP = 1   86
CHECKBIT IS 87   
       
2050:  HFETCH R0←EPTR
.BL = 10   78
.SSP = 32   55,53,52
.MS = 45   65,63,60
.TSPY = 1   45
.TYW = 1   48
.LR0 = 1   58
CHECKBIT IS 87   
       
2051:  Q←M, FETCH R0←R0+1
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.VCYP = 1   86
       
2052:  UN1←M, FETCH R0←R0+1
.BR = 10   82
.BL = 4   79
.SSP = 34   54,53,52
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
       
2053:  EW2←M
.BR = 10   82
.BL = 4   79
.SSP = 26   55,54,52
.TAX = 1   49
.LSPX = 1   59
       
2054:  M←Q, Q←UN1
.BR = 10   82
.BL = 2   80
.SSP = 34   54,53,52
.TSPY = 1   45
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
       
2055:  M OR Q, GOTO FRA0 IF BL=0
.BR = 10   82
.BL = 6   80,79
.TAX = 1   49
.MC = 22   4,1
.VCYP = 1   86
.B = 133    11,13,14,16,17,
CHECKBIT IS 30   
       
2056:  CHTPT←Z, CALL ECHT, BANKA
.MCONT = 1   7
.BR = 4   83
.BL = 10   78
.SSP = 61   56,52,51
.MS = 61   61,60,65,
.TAX = 1   49
.LSPX = 1   59
.MC = 1   5
.B = 156    11,12,14,15,16,
       
2057:  Q←Z←CHTPT,  CALL RET, BANKA
.MCONT = 1   7
.BL = 10   78
.SSP = 61   56,52,51
.MS = 61   61,60,65,
.TSPY = 1   45
.LQY = 1   75
.LZY = 1   77
.MC = 20   1
.B = 112    11,14,16,


*  FETCH DISK ADDRESS FROM NODE


2060:  GDISK: Z←EPTR, M←DKA/1B4, DRETURN
.MCONT = 2   6
.BL = 10   78
.SSP = 32   55,53,52
.TCX = 1   43
.TSPY = 1   45
.LMX = 1   72
.LZY = 1   77
.MC = 1   5
.DGO = 1   87
.C = 2   40,
CHECKBIT IS 50   
       
2061:  FETCH R0←M+Z
.BR = 4   83
.BL = 4   79
.MS = 44   63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58


*  QUEUE ENTRY ONTO DISK SECTOR LIST
*  EPTR - PTR TO ENTRY

2062:  QKSL:  Q←MSK3*TWO2, CALL GDISK
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 1   5
.VCYP = 1   86
.B = 60    12,13,
.C = 74   36,37,38,39,
CHECKBIT IS 50   
       
2063:  Q←M AND Q, Z←23, CALL CYLQ, BANKA
.MCONT = 1   7
.BR = 10   82
.MS = 61   61,60,65,
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 20   1
.B = 1504    8,9,11,15,
.C = 27   37,39,40,41,
CHECKBIT IS 56
       
2064:  Z←NKSECT*2, CALL MOD, BANKA
.MCONT = 1   7
.BL = 10   78
.MS = 61   61,60,65,
.TCX = 1   43
.LZX = 1   76
.MC = 1   5
.B = 775     9,10,11,12,13,14,15,17,
.C = 12   38,40,
CHECKBIT IS 50
       
2065:  Z←KSQ,  DCALL RET, BANKA
.MCONT = 1   7
.BL = 10   78
.MS = 61   61,60,65,
.TCX = 1   43
.LZX = 1   76
.MC = 20   1
.DGO = 1   87
.B = 112    11,14,16,
.C = 136   35,37,38,39,40,
       
2066:  M←M+Z, Q←EPTR, CALL AELEQP, BANKA
.MCONT = 1   7
.BR = 4   83
.BL = 4   79
.SSP = 32   55,53,52
.MS = 61   61,60,65,
.TSPY = 1   45
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 1   5
.B = 340    10,11,12,


*  QUEUE ENTRY ONTO DISK CYLINDER QUEUE
*  EPTR - PTR TO ENTRY


2067:  QKCYL: Q←MSK7*TWO12, CALL GDISK
.MCONT = 1   7
.BL = 10   78
.TCX = 1   43
.LQX = 1   74
.MC = 20   1
.VCYP = 1   86
.B = 60    12,13,
.C = 3770000   22,23,24,25,26,27,28,29,
CHECKBIT IS 50   
       
2070:  Q←M AND Q, Z←KTRK*TWO18/TWO18+1, CALL CYLQ, BANKA
.MCONT = 1   7
.BR = 10   82
.MS = 61   61,60,65,
.TCY = 1   44
.TAX = 1   49
.LQX = 1   74
.LZY = 1   77
.MC = 1   5
.B = 1504    8,9,11,15,
.C = 14   38,39,
CHECKBIT IS 56
       
2071:  Z←NKCQ, CALL MOD, BANKA
.MCONT = 1   7
.BL = 10   78
.MS = 61   61,60,65,
.TCX = 1   43
.LZX = 1   76
.MC = 20   1
.B = 775    9,10,11,12,13,14,15,17,
.C = 400   33,
       
2072:  Q←M, FETCH R0←KCQB
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.VCYP = 1   86
.C = 160   35,36,37,
       
2073:  FETCH R0←M+Q, Q←NADB
.BR = 2   84
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.C = -1000000   18,19,20,21,22,23,
       
2074:  T←M, Z←EPTR, CALL AEL0, BANKA
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.SSP = 32   55,53,52
.MS = 61   61,60,65,
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 5   71,69
.MC = 1   5
.B = 353    10,11,12,14,16,17,
CHECKBIT IS 30
       
2075:  M←MSK0*TWO22-1, CALL CFLG, BANKA
.MCONT = 1   7
.BL = 10   78
.MS = 61   61,60,65,
.TCX = 1   43
.LMX = 1   72
.MC = 20   1
.B = 1562    8,9,11,12,13,16,
.C = 17777777   20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 50
       
2076:  KCQCNT←-NKCQ,  CALL RET, BANKA
.MCONT = 1   7
.BL = 10   78
.SSP = 37   56,55,54,53,52
.MS = 61   61,60,65,
.TCX = 1   43
.LSPX = 1   59
.MC = 1   5
.B = 112    11,14,16,
.C = -400   18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,
CHECKBIT IS 50
       
2077:  CALL PUNT, BANKA
.MCONT = 1     7
.MC = 1         5
.MS = 61      60,61,65,
.B = 141       11,12,17,
.VCYP = 1      86
       
       