* INITIALIZATION AND STATE-SAVING

* LOCATION COUNTER IS 0


0:  START: GOTO SAVEST IF BRKON, SSMREG←M, M←MAR, CLFAIL
.BR = 10   82
.BL = 4   79
.MS = 32   64,62,61
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.LSPX = 1   59
.MC = 45   5,3,0
.B = 17    14,15,16,17,
CHECKBIT IS 30   
* NO BREAK. READ SCR
       
1:  Z←SCRADR, ALERT, GOTO *+1 IF AT2OFF
.MS = 14   63,62
.TCX = 1   43
.LZX = 1   76
.MC = 34   3,2,1
.B = 2    16,
.C = 7   39,40,41,
       
2:  M←E2, PIN, .VCY, GOTO *+1 IF AT1OFF
.MS = 16   64,63,62
.LMY = 1   73
.MC = 26   4,3,1
.TE2Y = 1   89
.B = 3    16,17,
CHECKBIT IS 30   
       
3:  .BL←7, .BR←10B, .TAX, CLRPRO, Q←SELFILLBIT
.BR = 10   82,
.BL = 7   81,80,79
.MS = 20   61
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.VCYP = 1   86
.C = 1   41,
CHECKBIT IS 87
       
4:  Z←M AND Q, GOTO XSELFFILL IF LB#0, Q←COMPUTEBIT, CLSTROBE
.BR = 10   82
.MS = 23   65,64,61
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.LZX = 1   76
.MC = 23   5,4,1
.VCYP = 1   86
.B = 715    9,10,11,14,15,17,
.C = 2   40,
       
5:  M AND Q, GOTO IRESET IF LB#0, Q←CONTINUEBIT
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 23   5,4,1
.VCYP = 1   86
.B = 541    9,11,12,17,
.C = 20000000   19,
* WE ARE NOT DOING ITP INITIALIZATION.  TURN COMPUTE MODE OFF
* AND SCHEDULE MODE ON. CLEAR STROBE
       
6:  MODE←ONSCHEDULE, CLSTROBE
.SSP = 34   54,53,52
.MS = 23   65,64,61
.TCX = 1   43
.LSPX = 1   59
.C = 10000000   20,
       
7:  M AND Q, GOTO WAITGO IF LB=0, MAR←SCR, FETCH
.BR = 10   82
.MS = 44   63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 22   4,1
.VCYP = 1   86
.B = 11    14,17,
.C = 35   39,41,
CHECKBIT IS 56   
* CONTINUE SET IN SCR. LOOK AT SCRMEM. IF CONTINUE SET THERE,
* ACCEPT IT AS PROPER SWITCH INFO
       
10:  M AND Q, GOTO GOTSCR IF LB#0
.BR = 10   82
.TAX = 1   49
.MC = 23   5,4,1
.VCYP = 1   86
.B = 14    14,15,
CHECKBIT IS 30   
* MUST WAIT FOR GO, THEN READ SWITCHES INTO SCRMEM

11:  WAITGO: Z←SCRADR, ALERT
.MS = 14   63,62
.TCX = 1   43
.LZX = 1   76
.C = 7   39,40,41,
       
12:  GOTO WAITGO ON M←E2>=0, PIN, .VCY, .TAX
.MS = 16   64,63,62
.TAX = 1   49
.LMY = 1   73
.MC = 7   5,4,3
.TE2Y = 1   89
.B = 11    14,17,

       
13:  MAR←SCR, STORE
.MS = 42   64,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 35   39,41
CHECKBIT IS 87   
* M AND SCRMEM NOW BOTH CONTAIN THE VALUE OF SCR TO BE USED FOR RESTART
* SEND STROBES TO CHIO AND AMC
* IF THE UTP'S PART IN SYSTEM INITIALIZATION IS ELABORATED, THE
* NEW STUFF GOES HERE

14:  GOTSCR: SK0←CHIOSTROBE+SWAPSTROBE, STROBE
.MS = 17   65,64,63,62
.TCX = 1   43
.LSPX = 1   59
.C = 5   39,41,
CHECKBIT IS 87   
* WAIT FOR STROBE SIGNAL, THEN LOAD STATE AS IF RETURNING FROM BREAK
       
15:  GOTO * IF NOSTROBE
.MC = 27   5,4,3,1
.VCYP = 1   86
.B = 15    14,15,17,
CHECKBIT IS 30   
       
16:  Z←0, R2←-LSCRATCH, GOTO LOADST, STORE
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.LZX = 1   76
.LRN = 2   70
.MC = 1   5
.VCYP = 1   86
.B = 35    13,14,15,17,
.C = -40   18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,

* BREAK. DUMP STATE IN THE SAVE AREA.  THE STRATEGY IS AS FOLLOWS
* 1) SAVE M IN SSMREG IN THE SCRATCHPAD
* 2) STORE MAR AT SAVER0. STORE OS AT SAVEOS
* 3) STORE Z,Q AT SAVEZ,Q AND R1-R6 AT SAVER1 TO SAVER6
* 4) EXCHANGE SCRATCHPAD AND SAVE TO SAVE+LSCRATCH-1

* AFTER SAVING THE STATE, BREAK WAITS UNTILL BRKWAIT
* BECOMES NON-ZERO.

* THE RELOAD STRATEGY IS OBTAINED BY DOING STEPS 4-3 IN REVERSE,
* AND THEN
* 2) FETCH SAVEOS AND DGOTO IT
* 1) DGOTO *+1 (THIS SETS UP OS), FETCH BREAK
* 0) DGOTO M (THIS SETS UP O), FETCH SAVER0
* -1) MAR←M, M←SSMREG

       MACRO IMS←MAR←Z←Z+1, STORE;

17:  SAVEST: MAR←SAVER0, STORE
.MS = 42   64,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 2660   31,33,34,36,37,
       
20:  M←Z, MAR←SAVEZ, STORE
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LR0 = 1   58
.VCYP = 1   86
.C = 2671   31,33,34,36,37,38,41,
       
21:  M←R1, MAR←Z←SAVER1, STORE
.RRN = 1   68
.MS = 42   64,60
.TCX = 1   43
.THY = 1   46
.TXW = 1   47
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
.VCYP = 1   86
.C = 2661   31,33,34,36,37,41,
CHECKBIT IS 87   
       
22:  M←R2, MAR←Z←Z+1, STORE
.RRN = 2   67
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
CHECKBIT IS 87   
       
23:  M←R3, MAR←Z←Z+1, STORE
.RRN = 3   68,67
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
       
24:  M←R4, MAR←Z←Z+1, STORE
.RRN = 4   66
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
CHECKBIT IS 87   
       
25:  M←R5, MAR←Z←Z+1, STORE
.RRN = 5   68,66
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
       
26:  M←R6, MAR←Z←Z+1, STORE
.RRN = 6   67,66
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
       
27:  M←OS, MAR←Z←Z+1, STORE
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
.LR0 = 1   58
.TOSY = 1   57
       
30:  M←Q, MAR←Z←MAR+1, STORE
.BR = 10   82
.BL = 2   80
.MS = 42   64,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LZY = 1   77
.LR0 = 1   58
.VCYP = 1   86
CHECKBIT IS 87   
       
31:  MAR←SAVE-1
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 2617   31,33,34,38,39,40,41,
       
32:  R2←-LSCRATCH, Z←0, CALL XSCRATCH
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LZY = 1   77
.LRN = 2   70
.MC = 20   1,
.VCYP = 1   86
.B = 53    12,14,16,17,
.C = -40   18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,
CHECKBIT IS 50   

33:  BWAIT: MAR←BRKWAIT, FETCH
.MS = 44   63,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 26   37,39,40,
       
34:  GOTO *-1 ON M=0, R2←-LSCRATCH
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LRN = 2   70
.MC = 2   4
.B = 33    13,14,16,17,
.C = -40   18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,
CHECKBIT IS 56   

35:  LOADST: MAR←SAVE-1, Z←0, CALL XSCRATCH
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LZY = 1   77
.LR0 = 1   58
.MC = 1   5,
.VCYP = 1   86
.B = 53    12,14,16,17,
.C = 2617   31,33,34,38,39,40,41,
CHECKBIT IS 50   
       
36:  MAR←SAVER1, FETCH
.MS = 44   63,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 2661   31,33,34,36,37,41,
CHECKBIT IS 87   
       
37:  R1←M, CALL FN
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 1   71
.MC = 20   1
.VCYP = 1   86
.B = 52    12,14,16,
       
40:  R2←M, CALL FN
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 2   70
.MC = 1   5
.VCYP = 1   86
.B = 52    12,14,16,
       
41:  R3←M, CALL FN
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 3   71,70
.MC = 20   1
.VCYP = 1   86
.B = 52    12,14,16,
CHECKBIT IS 30   
       
42:  R4←M, CALL FN
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 4   69
.MC = 1   5
.VCYP = 1   86
.B = 52    12,14,16,
       
43:  R5←M, CALL FN
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86
.B = 52    12,14,16,
CHECKBIT IS 30   
       
44:  R6←M, CALL FN
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 6   70,69
.MC = 1   5
.VCYP = 1   86
.B = 52    12,14,16,
CHECKBIT IS 30   
       
45:  DGOTO M, MAR←MAR+1, FETCH, .VCY←1
.MCONT = 3   7,6
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
       
46:  Q←M, MAR←MAR+1, FETCH, CALL *+1
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86
.B = 47    12,15,16,17,
       
47:  Z←M, MAR←BREAK, FETCH
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
.VCYP = 1   86
.C = 21   37,41,
CHECKBIT IS 87   
       
50:  DGOTO M, MAR←SAVER0, FETCH, .VCY←1
.MCONT = 3   7,6
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1,
.DGO = 1   87
.C = 2660   31,33,34,36,37,
       
51:  MAR←M, M←SSMREG
.BR = 10   82
.BL = 4   79
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LR0 = 1   58

* SUBROUTINE TO BUMP MAR AND FETCH

52:  FN:    MAR←MAR+1, FETCH, RETURN
.MCONT = 2   6
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86

* SUBROUTINE TO EXCHANGE -(R2) SCRATCHPAD LOCATIONS, STARTING AT (Z),
* WITH CORE LOCATIONS STARTING AT (MAR)+1. CLOBBERS M,Z,R1,R2

53:  XSCRATCH: FETCH, MAR←MAR+1
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.VCYP = 1   86
       
54:  R1←SKZ
.MS = 13   65,64,62
.TSPY = 1   45
.TYW = 1   48
.LRN = 1   71
CHECKBIT IS 87   
       
55:  SKZ←M, M←R1, DGOTO XSCRATCH
.RRN = 1   68
.BR = 10   82
.BL = 4   79
.MS = 13   65,64,62
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.LSPX = 1   59
.MC = 20   1
.DGO = 1   87
.B = 53    12,14,16,17,
CHECKBIT IS 30   
       
56:  STORE, Z←Z+1, RETURN ON R2←R2+1>=0
.MCONT = 2   6
.RRN = 2   67
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.LOC = 1   50
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LRN = 2   70
.MC = 7   5,4,3
CHECKBIT IS 30   



* ROUTINES TO LOAD AND STORE. THESE ALLOW A CONSTANT FIELD
* TO BE USED IN AN INSTRUCTION WHICH WANTS TO LOAD OR STORE, AT
* THE EXPENSE OF 300 NS, IF THE INSTRUCTION DOES NOT ALSO HAVE
* HAVE A BRANCH ADDRESS
* CALL WITH CALL, DO NOT USE STACK. LEAVE REGISTERS UNTOUCHED


57:  MFETCH: FETCH, RETURN
.MCONT = 2   6
.MS = 44   63,60
.MC = 1   5,
.VCYP = 1   86

60:  MSTORE: STORE, RETURN
.MCONT = 2   6
.MS = 42   64,60
.MC = 20   1,
.VCYP = 1   86
*
* SUBROUTINE CALLING CONVENTIONS
* STKP CONTAINS THE STACK POINTER.  THE ROUTINE STKLK PUSHES
* OS ONTO THE STACK AND SENDS CONTROL TO (SUBR). THUS A SUBROUTINE
* S CAN BE CALLED IN TWO WAYS
*      SUBR←S, CALL STKLK
* WHICH USES ABOUT HALF OF THE CALLING INSTRUCTION, OR ALTERNATIVELY
*      CALL S
* WHERE
* S:   SUBR←S+1, GOTO STKLK
* WHICH COSES A WORD IN THE SUBROUTINE AND TWO EXTRA CYCLES.  THE
* TWO SCHEMES ARE INCOMPATIBLE IN THE SENSE THAT A ROUTINE
* WHICH CAN BE CALLED BY METHOD 2 MUST BE ENTERED ONE LOCATION EARLIER
* BY METHOD 1
* THE CALL WIPES SUBR AND SCRATCHPAD LOCATION CALLT1 (WHICH ARE
* THEREFORE NEVER GIVEN ALTERNATE NAMES) BUT PRESERVES MQZ

       MACRO ENTRY←SUBR←*++1, GOTO STKLK;
       MACRO QENTRY←Q←*++1, GOTO QSTKLK;
       MACRO C←SUBR←*1*, CALL STKLK;
* GOING TO RET POPS THE STACK AND RETURNS, CLOBBERING ONLY SUBR.
* GOING TO RETXZ AFTER Z←STKP+1 IS THE SAME BUT ALSO CLOBBERS Z.
* IT IS ONE CYCLE SHORTER
       MACRO R←GOTO RET;
       MACRO DR←DGOTO RET;
       MACRO RXZ←Z←STKP+1, GOTO RETXZ;


61:  QSTKLK: SUBR←Q
.BR = 10   82
.BL = 2   80
.TXW = 1   47
.TAX = 1   49
.LRN = 5   71,69
.VCYP = 1   86

62:  STKLK: Z←STKP, CALLT1←Z
.RRN = 6   67,66
.BR = 4   83
.BL = 10   78
.SSP = 15   56,54,53
.THY = 1   46
.TAX = 1   49
.LZY = 1   77
.LSPX = 1   59

63:  STKL1: STKP←Q, Q←OS
.BR = 10   82
.BL = 2   80
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 6   70,69
.VCYP = 1   86
.TOSY = 1   57
       
64:  SKZ←Q, Q←SUBR
.RRN = 5   68,66
.BR = 10   82
.BL = 2   80
.MS = 13   65,64,62
.THY = 1   46
.TAX = 1   49
.LQY = 1   75
.LSPX = 1   59
       
65:  DGOTO Q, Q←STKP
.MCONT = 3   7,6
.RRN = 6   67,66
.BR = 10   82
.BL = 2   80
.THY = 1   46
.TAX = 1   49
.LQY = 1   75
.MC = 1   5,
.DGO = 1   87
.VCYP = 1   86
CHECKBIT IS 30   
       
66:  STKP←Z-1, Z←CALLT1
.BR = 4   83
.BL = 7   81,80,79
.SSP = 15   56,54,53
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 6   70,69


67:  RET:   SUBR←Z, Z←STKP+1
.RRN = 6   67,66
.BR = 4   83
.BL = 10   78
.IHR = 1   42
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 5   71,69
.VCYP = 1   86
CHECKBIT IS 87   

70:  RETXZ: Z←SKZ, STKP←Z
.BR = 4   83
.BL = 10   78
.MS = 13   65,64,62
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 6   70,69
       
71:  GOTO Z, Z←SUBR
.MCONT = 3   7,6
.RRN = 5   68,66
.BR = 4   83
.BL = 10   78
.THY = 1   46
.TAX = 1   49
.LZY = 1   77
.MC = 20   1
.VCYP = 1   86

*
* QUEUE CONVENTIONS
* MOST QUEUES HAVE TWO-WORD HEADERS, THE FIRST WORD POINTING
* TO THE FIRST ENTRY ON THE QUEUE AND THE SECOND TO THE LAST. A QUEUE
* POINTER IS 18 BITS AND IS ALWAYS RIGHT-JUSITFIED IN A MEMORY WORD.
* THE TOP 6 BITS OF SUCH A WORD ARE PRESERVED.  THESE BITS ARE ALWAYS
* 0 FOR A QUEUE POINTER IN A HEADER OR IN THE UPROCESSOR.
* 777777 IS USED FOR THE NULL POINTER.  A POINTER IS ALWAYS TO
* THE FIRST WORD OF THE ITEM BEING REFERENCED.  THE NEXT POINTER
* IS USUALLY NOT IN THAT WORD, BUT OFFSET BY AN AMOUNT WHICH 
* QUEUE-HANDLING ROUTINES EXPECT TO FIND IN OFFSET.
* THE QUEUES WHICH HAVE THE ABOVE FORM ARE: USQ'S, WAKEUPQ,
*      SWFREL, SWAPIQ, SWAPRQ
* ONES WHICH DO NOT ARE: RTQ

* GET NEXT ENTRY FROM QUEUE ADDRESSED BY M.  LEAVE ITS ADDRESS
* IN Z AND REMOVE IT FROM THE QUEUE.  LEAVE A NULL POINTER IN Z IF
* THE QUEUE IS EMPTY.
* CALL WITH CALL, USES STACK, WIPES MQZ, MAR, SPT1

72:  GETNEXT: SPT1←MAR←M, Q←*+1, GOTO QSTKLK, FETCH
.BR = 10   82
.BL = 4   79
.SSP = 7   56,55,54
.MS = 44   63,60
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.LSPX = 1   59
.MC = 1   5
.B = 61    12,13,17,
.C = 73   36,37,38,40,41,
CHECKBIT IS 42   
       
73:  Q←ADMREG
.SSP = 13   56,55,53
.TSPY = 1   45
.LQY = 1   75
       
74:  Z←M AND Q, GOTO RET IF NULLPTR, Q←OFFSET
.RRN = 4   66
.BR = 10   82
.THY = 1   46
.TAX = 1   49
.LQY = 1   75
.LZX = 1   76
.MC = 14   3,2
.B = 67    12,13,15,16,17,
       
75:  MAR←M+Q, FETCH, Q←ADMREG
.BR = 2   84
.BL = 4   79
.SSP = 13   56,55,53
.MS = 44   63,60
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
CHECKBIT IS 87   
       
76:  M←M AND Q, GOTO RET IF NNPTR, Q←MAR←SPT1, STORE
.BR = 10   82
.SSP = 7   56,55,54
.MS = 42   64,60
.TSPY = 1   45
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.LR0 = 1   58
.MC = 15   5,3,2
.B = 67    12,13,15,16,17,
CHECKBIT IS 30   
* QUEUE HAS BECOME NULL. FIX UP SECOND WORD OF HEADER.
       
77:  M←OFFSET, DGOTO RET
.RRN = 4   66
.THY = 1   46
.LMY = 1   73
.MC = 20   1
.DGO = 1   87
.VCYP = 1   86
.B = 67    12,13,15,16,17,
       
100:  M←Q-M, MAR←MAR+1, STORE
.BR = 2   84
.BL = 13   81,80,78
.MS = 42   64,60
.LOC = 1   50
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LR0 = 1   58

* PUT NODE IN Z ON END OF QUEUE IN MAR
* CALL WITH CALL, USES STACK, WIPES MQ, MAR, SPT1,2
* LEAVES Z UNTOUCHED THROUGHOUT.
* LEAVES OLD FIRST WORD OF QUEUE HEADER IN SPT2, Q

101:  APPEND: Q←*+1, GOTO QSTKLK, FETCH
.MS = 44   63,60
.TCX = 1   43
.LQX = 1   74
.MC = 1   5,
.VCYP = 1   86
.B = 61    12,13,17,
.C = 102   35,40,
       
102:  SPT2←M, MAR←MAR+1, FETCH
.BR = 10   82
.BL = 4   79
.SSP = 10   53
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
* FETCH 2ND WORD OF HEADER
       
103:  Q←OFFSET, SPT1←Z
.RRN = 4   66
.BR = 4   83
.BL = 10   78
.SSP = 7   56,55,54
.THY = 1   46
.TAX = 1   49
.LQY = 1   75
.LSPX = 1   59
CHECKBIT IS 87   
       
104:  Q←Q+M, M←SPT1, STORE
.BR = 2   84
.BL = 4   79
.SSP = 7   56,55,54
.MS = 42   64,60
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.LQX = 1   74
*  STORE PTR TO MODE INTO 2ND WORD OF HEADER
       
105:  MAR←Q, FETCH, Q←ADMREG
.BR = 10   82
.BL = 2   80
.SSP = 13   56,55,53
.MS = 44   63,60
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
CHECKBIT IS 87   
*   FETCH PTR WORD FROM LOD LAST NODE
       
106:  M←M AND NOT Q ! Z AND Q, STORE, Q←OFFSET
.RRN = 4   66
.BL = 14   79,78
.MS = 42   64,60
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
CHECKBIT IS 87   
*  STORE INTO PTR WORD OF OLD LAST NODE--1ST 6
*  BITS ARE WHAT WE JUST FETCHED, BITS 6-23 ARE ADDRESS OF
*  NEW LAST NODE
       
107:  MAR←Q+Z, FETCH, Q←ADMREG, DGOTO RET
.BR = 4   83
.BL = 2   80
.SSP = 13   56,55,53
.MS = 44   63,60
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
.B = 67    12,13,15,16,17,
*  FETCH PRT WORD FROM NEW LAST NODE
       
110:  M←M OR Q, STORE, Q←SPT2
.BR = 10   82
.BL = 6   80,79
.SSP = 10   53
.MS = 42   64,60
.TSPY = 1   45
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
CHECKBIT IS 87   
*  STORE INTO PTR WORD OF NEW LAST NODE WHAT WE JUST FETCHED
*  WITH ADMREG (777777) MERGED IN.
*
* ROUTINES TO FETCH PARTICULAR WORDS FROM A PROCESS WITH PRT ADDRESS
* IN M.  THE WORD IS LEFT IN M, ITS ADDRESS IN MAR AND SUBR
* CALL WITH CALL, DOES NOT USE STACK, WIPES M, MAR, SUBR


111:  GETPIW: SUBR←Q, Q←PRPIW
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.VCYP = 1   86
.C = 3   40,41,

* GET M+Q

112:  GETMPQ: MAR←SUBR←M+Q, FETCH, Q←SUBR, RETURN
.MCONT = 2   6
.RRN = 5   68,66
.BR = 2   84
.BL = 4   79
.MS = 44   63,60
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.LR0 = 1   58
.MC = 1   5


113:  GETST: SUBR←Q, Q←PRST, GOTO GETMPQ
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.MC = 20   1
.VCYP = 1   86
.B = 112    11,14,16,
.C = 10   38,
CHECKBIT IS 56   

* THIS ONE ZEROS THE TOP 6 BITS OF M FIRST

114:  GETRTP: SUBR←Q, Q←ADMASK, DGOTO GETMPQ
.BR = 10   82
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 112    11,14,16,
.C = -1000000   18,19,20,21,22,23,
CHECKBIT IS 56   
       
115:  M←M AND NOT Q, Q←PRRTP
.BR = 10   82
.BL = 14   79,78
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = 6   39,40,
CHECKBIT IS 87   
*
* MAIN LOOP

116:  MAIN:  STKP←TOPSTACK, GOTO NOUSWORK IF NOSTROBE, M←MODE, CLSTROBE
.SSP = 34   54,53,52
.MS = 23   65,64,61
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LRN = 6   70,69
.MC = 27   5,4,3,1
.B = 201    10,17,
.C = 27   37,39,40,41,
CHECKBIT IS 50   
       
117:  GOTO NOUSWORK ON M LCY 2>=0
.BR = 10   82
.BL = 4   79
.MS = 2   64
.MC = 5   5,3
.B = 201    10,17,

120:  GOMAIN: TEMP2←OLDRT
.SSP = 2   55
.TSPY = 1   45
.TYW = 1   48
.LRN = 2   70
CHECKBIT IS 87   
* FETCH CLOCK AND CHECK FOR CHANGE
* TEMP2 CONTAINS THE INITIAL VALUE OF OLDRT THROUGHOUT
* EXCEPT DURING THE CALL OF WAKEUP, WHEN IT IS SAVED IN OLDOLDRT

121:  RTLOOP: .BL←7, .BR←10B, .TAX, CLRPRO, MAR←RTC, CALL MFETCH
.MCONT = 1   7
.BR = 10   82
.BL = 7   81,80,79
.MS = 20   61
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 57    12,14,15,16,17,
.C = 10   38,
CHECKBIT IS 56
*$$$$$$$ PATCH 1
       
122:  Q←M, MAR←MAR+1, FETCH, CALL FIX1
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86
.B = 371    10,11,12,13,14,17,
       
123:  M←M LCY 12, Q←17770000B
.BR = 10   82
.BL = 4   79
.MS = 6   64,63
.TCY = 1   44
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = 17770000   20,21,22,23,24,25,26,27,28,29,
CHECKBIT IS 87   
       
124:  M←M AND NOT Q ! Z AND Q, Q←10000000B
.BL = 14   79,78
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = 10000000   20,
CHECKBIT IS 87   
       
125:  M←OLDRT←M AND NOT Q LCY 2, Q←TEMP2
.RRN = 2   67
.BR = 10   82
.BL = 14   79,78
.SSP = 2   55
.MS = 2   64
.THY = 1   46
.LMX = 1   72
.LQY = 1   75
.LSPX = 1   59
CHECKBIT IS 87   
       
126:  M EOR Q, GOTO USIBLP IF LB=0
.BR = 10   82
.BL = 16   80,79,78
.TAX = 1   49
.MC = 22   4,1
.VCYP = 1   86
.B = 145    11,12,15,17,
CHECKBIT IS 30   
* HAVE NEW CLOCK VALUE.
* SAVE SSR AND LOAD SSL
       
127:  Z←SSRADR, ALERT
.MS = 14   63,62
.TCX = 1   43
.LZX = 1   76
.C = 6   39,40,
CHECKBIT IS 87   
       
130:  M←E2, PIN, .VCY, MAR←SSRMEM, CALL MSTORE
.MCONT = 1   7
.MS = 16   64,63,62
.TCX = 1   43
.TXW = 1   47
.LMY = 1   73
.LR0 = 1   58
.MC = 20   1,
.TE2Y = 1   89
.B = 60    12,13,
.C = 35   37,38,39,41,
CHECKBIT IS 50   
       
131:  Z←SWR5ADR, ALERT
.MS = 14   63,62
.TCX = 1   43
.LZX = 1   76
.C = 5   39,41,
CHECKBIT IS 87   
       
132:  M←E2, PIN, .VCY, MAR←SWR5MEM, CALL MSTORE
.MCONT = 1   7
.MS = 16   64,63,62
.TCX = 1   43
.TXW = 1   47
.LMY = 1   73
.LR0 = 1   58
.MC = 1   5
.TE2Y = 1   89
.B = 60    12,13,
.C = 34   37,38,39,
       
133:  MAR←SSLMEM, CALL MFETCH
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 57    12,14,15,16,17,
.C = 37   37,38,39,40,41,
CHECKBIT IS 50   
       
134:  Z←SSLADR, ALERT
.MS = 14   63,62
.TCX = 1   43
.LZX = 1   76
.C = 10   38,
       
135:  Z←M, POT, M←OLDRT
.BR = 10   82
.BL = 4   79
.SSP = 2   55
.MS = 15   65,63,62
.TSPY = 1   45
.TAX = 1   49
.LMY = 1   73
.LZX = 1   76
CHECKBIT IS 87   
* CHECK CLOCK AGAINST TOP OF RTQ
       
136:  Z←TRTQT, CALL TIMINT, OFFSET←PRRTP
.MCONT = 1   7
.SSP = 3   56,55
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LZY = 1   77
.LRN = 4   69
.MC = 1   5
.B = 204    10,15,
.C = 6   39,40,
* TRY TO REMOVE TOP PROCESS FROM RTQ AND WAKE IT UP
       
137:  GOTO USIBLP IF R0>=0
.MC = 12   4,2
.VCYP = 1   86
.B = 145    11,12,15,17,
       
140:  M←RTQ, CALL GETNEXT
.MCONT = 1   7
.TCX = 1   43
.LMX = 1   72
.MC = 20   1,
.VCYP = 1   86
.B = 72    12,13,14,16,
.C = 16   38,39,40,
CHECKBIT IS 50   
       
141:  CPROC←Z, GOTO USIBLP IF NULLPTR, Q←TEMP2
.RRN = 2   67
.BR = 4   83
.BL = 10   78
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 1   71
.MC = 14   3,2
.B = 145    11,12,15,17,
CHECKBIT IS 30   
        
142:  OLDOLDRT←Q,  GOTO FIX3, M←OFFSET
.RRN = 4   66
.BR = 10   82
.BL = 2   80
.SSP = 11   56,53
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.LSPX = 1   59
.MC = 1   5
.B = 375    10,11,12,13,14,15,17,

143:  FIX3A: TEMP2←RTBIT, M←CPROC, CALL STKLK
.MCONT = 1   7
.RRN = 1   68
.BR = 10   82
.BL = 10   78
.LOC = 1   50
.TAX = 1   49
.THY = 1   46
.TXW = 1   47
.LMY = 1   73
.LRN = 2   70
.MC = 20   1
.VCYP = 1   86
.B = 62    12,13,16,
       
144:  GOTO RTLOOP IF NOCRASH, TEMP2←OLDOLDRT
.SSP = 11   56,53
.TSPY = 1   45
.TYW = 1   48
.LRN = 2   70
.MC = 31   5,2,1
.B = 121    11,13,17,
*
* FALL THROUGH
* NO FURTHER ACTION IN RTQ REQUIRED. CHECK USIB
* CONTROL RETURNS HERE FROM ALL ACTIONS TRIGGERED BY USIB ENTRIES.

145:  USIBLP: .BL←7, .BR←10B, .TAX, CLRPRO, GOTO *+2 IF NOCRASH
.BR = 10   82
.BL = 7   81,80,79
.MS = 20   61
.TAX = 1   49
.MC = 31   5,2,1
.VCYP = 1   86
.B = 147    11,12,15,16,17,
       
146:  CALL UERROR
.MCONT = 1   7
.MC = 1   5
.VCYP = 1   86
.B = 1015    8,14,15,17,
       
147:  .C←USIBPRO, .TCX, SETPRO, GOTO * IF PRONEX
.MS = 25   65,63,61
.TCX = 1   43
.MC = 30   2,1
.B = 147    11,12,15,16,17,
.C = 10   38,
CHECKBIT IS 50   
       
150:  MAR←USIBTOP, FETCH
.MS = 44   63,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 15   38,39,41,
       
151:  Q←SPT1←M, MAR←USIBASE, FETCH
.BR = 10   82
.BL = 4   79
.SSP = 7   56,55,54
.MS = 44   63,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.LSPX = 1   59
.C = 14   38,39,
       
152:  M EOR Q, GOTO IBEMPTY IF LB=0, Z←LUSIBE
.BR = 10   82
.BL = 16   80,79,78
.TCY = 1   44
.TAX = 1   49
.LZY = 1   77
.MC = 22   4,1
.VCYP = 1   86
.B = 330    10,11,13,14,
.C = 2   40,
       
153:  MAR←SPT1, FETCH, Z←Q-Z
.BR = 13   85,84,82
.BL = 2   80
.SSP = 7   56,55,54
.MS = 44   63,60
.LOC = 1   50
.TSPY = 1   45
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
       
154:  SPT1←Q←M, MAR←MAR+1, FETCH
.BR = 10   82
.BL = 4   79
.SSP = 7   56,55,54
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LQX = 1   74
.LR0 = 1   58
.LSPX = 1   59
CHECKBIT IS 87   
       
155:  TEMP2←M
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 2   70
.VCYP = 1   86
CHECKBIT IS 87   
       
156:  M←Z, MAR←USIBTOP, STORE
.BR = 4   83
.BL = 10   78
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LR0 = 1   58
.VCYP = 1   86
.C = 15   38,39,41,
* HAVE FETCHED REQUEST FROM USIB. FIRST WORD IN Q AND SPT1. SECOND
* IN TEMP2. DISPATCH ON OPCODE
        
157:  M←Q LCY 4, Q←60000017B
.BR = 10   82
.BL = 2   80
.MS = 4   63
.TCY = 1   44
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
.C = -17777761   18,19,38,39,40,41,
       
160:  M←M AND Q LCY 2, Q←MAXUOP, CALL UERROR IF LB=0
.MCONT = 1   7
.BR = 10   82
.MS = 2   64
.TCY = 1   44
.LMX = 1   72
.LQY = 1   75
.MC = 22   4,1
.VCYP = 1   86
.B = 1015    8,14,15,17,
.C = 12   38,40,
       
161:  .BL←7, .BR←10B, .TAX, CLRPRO, CPROC←SPT1
.BR = 10   82
.BL = 7   81,80,79
.SSP = 7   56,55,54
.MS = 20   61
.TSPY = 1   45
.TYW = 1   48
.TAX = 1   49
.LRN = 1   71
CHECKBIT IS 87
       
162:  CALL UERROR ON Q-M<0, Q←OPTAB-1
.MCONT = 1   7
.BR = 2   84
.BL = 13   81,80,78
.LOC = 1   50
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 4   3
.B = 1015    8,14,15,17,
.C = 164   35,36,37,39,
CHECKBIT IS 56   
       
163:  SUBR←M+Q, Q←TEMP2, DGOTO USIBLP
.RRN = 2   67
.BR = 2   84
.BL = 4   79
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LRN = 5   71,69
.MC = 20   1
.DGO = 1   87
.B = 145    11,12,15,17,
       
164:  MAR←Z←M←CPROC, CALL STKLK, .C←3, .TCX, .TXW
.MCONT = 1   7
.RRN = 1   68
.TCX = 1   43
.THY = 1   46
.TXW = 1   47
.TYW = 1   48
.LMY = 1   73
.LZY = 1   77
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86
.B = 62    12,13,16,
.C = 3   40,41,
CHECKBIT IS 50   
*  NOTE THAT MAR IS LOADED WITH CPROC + 3
* DISPATCH WITH FIRST WORD IN M, Z AND TEMP1, SECOND IN Q AND TEMP2.
* USIBLP ON STACK

165:  OPTAB: GOTO WAKEUP
.MC = 20   1
.VCYP = 1   86
.B = 216    10,14,15,16,
CHECKBIT IS 30   
       
166:  GOTO IWAKEUP
.MC = 1   5
.VCYP = 1   86
.B = 257    10,12,14,15,16,17,
CHECKBIT IS 30   
       
167:  RETCALL: GOTO FREECPU, TEMP4←WKUP1
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.MC = 20   1
.VCYP = 1   86
.B = 263    10,12,13,16,17,
.C = 256   34,36,38,39,40,
       
170:  GOTO CHKPIW, TEMP4←BLOCK1, FETCH
.MS = 44   63,60
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.MC = 1   5
.VCYP = 1   86
.B = 1020    8,13,
.C = 275   34,36,37,38,39,41,
       
171:  GOTO CHKPIW, TEMP4←BLKOUT1, FETCH
.MS = 44   63,60
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.MC = 20   1
.VCYP = 1   86
.B = 1020    8,13,
.C = 276   34,36,37,38,39,40,
       
172:  GOTO FREECPU, TEMP4←UNLOAD1
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.MC = 1   5
.VCYP = 1   86
.B = 263    10,12,13,16,17,
.C = 277   34,36,37,38,39,40,41,
       
173:  GOTO GIVEUP
.MC = 20   1
.VCYP = 1   86
.B = 302    10,11,16,
       
174:  GOTO CHRT
.MC = 1   5
.VCYP = 1   86
.B = 744    9,10,11,12,15,
       
175:  GOTO SETMODE
.MC = 20   1
.VCYP = 1   86
.B = 303    10,11,16,17,
CHECKBIT IS 30   
       
176:  GOTO SAVEST
.MC = 1   5
.VCYP = 1   86
.B = 17    14,15,16,17,
CHECKBIT IS 30   
       
177:  .DGO
.DGO = 1   87
       
200:  CALL UERROR
.MCONT = 1   7
.MC = 1   5
.VCYP = 1   86
.B = 1015    8,14,15,17,


* EITHER STROBE NOT SET OR US OFF.  GIVE CONTROL TO ITP IF IT
* NEEDS IT.  MODE IN M

201:  NOUSWORK: GOTO ICONT ON M<0
.BR = 10   82
.BL = 4   79
.TAX = 1   49
.MC = 4   3
.B = 562    9,11,12,13,16,
       
202:  GOTO IOWAIT ON M LCY 1<0
.BR = 10   82
.BL = 4   79
.MS = 1   65
.MC = 4   3
.B = 560    9,11,12,13,
CHECKBIT IS 30   
* ITP IS OFF. LOOP
       
203:  GOTO MAIN
.MC = 20   1
.VCYP = 1   86
.B = 116    11,14,15,16,
CHECKBIT IS 30   
*
* CHRT IS IN THE ITP PACKAGE, SO THAT THIS ONE WILL FIT ON 4 BOARDS

* SUBROUTINE TO DETERMINE WHETHER A TIME T (IN Z) FALLS IN THE
* INTERVAL BETWEEN T1 (IN Q) AND T2 (IN M). IT DOES IF
*      T1<=T<=T2  OR  T>=T1>T2  OR  T1>T2>=T
* WIPES MQZ, SUBR. RETURN <0 IN R0
* IF TRUE, >=0 IF FALSE. PUT SPT4 IN M ON EXIT
* ANALYSIS REVEALS THAT SIGN(T-T1) EOR SIGN(T-T2) EOR SIGN(T2-T1)
* IS THE RIGHT THING TO PUT IN THE SIGN OF R0
* CALL WITH CALL, DOES NOT USE STACK, WIPES MQZ, MAR

204:  TIMINT: R0←M-Q
.BR = 15   85,83,82
.BL = 4   79
.LOC = 1   50
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
CHECKBIT IS 87   
       
205:  R0←Z-Q, Q←R0
.BR = 4   83
.BL = 15   81,79,78
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
CHECKBIT IS 87   
       
206:  M←Z-M, Z←R0
.BR = 4   83
.BL = 13   81,80,78
.LOC = 1   50
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LZY = 1   77
       
207:  Q←M EOR Q, DRETURN IF NOCRASH
.MCONT = 2   6
.BR = 10   82
.BL = 16   80,79,78
.TAX = 1   49
.LQX = 1   74
.MC = 31   5,2,1
.DGO = 1   87
.VCYP = 1   86
CHECKBIT IS 30   
       
210:  SUBR←R0←Q EOR Z, M←SPT4
.BR = 16   84,83,82
.BL = 10   78
.SSP = 12   55,53
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LRN = 5   71,69
.LR0 = 1   58
       
211:  GOTO UERROR
.MC = 1   5,
.VCYP = 1   86
.B = 1015    8,14,15,17,
CHECKBIT IS 30   


* SUBROUTINE TO RE-ESTABLISH TRTQT
* CALL WITH CALL, DOES NOT USE STACK, WIPES MQ, MAR

212:  FIXRTQ: MAR←RTQ, FETCH
.MS = 44   63,60
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.VCYP = 1   86
.C = 16   38,39,40,
       
213:  M, RETURN IF NULLPTR, Q←PRRT
.MCONT = 2   6
.BR = 10   82
.BL = 4   79
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 14   3,2
.C = 7   39,40,41,
       
214:  MAR←M+Q, FETCH, DRETURN
.MCONT = 2   6
.BR = 2   84
.BL = 4   79
.MS = 44   63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 20   1,
.DGO = 1   87
CHECKBIT IS 30   
       
215:  TRTQT←M
.BR = 10   82
.BL = 4   79
.SSP = 3   56,55
.TAX = 1   49
.LSPX = 1   59
CHECKBIT IS 87   
*
* WAKEUP PROCESS IN M.  SECOND WORD (IN TEMP2) IS TO BE MERGED
* INTO PIW.
* CALL WITH C. USES MQZ, CPROC, NEWPIW, OFFSET, TEMP2, SUBR
* MUST UNPROTECT UPON RETURN

216:  WAKEUP: Z←M, CALL CHKPID
.MCONT = 1   7
.BR = 10   82
.BL = 4   79
.TAX = 1   49
.LZX = 1   76
.MC = 1   5
.VCYP = 1   86
.B = 317    10,11,14,15,16,17,
       
217:  .C←PRTPRO, .TCX, SETPRO, GOTO * IF PRONEX
.MS = 25   65,63,61
.TCX = 1   43
.MC = 30   2,1
.B = 217    10,14,15,16,17,
.C = 1   41,
CHECKBIT IS 50   
       
220:  CALL GETPIW, Q←TEMP2
.MCONT = 1   7
.RRN = 2   67
.THY = 1   46
.LQY = 1   75
.MC = 20   1,
.VCYP = 1   86
.B = 111    11,14,17,
       
221:  M←M OR Q, Q←BLKBIT, CALL MSTORE
.MCONT = 1   7
.BR = 10   82
.BL = 6   80,79
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 1   5,
.VCYP = 1   86
.B = 60    12,13,
.C = 4000   30,
       
222:  M←CPROC, CALL GETST
.MCONT = 1   7
.RRN = 1   68
.THY = 1   46
.LMY = 1   73
.MC = 20   1,
.VCYP = 1   86
.B = 113    11,14,16,17,
CHECKBIT IS 30   
* NOW HAVE M=ST, MAR=ADDR(ST), Q=BITS TO CLEAR IN IT

223:  WKUP2: M←M AND NOT Q, Q←LDDBIT, CALL MSTORE
.MCONT = 1   7
.BR = 10   82
.BL = 14   79,78
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 1   5,
.VCYP = 1   86
.B = 60    12,13,
.C = 10   38,
*  CLEAR BLOCK
       
224:  M AND Q, GOTO NOTLDD IF LB=0, Q←USQBIT+RUNBIT
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 22   4,1
.VCYP = 1   86
.B = 234    10,13,14,15,
.C = 22   37,40,
*   CHECK LOAD
       
*  PROCESS IS LOADED, CHECK FOR MSQ OR RUN.  IF ON MSQ OR RUNNING
* WE ARE DONE.
225:  M AND Q, GOTO RET IF LB#0, Q←USQBIT
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 23   5,4,1
.VCYP = 1   86
.B = 67    12,13,15,16,17,
.C = 20   37,
CHECKBIT IS 56   
       
*  ELSE SET MSQ
226:  M←M OR Q, Q←PRIMASK, CALL MSTORE
.MCONT = 1   7
.BR = 10   82
.BL = 6   80,79
.TCY = 1   44
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.MC = 20   1,
.VCYP = 1   86
.B = 60    12,13,
.C = 160000   26,27,28,
       
227:  Q←M AND Q LCY 12, M←USQBASE
.BR = 10   82
.MS = 6   64,63
.TCY = 1   44
.LMY = 1   73
.LQX = 1   74
.VCYP = 1   86
.C = 310   34,35,38,
CHECKBIT IS 87   
*  GET PRIORITY
       
230:  MAR←M+Q, Z←CPROC
.RRN = 1   68
.BR = 2   84
.BL = 4   79
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
CHECKBIT IS 87   
*  SET UP POINTER TO QUEUE, Z POINTS TO PROCESS TO BE ADDED
       
231:  OFFSET←PRPTR, CALL APPEND
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.MC = 1   5,
.VCYP = 1   86
.B = 101    11,17,
.C = 13   38,40,41,
*  BRANCH TO ROUTINE TO ADD NODE ON DESIRED PRIORITY QUEUE
       
232:  Q, GOTO RET IF NNPTR
.BR = 10   82
.BL = 2   80
.TAX = 1   49
.MC = 15   5,3,2
.B = 67    12,13,15,16,17,
       
233:  SCHFLG←4B7, GOTO RET
.SSP = 4   54
.TCX = 1   43
.LSPX = 1   59
.MC = 20   1
.B = 67    12,13,15,16,17,
.C = -40000000   18,
CHECKBIT IS 50   

234:  NOTLDD: Q←WAQBIT+SCQBIT+PQBIT+SWQBIT+CBCBIT
.TCX = 1   43
.LQX = 1   74
.VCYP = 1   86
.C = 3340   31,32,34,35,36,
CHECKBIT IS 87   
       
235:  M AND Q, GOTO RET IF LB#0
.BR = 10   82
.TAX = 1   49
.MC = 23   5,4,1
.VCYP = 1   86
.B = 67    12,13,15,16,17,
* IF SYSTEM IS IDLE, WE WANT TO GET SWAPIN CALLED DIRECTLY.
* OTHERWISE JUST GOTO PUTWQ. ITS RETURN WILL RETURN FROM WAKEUP
       
236:  Q←PUTWQ, CALL CHKIDLE
.MCONT = 1   7
.TCX = 1   43
.LQX = 1   74
.MC = 1   5
.VCYP = 1   86
.B = 310    10,11,14,
.C = 305   34,35,39,41,
CHECKBIT IS 50   
* IT IS. FALL THROUGH TO SWAPIN
       
237:  M←CPROC, TEMP2←SWAPIQ, CALL GETST
.MCONT = 1   7
.RRN = 1   68
.TCX = 1   43
.THY = 1   46
.TXW = 1   47
.LMY = 1   73
.LRN = 2   70
.MC = 20   1
.VCYP = 1   86
.B = 113    11,14,16,17,
.C = 106   35,39,40,
CHECKBIT IS 50   
*$$$$$$$ PATCH 2
       
240:  M←M MRG SWQBIT, STORE, GOTO FIX2
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.TCX = 1   43
.TAX = 1   49
.LMX = 1   72
.MC = 1   5
.VCYP = 1   86
.B = 373    10,11,12,13,14,16,17,
.C = 100   35,

* COMMON CODE FOR SWAPPER REQUESTS: READ PROCESS AND WRITE PROCESS ONLY
* CPROC=PRT FOR PROCESS, TEMP2=QUEUE TO PUT REQUEST ON
* OBTAIN ENTRY FROM SWAPPER FREE LIST.

241:  SWREQUEST: .BL←7, .BR←10B, .TAX, CLRPRO, OFFSET←0
.BR = 10    82
.BL = 7   81,80,79
.MS = 20   61
.TYW = 1   48
.TAX = 1   49
.LRN = 4   69
.VCYP = 1   86
       
242:  .C←SWAPRO, .TCX, SETPRO, GOTO * IF PRONEX, Q←CPROC
.RRN = 1   68
.MS = 25   65,63,61
.TCX = 1   43
.THY = 1   46
.LQY = 1   75
.MC = 30   2,1
.B = 242    10,12,16,
.C = 2   40,
       
243:  TEMP3←Q-1, M←SWFREL, CALL GETNEXT
.MCONT = 1   7
.BR = 7   85,84,83
.BL = 2   80
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LRN = 3   71,70
.MC = 20   1
.B = 72    12,13,14,16,
.C = 110   35,38,
CHECKBIT IS 56   
       
244:  SPT1←Z, GOTO SWQEMPTY IF NULLPTR, OFFSET←SWNPTR
.BR = 4   83
.BL = 10   78
.SSP = 7   56,55,54
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LRN = 4   69
.LSPX = 1   59
.MC = 14   3,2
.B = 255    10,12,14,15,17,
.C = 5   39,41,
       
245:  SUBR←Z-1, Z←2
.BR = 4   83
.BL = 7   81,80,79
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LRN = 5   71,69
.C = 2   40,
* SET UP REAL NAME

246:  SWRQ1: MAR←TEMP3←TEMP3+1, FETCH, Z←Z-1
.RRN = 3   68,67
.BR = 4   83
.BL = 7   81,80,79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LRN = 3   71,70
.LR0 = 1   58
CHECKBIT IS 87   
       
247:  Q←MAR←SUBR←SUBR+1, STORE, GOTO *-1 IF Z>=0
.RRN = 5   68,66
.MS = 42   64,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.LQY = 1   75
.LRN = 5   71,69
.LR0 = 1   58
.MC = 16   4,3,2
.VCYP = 1   86
.B = 246    10,12,15,16,
       
250:  M←CPROC, MAR←Q+1, CALL MSTORE
.MCONT = 1   7
.RRN = 1   68
.BR = 10   82
.BL = 2   80
.LOC = 1   50
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LR0 = 1   58
.MC = 1   5
.VCYP = 1   86
.B = 60    12,13,
CHECKBIT IS 30   
       
251:  M←SWAPOP, Q←MAR←MAR+1, CALL MSTORE
.MCONT = 1   7
.IHR = 1   42
.BR = 10   82
.BL = 10   78
.LOC = 1   50
.TAX = 1   49
.THY = 1   46
.TYW = 1   48
.LMX = 1   72
.LQY = 1   75
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 60    12,13,
       
252:  Z←SPT1, MAR←Q+1, STORE
.BR = 10   82
.BL = 2   80
.SSP = 7   56,55,54
.MS = 42   64,60
.LOC = 1   50
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
* SPLICE ENTRY ONTO PROPER QUEUE
       
253:  MAR←TEMP2, CALL APPEND
.MCONT = 1   7
.RRN = 2   67
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.MC = 1   5,
.VCYP = 1   86
.B = 101    11,17,
       
254:  SK0←SWAPSTROBE, STROBE, GOTO RET
.MS = 17   65,64,63,62
.BR = 10   82
.BL = 10   78
.LOC = 1   50
.TAX = 1   49
.LSPX = 1   59
.MC = 20   1,
.B = 67    12,13,15,16,17,

255:  SWQEMPTY: .BL←7, .BR←10B, .TAX, CLRPRO, GOTO SWREQUEST
.BR = 10   82
.BL = 7   81,80,79
.MS = 20   61
.TAX = 1   49
.MC = 1   5,
.VCYP = 1   86
.B = 241    10,12,17,


* ALTERNATE ENTRY TO WAKEUP FROM FREECPU: PRST ADDRESS IN MAR,
* PRST IN M, PRTPRO SET
* NOTHING IS DONE TO PIW

256:  WKUP1: Q←BLKBIT, GOTO WKUP2
.TCX = 1   43
.LQX = 1   74
.MC = 20   1,
.VCYP = 1   86
.B = 223    10,13,16,17,
.C = 4000   30,


* SAME AS WAKEUP EXCEPT THAT FIRST PARAMETER (IN M) HAS TO BE MULTIPLIED
* BY 12 AND HAVE MINPRT ADDED

257:  IWAKEUP: Z←M LCY 1
.BR = 10   82
.BL = 4   79
.MS = 1   65
.LZX = 1   76
.VCYP = 1   86
       
260:  M←M+Z
.BR = 4   83
.BL = 4   79
.TAX = 1   49
.LMX = 1   72
CHECKBIT IS 87   
       
261:  M←M LCY 2, Z←MINPRT, DGOTO WAKEUP
.BR = 10   82
.BL = 4   79
.SSP = 5   56,54
.MS = 2   64
.TSPY = 1   45
.LMX = 1   72
.LZY = 1   77
.MC = 1   5,
.DGO = 1   87
.B = 216    10,14,15,16,
CHECKBIT IS 30   
       
262:  M←Z←CPROC←M+Z
.BR = 4   83
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LMX = 1   72
.LZX = 1   76
.LRN = 1   71

*
* COMMON CODE FOR RETURN, BLOCK, BLOCKOUT, UNLOAD. 
* DECREMENTS AL. SETS SCHFLG IF AL=I. FETCHES ST WORD,
* CLEARS RUNBIT AND STORES IT.
* ENTER WITH LOCATION TO GOTO NEXT IN TEMP4, OTHER REGISTERS SET UP
* BY USIBLP AS USUAL
*  AL IS PERMITTED TO BE:
*      I - IDLE  (4B7)
*      R- RUNNING (2B6)
*      P - PRIMED (1B5)

263:  FREECPU: .C←PRTPRO, .TCX, SETPRO, GOTO * IF PRONEX
.MS = 25   65,63,61
.TCX = 1   43
.MC = 30   2,1
.B = 263    10,12,13,16,17,
.C = 1   41,
CHECKBIT IS 50   
         
264:  CALL CHKPID
.MCONT = 1   7
.MC = 20   1,
.VCYP = 1   86
.B = 317    10,11,14,15,16,17,
       
265:  Z←TEMP2 MRG AL, CALL GETST
.MCONT = 1   7
.RRN = 2   67
.TCY = 1   44
.THY = 1   46
.LZY = 1   77
.MC = 1   5,
.VCYP = 1   86
.B = 113    11,14,16,17,
.C = 16   38,39,40,
CHECKBIT IS 50   
       
266:  CALL UERROR ON Q←SKZ<0     (CPU CANNOT BE IDLE.)
.MCONT = 1   7
.MS = 13   65,64,62
.TSPY = 1   45
.LQY = 1   75
.MC = 10   2
.B = 1015    8,14,15,17,
       
267:  Q←Q LCY 4     ("DECREMENT" AL: GO FROM P TO R OR R TO I)
.BR = 10   82
.BL = 2   80
.MS = 4   63
.LQX = 1   74
.VCYP = 1   86
       
* MUST HAVE JUST GONE FROM P TO R, ELSE WE HAVE JUST GONE FROM R TO I.
270:  GOTO CPUNOTIDLE ON SKZ←Q>=0, Q←RUNBIT+CPUBIT
.BR = 10   82
.BL = 2   80
.MS = 13   65,64,62
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.LSPX = 1   59
.MC = 5   5,3
.B = 273    10,12,13,14,16,17,
.C = 3   40,41,
       
* THE 4B7 INDICATES CPU IS GOING IDLE.
* 2ND HALF: Z←TEMP2+PRI, THE SCRATCHPAD # OF PRI FOR GIVEN CPU.
271:  SCHFLG←4B7+PRI, Z←TEMP2, .TCY
.RRN = 2   67
.SSP = 4   54
.TCX = 1   43
.TCY = 1   44
.THY = 1   46
.LZY = 1   77
.LSPX = 1   59
.C = -37777760   18,37,
       
272:  SKZ←10B     (PRI[I]=10B IS LOWEST POSSIBLE PRIORITY.)
.MS = 13   65,64,62
.TCX = 1   43
.LSPX = 1   59
.C = 10   38,
CHECKBIT IS 87   

273:  CPUNOTIDLE: M←M AND NOT Q, Q←TEMP4     (TURNS OFF RUN & CPU BITS.)
.RRN = 4   66
.BR = 10   82
.BL = 14   79,78
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
       
274:  GOTO Q, STORE
.MCONT = 3   7,6
.BR = 10   82
.BL = 2   80
.MS = 42   64,60
.TAX = 1   49
.MC = 20   1,
.VCYP = 1   86
* LEAVE WITH PRST IN M, ADDR(PRST) IN MAR, PROCESS IN CPROC
* PRTPRO SET


275:  BLOCK1: M←M MRG BLKBIT, STORE, GOTO RET
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.TCX = 1   43
.TAX = 1   49
.LMX = 1   72
.MC = 1   5,
.VCYP = 1   86
.B = 67    12,13,15,16,17,
.C = 4000   30,


276:  BLKOUT1: M←M MRG BLKBIT, STORE, GOTO SWAPOUT
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.TCX = 1   43
.TAX = 1   49
.LMX = 1   72
.MC = 20   1,
.VCYP = 1   86
.B = 300    10,11,
.C = 4000   30,
CHECKBIT IS 56   


277:  UNLOAD1: SUBR←PUTWQ, CALL STKLK
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LRN = 5   71,69
.MC = 1   5,
.VCYP = 1   86
.B = 62    12,13,16,
.C = 305   34,35,39,41,
CHECKBIT IS 50   
* FALL THROUGH INTO SWAPOUT

* SWAPOUT PROCESS IN CPROC AND RETURN TO USIBLP. CLEAR LDD (ST IN TEMP4)
* PRTPRO SET ON ENTRY

300:  SWAPOUT: M←CPROC, CALL GETST, Q←LDDBIT
.MCONT = 1   7
.RRN = 1   68
.TCX = 1   43
.THY = 1   46
.LMY = 1   73
.LQX = 1   74
.MC = 20   1,
.VCYP = 1   86
.B = 113    11,14,16,17,
.C = 10   38,
       
301:  M←M AND NOT Q, TEMP2←SWAPRQ, STORE, GOTO SWREQUEST
.BR = 10   82
.BL = 14   79,78
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LRN = 2   70
.MC = 1   5,
.VCYP = 1   86
.B = 241    10,12,17,
.C = 104   35,39,

* GIVEUP IS NOT IMPLEMENTED AT THE MOMENT

302:  GIVEUP: GOTO RET
.MC = 20   1,
.VCYP = 1   86
.B = 67    12,13,15,16,17,

* SET MODE FROM DATA WORD OF REQUEST

303:  SETMODE: GOTO RET ON MODE←Q>=0
.BR = 10   82
.BL = 2   80
.SSP = 34   54,53,52
.TAX = 1   49
.LSPX = 1   59
.MC = 5   5,3
.B = 67    12,13,15,16,17,
CHECKBIT IS 30   
* TURNING COMPUTE MODE ON. RESET ITP
       
304:  GOTO IRESET
.MC = 1   5
.VCYP = 1   86
.B = 541    9,11,12,17,
CHECKBIT IS 30   
*
* PUT PROCESS CPROC ON THE END OF WAKEUPQ. SET WAQ
* IN ST.
* CALLED WITH C, USES MQZ, MAR, SPT1,2, OFFSET
* CALLED FROM WAKEUP, UNLOAD

305:  PUTWQ: Z←M←CPROC, CALL GETST, OFFSET←PRPTR
.MCONT = 1   7
.RRN = 1   68
.TCX = 1   43
.THY = 1   46
.TXW = 1   47
.LMY = 1   73
.LZY = 1   77
.LRN = 4   69
.MC = 20   1
.VCYP = 1   86
.B = 113    11,14,16,17,
.C = 13   38,40,41,
       
306:  M←M MRG WAQBIT, STORE, DGOTO RET
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.TCX = 1   43
.TAX = 1   49
.LMX = 1   72
.MC = 1   5
.DGO = 1   87
.VCYP = 1   86
.B = 67    12,13,15,16,17,
.C = 2000   31,
CHECKBIT IS 56   
       
307:  MAR←WAKEUPQ, CALL APPEND
.MCONT = 1   7
.TCX = 1   43
.TXW = 1   47
.LR0 = 1   58
.MC = 20   1
.VCYP = 1   86
.B = 101    11,17,
.C = 300   34,35,
CHECKBIT IS 50   


* SUBROUTINE TO CHECK FOR IDLE SYSTEM.
* GOTO Q IF SYSTEM NOT IDLE, RETURN IF IT IS
* CALL WITH CALL[TsOES NOT USE STACK
* CALLED FROM WAKEUP, NOSWITCH

310:  CHKIDLE: Z←AL0, MAR←RIPQ, FETCH
.SSP = 16   55,54,53
.MS = 44   63,60
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LZY = 1   77
.LR0 = 1   58
.C = 114   35,38,39,
       
311:  Z←AL1, DGOTO CHKOUT IF Z>=0, MAR←USQBASE-1
.SSP = 17   56,55,54,53
.TCX = 1   43
.TSPY = 1   45
.TXW = 1   47
.LZY = 1   77
.LR0 = 1   58
.MC = 16   4,3,2
.DGO = 1   87
.B = 316    10,11,14,15,16,
.C = 307   34,35,39,40,41,
       
312:  Z←NPRI, GOTO CHKOUT IF Z>=0
.TCX = 1   43
.LZX = 1   76
.MC = 16   4,3,2
.VCYP = 1   86
.B = 316    10,11,14,15,16,
.C = 10   38,
CHECKBIT IS 50   
       
313:  MAR←MAR+1, FETCH, M, GOTO CHKOUT IF NNPTR
.BR = 10   82
.BL = 4   79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 15   5,3,2
.B = 316    10,11,14,15,16,
       
314:  GOTO *-1 ON Z←Z-1>=0, MAR←MAR+1
.BR = 4   83
.BL = 7   81,80,79
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LR0 = 1   58
.MC = 5   5,3
.B = 313    10,11,14,16,17,
       
315:  RETURN
.MCONT = 2   6
.MC = 1   5,
.VCYP = 1   86

316:  CHKOUT: GOTO Q
.MCONT = 3   7,6
.BR = 10   82
.BL = 2   80
.TAX = 1   49
.MC = 20   1,
.VCYP = 1   86


* SUBROUTINE TO CHECK A PROCESS ID (PRT ADDRESS) IN Z
* FOR VALIDITY. IT LEAVES THE ADDRESS, WITH THE TOP 6 BITS CLEAR,
* IN  M , Z AND CPROC.  THE CHECK IS FOR THE ADDRESS TO BE IN THE
* RANGE FOR PRT AND THE LAST TWO BITS TO BE ZERO.CALL UERROR IF
* CHECK FAILS. WIPES R0, MQZ
* ALSO CHECKS FOR ACTIVE PROCESS, AND GOES TO GOMAIN IF THE PROCESS
* IS NOT ACTIVE, AFTER RESETTING THE STACK
* CALL WITH CALL, DOES NOT USE STACK

317:  CHKPID: Q←ADMASK, M←MINPRT
.SSP = 5   56,54
.TCX = 1   43
.TSPY = 1   45
.LMY = 1   73
.LQX = 1   74
.C = -1000000   18,19,20,21,22,23,
CHECKBIT IS 87   
       
320:  CPROC←Z←Z AND NOT Q, Q←3
.BR = 14   83,82
.BL = 10   78
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LZX = 1   76
.LRN = 1   71
.VCYP = 1   86
.C = 3   40,41,
CHECKBIT IS 87   
       
321:  R0←Z-M, M←MAXPRT
.BR = 4   83
.BL = 13   81,80,78
.SSP = 6   55,54
.LOC = 1   50
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LR0 = 1   58
CHECKBIT IS 87   
       
322:  M←M-Z, M←R0
.BR = 13   85,84,82
.BL = 4   79
.LOC = 1   50
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LMY = 1   73
* SIGN OF M IS 1 IF ADDRESS IS OUT OF RANGE
       
323:  M←M AND NOT Q LCY 1, M←CPROC
.RRN = 1   68
.BR = 10   82
.BL = 14   79,78
.MS = 1   65
.THY = 1   46
.LMX = 1   72
.LMY = 1   73
.VCYP = 1   86
       
* ERROR IF PRID IS NOT ON A 4-WORD BOUNDARY OR OUT OF RANGE.
324:  M AND Q, CALL UERROR IF LB#0, Q←2
.MCONT = 1   7
.BR = 10   82
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 23   5,4,1
.VCYP = 1   86
.B = 1015    8,14,15,17,
.C = 2   40,
CHECKBIT IS 56   
       
325:  MAR←Z+Q, FETCH, DRETURN
.MCONT = 2   6
.BR = 4   83
.BL = 2   80
.MS = 44   63,60
.TXW = 1   47
.TAX = 1   49
.LR0 = 1   58
.MC = 1   5,
.DGO = 1   87
CHECKBIT IS 30   
       
326:  GOTO *+1 ON M>=0, M←CPROC     (RETURN IF PROCESS IN PRT IS ACTIVE.)
.RRN = 1   68
.BR = 10   82
.BL = 4   79
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.MC = 5   5,3
.B = 327    10,11,13,15,16,17,
CHECKBIT IS 30   
       
327:  STKP←TOPSTACK, GOTO GOMAIN    (ELSE CLEANUP & START OVER.)
.TCX = 1   43
.TXW = 1   47
.LRN = 6   70,69
.MC = 20   1
.VCYP = 1   86
.B = 120    11,13,
.C = 27   37,39,40,41,
CHECKBIT IS 50   


*

* IB EMPTY. SCHEDULE CPU AS SPECIFIED BY USI/W-14 PP 5-6
* AL[I] SHOULD BE:
*      I - IDLE   (4B7)
*      R - RUNNING (2B6)
*      P - PRIMED (1B5)
* WNPFLG IS EITHER NEGATIVE (NOT SET) OR SET TO 0 OR 1 DEPENDING ON
*     CPU IN PRIMED STATE.

330:  IBEMPTY: .BL←7, .BR←10B, .TAX, CLRPRO
.BR = 10   82
.BL = 7   81,80,79
.MS = 20   61
.TAX = 1   49
.VCYP = 1   86
       
* PUTS SCRATCHPAD # OF AL[I] IN Z, ASSUMING WNPFLG IS SET (NOT NEGATIVE).
331:  TEMP1←Z←WNPFLG MRG AL
.SSP = 1   56
.TCY = 1   44
.TSPY = 1   45
.TYW = 1   48
.LZY = 1   77
.LRN = 1   71
.C = 16   38,39,40,
       
* 1ST HALF: M←AL[I] ! WNPFLG (ALLOWS WNPFLG TO MERGE IN W/ AL[I]).
332:  M←SKZ, .RRN←1, .THY, Q←ALIDLE+ALRUNNING
.RRN = 1   68
.MS = 13   65,64,62
.TCX = 1   43
.TSPY = 1   45
.THY = 1   46
.LMY = 1   73
.LQX = 1   74
.C = -36000000   18,22,
       
* I.E., DON'T DO ANY SCHEDULING IF WNPFLG IS SET TO 0 OR 1.
333:  M AND Q, GOTO MAIN IF LB=0, Z←SCHFLG
.BR = 10   82
.SSP = 4   54
.TSPY = 1   45
.TAX = 1   49
.LZY = 1   77
.MC = 22   4,1
.B = 116    11,14,15,16,
* WAIT IS OVER. CLEAR WNPFLG (I.E. MAKE IT NEGATIVE) AND CHECK SCHFLG
       
* THIS SAYS NO SCHEDULING WILL BE DONE UNLESS SCHFLG HAS BEEN SET
*      DUE TO A CPU'S GOING IDLE.
334:  WNPFLG←Q, MAR←USQBASE-1, GOTO MAIN IF Z>=0
.BR = 10   82
.BL = 2   80
.SSP = 1   56
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.LSPX = 1   59
.MC = 16   4,3,2
.B = 116    11,14,15,16,
.C = 307   34,35,39,40,41,
CHECKBIT IS 42   
* SCHFLG IS SET. CONSIDER RESCHEDULING. SEARCH FOR HIGHEST NON-EMPTY USQI
       
335:  Z←NPRI-1, Q←PRI0
.SSP = 20   52
.TCX = 1   43
.TSPY = 1   45
.LQY = 1   75
.LZX = 1   76
.C = 7   39,40,41,
CHECKBIT IS 87   
       
336:  TEMP1←MAR←MAR+1, FETCH, Z←Z-1, GOTO NOSWITCH IF Z<0
.BR = 4   83
.BL = 7   81,80,79
.MS = 44   63,60
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LZX = 1   76
.LRN = 1   71
.LR0 = 1   58
.MC = 17   5,4,3,2
.B = 362    10,11,12,13,16,
CHECKBIT IS 30   
       
337:  MAR←MAR+1, M, GOTO *-1 IF NULLPTR
.BR = 10   82
.BL = 4   79
.IHR = 1   42
.THY = 1   46
.TYW = 1   48
.TAX = 1   49
.LR0 = 1   58
.MC = 14   3,2
.B = 336    10,11,13,14,15,16,
       
340:  TEMP3←M
.BR = 10   82
.BL = 4   79
.TXW = 1   47
.TAX = 1   49
.LRN = 3   71,70
.VCYP = 1   86
* FOUND NON-EMPTY USQ, ADDRESS IN TEMP1, ADDRESS OF FIRST ENTRY IN TEMP3,
* NPRI-2-PRIORITY IN Z. COMPARE WITH CPU PRIORITIES
* FIRST COMPUTE SMALLEST CPU PRIORITY
       
341:  M←PRI1, TEMP4←0
.SSP = 21   56,52
.TSPY = 1   45
.TXW = 1   47
.LMY = 1   73
.LRN = 4   69
CHECKBIT IS 87   
       
342:  R0←Q-M, M←NPRI-2
.BR = 2   84
.BL = 13   81,80,78
.LOC = 1   50
.TCY = 1   44
.TXW = 1   47
.TAX = 1   49
.LMY = 1   73
.LR0 = 1   58
.C = 6   39,40,
CHECKBIT IS 87   
       
343:  GOTO *+2 IF R0>=0, Z←TEMP2←M-Z
.BR = 13   85,84,82
.BL = 4   79
.LOC = 1   50
.TXW = 1   47
.TAX = 1   49
.LZX = 1   76
.LRN = 2   70
.MC = 12   4,2
.B = 345    10,11,12,15,17,
CHECKBIT IS 30   
       
344:  Q←PRI1, TEMP4←1
.SSP = 21   56,52
.BR = 10   82
.BL = 10   78
.LOC = 1   50
.TAX = 1   49
.TSPY = 1   45
.TXW = 1   47
.LQY = 1   75
.LRN = 4   69
CHECKBIT IS 87   
* NOW HAVE WEAKEST CPU IN TEMP4 (0 OR 1), ITS PRIORITY IN Q,
* THE PRIORITY OF THE STRONGEST NON-EMPTY USQ IN Z AND TEMP2
       
345:  R0←Z-Q, Z←TEMP4 MRG AL
.RRN = 4   66
.BR = 4   83
.BL = 15   81,79,78
.LOC = 1   50
.TCY = 1   44
.THY = 1   46
.TXW = 1   47
.TAX = 1   49
.LZY = 1   77
.LR0 = 1   58
.C = 16   38,39,40,
       
346:  GOTO NOSWITCH IF R0>=0, M←SKZ
.MS = 13   65,64,62
.TSPY = 1   45
.LMY = 1   73
.MC = 12   4,2
.B = 362    10,11,12,13,16,
CHECKBIT IS 30   
* WANT TO SWITCH WEAKEST CPU IF ITS AL#P
       
347:  GOTO SETWNP ON M LCY 8<0, Q←TEMP4
.RRN = 4   66
.BR = 10   82
.BL = 4   79
.MS = 5   65,63
.THY = 1   46
.LQY = 1   75
.MC = 4   3
.B = 361    10,11,12,13,17,
* GO AHEAD. INCREMENT AL AND STORE NEW PRI
       
350:  M←M LCY 20, Q←TEMP2
.RRN = 2   67
.BR = 10   82
.BL = 4   79
.MS = 10   62
.THY = 1   46
.LMX = 1   72
.LQY = 1   75
.VCYP = 1   86
CHECKBIT IS 87   
       
351:  SKZ←M, Z←TEMP4 MRG PRI
.RRN = 4   66
.BR = 10   82
.BL = 4   79
.MS = 13   65,64,62
.TCY = 1   44
.THY = 1   46
.TAX = 1   49
.LZY = 1   77
.LSPX = 1   59
.C = 20   37,
CHECKBIT IS 87   
       
352:  SKZ←Q, M←TEMP3
.RRN = 3   68,67
.BR = 10   82
.BL = 2   80
.MS = 13   65,64,62
.THY = 1   46
.TAX = 1   49
.LMY = 1   73
.LSPX = 1   59
* STORE PRT ADDRESS OF PROCESS FOR CPU AND SEND IT AN ATTENTION
       
353:  MAR←TEMP4 MRG CPUPROC, CALL MSTORE
.MCONT = 1   7
.RRN = 4   66
.TCY = 1   44
.THY = 1   46
.TYW = 1   48
.LR0 = 1   58
.MC = 1   5,
.VCYP = 1   86
.B = 60    12,13,
.C = 6   39,40,
CHECKBIT IS 50   
       
354:  Q←TEMP4+1, .C←PRTPRO, .TCX, SETPRO, GOTO * IF PRONEX
.RRN = 4   66
.MS = 25   65,63,61
.IHR = 1   42
.TCX = 1   43
.THY = 1   46
.LQY = 1   75
.MC = 30   2,1
.B = 354    10,11,12,14,15,
.C = 1   41,
CHECKBIT IS 50   
       
355:  Q←Q LCY CPUSTSH
.BR = 10   82
.BL = 2   80
.MS = 3   65,64
.LQX = 1   74
.VCYP = 1   86
CHECKBIT IS 87   
* CLEAR USQBIT, SET RUNBIT AND CPU NUMBER IN ST OF PROCESS
       
356:  Q, STROBE, Q←USQBIT, CALL GETST
.MCONT = 1   7
.BR = 10   82
.BL = 2   80
.MS = 17   65,64,63,62
.TCY = 1   44
.TAX = 1   49
.LQY = 1   75
.MC = 20   1,
.B = 113    11,14,16,17,
.C = 20   37,
CHECKBIT IS 56   
       
357:  M←M AND NOT Q, M←TEMP4 MRG RUNBIT, STORE, DGOTO IBEMPTY
.RRN = 4   66
.BR = 10   82
.BL = 14   79,78
.MS = 42   64,60
.TCY = 1   44
.THY = 1   46
.TAX = 1   49
.LMX = 1   72
.LMY = 1   73
.MC = 1   5,
.DGO = 1   87
.VCYP = 1   86
.B = 330    10,11,13,14,
.C = 2   40,
* REMOVE PROCESS FROM ITS USQ
       
360:  M←TEMP1, OFFSET←PRPTR, CALL GETNEXT
.MCONT = 1   7
.RRN = 1   68
.TCX = 1   43
.THY = 1   46
.TXW = 1   47
.LMY = 1   73
.LRN = 4   69
.MC = 20   1,
.VCYP = 1   86
.B = 72    12,13,14,16,
.C = 13   38,40,41,
CHECKBIT IS 50   
* NOTE THAT IBEMPTY CLEARS PROTECT

361:  SETWNP: WNPFLG←Q, GOTO MAIN
.BR = 10   82
.BL = 2   80
.SSP = 1   56
.TAX = 1   49
.LSPX = 1   59
.MC = 1   5,
.B = 116    11,14,15,16,
CHECKBIT IS 30   

362:  NOSWITCH: TEMP2←SCHFLG←0, Q←MAIN, CALL CHKIDLE
.MCONT = 1   7
.SSP = 4   54
.TCY = 1   44
.TXW = 1   47
.LQY = 1   75
.LRN = 2   70
.LSPX = 1   59
.MC = 20   1,
.B = 310    10,11,14,
.C = 116   35,38,39,40,
* IDLE. RUN PROCESS ON WAKEUPQ IF THERE IS ONE
       
363:  OFFSET←PRPTR
.TCX = 1   43
.TXW = 1   47
.LRN = 4   69
.VCYP = 1   86
.C = 13   38,40,41,
       
364:  M←WAKEUPQ, CALL GETNEXT
.MCONT = 1   7
.TCX = 1   43
.LMX = 1   72
.MC = 1   5
.VCYP = 1   86
.B = 72    12,13,14,16,
.C = 300   34,35,
       
365:  M←Z, GOTO MAIN IF NULLPTR
.BR = 4   83
.BL = 10   78
.TAX = 1   49
.LMX = 1   72
.MC = 14   3,2
.B = 116    11,14,15,16,
CHECKBIT IS 30   
       
366:  CALL GETST, Q←WAQBIT, TEMP2←0
.MCONT = 1   7
.TCX = 1   43
.TYW = 1   48
.LQX = 1   74
.LRN = 2   70
.MC = 20   1,
.VCYP = 1   86
.B = 113    11,14,16,17,
.C = 2000   31,
CHECKBIT IS 50   
       
367:  M←M AND NOT Q, STORE, DGOTO IBEMPTY
.BR = 10   82
.BL = 14   79,78
.MS = 42   64,60
.TAX = 1   49
.LMX = 1   72
.MC = 1   5,
.DGO = 1   87
.VCYP = 1   86
.B = 330    10,11,13,14,
CHECKBIT IS 30   
       
370:  M←Z, SUBR←WAKEUP, CALL STKLK
.MCONT = 1   7
.BR = 4   83
.BL = 10   78
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LRN = 5   71,69
.MC = 20   1,
.VCYP = 1   86
.B = 62    12,13,16,
.C = 216   34,38,39,40,
CHECKBIT IS 56   

*$$$$$$$ PATCHES 1 AND 2

* TRY AGAIN IF RTC IS IN PROCESS OF CHANGING.
371:  FIX1:  GOTO RTLOOP ON M EOR Q<0
.BR = 10   82
.BL = 16   80,79,78
.TAX = 1   49
.MC = 4   3
.B = 121    11,13,17,
       
372:  Z←Q LCY 12, RETURN
.MCONT = 2   6
.BR = 10   82
.BL = 2   80
.MS = 6   64,63
.LZX = 1   76
.MC = 1   5
.VCYP = 1   86
CHECKBIT IS 30   

373:  FIX2:  M←CPROC, CALL GETPIW
.MCONT = 1   7
.RRN = 1   68
.THY = 1   46
.LMY = 1   73
.MC = 20   1
.VCYP = 1   86
.B = 111    11,14,17,
       
374:  M←M MRG RSIBIT, STORE, GOTO SWREQUEST
.BR = 10   82
.BL = 4   79
.MS = 42   64,60
.TCX = 1   43
.TAX = 1   49
.LMX = 1   72
.MC = 1   5
.VCYP = 1   86
.B = 241    10,12,17,
.C = 2   40,

375:  FIX3:  FETCH, R0←M+Z, Q←ADMREG, DGOTO FIX3A
.BR = 4   83
.BL = 4   79
.SSP = 13   56,55,53
.MS = 44   63,60
.TSPY = 1   45
.TXW = 1   47
.TAX = 1   49
.LQY = 1   75
.LR0 = 1   58
.MC = 20   1
.DGO = 1   87
.B = 143    11,12,16,17,
CHECKBIT IS 30   
       
376:  M←M AND NOT Q, STORE, SUBR←WAKEUP, CALL FIXRTQ
.MCONT = 1   7
.BR = 10   82
.BL = 14   79,78
.MS = 42   64,60
.TCY = 1   44
.TYW = 1   48
.TAX = 1   49
.LMX = 1   72
.LRN = 5   71,69
.MC = 1   5
.VCYP = 1   86
.B = 212    10,14,16,
.C = 216   34,38,39,40,
       
377:  CALL UERROR
.MCONT = 1   7
.MC = 20   1
.VCYP = 1   86
.B = 1015    8,14,15,17,
