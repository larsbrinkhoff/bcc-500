       PROGRAM FTRAP'ENTRIES;
       INCLUDE PROFILE, GLOBAL;
*
        ENTRY MACTRP(), FTRAP'ENTRY ← 1;
       .STA TPAR; MACC'TRAP();
       ENTRY PROTRP(), FTRAP'ENTRY ← 2;
       .STA TPAR; PRO'TRAP();
       ENTRY PNMTRP(), FTRAP'ENTRY ← 3;
       .STA TPAR, LDA G'[1], XLA; PNIM'TRAP();
       LOAD'STATE(TRSTATE);
       ENTRY PNCTRP(), FTRAP'ENTRY ← 4;
       .STA TPAR, LDA G'[1], XLA; PNIC'TRAP();
       LOAD'STATE(TRSTATE);
       ENTRY TOTRP(), FTRAP'ENTRY ← 5;
       .STA TPAR, LDA G'[1], XLA; TO'TRAP();
       LOAD'STATE(TRSTATE);
       ENTRY PITRP(), FTRAP'ENTRY ← 6;* NEVER GENERATED
       .STA TPAR; PI'TRAP();
       ENTRY TITRP(), FTRAP'ENTRY ← 7;
       .STA TPAR; TI'TRAP();
       ENTRY XMOTRP(), FTRAP'ENTRY ← 8;
       .STA TPAR, SRS 100B; TRSTATE.XMONT ← 0; XMON'TRAP();
       LOAD'STATE(TRSTATE);
       ENTRY XUTTRP(), FTRAP'ENTRY ← 9;
       .STA TPAR, SRS 200B; TRSTATE.XUTILT ← 0; XUTIL'TRAP();
       LOAD'STATE(TRSTATE);
       ENTRY BLLTRP(), FTRAP'ENTRY ← 10;
       .STA TPAR; BLLERR'TRAP();
       ENTRY ILMTRP(), FTRAP'ENTRY ← 11;
       .STA TPAR; ILIM'TRAP();
*    ENTRY MABTRP(), FTRAP'ENTRY ← 12;
        .STA TPAR; PUNT('MAB');

        END;

       PROGRAM TRAP'BRANCH'FIX;
*
*  KLUDGE TO PLACE BRANCH INTO TRAP TRANSFER LOCATION.
*
          DECLARE TRAP'BRANCH = 604002B ← 15010416B;* ADDR DEPENDS ON SPL

       END;

       PROGRAM FIXED'TRAPS;
*  THIS PROGRAM HANDLES FIXED TRAPS NUMBER 1,2,5,6,7,8,10, AND 11.
        INCLUDE TRAPD,GLOBAL,RESMON,SPTD;

*  FIXED TRAP NUMBER 1 - MACC
        ENTRY MACC'TRAP();
       TRAP(TNO(MACC), TPAR, 0) UNLESS MRING(TRSTATE.STPC);
*  MACC CAME OUT OF MONITOR
        TRAP(TNO(MACC), TPAR, 1);

*  FIXED TRAP NUMBER 2 - PRO
        ENTRY PRO'TRAP();
       TRAP(TNO(PRO), TPAR, 0) UNLESS MRING(TRSTATE.STPC);
*  PRO CAME OUT OF MONITOR
        PUNT('PRO') IF MRING(TPAR);
       TRAP(TNO(PRO), TPAR, 1);

*  FIXED TRAP NUMBER 5 - TO
        ENTRY TO'TRAP();
       TO'BLOCK();
       RETURN;

*  FIXED TRAP NUMBER 6 - PI
        ENTRY PI'TRAP();
       TRAP(TNO(PI), TPAR, 0) UNLESS MRING (TRSTATE.STPC);
*  PI CAME OUT OF MONITOR
        PUNT('PIT');

*  FIXED TRAP NUMBER 7 - TI
        ENTRY TI'TRAP();
       TRAP(TNO(TI), TPAR, 0) UNLESS MRING(TRSTATE.STPC);
*  TI CAME OUT OF MONITOR
        PUNT('TIT');

*  FIXED TRAP NUMBER 8 - XMON
        ENTRY XMON'TRAP();
       CSTRAP(0,0);
       RETURN;

*  FIXED TRAP NUMBER 9 - XUTIL
        ENTRY XUTIL'TRAP();
       CSTRAP(0,0);
       RETURN;

*  FIXED TRAP NUMBER 10 - BLLERR
        ENTRY BLLERR'TRAP();
       TRAP(TNO(BLLERR), TPAR, 0) UNLESS MRING(TRSTATE.STPC);
*  BLERR CAME OUT OF MONITOR
        TRAP(TNO(BLLERR), TPAR, 1);* THIS ISN'T QUITE RIGHT - TRAP COULD
*                                BE A MONITOR ERROR

*  FIXED TRAP NUMBER 11 - ILIM
        ENTRY ILIM'TRAP();
       TRAP(TNO(ILIM), TPAR, 0) UNLESS MRING(TRSTATE.STPC);
*  ILIM CAME OUT OF MONITOR
        PUNT('MIL') IF MRING(TPAR);
       TRAP(TNO(ILIM), TPAR, 1);
*

        END;

       PROGRAM TRAP'ENTRIES;
       INCLUDE PROFILE;
       ENTRY ABETRP(), TRAP'ENTRY ← 1;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(1);
       ENTRY FLOTRP(), TRAP'ENTRY ← 2;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(2);
       ENTRY FLUTRP(), TRAP'ENTRY ← 3;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(3);
       ENTRY ROTRP(), TRAP'ENTRY ← 4;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(4);
       ENTRY IATRP(), TRAP'ENTRY ← 5;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(5);
       ENTRY UFNTRP(), TRAP'ENTRY ← 6;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(6);
       ENTRY FXOTRP(), TRAP'ENTRY ← 7;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(7);
       ENTRY DIZTRP(), TRAP'ENTRY ← 8;
       .STA RDTLR, .CLA, .XMA RDTLR;
       RING'TRAPS(8);
       ENTRY SOVTRP(), TRAP'ENTRY ← 9;
       .STA RDTLR, .CLA, .XMA RDTLR;
       STKOV'TRAP();

        END;

       PROGRAM STKOV'TRAP;
       INCLUDE TRAPD, GLOBAL, PROFILE;
       FIXED;* ORIGIN AT @STKOV'LE
*
        FUNCTION STKOV'TRAP();
       RDTPAR ← SESP;
       PUNT('STK');
*

        END;

       PROGRAM RING'TRAPS;
       INCLUDE PROFILE, GLOBAL, TRAPD, SPTD;
       ENTRY RING'TRAPS(RDTNO);
       SAVE'STATE(TRSTATE);
       TRSTATE.STPC ← RDTPC;
       TRSTATE.STLR ← RDTLR;
       IF RDTNO = 1 DO;* 'ABE'
           TRAP(TNO(TI), TPAR, 1);
       ENDIF;
       PUNT(RDTCODES[RDTNO]);
       END;
