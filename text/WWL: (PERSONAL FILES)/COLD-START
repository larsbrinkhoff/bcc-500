.GL  SNAP-SHOT
.GL  IN-STRUC-TION FOL-LOWS
.GL  FUR-THER COM-PLETES ALLO-CA-TION
.GL  VER-SION RE-STORES RE-AC-TI-VATE PROCES-SORS PROCES-SES
.GL IN-COR-PO-RAT-ING FRE-QUENT-LY AP-PEAR-ANCE
.GL  TELE-TYPE FIN-ISHED
.GL  AB-SO-LUTE-LY
.GL  RE-START-ING PO-SITION MICRO-PROCES-SOR MAG-NETIC
.GL IM-MED-IATE-LY FOL-LOW-ING DOUBT-FUL DIS-PLAYED
.GL DEC-RE-MENT
.PARAGRAPH SPACING 0
.PARAGRAPH INDENTATION 0
.CE
↑UM1 COLD START PROCEDURE↑L
.SP 4
       /THE FOLLOWING STEPS DESCRIBE THE LOADING PROCEDURE FOR 
ABSOLUTELY BARE HARDWARE.
/THESE STEPS ARE WRITTEN WITH THE ASSUMPTION THAT THE HARDWARE IS
FUNCTIONAL.
/IF THEY EVER HAVE TO BE TAKEN IN ENTIRETY, THEN THIS ASSUMPTION IS
DOUBTFUL.
/NEVERTHELESS, FOR THE SAKE OF DOCUMENTATION THEY ARE WRITTEN DOWN
HERE.
/OF COURSE THEY ARE NOT UNIQUE; THERE ARE MANY OTHER WAYS TO GET
TO THE SAME POINT.  /THESE STEPS HAVE BEEN CHECKED OUT, HOWEVER, AND
ARE "GUARANTEED" TO WORK.
.SP
←←←←←/ACCOMPANYING THIS WRITEUP IS A KIT OF PAPER AND MAGNETIC
TAPES TO BE USED IN THE PROCEDURE.
/THIS MATERIAL MUST BE KEPT TOGETHER.
/EACH ITEM IS THE KIT IS NUMBERED.  /FOR EXAMPLE, THIS WRITEUP
IS ITSELF #1.  /THE OTHER ITEMS ARE REFERRED TO BELOW IN SEQUENCE.
.SP 4
.RM 12
.UN 12
/I.  ↑ULOAD AND INITIALIZE THE HP2100A↑L
.SP
.UN 9
1.  /LOAD ↑CHP BASIC BINARY LOADER (↑CBBL) INTO PROTECTED MEMORY.
.SP
.UN 6
/PRESS ↑CHALT.
.UN 6
/PRESS ↑UEXTERNAL, INTERNAL PRESET↑L.
.UN 6
/PRESS ↑ULOADER ENABLE↑L.
.UN 6
/PRESS /M.
.UN 6
/SET ADDRESS 17700/B IN DISPLAY REGISTER.
.UN 6
/PRESS /M DATA.  /THE CONTENTS OF 17700 WILL BE DISPLAYED.
.SP
.RM 0,6
[/BY PRESSING EITHER /M ↑CINCREMENT OR /M ↑CDECREMENT, THE CONTENTS
OF MEMORY IN FOLLOWING OR PRECEDING LOCATIONS WILL BE DISPLAYED.
/BY CHANGING THE DISPLAY REGISTER BEFORE GOING TO THE NEXT LOCATION,
THE CONTENTS OF MEMORY CAN BE ALTERED.
/THE ↑CBBL IS AS FOLLOWS:]
.SP
.RM 12
17700↑/  107700

17701↑/  063770

17702↑/  106501

17703↑/  004010

17704↑/  002400

17705↑/  006020

17706↑/  063771

17707↑/  073736

17710↑/  006401

17711↑/  067773

17712↑/  006006

17713↑/  027717

17714↑/  107700

17715↑/  102077

17716↑/  027700

17717↑/  017762

17720↑/  002003

17721↑/  027712

17722↑/  003104

17723↑/  073774

17724↑/  017762

17725↑/  017753

17726↑/  070001

17727↑/  073775

17730↑/  063775

17731↑/  043772

17732↑/  002040

17733↑/  027751

17734↑/  017753

17735↑/  044000

17736↑/  000000

17737↑/  002101

17740↑/  102000

17741↑/  037775

17742↑/  037774

17743↑/  027730

17744↑/  017753

17745↑/  054000

17746↑/  027711

17747↑/  102011

17750↑/  027700

17751↑/  102055

17752↑/  027700

17753↑/  000000

17754↑/  017762

17755↑/  001727

17756↑/  073776

17757↑/  017762

17760↑/  033776

17761↑/  127753

17762↑/  000000

17763↑/  103716  (↑INOT 103713)

17764↑/  102316  (↑INOT 102313)

17765↑/  027764

17766↑/  102516  (↑INOT 102513)

17767↑/  127762

17770↑/  173775

17771↑/  153775

17772↑/  160100

17773↑/  177765

17774↑/  000000

17775↑/  000000

17776↑/  000000
.EM 12,6
.SP 2
.UN 9
2.  /LOAD THE ↑CHP MAG TAPE LOADER.
.SP
.UN 6
/PRESS ↑CHALT.
.UN 6
/MAKE SURE ↑CLOADER ↑CENABLE IS STILL ON.
.UN 6
/PRESS ↑UEXTERNAL, INTERNAL PRESET.↑L
.UN 6
/PRESS /S AND CLEAR DISPLAY REGISTER.
.UN 6
/PRESS /P.
.UN 6
/SET STARTING ADDRESS 17700/B IN DISPLAY REGISTER.
.UN 6
/PLACE SWITCH INSIDE ↑CHP TELETYPE TO ↑CHP POSITION.
.UN 6
/PLACE "↑CHP /MAG /TAPE /LOADER" PAPER TAPE (ITEM #2 IN STARTUP KIT)
IN TELETYPE READER.
.UN 6
/SET READER TO ↑CRUN POSITION.
.UN 6
/PRESS ↑CRUN ON ↑CHP.  /TAPE SHOULD START READING AND STOP BEFORE
RUNNING OUT OF TAPE AT THE END.  102077/B SHOULD BE IN DISPLAY
REGISTER AT THIS TIME.
.UN 6
/RETURN SWITCH INSIDE ↑CHP TELETYPE TO 500 POSITION.
.SP 2
.UN 9
3.  /LOAD THE ↑CHP RESIDENT PROGRAM.
.SP
.UN 6
/PRESS ↑CHALT.
.UN 6
/PRESS ↑UEXTERNAL, INTERNAL PRESET↑L.
.UN 6
/PRESS /P.
.UN 6
/SET STARTING ADDRESS 17200/B IN DISPLAY REGISTER.
.UN 6
/MOUNT "↑CHP /RESIDENT" TAPE (ITEM #3) ON MAG TAPE UNIT.
.UN 6
/PRESS ↑CLOAD↑/↑CUNLOAD AND ↑CONLINE ON TAPE UNIT.
.UN 6
/MAKE SURE ↑CEXTEND LIGHT ON ↑CHP IS OFF.
.UN 6
/PRESS ↑CRUN ON ↑CHP.  /TAPE SHOULD QUICKLY READ, REWIND AND UNLOAD.
↑CHP SHOULD BE RUNNING RESIDENT AT THIS TIME.
.SP 2
.UN 9
4.  /TO RESTART THE ↑CHP RESIDENT (IF IT BECOMES NECESSARY):
.SP
.UN 6
/PRESS ↑CHALT.
.UN 6
/PRESS ↑UEXTERNAL, INTERNAL PRESET↑L.
.UN 6
/PRESS /P.
.UN 6
/SET STARTING ADDRESS 000200/B IN DISPLAY REGISTER.
.UN 6
/PRESS ↑CRUN.
.EJ
.UN 12
↑UII.  INSTALL MAINTENANCE AND CONTROL SOFTWARE↑L.
.SP
.UN 9
1.  /LOAD AN INITIAL PROGRAM LOADER (↑CIPL) INTO ↑CCTP.
.SP
.UN 6
/MAKE SURE ↑CCHIO HAS AN ↑CMNODT BOARD IN ITS ↑CROM SLOT /B4.
/IF NECESSARY, MOVE ↑CMNODT BOARD FROM /B4 OF ↑CMSCH.
.UN 6
/GROUND POINTS /A6-44 (STOP ON ↑CROM PARITY) AND /A6-83 (EXTENDED
SCRATCHPADS) ON ↑CCHIO.
.UN 6
/CONNECT A TELETYPE TO ↑CCHIO LOCAL TELETYPE BOARD.  /REMOVE ANY
OTHER DEVICE WHICH MAY BE CONNECTED TO THE /D/B-35 PLUG ON THE SAME
BOARD.  /SET LOCAL TERMINAL BIT RATE TO 110 BY PLACING SWITCH
IN EXTREME LOW POSITION.
.UN 6
/PLACE MEMORY SWITCH ON /A4 INTO "LOCAL CORE ONLY" POSITION (CENTER).
.UN 6
↑CZAP ENTIRE SYSTEM AND FORCE ↑CCHIO INTO ↑CMNODT.
(/GROUND /B4 PIN 2 MOMENTARILY.)
.UN 6
/PLACE MYLAR TAPE LABELED "/M1 ↑CCTP ↑CBOOTSTRAP" (#4) INTO OPTICAL
PAPER TAPE READER AND TURN READER FULL ON (SWITCH FULL UP).
.UN 6
/MOUNT MAGNETIC TAPE "↑CIPL ↑CDUMP -- ↑CCTP ↑CDDT" (#5) ON MAG TAPE
UNIT.
.UN 6
/INITIATE SELF-FILL SEQUENCE BY TYPING "2325/G" ON THE ↑CCTP TELETYPE.
/MYLAR TAPE SHOULD READ IN AND STOP AT END OF TAPE.  /MAG TAPE SHOULD
IMMEDIATELY START READING IN AND STOP AS THE ↑CCTP TELETYPE TYPES
"↑CDDT".  /AT THIS POINT A STAND- ALONE ↑CDDT IS LOADED INTO THE
LOCAL CORE OF THE ↑CCTP.
/ALSO IN THIS CORELOAD IS A COPY OF /M/T (MEMORY TEST), WHICH CAN BE
USED TO CHECK OUT CENTRAL MEMORY.
.UN 6
/TURN OFF OPTICAL TAPE READER.
.SP 2
.UN 9
2.  /LOAD ↑CSYSDDT AND ↑CIPL INTO ↑CMSCH.
.SP
.UN 6
/MOMENTARILY HALT ↑CCHIO BY SELECTING IT ON THE /O-REGIS- TER DISPLAY
PANEL AND TURNING ON THE MICROPROCESSOR HALT SWITCH.
/MAKE SURE THE INSTRUCTION EXECUTING DOES NOT CONTAIN A ↑CFETCH.
.UN 6
/PLACE MEMORY ACCESS SWITCH ON ↑CCHIO (ON /A4) BACK TO NORMAL (FULL
LEFT).  /THEN ALLOW ↑CCTP TO CONTINUE RUNNING.  /VERIFY THAT IT IS
STILL FUNCTIONAL AND THAT IT WILL ACCESS CENTRAL MEMORY (RUN /M/T
FOR A MOMENT).
.UN 6
/MODIFY ↑CMT TO CLEAR CENTRAL MEMORY BY INSERTING A ↑CCLA INSTRUCTION
IN PLACE OF THE ↑CLDA ↑CPTR INSTRUCTION NEAR THE START OF THE STORE
LOOP.  /ALSO PLACE A ↑CBRU 300 INSTRUCTION AFTER THE STORE LOOP IN
PLACE OF THE FETCH LOOP.  /THEN CLEAR THE CENTRAL MEMORY.
.UN 6
/MOUNT "↑CIPL ↑CLIBRARY" TAPE (ITEM #6) ON TAPE UNIT.  /USE ↑CIPL
ON ↑CCTP TO READ IN 8/D25 CORELOAD INTO LOWER HALF
AND ↑CDDE INTO UPPER HALF OF CENTRAL MEMORY AS FOLLOWS:
.SP
.UN 3
↑U↑-IPL;U
.UN 3
GO$GO
.SP
.UN 3
#↑II↑ENIT↑I.
.SP
.RM 2,5
[↑L/IF ↑CIPL REFUSES TO ↑CINIT PROPERLY, TRY A ↑CZAP ON THE ↑CCHIO
MULTIPLEXER.  /IF ALL ELSE FAILS, TURN OFF THE ↑CCHIO AND THEN BACK ON.
/RESTART ↑CCTP AS INDICATED BELOW.↑U]
.EM 2,5
.SP
.UN 3
#↑ID↑EIRECTORY↑I.
.SP
.UN 3
#↑IR↑EEAD↑I.
.UN 3
←FILENAME: ↑-8D25.
.UN 3
LA: 40000000/B
.UN 3
WC: 200000/B
.UN 3
SA: 3B
.SP
.UN 3
#↑IR↑EEAD↑I.
.UN 3
←FILENAME: ↑-HDDT.
.UN 3
LA: 40200000B
.UN 3
WC: 200000B
.UN 3
SA: 3B↑L
.SP
.UN 6
/IF IT WAS NECESSARY TO BORROW THE ↑CMSCH ↑CMNODT BOARD, FOLLOW THE
NEXT FEW INSTRUCTIONS.  /OTHERWISE, SKIP DOWN TO THE LINE MARKED
"2/A" BELOW.
.SP
.UN 6
/TURN ↑COFF ↑CCHIO AND ↑CMSCH.
.UN 6
/MOVE ↑CMNODT BOARD BACK TO ↑CMSCH (/B4 IN BOTH PROCESSORS).
.UN 6
/TURN ↑CON BOTH PROCESSORS AND PLACE ↑CMSCH INTO ↑CMNODT.
.UN 6
/RESTART ↑CCTP AS FOLLOWS:
.SP
.RM 12
←←3↑/  4100004

←←4↑/  0100004

←22↑/  1642

←27↑/  12343210

306↑/  0/P

307↑/  40000
.EM 1
3133↑/  4

3134↑/  77777777

3135↑/  0

3136↑/  0/P

3137↑/  40000

306/P↑/  0

 307/P↑/  40000

540/G
.SP
.EM 11
[/THIS CAUSES ↑CITP TO STROBE ↑CCHIO, CAUSING IT TO JUMP FROM ITS
"1610" LOOP TO ITS "1167" LOOP.]
.SP
.UN 6
/PUT ↑CMSCH INTO ↑CMNODT AGAIN.
.SP
.RM 11
540/G
.SP
.EM 11
[/THIS CAUSES ↑CITP TO STROBE ↑CCHIO A SECOND TIME, RESTARTING ↑CCTP.]
.SP
.UN 11
2/A.  ↑CZAP ENTIRE SYSTEM.
.UN 6
/REMOVE GROUNDS ON PINS /A6-44 AND /A6-83 OF ↑CCHIO.
.UN 6
/PRESS ↑CMNODT BUTTON AND TYPE THE FOLLOWING TO ↑CITP:
.RM 12
.SP
306/P↑/  0

307/P↑/  40000

←←←3↑/  124000

540/G
.EM 12
.SP
[/AT THIS POINT ↑CITP SHOULD TYPE OUT
"8/D25".]
.SP 2
.UN 9
3.  /LOAD ↑CDDE↑/↑CDDT INTO ↑CITP AND WRITE ON DRUM.
.SP
.UN 6
/USE ↑CIPL ON ↑CITP TO READ ↑CDDE INTO LOW HALF OF CENTRAL MEMORY.
/AS ON THE ↑CCTP DO THE FOLLOWING:
.SP
.UN 3
↑U↑-IPL;U
.UN 3
GO$GO
.SP
.UN 3
#↑II↑ENIT↑I.
.SP
.UN 3
#↑ID↑EIRECTORY↑I.
.UN 3
.SP
#↑IR↑EEAD↑I.
.UN 3
←FILENAME: ↑-DDTE.
.UN 3
LA: 40000000B
.UN 3
WC: 200000B
.UN 3
SA: 3B
.SP
.UN 3
#↑IG↑EO TO↑-←10001.
.SP
.UN 3
8D25↑L
.SP
.UN 6
/TYPE TO ↑CSYSDDT THE FOLLOWING:
.SP
.RM 12
3%↑/  ↑CBRU 10001

4%↑/  ↑CBRU 10001

%/Z

0;1

377777;2

0%*

0%$

0*#
.SP
.EM 12
.UN 6
/PRESS ↑CMNODT BUTTON.
.UN 6
/TYPE TO ↑CMNODT THE FOLLOWING:
.RM 12
.SP
306/P↑/ 0

307/P↑/ 40000

←←←3↑/ 124000

540/G
.SP
.EM 12
[/THIS CAUSES ↑CDDE TO BE LOADED INTO ↑CITP, SAVING 8/D25 IN CENTRAL
MEMORY AT 40000/B THROUGH 77777/B.  ↑CDDE CAN NOW BE USED TO WRITE
AWAY BOTH THE UPPER HALF OF CENTRAL MEMORY (ALSO ↑CDDE) ON
DRUM AS WELL AS THE SAVED 8/D25.]
.SP
.UN 6
/TO ↑CDDT TYPE:
.SP
.RM 12
/Z+40306[  2/B6

/Z+40307[  204/B4
.SP
.EM 12
.UN 6
/SET BIT 22 OF SWITCH REGISTER AND ↑CZAP SYSTEM.
.UN 6
/SET SWITCH REGISTER TO 17600/B.
.UN 6
/TYPE THE FOLLOWING TO ↑CDDE:
.SP
.RM 12
↑UR;U

FORN+1↑\  STA FORNT

DDEA↑\  NOP

BAD↑\  200

BAD+1↑\  200

NW↑\  1

NR↑\  0

NP↑\  40

BAND↑\  16

SECT↑\  0

WBPN↑\  40

E;U
.SP
.EM 12
[↑L/THIS WRITES ↑CDDE ONTO DRUM 0 SAVE AREA 3 (BANDS 16 AND 17).↑U]
.SP 2
.UN 9
4.  ↑L/WRITE ↑CSYSDDT ONTO DRUM.↑U
.SP
.UN 6
↑L/CONTINUE TYPING TO ↑CDDE THE FOLLOWING:↑U
.RM 12
.SP
37000↑\  LDX =-40000

37001↑\  LDA* 37020

37002↑\  STA* 37021

37003↑\  BRX 37001

37004↑\  BRU 300

37020↑\  60100000

37021↑\  60300000

37000;G
.SP
.EM 12
[↑L/THIS MOVES THE SAVED COPY OF 8/D25 TO UPPER HALF OF CENTRAL
MEMORY, FROM WHERE IT WILL ALSO BE WRITTEN ON DRUM.↑U]
.RM 12
.SP
BAND↑\  2

SECT↑\  0

E;U
.SP
.EM 12
[↑L/NOW BOTH CORELOADS ARE ON DRUM.  8/D25 IS ON DRUM 0 SAVE AREA 0
(BANDS 2 AND 3).]
.SP 2
.UN 9
5.  /WRITE COPIES OF ↑CDDE AND ↑CSYSDDT ONTO DISK.
.SP
.UN 6
/CONTINUE TYPING TO ↑CDDE:
.SP
.RM 12
↑UNW↑\  0

NR↑\  1

BAND↑\  16

SECT↑\  0

RBPN↑\  40

E;U

NW↑\  1

NR↑\  0

TSU↑\  2

UNIT↑\  1

MAXS↑\  4
.SP
.UN 18
↑L/ADDITIONALLY TURN ON SWITCH 4/B7.↑U
.SP
BAND↑\  7

SECT↑\  0

WBPN↑\  40

E;U

.SP
.UN 18
↑L/REPEAT THE NEXT TWO STEPS A COUPLE OF TIMES.↑U
.SP
SECT↑\  0

E;U
.UN 18
.SP
↑L/TURN OFF SWITCH 4/B7 AND
REPEAT LAST 5 STEPS ABOVE, EXCEPT USE DISK BAND 17.↑U
.SP
.UN 12
[↑L↑CDDE IS NOW WRITTEN ON DISK.↑U]
.SP
.EM 12
.UN 6
↑L/REPEAT ALL THE STEPS ABOVE BEGINNING AT 5., USING DRUM BAND 2 AND
DISK UNIT 0.  /AT THIS POINT, 8/D25 CAN BE OBTAINED BY A ↑CZAP-GO
SPECIFYING 102/B5 OR 112/B5.  ↑CDDE CAN BE OBTAINED BY A ↑CZAP-GO
WITH 122/B5 OR 132/B5.
.SP 2
.EJ
.UN 12
↑UIII.  LOAD THE SYSTEM FROM MAG TAPE AND DO A SAVD↑L.
.SP
.UN 9
1.  /LOAD THE SYSTEM FROM TAPE AND GET OPERATIONAL.
.SP
.UN 6
/ATTACH A TELETYPE TO ↑CCHIO MULTIPLEXER LINE 0 (↑CKDF TELETYPE).
.UN 6
/DISCONNECT ALL TERMINALS FROM ↑CCHIO MULTIPLEXER WHICH MIGHT BE
TYPED ON DURING THIS PORTION OF THE PROCEDURE.  /SUCH EVENTS CAN
LEAD TO ANOMOLOUS BEHAVIOR OF THE SYSTEM.
.UN 6
/FOR THIS PORTION OF THE PROCEDURE THE SCRIPT GIVEN BELOW SHOULD
BE FOLLOWED ON THE ↑CSYSDDT TELETYPE:
.SP 3
.EM 3
.NOFILL
↑U8D25                  (↑LFRESH↑U SYSDDT)
%Z
0;1
377777;2
0<;1,;2;Z             (↑LCLEAR CENTRAL MEMORY↑U)

;#

0;#                   (↑LVERIFY↑U)
0
;#                    (↑LCLEAN OUT ↑CSWR↑ES↑U)

CPU%Z--OK.            (ZAP CPU0)
1%$                   (↑LSTEP MODE↑U)
1%X
0%*                   (↑LSCHEDULER OFF↑U)
0*#                   (CPU0)
IPL;U

GO$GO
#INIT.

#DIRECTORY.
8D25
DDTE
HDDT
ICL1

#READ.
 FILENAME: ICL1.      (↑LREAD INITIAL CORE LOAD↑U)
LA: 40000000B
WC: 200000B
TA: 1215B
#GO TO 10001.
8D25

.UN 3
ZAP ↑LSYSTEM WITH BIT 22 SET IN SWITCH REGISTER.↑U

?>>12722  2650255
3%↑/  BRU 15505  BRU 10001
%Z
4100005;U             (↑LSTART ↑UCHIO & AMC)
$
306%[  2000000

.UN 3
↑L/PRESS ↑UMNODT.

3↑/ 0
16G8D25               (↑LSTART SCHEDULER↑U)

.UN 3
↑L/LOAD REAL-TIME CLOCK BIAS (CF. /PROGRAMMERS' /LOG).
/IF UNKNOWN DUE TO CLOCK BEING OFF, MAKE 0 AND DO
STEP 5 OF PART /I/V.

/Z+12[  (VALUE)
/Z+13[  (VALUE)

3314%↑UR
;L(
613371↑/  SLOK         (CPU ↑LIS↑U OK)
Z+5[  0  444B4        (↑LDESIGNATE SAVE AREA 1↑U)
;L+2!
0%$
1%*
;#
 D 40

;P                    (↑LINITIALIZE ↑UMONITOR)
613373:  BLLN D:5640  A= 1  B= 676710  X= 665572
;L+1!
1%$
;P                    (↑LWRITE SYSTEM ON SAVE AREA 1↑U)
613374:  BLLN D:5706  A= 40  B= 0  X= 2

.UN 3
↑L/GET A FRESH COPY OF ↑USYSDDT.
.UN 3
ZAP-GO ↑LWITH 104/B5 IN SWITCH REGISTER.↑U

8D25
3314%R
;L(
613371↑/  SLOK         (CPU ↑LIS↑U OK)
0%$
1%*
;#

.UN 3
↑L/MOUNT "↑CIDL" TAPE (ITEM #7) ON MAG TAPE UNIT.↑U

;P                    (↑LSTARTS READING ↑CIDL TAPE↑U)

.RM 3
.FILL
[↑L/TAPE READS IN FOR SEVERAL MINUTES.  /WHEN IT IS FINISHED, "@" IS
TYPED ON THE ↑CKDF TELETYPE.]
.SP
.UN 3
↑L/THE SYSTEM IS NOW IN A STATE WHERE THE FIRST SNAPSHOT SHOULD BE
TAKEN.
.SP 2
.UN 9
2.  /PERFORM THE ↑CSAVD PROCEDURE ON THE SYSTEM.
.SP
.UN 6
/DO A ↑CRESET ON ↑CKDF TELETYPE.
.UN 6
/ON ↑CSYSDDT TELETYPE HIT ↑CRUBOUT AND TYPE:
.SP
.UN 3
%/Z
.UN 3
0%*
.SP
.UN 6
/CHECK PROCESS TABLE TO MAKE SURE ALL PROCESSES ARE BLOCKED.
/THERE SHOULD BE ONLY TWO: THE ↑CLISTENER (↑CINITIAL-PROCESS) AT 3324 AND 
↑CM30-COM AT 3340 (.+14).
.SP
.UN 3
3524[  53704000
.UN 3
 . 14[  46204000
.UN 3
 . 14[  0
.UN 3
 . 14[  0
.SP
.UN 6
/SET UP THE CORRECT AREA PARAMETERS.
.SP
.UN 3
↑CSW%↑\  100/B5
.UN 3
.NOFILL
↑CSA%↑\  ↑CSY0                    (OR OTHER AREA)

.UN 6
/SAVE STATES OF ↑CCHIO, ↑CAMC, AND ↑CCPU.

.UN 3
/S1;/U

.UN 6
/PRESS ↑CMNODT.

.UN 3
↑/ 017/G                       (SAVE STATE OF ↑CMSCH)

.UN 6
/PRESS ↑CMNODT AGAIN.

.UN 3
↑/ 0540/G                      (REACTIVATE ↑CITP)

.FILL
.UN 6
/WRITE OUT CENTRAL MEMORY CONTENTS AND ALL OF DRUM ONTO SAVE AREA.
.SP
.UN 3
/S2;/U
.UN 3
8/D25
.SP
[/AT THIS POINT, THE SYSTEM CAN BE RESTARTED TOTALLY FROM DISK.
/THE REMAINDER OF THE COLD START REQUIRES ONLY FILES TO BE LOADED
ONTO THE DISK AND SOME SETUP OF ↑CMIB↑ES, ETC.]
.EJ
.EM 3
.UN 9
↑UIV.  LOAD SUBSYSTEMS AND INITIALIZE MIB'S.↑L
.SP
.UN 6
(/IF THE ↑CPFS AREA OF THE DISK IS INTACT, SKIP TO STEP 3 BELOW.)
.SP
.UN 6
1.  /RESTART SAVED VERSION OF SYSTEM.
.SP
.UN 3
/OBTAIN FRESH COPY OF ↑CSYSDDT.
.UN 3
/TYPE ON ↑CSYSDDT TELETYPE:
.SP
↑CSW%↑/  100/B5

↑CSA%↑/  ↑CSY0             (OR WHATEVER)

/R1;/U                  (RELOADS THE DRUM)
.SP
.RM 3
[/IT IS IMPORTANT TO READ THE LIGHTS REGISTER AT THE END OF THIS
STEP.  /NONE OF THE LIGHTS IN A FIELD OF SIX OR SO ENDING IN /BIT 11
SHOULD BE ON.  /THIS FIELD IS A COUNT OF HARD ERRORS DURING THE
RESTORE OPERATION.]
.EM 3
.SP
.UN 3
/PLACE 100/B5 (CONTENTS OF ↑CSW) INTO SWITCH REGISTER AND DO A
↑CZAP-GO.  /THIS RESTORES THE CONTENTS OF CENTRAL MEMORY.
.UN 3
/START ALL PROCESSORS AND RELEASE THE ↑CCPU TO RUN.
.SP
/R2;/U                  (STARTS PROCESSORS)

8/D25

/R3;/U                  (EXPANDS DRUM BANDS)

8/D25

0%$                   (STEP MODE ↑COFF)

1%*                   (SCHEDULER ↑CON)

;#                    (CLEAR ↑CSWR)
.SP
.UN 3
/HIT ↑CCR ON ↑CKDF TERMINAL.
.SP
;/P                    (RELEASE ↑CCPU)
.SP 2
.UN 6
2.  /LOAD DISK ↑CPFS SPACE WITH SUBSYSTEMS.
.SP
.UN 3
/CREATE A LARGE FILE USING ↑CFILE-MAINTENANCE.
.UN 3
/LOAD "/SUBSYSTEMS" ↑CKDF TAPE (ITEM #8) ON MAG TAPE UNIT.
.UN 3
/USING ↑CKDF, READ ↑CPF001 INTO LARGE FILE.
.UN 3
/USING ↑CDDUMP (MAINTENANCE ↑CPFS), INITIALIZE INDEX BLOCKS 1 THROUGH
137.  /LOAD ↑CPFS USER 1 FROM LARGE FILE.
.UN 3
/REPEAT THIS PROCEDURE, MOVING ↑CPF002 FROM MAG TAPE TO ↑CPFS USER 2
AND ↑CPF004 TO ↑CPFS USER 4.
.SP 2
.UN 6
3.  /RESTART SYSTEM FROM SAVE AREA.
.SP
.UN 3
/FOLLOW PROCEDURE OF STEP 1 ABOVE, BUT DO ↑CNOT DO ↑-/R3;/U↑E.  /LEAVE
THAT STEP OUT SO THAT THE DRUM BAND ALLOCATION REMAINS SMALL.
.SP 2
.UN 6
4.  /CREATE AND INITIALIZE ↑CMIB↑ES.
.SP
.UN 3
/FOLLOW THE FOLLOWING SCRIPT ON THE ↑CKDF TERMINAL:
.SP
.RM 12
↑U@REC DDUMP
.SP
START;G
.SP
&$ASSUME.

USER 1.

&$UNLOCK DIRECTORY FOR USER 1.

&$UNLOCK DIRECTORY FOR USER 2.

&$UNLOCK DIRECTORY FOR USER 14.

&READ DISK FILE PROFILE-MAINT.

TO "PROFILE-MAINT:TCMD".

14336 WORDS.

&FINISHED.

%F
.SP
@P-M

PROFILE-MAINT 9.16.77

>C-U =128  (NO. OF MIBS)

>E-P-P

>S-I FSL 7 2

>S-I CSL 7 2

>FIN

@#1:DELETE #1:PROFILE-MAINT

@#1:REC #1:DDUMP
.SP
START;G
.SP
$ASSUME.

USER 1.

&READ DISK FILE MAKE-LINKS;

2025 WORDS.

&READ DISK FILE COPY-SUBSYS;

367 WORDS.

$ASSUME.

USER 2.

&READ DISK FILE DDT:9SUB;

10240 WORDS.

&READ DISK FILE FILE-MAINT.

TO "FILE-MAINTENANCE:TCMD".

14336 WORDS.

&READ DISK FILE EMULATOR:PIF;

18432 WORDS.

$ASSUME.

USER 14.

&READ DISK FILE DDUMP;

12289 WORDS.

&FINISHED.

%F
.SP
@#1:RESET

@F-M

>COM-FROM MAKE-LINKS
.RM 3
(↑L/THERE'S A LOT OF ACTION HERE WHILE LINKS ARE BEING SET UP.↑U)
.EM 3
>FIN

@REC DDUMP
.SP
START;G
.SP
&$COMMANDS.

FROM FILE COPY-SUBSYS.
.RM 3
(↑L/AT THIS POINT, THE SUBSYSTEMS ARE BROUGHT IN AUTOMATICALLY
FROM DISK.↑U)
.EM 3
&FINISHED.
.SP
@D-F DDUMP

@D-F MAKE-LINKS

@D-F COPY-SUBSYS

.EM 9
.SP
.UN 3
↑L/THE FIRST FOUR ↑CMIB↑ES SHOULD NOW LOOK AS FOLLOWS:
.EM 9
.NOFILL
.SP 4
.CE
↑UMIB #1:
.SP 2
A-FRIEND:KEY <KEY> F(NO) O(NO)
ACCTNG-BACKUP:PCMD LEN= 33777B
ACTIVE-USERS:BIN LEN= 7777B
AMC-ITP:BIN LEN= 13777B F(NO) O(15)
AUTO-PFS:9SUB LEN= 13777B
AUTO-PFS:TCMD <LINKS TO> #2:EMULATOR:PIF
CONTINUE:TCMD <BSCMD> P(PX) F(NO) O(NO)
ENTER:PCMD LEN= 47777B
FINISHED:TCMD <BSCMD> P(PX) F(NO) O(NO)
G-FRIEND:KEY <KEY> F(NO) O(NO)
INITIAL-PROCESS:PROC <PROC> F(NO) O(15)
LINK-UTILITIES:PIF LEN= 47777B
LISTENER:BIN LEN= 33777B F(NO) O(15)
LOCKS-PFS:9BIN LEN= 7777B
M30COM:PROC <PROC>         [↑LRENAMED FROM↑U JUDY:PROC]
MONITOR:BIN LEN= 57777B F(NO) O(15)
OWNER:KEY <KEY> F(NO) O(10)
QUIT:TCMD <BSCMD> P(PX) F(NO) O(NO)
REAL-CORE:BIN LEN= 27777B F(NO) O(15)
RELEASE:TCMD <BSCMD> P(PX) F(NO) O(NO)
RESET:TCMD <BSCMD> P(PX) F(NO) O(NO)
SAVE-CURRENT:TCMD <BSCMD> P(PX) F(NO) O(NO)
USER-PROFILE:BIN LEN= 7777B
UTILITY:PIF LEN= 74000B
.SP 4
.CE
MIB #2:
.SP 2
$NOBOL:9SUB LEN= 43777B
?:9SUB <LINKS TO> #2:HELP:9SUB
?:TCMD <LINKS TO> #2:EMULATOR:PIF
ALLOW-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
BASIC:9SUB LEN= 37777B
BASIC:PCMD <LINKS TO> #2:EMULATOR:PIF
BREAK-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
CAL:9SUB LEN= 37777B
CAL:PCMD <LINKS TO> #2:EMULATOR:PIF
CONTINUE:TCMD <LINKS TO> #1:CONTINUE:TCMD
COPY:TCMD LEN= 43777B
DATE:TCMD LEN= 27777B
DDT:9SUB LEN= 33777B
DDT:PCMD <LINKS TO> #2:EMULATOR:PIF
DECTYPE:9SUB LEN= 7777B
DECTYPE:TCMD <LINKS TO> #2:EMULATOR:PIF
DELETE-FILES:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
DELETE-OBJECTS:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
DRUM-SPACE:TCMD LEN= 37777B
DUMP-940:TCMD <LINKS TO> #1:CONTINUE:TCMD
EMULATOR:PIF LEN= 57777B
EMULATOR-VERSION:PCMD <LINKS TO> #2:EMULATOR:PIF
EXAMINE-FILE:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
FILE-MAINTENANCE:TCMD LEN= 43777B
FLIBE:9BIN LEN= 13106B
FOS:9SUB LEN= 23777B
FOS:PCMD <LINKS TO> #2:EMULATOR:PIF
FRIEND:SPCL <FRL> F(10)
FTC:9SUB LEN= 27777B
FTC:PCMD <LINKS TO> #2:EMULATOR:PIF
HELP:9SUB LEN= 13777B
HELP:TCMD <LINKS TO> #2:EMULATOR:PIF
HELP-940:9SUB LEN= 33777B
HELP-940:TCMD <LINKS TO> #2:EMULATOR:PIF
HELP-TEXT:9SYM LEN= 32444B
KDF-BACKUP:TCMD LEN= 117777B
LINE:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
LINK-TO:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
LISP:9SUB LEN= 27777B
LISP:PCMD <LINKS TO> #2:EMULATOR:PIF
LIST-FILES:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
LIST-OBJECTS:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
LOGOUT:PCMD <LINKS TO> #1:ENTER:PCMD
NARP:9SUB LEN= 37777B
NARP:PCMD <LINKS TO> #2:EMULATOR:PIF
NRH-940:TCMD <LINKS TO> #1:CONTINUE:TCMD
OWNER:KEY <KEY> F(10)
OWNER:SPCL <OWL> F(10)
PAPER-TAPE-READ:TCMD LEN= 43777B
PATCH:9SYM LEN= 4026B
PFS:9SUB LEN= 13777B
PFS:TCMD <LINKS TO> #2:EMULATOR:PIF
PRINT:TCMD LEN= 53777B
QED:9SUB LEN= 17777B
QED:PCMD <LINKS TO> #2:EMULATOR:PIF
QRUN:9SUB LEN= 37777B
QRUN:PCMD <LINKS TO> #2:EMULATOR:PIF
QSPL:9SUB LEN= 43777B
QSPL:PCMD <LINKS TO> #2:EMULATOR:PIF
RECOVER-940:PCMD <LINKS TO> #2:EMULATOR:PIF
REFUSE-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
RELEASE:TCMD <LINKS TO> #1:RELEASE:TCMD
RENAME-FILE:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
RESET:TCMD <LINKS TO> #1:RESET:TCMD
RUNOFF:9SUB LEN= 47777B
RUNOFF:TCMD <LINKS TO> #2:EMULATOR:PIF
SAVE-CURRENT:TCMD <LINKS TO> #1:SAVE-CURRENT:TCMD
SCHEDULE:9SUB LEN= 7777B
SCHEDULE:TCMD <LINKS TO> #2:EMULATOR:PIF
SNOBOL:9SUB LEN= 27777B
SNOBOL:PCMD <LINKS TO> #2:EMULATOR:PIF
TLOGOUT:PCMD <LINKS TO> #1:ENTER:PCMD
TYPE:9SUB LEN= 7777B
TYPE:TCMD <LINKS TO> #2:EMULATOR:PIF
WHERE-IS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
WHO-IS-ON:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
.SP 4
.CE
MIB #3:
.SP 2
?:9SUB <LINKS TO> #2:HELP:9SUB
?:TCMD <LINKS TO> #2:EMULATOR:PIF
ALLOW-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
BASIC:9SUB <LINKS TO> #2:BASIC:9SUB
BASIC:PCMD <LINKS TO> #2:EMULATOR:PIF
BREAK-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
CAL:9SUB <LINKS TO> #2:CAL:9SUB
CAL:PCMD <LINKS TO> #2:EMULATOR:PIF
CONTINUE:TCMD <LINKS TO> #1:CONTINUE:TCMD
COPY:TCMD <LINKS TO> #2:COPY:TCMD
DATE:TCMD <LINKS TO> #2:DATE:TCMD
DDT:9SUB <LINKS TO> #2:DDT:9SUB
DDT:PCMD <LINKS TO> #2:EMULATOR:PIF
DECTYPE:9SUB <LINKS TO> #2:DECTYPE:9SUB
DECTYPE:TCMD <LINKS TO> #2:EMULATOR:PIF
DELETE-FILES:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
DRUM-SPACE:TCMD <LINKS TO> #2:DRUM-SPACE:TCMD
DUMP-940:TCMD <LINKS TO> #1:CONTINUE:TCMD
EXAMINE-FILE:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
FILE-MAINTENANCE:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
FOS:9SUB <LINKS TO> #2:FOS:9SUB
FOS:PCMD <LINKS TO> #2:EMULATOR:PIF
FRIEND:SPCL <FRL> F(10)
FTC:9SUB <LINKS TO> #2:FTC:9SUB
FTC:PCMD <LINKS TO> #2:EMULATOR:PIF
HELP:9SUB <LINKS TO> #2:HELP:9SUB
HELP:TCMD <LINKS TO> #2:EMULATOR:PIF
HELP-940:9SUB <LINKS TO> #2:HELP-940:9SUB
HELP-940:TCMD <LINKS TO> #2:EMULATOR:PIF
LINE:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
LINK-TO:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
LISP:9SUB <LINKS TO> #2:LISP:9SUB
LISP:PCMD <LINKS TO> #2:EMULATOR:PIF
LIST-FILES:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
LOGOUT:PCMD <LINKS TO> #1:ENTER:PCMD
NARP:9SUB <LINKS TO> #2:NARP:9SUB
NARP:PCMD <LINKS TO> #2:EMULATOR:PIF
OWNER:KEY <KEY> F(10)
OWNER:SPCL <OWL> F(10)
PFS:9SUB <LINKS TO> #2:PFS:9SUB
PFS:TCMD <LINKS TO> #2:EMULATOR:PIF
PRINT:TCMD <LINKS TO> #2:PRINT:TCMD
QED:9SUB <LINKS TO> #2:QED:9SUB
QED:PCMD <LINKS TO> #2:EMULATOR:PIF
QRUN:9SUB <LINKS TO> #2:QRUN:9SUB
QRUN:PCMD <LINKS TO> #2:EMULATOR:PIF
QSPL:9SUB <LINKS TO> #2:QSPL:9SUB
QSPL:PCMD <LINKS TO> #2:EMULATOR:PIF
RECOVER-940:PCMD <LINKS TO> #2:EMULATOR:PIF
REFUSE-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
RELEASE:TCMD <LINKS TO> #1:RELEASE:TCMD
RENAME-FILE:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
RESET:TCMD <LINKS TO> #1:RESET:TCMD
RUNOFF:9SUB <LINKS TO> #2:RUNOFF:9SUB
RUNOFF:TCMD <LINKS TO> #2:EMULATOR:PIF
SAVE-CURRENT:TCMD <LINKS TO> #1:SAVE-CURRENT:TCMD
SCHEDULE:9SUB <LINKS TO> #2:SCHEDULE:9SUB
SCHEDULE:TCMD <LINKS TO> #2:EMULATOR:PIF
SNOBOL:9SUB <LINKS TO> #2:SNOBOL:9SUB
SNOBOL:PCMD <LINKS TO> #2:EMULATOR:PIF
SPL:PCMD <LINKS TO> #2:SPL:PCMD
TLOGOUT:PCMD <LINKS TO> #1:ENTER:PCMD
TYPE:9SUB <LINKS TO> #2:TYPE:9SUB
TYPE:TCMD <LINKS TO> #2:EMULATOR:PIF
WHERE-IS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
WHO-IS-ON:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
.SP 4
.CE
MIB #4:
.SP 2
?:9SUB <LINKS TO> #2:HELP:9SUB
?:TCMD <LINKS TO> #2:EMULATOR:PIF
BASIC:9SUB <LINKS TO> #2:BASIC:9SUB
BASIC:PCMD <LINKS TO> #2:EMULATOR:PIF
BREAK-LINKS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
CAL:9SUB <LINKS TO> #2:CAL:9SUB
CAL:PCMD <LINKS TO> #2:EMULATOR:PIF
CONTINUE:TCMD <LINKS TO> #1:CONTINUE:TCMD
COPY:TCMD <LINKS TO> #2:COPY:TCMD
DATE:TCMD <LINKS TO> #2:DATE:TCMD
DECTYPE:9SUB <LINKS TO> #2:DECTYPE:9SUB
DECTYPE:TCMD <LINKS TO> #2:EMULATOR:PIF
DELETE-FILES:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
FOS:9SUB <LINKS TO> #2:FOS:9SUB
FOS:PCMD <LINKS TO> #2:EMULATOR:PIF
FRIEND:SPCL <FRL> F(10)
FTC:9SUB <LINKS TO> #2:FTC:9SUB
FTC:PCMD <LINKS TO> #2:EMULATOR:PIF
HELP:9SUB <LINKS TO> #2:HELP:9SUB
HELP:TCMD <LINKS TO> #2:EMULATOR:PIF
LINE:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
LINK-TO:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
LIST-FILES:TCMD <LINKS TO> #2:FILE-MAINTENANCE:TCMD
LOGOUT:PCMD <LINKS TO> #1:ENTER:PCMD
OWNER:KEY <KEY> F(10)
OWNER:SPCL <OWL> F(10)
PFS:9SUB <LINKS TO> #2:PFS:9SUB
PFS:TCMD <LINKS TO> #2:EMULATOR:PIF
QED:9SUB <LINKS TO> #2:QED:9SUB
QED:PCMD <LINKS TO> #2:EMULATOR:PIF
RESET:TCMD <LINKS TO> #1:RESET:TCMD
SCHEDULE:9SUB <LINKS TO> #2:SCHEDULE:9SUB
SCHEDULE:TCMD <LINKS TO> #2:EMULATOR:PIF
TYPE:9SUB <LINKS TO> #2:TYPE:9SUB
TYPE:TCMD <LINKS TO> #2:EMULATOR:PIF
WHERE-IS:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
WHO-IS-ON:TCMD <LINKS TO> #1:LINK-UTILITIES:PIF
.FILL
.SP 2
.RM 6
.UN 3
↑L/THE ABOVE ↑CMIB↑ES ARE COMPLETE EXCEPT FOR ↑CSPL.  /THIS WAS
NOT READ IN INTENTIONALLY SO AS NOT TO OVERFLOW THE SMALL AMOUNT
OF AVAILABLE DRUM SPACE.  /THERE SHOULD NOW BE BARELY ENOUGH
ROOM TO ACCOMMODATE ↑CSPL.  /THIS BEING THE CASE, READ IT IN
FROM ↑CPFS USER 2.
.UN 3
/DO A ↑CSAVD.
.SP 2
.UN 6
5.  /SET REAL-TIME CLOCK (IF REQUIRED).
.SP
.UN 3
/BRING UP SYSTEM AND USE ↑CP-M TO INSTALL A USER, IF ONLY TEMPORARILY.
.UN 3
/LOGIN ON TWO TERMINALS.
.UN 3
/ON ONE OF THE TERMINALS, USE ↑CDDUMP TO OBTAIN A COPY OF ↑CREAL-CORE
FROM ↑CPFS USER 4.  /ASSEMBLE THIS CODE AND LOAD IT WITH ↑CDDT.
.UN 3
/START THE PROGRAM (↑CSTART;/G).  /WHEN THE BELL RINGS, ONE CAN USE
↑CDDT TO LOOK AT AND CHANGE CENTRAL MEMORY.
.UN 3
/ON THE OTHER TERMINAL, DO A ↑CDATE COMMAND.  /ADJUST THE CONTENTS
OF LOCATIONS 12 AND 13 IN CENTRAL MEMORY ITERATIVELY SO AS TO GET
THE ↑CDATE COMMAND TO TYPE THE CORRECT DATE AND EXACT TIME.
.UN 3
/NOTE THE CONTENTS OF 12 AND 13 SO THAT THEY CAN BE INCLUDED IN THE
SAVED VERSION OF THE SYSTEM.
.SP 2
.UN 6
6.  /COMPLETE THE COLD START.
.SP
.UN 3
/RESTART THE SYSTEM FROM SAVE AREA AS IN STEP 3.
.UN 3
/USING ↑CSYSDDT, INSERT THE CORRECT VALUES FOR LOCATIONS 12 AND 13
INTO CENTRAL MEMORY.
.UN 3
/DO A ↑CSAVD.
.SP
.RM 3
[/AT THIS POINT THERE IS A VALID VERSION OF THE SYSTEM
SAVED ON DISK.  /THIS COMPLETES THE COLD-START PROCEDURE.  /THE
SYSTEM JUST ASSEMBLED WILL SERVE AS THE BASIS FOR FURTHER VERSIONS
INCORPORATING VARIOUS CHANGES.]
.EJ
.EJ