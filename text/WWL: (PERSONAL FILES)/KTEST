KTEST  IDENT


*  PROGRAM TO RUN OVER DISK FILE, PRINTING OUT VARIOUS ERRORS AS THEY
*     ARE ENCOUNTERED.  PROGRAM STARTS BY BRANCHING TO KTEST.


*  THE PROGRAM HAS TWO MODES OF OPERATION: SEQUENTIAL MODE AND 
*     RANDOM MODE.  IN THE LATTER MODE, SECTORS ARE CHOSEN ON THE
*     FILE AT RANDOM.  IN SEQUENTIAL MODE, SECTORS ARE CHOSEN IN
*     SEQUENTIAL ORDER, SECTOR, UNIT, BAND, AND TRACK BEING 
*     INCREMENTED IN THAT ORDER.
*     AN ENTIRE SURFACE IS PROCESSED AT ONE TIME.  TWO OPERATIONS
*     ARE DONE ON THE SURFACE BEFORE GOING ON: A WRITE AND A READ.
*     EACH IS CONTROLLED BY THE CONTENTS OF THE CELLS 'WRITE' & 'READ',
*     A ZERO IN THE CELL IMPLYING THAT NO OPERATION IS TO BE DONE.
*     THE TSU INSTRUCTION FOR EACH OPERATION IS CONTAINED IN CELLS
*     'WINST' & 'RINST'.  MOVEMENT OF THE HEADS OVER THE VARIOUS
*     RECORDS IS CONTROLLED BY THE CELLS:
*                              UNIT
*                              TRACK
*                              BAND
*                              SECT
*                              MAXS
*                              MINS
*                              MAXB
*                              MINB
*                              MAXT
*                              MINT
*                              MAXU
*                              MINU
*
*     SEQUENTIAL MODE INCREMENTING IS CONTROLLED BY THE PARAMETERS
*     SINC, BINC, & TINC.


*  RANDOM & SEQUENTIAL MODES ARE CONTROLLED BY THE CELL 'TMODE'.
*     WHEN THIS CELL CONTAINS ZERO, SEQUENTIAL MODE IS USED.


*  WHEN STARTED, THE PROGRAM NORMALLY INITIALIZES ITSELF TO MINT, MINB,
*     MINS, & MINU, ALTHOUGH IF SINC, BINC, OR TINC IS ZERO, THE COR-
*     RESPONDING PARAMETER IS NOT INITIALIZED.



*  AS OPERATIONS ON EACH NEW TRACK ARE BEGUN, THE TRACK ADDRESS IS
*     TYPED.  ERRORS ARE PRINTED IN THE FORM:
*
*  # TRIES    INST    UNIT    TRACK    BAND    SECT    STATUS
*
*     OR, FOR EXCEPTIONAL ERRORS:
*
*   STATUS    INST    UNIT    TRACK    BAND    SECT



*  AT THE CONCLUSION OF EACH RUN THE CONTENTS OF DTLCT & RLVCT SHOULD
*     BE EXAMINED & SAVED, ALONG WITH ANY PRINTOUT OF THE PROGRAM.


*  BAD SPOTS OR OTHER LOCATIONS TO BE SKIPPED CAN BE MAPPED OUT OF THE
*     PROGRAM BY SETTING A BIT IN A TABLE.  TABLE0 IS FOR UNIT 0 & 
*     TABLE1 IS FOR UNIT 1.  THE TABLE FORMAT IS AS FOLLOWS:
*
*TRACK,SECT                   BANDS IN OCTAL
*
*             27 26 25 24         .  .  .              2  1  0
*       0
*       1
*   0   2
*       3
*       4
*       0
*       1
*   1   2
*       3
*       4
*   .   .
*   .   .
*   .   .
*
*


*  SECTORS CAN BE MAPPED OUT CONVENIENTLY BY HAND BY TRANSFERRING
*     CONTROL TO 'DELETE' & TYPING UNIT, TRACK, BAND, & SECTOR.  EACH
*     VALUE IS TYPED IN OCTAL AND TERMINATED WITH A SPACE.


*  WHEN ERRORS ARE ENCOUNTERED DURING OPERATION, THE SECTORS INVOLVED
*     ARE AUTOMATICALLY MAPPED OUT.  THUS, A CUMULATIVE RECORD OF BAD
*     SPOTS ON THE FILE CAN BE MADE USING DUMPS AND RECOVERIES OF THE
*     PROGRAM.



*  AT THE CONCLUSION OF EACH RUN, A SYMBOLIC DUMP OF BAD SPOTS SHOULD
*     BE MADE TO KEEP THE RECORDS UP TO DATE.  TO DO THIS, EXECUTE A
*     'BRM LIST'.  THE SYMBOLIC DUMP WILL REQUEST A FILE NAME.
*  MACROS USED FOR OUTPUT, ETC.
SPACE  MACRO D; CLA; RPT D(1); CIO FNO; ENDR; ENDM
TNO    MACRO D; LDA D(1); LDB =8; LDX FNO; BRS 36; SPACE 2; ENDM
TSTRG  MACRO D; LDA D(1); LDB =-1; LDX FNO; BRS 34; ENDM
CRLF   MACRO D; TCO =155B; TCO =152B; ENDM
OTCRLF MACRO D; LDA =155B; CIO FNO; LDA =152B; CIO FNO; ENDM
SET    MACRO D; LDA D(1); SKG =0; BRU *+4; LDA FLAG; MRG =D(2)
       STA FLAG; ENDM
READIN MACRO D
I      EQU 1
J      NARG
       RPT J
       LDB =8; CLX; BRS 38; STA D(I)
I      EQU I+1
       ENDR
       FRGT I,J
       ENDM


*  MAIN LOOP BEGINS HERE
KTEST  BRM INIT
KTST0  BRM SKIP; BRU *+2; BRM DOIT; BRM INC; BRU KTST0

*  ROUTINE TO GENERATE RANDOM DATA PATTERN IN WRITE BUFFER
FWB    ZRO; LDX =-2048; BRM GETRND; STA WBUF+2048,2; BRX *-2; BRR FWB

GETRND ZRO; LDA RANDOM; MUL CONS; LSH 19; ADD INCRT; STA RANDOM
       BRR GETRND
       STA WBUF+2048,2; BRX *-4; STA RANDOM; BRR FWB

*  ROUTINE TO INITIALIZE PARAMETERS UNIT, TRACK, BAND, & SECT
*  TRACK, BAND, & SECT ARE NOT INITIALIZED IF THEIR INCREMENT IS ZERO
INIT   ZRO; LDA MINU; STA UNIT; LDB MINT; LDA TINC; SKE =0
       STB TRACK; LDB MINB; LDA BINC; SKE =0; STB BAND
       LDB MINS; LDA SINC; SKE =0; STB SECT; CLA; STA RW; STA CHNZCT
       STA CLNECT; STA HWNECT; STA ERRCT; STA DPECT; LDA WINST; STA INST
       LDA =1; STA FNO; TNO TRACK; CRLF; LDA =-1; STA SKMASK; BRR INIT

*  ROUTINES TO INCREMENT OVER FILE
INC    ZRO; LDA SECT; ADD SINC; SKE =5; BRU INC1; LDA RW; ADD =1
       SKG =1; BRU INC0; LDA TMODE; SKE =0; BRU INC2; BRM INCU; CLA
INC0   STA RW; LDA MINS
INC1   SKG MAXS; BRU *+2; SUB =5; STA SECT; BRR INC
INC2   BRM GETRND; ETR =1; STA UNIT; BRM GETRND; ETR =377B
       SKG MINT; LDA MINT; STA TRACK; BRM GETRND; ETR =37B
       SKG =23; BRU *+2; BRU *-4; STA BAND; CLA; BRU INC0

INCU   ZRO; LDA UNIT; ADD =1; SKG MAXU; BRU INCU0; BRM INCB; LDA MINU
INCU0   STA UNIT; BRR INCU

INCB   ZRO; LDA BAND; ADD BINC; SKG MAXB; BRU INCB0; BRM INCT
       LDA MINB
INCB0  STA BAND; BRR INCB

INCT   ZRO; LDA TRACK; ADD TINC; SKG MAXT; BRU INCT0; BRM FWB
       LDA MINT
INCT0  STA TRACK; LDA TMODE; SKE =0; BRR INCT; TNO TRACK; CRLF
       BRR INCT

*  TESTS TABLE0 OR TABLE1 FOR BAD SECTORS
SKIP   ZRO; LDA TRACK; MUL =5; LSH 23; ADD SECT; CAX; LDB UNIT
       LDA TABLE0,2; SKB =1; LDA TABLE1,2; ETR SKMASK; LDX BAND; EAX 1,2
       RSH 0,2; SKB =4B7; BRU *+2; MIN SKIP; BRR SKIP

*  ROUTINE TO READ IN BAD SECTOR ADDRESS & DELETE FROM TABLES
DELETE READIN UNIT,TRACK,BAND,SECT; BRM REMOVE; CRLF; BRU DELETE


*  ROUTINE TO INSERT BIT IN SKIP TABLES
REMOVE ZRO; LDA TRACK; MUL =5; LSH 23; ADD SECT; CAX; LDB UNIT
       LDA TABLE0,2; SKB =1; LDA TABLE1,2; STX T1; LDX BAND; EAX 1,2
       RSH 0,2; LSH 1; MRG =1; EAX -1,2; LSH 0,2; LDX T1
       LDB UNIT; SKB =1; BRU RMOV1; STA TABLE0,2; BRR REMOVE
RMOV1  STA TABLE1,2; BRR REMOVE

*  ROUTINE TO TYPE OUT ALL BAD SECTORS
LIST   ZRO; TSTRG =MSG7; CLEAR; LDA =3B6; BRS 16; 0; STA FNO; CRLF
       TSTRG =MSG5; CLA; STA UNIT; LDA SKMSK0; STA SKMASK
       BRM LIST1; OTCRLF; TSTRG =MSG6; LDA =1; STA UNIT; LDA SKMSK1
       STA SKMASK; BRM LIST1; LDA =137B; CIO FNO; LDA FNO; BRS 20
       BRR LIST
LIST1  ZRO; LDA MINT; STA TRACK
LIST1A LDA MINB; STA BAND
LIST1B LDA MINS; STA SECT
LIST1C BRM SKIP; BRM OUT6; MIN SECT
       LDA SECT; SKG MAXS; BRU LIST1C; MIN BAND
       LDA BAND; SKG MAXB; BRU LIST1B; MIN TRACK
       LDA TRACK; SKG MAXT; BRU LIST1A; BRR LIST1

*  MAIN ROUTINE FOR DOING A READ OR WRITE OPERATION
DOIT   ZRO; LDA RW; SKE =0; BRU DOIT1; LDA WRITE; SKG =0; BRR DOIT
       LDA =WBUF; LDB WINST
DOIT0  STA CMA; STB INST; BRM DO; BRM TEST; BRM TUN; BRM WAIT; BRR DOIT
DOIT1  LDA READ; SKG =0; BRR DOIT; LDA =RBUF; LDB RINST; BRU DOIT0

*  FORMS A NODE AND EXECUTES A BRS 137
DO     ZRO; LDA UN0; STA NODE; LDA UN1; STA NODE+1; LDA TSU
       SKG =1; BRU DO1; CLB; LDA TSU; LSH 8; MRG TRACK; LSH 6
       MRG BAND; LSH 4; MRG SECT; LSH 2; MRG UNIT; STA NODE+2
       LDA =5; STA T0
DO0    CLA; STA NODE+3; CLB; LDA WDCT; LSH 18; MRG =200B; MRG T0
       STA NODE+4; CLB; LDA INST; LSH 18; MRG =777777B; STA NODE+5
       LDA =NODE; LDB =18; LDX CMA; BRS 137; BRR DO
DO1    CLB; LDA TSU; LSH 12; MRG BAND; LSH 5; MRG SECT; LSH 2
       MRG UNIT; STA NODE+2; LDA =4; STA T0; BRU DO0

*  TESTS STATUS WORD AFTER TRANSFER
TEST   ZRO; CLA; STA ERRCT; STA HWNECT; STA DPECT; STA CLNECT
       STA CHNZCT
TST0   LDA STATUS; SKA =255B; BRU TOTHER
TST1   SKA =2; BRU TRLV
TST2   SKA =20B; BRU TDTL
TST3   SKA =100B; MIN CHNZCT; SKA =400B; MIN CLNECT; SKA =1000B
       MIN DPECT; SKA =2000B; MIN HWNECT; SKA =3500B; BRU TST5
       LDA ERRCT; SKG MINCT; BRR TEST; BRM OUT1; BRR TEST
TST5   MIN ERRCT; LDA ERRCT; SKG MAXCT; BRU RETRY; BRM OUT2; BRR TEST
TDTL   SKA =1100B; BRU TST3; MIN DTLCT; BRU RETRY
TRLV   MIN RLVCT; BRU RETRY
TOTHER BRM OUT3
RETRY  BRM DO; BRU TST0

*  ROUTINE TO CHECK VALIDITY OF UNIQUE NAME
TUN    ZRO; LDA UN0; LDB NODE+10B; CLX; SKE NODE+10B; BRM TUN1
       LDA UN1; LDB NODE+7B; LDX =1; SKE NODE+7B; BRM TUN1; BRR TUN

TUN1   ZRO; STA T2; STB T3; LDA TUNMSG,2; LDB =-1; LDX =1; BRS 34
       TNO T2; TNO T3; TSTRG =MSG2; TNO INST; CRLF; BRR TUN1

*  ROUTINES TO OUTPUT ERROR INFORMATION

OUT1   ZRO; SPACE 3; TNO ERRCT; BRM OUT4; BRM OUT5; CRLF; LDA CHNZCT
       SKE =0; BRM REMOVE; BRR OUT1
OUT2   ZRO; TSTRG =MSG1; SPACE 2; BRM OUT4; BRM OUT5; BRM REMOVE; CRLF
       BRR OUT2
OUT3   ZRO; TNO STATUS; BRM OUT4; CRLF; BRR OUT3
OUT4   ZRO; TNO INST; TNO UNIT; TNO TRACK; TNO BAND; TNO SECT; BRR OUT4
OUT5   ZRO; CLA; STA FLAG; SET HWNECT,2000B; SET DPECT,1000B
       SET CLNECT,400B; SET CHNZCT,100B; TNO FLAG; BRR OUT5
OUT6   ZRO; TNO TRACK; TNO BAND; TNO SECT; OTCRLF; BRR OUT6
WAIT   ZRO; LDA TIME; BRS 81; BRR WAIT

*  CONSTANTS & DATA STORAGE
TMODE  DATA    0               SET TO NON-ZERO FOR RANDOM MODE
WRITE  DATA    0               SET TO READ ONLY INITIALLY
READ   DATA    1
TSU    DATA    2
UNIT   ZRO
TRACK  ZRO
BAND   ZRO
SECT   ZRO
MAXS   DATA    4
MINS   DATA    0
MAXB   DATA    27B
MINB   DATA    0
MAXT   DATA    377B
MINT   DATA    0
MAXU   DATA    1
MINU   DATA    0
SINC   DATA    1
BINC   DATA    1
TINC   DATA    1
WINST  DATA    10B
RINST  DATA    0B
MAXCT  DATA    8
MINCT  DATA    1
DTLCT  DATA    0
RLVCT  DATA    0
RANDOM DATA    0
CONS   DATA    53120637B
INCRT  DATA    24511725B
TIME   DATA    250             TIME IN MILLISECONDS FOR WAKEUP
INST   ZRO
CMA    ZRO
WDCT   DATA    11              2â†‘11 = 2048 WORDS IN ONE PAGE
UN0    DATA    0
UN1    DATA    0
SKMSK0 DATA    77777470B
SKMSK1 DATA    77777777B
MSG1   ASC     'HARD/'
MSG2   ASC     'INST  /'
MSG3   ASC     'UN0 ERR  /'
MSG4   ASC     'UN1 ERR  /'
MSG5   ASC     'UNIT 0:$/'
MSG6   ASC     'UNIT 1:$/'
MSG7   ASC     'DUMP TO: /'
TUNMSG DATA    MSG3
       DATA    MSG4

*  TEMPORARY AND WORKING STORAGE
SKMASK ZRO
ERRCT  ZRO
FLAG   ZRO
FNO    ZRO     1
CHNZCT ZRO
CLNECT ZRO
DPECT  ZRO
HWNECT ZRO
RW     ZRO
T0     ZRO
T1     ZRO
T2     ZRO
T3     ZRO
T4     ZRO
NODE   BSS     17
STATUS ZRO

TABLE0 RPT     256*5
       DATA    00000307B       TAKE OUT BANDS 0-2,6,7
       ENDR

TABLE1 RPT     256*5
       DATA    00000000B       TAKE OUT NO BANDS FOR NOW
       ENDR

WBUF   EQU     30000B

RBUF   EQU     34000B


       END
