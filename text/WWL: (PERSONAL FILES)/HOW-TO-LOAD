.GL  SUC-CESS-FUL-LY SOFT-WARE ALLO-CA-TION
.PM OFF
.GL  SLIGHT-LY RETRY-ING PROG-RESS AUTO-MATIC-AL-LY
.CE
↑ULOADING THE SYSTEM↑L
.SP 3
       /THE FOLLOWING ASSUMES THAT THE HARDWARE IS FUNCTIONING
CORRECTLY.  /A DIFFERENT SECTION DESCRIBES WHAT TO DO IN CASE OF
VARIOUS TYPES OF MALFUNCTIONS.
.SP
.RM 6
.UN 4
1.  ↑ULOAD A FRESH COPY OF SYSDDT AND THE CTP RESIDENT↑L.
.SP
/PLACE    IN THE SWITCHES.  (/SEE ↑CTTY FOR VALUE.)

/PRESS ↑CZAP.

/PRESS ↑CGO.

↑CSYSDDT SHOULD RESPOND WITH "8/D25".
.SP
.UN 4
2.  ↑UCOPY AN INITIAL DRUM LOAD FROM DISK↑L.
.SP
/TO ↑CSYSDDT, TYPE THE FOLLOWING:
.SP
.NOFILL
/S/A%↑/ ----    /C/R/L/F  (NAME OF SYSTEM VERSION IS
.FILL
.IN 21
SHOWN ON ↑CTTY)
.SP
/THEN TYPE:
.SP
/R1;/U
.SP
/AT THIS POINT, A PORTION OF ↑CSYSDDT CODE CAUSES THE SPECIFIED
COPY OF THE SYSTEM TO BE COPIED FROM
THE DISK TO THE DRUM.  /YOU SHOULD SEE LOTS OF ACTIVITY ON THE
MONITOR SCOPE, INDICATING TRANSFERS IN PROGRESS.  /AT THE END OF
THIS ACTIVITY, THE CODE PAUSES FOR ABOUT 3 SECONDS, INDICATING IN
THE LIGHTS WHETHER THERE WERE  TRANSFER ERRORS.
.SP
/IGNORE THE HIGH ORDER 6 BITS; THEY ARE ALWAYS SET.  /IGNORE THE
LOW ORDER 4 OR 5 BITS; AN INDICATION HERE MEANS THAT DISK ERRORS
WERE OVERCOME BY RETRYING SUCCESSFULLY.  /AN INDICATION ELSEWHERE
(SLIGHTLY BELOW THE MIDDLE) MEANS THAT THERE WAS AN UNSUCCESSFUL
READ.  /TRY ANOTHER /R1;/U, AND IF YOU CANNOT GET A GOOD COPY,
CALL FOR HELP.
.SP
.UN 4
3.  ↑UCOPY THE INITIAL CORE LOAD FROM DRUM↑L.
.SP
/SET 100/B5 INTO THE SWITCHES.

/PRESS ↑CZAP.

/PRESS ↑CGO.
.SP
/THIS ACTION CAUSES THE LOWER HALF OF CORE TO BE LOADED FROM THE
DRUM.  /ALL THE RUNNING TABLES AND THE INITIAL STATE OF EACH 
PROCESSOR, TOGETHER WITH INITIAL SOFTWARE ARE INCLUDED IN THIS AREA.
.EJECT
.UN 4
4.  ↑USTART ALL PROCESSORS EXCEPT ↑CCPU↑L.
.SP
/TYPE TO ↑CSYSDDT:
.SP
/R2;/U     (/THIS STARTS UP ALL THE MICROPROCESSORS.)
.SP
.RM 10
.UN 10
/R3;/U     (/THIS EXPANDS THE INITIAL DRUM BAND ALLOCATION TO
INCLUDE ALL AVAILABLE BANDS.)
.EM 10
.SP
;#       (/CLEARS SYSTEM WARNING REGISTERS.)
.SP
0%$      (/TURNS OFF STEP MODE ON THE ↑CCPU.)
.SP
1%*      (/TURNS ON THE SCHEDULER PORTION OF THE

.IN 10
MICROSCHEDULER.)
.SP
.UN 4
5.  ↑USTART UP CPU↑L.
.SP
/TYPE A SINGLE CARRIAGE RETURN ON THE ↑CKDF ↑CTTY.
/THE ↑CTTY SHOULD RETURN IF IT WAS NOT POSITIONED AT THE LEFT, BUT NO
LINE FEED WILL ACCOMPANY THE ACTION.
.SP
/BACK ON ↑CSYSDDT, TYPE:
.SP
;/P
.SP
/THE MISSING LINE FEED AND AN "@" WILL BE TYPED ON THE ↑UKDF TTY↑L
AND THE SYSTEM WILL BE UP.  /NO ONE WILL BE ABLE TO LOG IN AT THIS
POINT, HOWEVER, BECAUSE THE SYSTEM WILL NOT YET HAVE BEEN GIVEN ITS
USER PROFILE (DESCRIPTION OF ALL KNOWN USERS).
.SP
.UN 4
6.  ↑UREAD IN NECESSARY SYSTEM FILES↑L.
.SP
/RETURN TO THE ↑UKDF TTY↑L AND ENTER ↑CPFS.
/WHEN YOU GET THE "&" HERALD, TYPE:
.SP
$/C.      (COMES OUT LOOKING LIKE "$↑CCOMMANDS.")
.SP
↑CPFS PROMPTS BY SAYING "↑UFROM FILE↑L", WHEREUPON YOU TYPE:
.SP
↑CPATCH.
.SP
/THE ENTIRE TRANSACTION LOOKS ON THE PRINTOUT LIKE...
.RM 4
.SP
@↑CPFS
.SP
&$↑UCOMMANDS.

FROM FILE PATCH↑L.
.EM 4
.SP
/AT THIS POINT, SEVERAL FILES ARE BROUGHT IN AUTOMATICALLY BY ↑CPFS.
/THE ACTION TERMINATED BY ↑CPFS SIGNALLING WITH SOME BELLS.
/MAKE SURE THERE ARE NO DISK ERRORS DURING THESE TRANSFERS.
/IF THERE ARE ERRORS, REPEAT THIS STEP.
/IF SOME FILE CANNOT BE READ IN DURING THIS STEP, CALL FOR HELP.
.SP
.UN 4
7.  ↑UENTER KDF↑L.
.SP
/DO A "/C/L/E" COMMAND AND A "/R/E/W" COMMAND.
/THE LATTER MAY RESPOND WITH "↑CTAPE ERROR↑L" IF NO TAPE IS MOUNTED
ON THE UNIT.
.SP
/THIS MAKES NO DIFFERENCE.
/THE SYSTEM IS NOW READY FOR USE.