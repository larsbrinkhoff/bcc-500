       DECLARE INTEGER GRADE, REM;
       DECLARE STRING IFNAME(30), OFNAME(30);
       DECLARE INTEGER IFNO, OFNO, TEMP;
       DECLARE INTEGER NOSTUDENTS, NOSCORES, PERFECT;
       DECLARE ARRAY WEIGHT[50];
       DECLARE STRING STORAGE(0);
       DECLARE ARRAY SS[10000];
       DECLARE INTEGER CHAR;
       DECLARE FIELD BP(0), RP(1), WP(2), EP(3);
       DECLARE ARRAY NAMES[4*200], NAMES1[4*200];
       DECLARE INTEGER AVG, I, J;
       DECLARE ARRAY SCORES[200], SCORE1[200];

START: INITIALIZE();

S1:    SOUT("&M&JINPUT FILE: ");
       SETS(IFNAME,0,0);
       INNAME(IFNAME:S1);
       IFNO←INFILE(IFNAME:S1);

       NOSTUDENTS←IIN(IFNO)-1; PUNT() IF CIN(IFNO)#'&J';
       NOSCORES←IIN(IFNO)-1; PUNT() IF CIN(IFNO)#'&J';
       WEIGHT[I]←IIN(IFNO) FOR I←0 TO NOSCORES; PUNT() IF CIN(IFNO)#'&J';
       PERFECT←IIN(IFNO); PUNT() IF CIN(IFNO)#'&J';

       SETUP(STORAGE,250,SS);

       FOR I←0 TO NOSTUDENTS DO;
          WCI(CHAR,STORAGE) WHILE (CHAR←CIN(IFNO))#':';
          WCI(':',STORAGE);
          WCI(CHAR,STORAGE) WHILE (CHAR←CIN(IFNO))#':';
          STORAGE.EP←STORAGE.WP;
          BCOPY(@NAMES[4*I],STORAGE,4);
          STORAGE.BP←STORAGE.RP←STORAGE.WP;
          STORAGE.EP←STORAGE.EP+250;
          AVG←0;
          AVG←AVG+WEIGHT[J]*IIN(IFNO) FOR J←0 TO NOSCORES;
          PUNT() IF CIN(IFNO)#'&J';
          SCORES[I]←AVG*10000/PERFECT;
       ENDFOR;

       BCOPY(@NAMES1[0],@NAMES[0],4*200);
       BCOPY(@SCORE1[0],@SCORES[0],200);

       FOR J←0 TO NOSTUDENTS DO;
          FOR I←0 TO NOSTUDENTS-1 DO;
             IF SCORES[I]<SCORES[I+1] DO;
                TEMP←SCORES[I];
                SCORES[I]←SCORES[I+1];
                SCORES[I+1]←TEMP;
                BCOPY(STORAGE,@NAMES[4*I],4);
                BCOPY(@NAMES[4*I],@NAMES[4*I+4],4);
                BCOPY(@NAMES[4*I+4],STORAGE,4);
             ENDIF;
          ENDFOR;
       ENDFOR;

S2:    SOUT("&M&JOUTPUT FILE: ");
       SETS(OFNAME,0,0);
       OUTNAM(OFNAME:S2);
       OFNO←OUTFILE(OFNAME,3B6:S1);

       FOR I←0 TO NOSTUDENTS DO;
          J←0;
          WHILE (CHAR←GCI(@NAMES1[4*I]))#':' DO;
             COUT(CHAR,OFNO);
             J←J+1;
          ENDFOR;
          COUT(' ',OFNO) FOR J←J TO 30;
          COUT(CHAR,OFNO) WHILE (CHAR←GCI(@NAMES1[4*I]:S3))#' ';
S3:       COUT(' ',OFNO) FOR J←1 TO 6;
          GRADE←SCORE1[I]/10;
          REM←SCORE1[I] MOD 10;
          GRADE←GRADE+1 IF REM>=5;
          REM←GRADE MOD 10;
          GRADE←GRADE/10;
          IOUT(GRADE,OFNO); COUT('.',OFNO); IOUT(REM,OFNO);
          SOUT("&M&J",OFNO);
       ENDFOR;

       SOUT("&L&M&J",OFNO);

       FOR I←0 TO NOSTUDENTS DO;
          J←0;
          BCOPY(STORAGE,@NAMES[4*I],4);
          WHILE (CHAR←GCI(STORAGE))#':' DO;
             COUT(CHAR,OFNO);
             J←J+1;
          ENDFOR;
          COUT(' ',OFNO) FOR J←J TO 30;
          COUT(CHAR,OFNO) WHILE (CHAR←GCI(STORAGE:S4))#' ';
S4:       COUT(' ',OFNO) FOR J←1 TO 6;
          GRADE←SCORES[I]/10;
          REM←SCORES[I] MOD 10;
          GRADE←GRADE+1 IF REM>=5;
          REM←GRADE MOD 10;
          GRADE←GRADE/10;
          IOUT(GRADE,OFNO); COUT('.',OFNO); IOUT(REM,OFNO);
          SOUT("&M&J",OFNO);
       ENDFOR;

       SOUT("&L&M&J",OFNO);

       FOR I←0 TO NOSTUDENTS DO;
          J←J WHILE (CHAR←GCI(@NAMES[4*I]))#'-';
          J←J WHILE (CHAR←GCI(@NAMES[4*I]))#'-';
          COUT(CHAR,OFNO) WHILE (CHAR←GCI(@NAMES[4*I]:S5))#' ';
S5:       COUT(' ',OFNO) FOR J←1 TO 3;
          SOUT("&M&J",OFNO);
       ENDFOR;

       COUT(137B,OFNO);
       CLOSALL();
       SOUT("&M&JDONE."); EXIT();
       FUNCTION PUNT();
       SOUT("&M&JBAD!"); EXIT();

       END;