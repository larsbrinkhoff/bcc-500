}'COMMON SXFN';
}'INCLUDE COMM,STST,SCDEC,SCOPS,SGST;

**************
*}"SPL CODE}"*
* GENERATORS *
**************



}'COMMON TX'PARAM;
}'INCLUDE SCOPS,SGDEC,SGTAB;
***
*** PARAMETER TABLE FOR CODE GENERATORS
***
}'DFF NCF(0:0,0);* NOT COMMUTATIVE FLAG
}'DFF INF(0:17,23);* INSTRUCTION (ASSUMED RIGHT-JUSTIFIED)

}'DECLARE ARRAY TOPPAT[OPQCOUNT+1]_(
}(0,0,0,0,0,}"0,0,0,0,0,
}(1,4,7,10,1@NCF+ZIMOD,}"0,0,0,0,0,
}(0,0,0,ZAND,ZIOR,}"ZEOR,0,1@NCF+ZLSHA,0,1@NCF+ZCYA,
}(0,0,0,0,RTXFER,}"RFXFER,0,0,0,0);

* TABLE OF INSTRUCTIONS FOR ARITHMETIC OPERATORS
}'DECLARE ARRAYONE TAOTAB[12]_(
}(ZADD,ZFAD,ZCFAD,ZSUB,ZFSB,ZCFSB,
}(ZIMUL,ZFMP,ZCFMP,ZIDIV,ZFDV,ZCFDV);

}'PROGRAM TXX;
}'INCLUDE SXFN';

***
*** TXXERR(A)
***
* ROUTINE FOR ILLEGAL AND UNIMPLEMENTED OPERATORS

FUNCTION TXXERR(POINTER XX00);
ENTRY TXSC(XX00);
ENTRY TXPOW(XX00);
* ILLEGAL OPERATOR
}'CERR(87);


***
*** TXLIST(A)
***
* SPECIAL ERROR FOR UNEXPECTED EXPRESSION LIST

FUNCTION TXLIST(XX00);
* EXPRESSION LIST IN ILLEGAL CONTEXT
}'CERR(97);


***
*** TXNIL(A)
***
* CODE GENERATOR FOR EMPTY SUBTREE

FUNCTION TXNIL(XX00);
}'RETURN RNOVAL;


}'PROGRAM TXBO;
}'INCLUDE SXFN',TX'PARAM;
***
*** TXBO(A)
***
* CODE GENERATOR FOR SIMPLE BINARY OPERATORS

}'DI W01;
}'DP P01;

FUNCTION TXBO(POINTER A01);
}'W01_TOPPAT[A01.TOPR];
}'P01_TSWOP(P01) IF TSPP(A01.TO1,A01.TO2:,P01) AND W01$NCF;
}'TSI(W01$INF,P01);
}'RETURN RVALA;

}'PROGRAM TXARITH;
}'INCLUDE SXFN',TX'PARAM,SGEN';
***
*** TXPLUS(A)
***}"CODE GENERATOR FOR +
*** TXMINUS(A)
***}"CODE GENERATOR FOR -
*** TXTIMES(A)
***}"CODE GENERATOR FOR *
*** TXQUOT(A)
***}"CODE GENERATOR FOR /
***

}'DP R30;

FUNCTION TXPLUS(POINTER A30);
TXCAE: TSPP(A30.TO1,A30.TO2:,R30);
TXAE:}"TSI(TAOTAB[TOPPAT[A30.TOPR]+TTDTAB[A30.TTYPE]],R30);
}'RETURN RVALA;

FUNCTION TXMINUS(A30);
}'GOTO TXAE IF TSPP(A30.TO1,A30.TO2:,R30)=0;
}'TFNEG(R30);
}'TFAO(R30,TADOTB);
}'RETURN RVALA;

FUNCTION TXTIMES(A30);
}'GOTO TXCAE;

FUNCTION TXQUOT(A30);
}'R30_TSWOP(R30) IF TSPP(A30.TO1,A30.TO2:,R30);
}'GOTO TXAE;

}'PROGRAM TXUNARY;
}'INCLUDE SXFN';

***
*** TXNEG(A)
***
* CODE GENERATOR FOR NEGATION

FUNCTION TXNEG(POINTER AU);
}'IF AU.TTYPE=TTINT AND TNCA(AU.TO1)#0 DO;
},TSCAN(AU.TO1,RADDR);
},TSI(ZLNX,RESULT);
},RETURN RVALX;
}'ELSE DO;
},TSCAN(AU.TO1,RVALA);
},TFNEG(AU);
},RETURN RVALA;
}'ENDIF;

***
*** TXLOGNOT(A)
***
* CODE GENERATOR FOR LOGICAL NOT

FUNCTION TXLOGNOT(POINTER AU);
}'TSCAN(AU.TO1,RVALA);
}'TSW(ZEOR@INSOP+IQ(-1));
}'RETURN RVALA;

***
*** TXNOT(A)
***
* CODE GENERATOR FOR PREDICATE NOT

FUNCTION TXNOT(POINTER AU);
}'TSCAN(AU.TO1,RFXFER IF RMODE=RTXFER ELSE RTXFER);
}'RETURN RTXFER+RFXFER-RMODE;

***
*** TXPRED(A)
***
* CODE GENERATOR FOR PREDICATE 'AND' AND 'OR'


}'PROGRAM TXPRED;
}'INCLUDE SXFN',TX'PARAM;
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER B54,L54,INTEGER M54;

}'DM NM54_RTXFER+RFXFER-M54;

FUNCTION TXPRED(POINTER A54);
}'M54_TOPPAT[A54.TOPR];* RTXFER FOR 'OR', RFXFER FOR 'AND'
}'B54_RESULT;
}'IF RMODE#NM54 DO;
}/IF RMODE#M54 DO;
}7B54_RESULT_TSBRA();
}/ENDIF;
}/TSCAN(A54.TO1,M54);
}/RESULT_B54;
}/TSCAN(A54.TO2,M54);
}'ELSE DO;
}/RESULT_L54_TSBRA();
}/TSCAN(A54.TO1,M54);
}/RESULT_B54;
}/TSCAN(A54.TO2,M54_NM54);
}/TSBDEF(L54);
}'ENDIF;
}'RESULT_B54;
}'RETURN M54;

***
*** TXREL(A)
*** TXLREL(A)
***
* CODE GENERATOR FOR RELATIONS
* COMPARISONS AGAINST 0 ARE SUPPRESSED, BUT
* NO OTHER OPTIMIZATION IS DONE



}'PROGRAM TXREL;
}'INCLUDE SXFN',SGTAB;
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER B58,INTEGER C58,M58;

}'DP R58,P58,Q58;
}'DI T58;
}'DECLARE ARRAY TRITAB[7]_(0,4,2,6,1,5,3);

FUNCTION TXLREL(POINTER A58);
FUNCTION TXREL(POINTER A58);
}'C58_R58.TOIV WHERE R58_A58.TO3;
}'C58_7-C58 IF RMODE=RFXFER;
}'P58_A58.TO1;
}'Q58_A58.TO2;
}'IF RMODE#RTXFER AND RMODE#RFXFER DO;
}/RMODE_RTXFER;
}/B58_TSBRA();
}'ELSE DO;
}/B58_RESULT;
}'ENDIF;
}'M58_RMODE;
}'IF P58.TOPR=OPCON DO;
}/P58_Q58;
}/Q58_A58.TO1;
}/C58_TRITAB[C58];
}'ENDIF;
}'IF A58.TOPR=OPREL DO;
}/C58_TRITAB[C58] IF TSPP(P58,Q58:,R58);
}/TFCP(R58);
}'ELSE DO;
}/P58_TSCAN(P58,RVALS);
}/TSCAN(Q58,RADDR);
}/TSA(ZBLL,LCPFD);
}/TSW(U(APMCON,APMODE)+U(APINT,APTYPE)+P58.TADDR);
}/TSW(U(APMCON,APMODE)+U(APINT,APTYPE)+RESULT.TADDR);
}/TSW(U(APMCON,APMODE)+U(APINT,APTYPE)+
}*U(1,APLAST)+IQ(TTLTAB[RESULT.TTYPE]));
}'ENDIF;
}'TSBI(TRCTAB[C58],B58);
}'RESULT_B58;
}'RETURN M58;

***
*** TXSET(A) ###
***
* CODE GENERATOR FOR ASSIGNMENT
* OPTIMIZES A_A+X, A_A-C



}'PROGRAM TXSET;
}'INCLUDE SXFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER P63,Q63, INTEGER V63;


FUNCTION TXSET(POINTER A63);
}'P63_A63.TO2;
}'IF P63.TOPR=OPPLUS AND P63.TTYPE=TTINT AND P63.TO1=A63.TO1 DO;
},Q63_TSCAN(P63.TO2,RVALS);
},TSCAN(A63.TO1,RADDR);
},TFINC(RESULT.TADDR,Q63.TADDR);
},RETURN RMODE VV RVALA;
}'ENDIF;
}'IF V63_TSMA(A63.TO1) DO;
},TSCAN(P63,RVALA+RVALX);
},IF (RMODE AA RVALX)=0 DO;
}1RESULT_A63.TO1;
},ELSE DO;
}1TSI(ZSTX,RESULT_A63.TO1);
}1RETURN V63+RVALX;
},ENDIF;
}'ELSEIF TNCA(A63.TO1) DO;
},TSCAN(P63,RVALA);
},TSCAN(A63.TO1,RADDR);
}'ELSEIF TSMA(P63) DO;
}/P63_TSCAN(A63.TO1,RADDR);
}/TSCAN(A63.TO2,RVALA);
}/RESULT_P63;
}'ELSE DO;
}/P63_TSCAN(P63,RVALS);
}/TSCAN(A63.TO1,RADDR);
}/TSLCR(P63);
}/V63_RADDR;
}'ENDIF;
}'TSSCR(RESULT);
}'RETURN RVALA+V63;

}'PROGRAM TXREF;
}'INCLUDE SXFN';
***
*** TXREF(A) ###
***
* CODE GENERATOR FOR REFERENCE


}'DP P64;

FUNCTION TXREF(POINTER A64);
}'IF P64.TTYPE=TTLAB AND P64.TOPR=OPVAR AND
}#P64.TDEF#0 WHERE P64_A64.TO1 DO;
},TSBI(ZEAX,P64);
}'ELSE DO;
},TSCAN(P64,RADDRX);
}'ENDIF;
}'RETURN RVALX;


***
*** TXINDIR(A) ###
***
* CODE GENERATOR FOR INDIRECTION

FUNCTION TXINDIR(POINTER A64);
}'TSCAN(A64.TO1,RVALS);
}'A64.TADDR_RESULT.TADDR;
}'RESULT_A64;
}'RETURN RADDRS;

***
*** TXUNTAIL(A)
***
* CODE GENERATOR FOR UNTAILING



}'PROGRAM TXUNTAIL;
}'INCLUDE SXFN';

}'DI W67,LS67,RS67;
}'DP P67;

FUNCTION TXUNTAIL(POINTER A67);
}'TSCAN(A67.TO2,RVALS);
}'TSCAN(A67.TO1,RVALA);
}'P67_A67.TO2;
}'IF P67.TOPR=OPCON DO;
},W67_P67.TO1;
},LS67_24-W67$FIWBL;
},RS67_W67$FIWBA;
},IF LS67=RS67 AND (W67_(-1) RSH RS67)<=FRMASK(INSIMV)/2 DO;
}1TSW(U(ZAND,INSOP)+IQ(W67)) IF W67#-1;
},ELSE DO;
}1TSW(U(ZLSHA,INSOP)+IQ(LS67)) IF LS67;
}1TSW(U(ZLSHA,INSOP)+IQ(-RS67)) IF RS67;
},ENDIF;
},RETURN RVALA;
}'ELSE DO;
},TSIND(P67,A67//TXUTE);
},TSW(U(ZLDB,INSOP)+U(ATREL,INSTAG)+U(ASTIM,INSST));
},TSI(ZSTB,RESULT_TSTEMP(TTINT));
},TSI(ZEAX,RESULT);
},TSI(ZSTA,A67);
},RETURN RVALS;
}'ENDIF;
* INDIRECTION FAILED
TXUTE: CERR(59);

***
*** TXBX(A)
***
* CODE GENERATOR FOR ARRAY SUBSCRIPTING AND PART-WORD TAILING



}'PROGRAM TXBX;
}'INCLUDE SXFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER P75;

}'DI V75;

FUNCTION TXBX(POINTER A75);
}'IF V75_TSMA(A75) DO;
},RESULT_A75;
},RETURN V75;
}'ENDIF;
}'P75_TSCAN(A75.TO1,RVALS);
}'TSCAN(A75.TO2,RVALX);
}'TSIND(P75,A75//TSUE);
}'RESULT_A75;
}'RETURN RADDR;
* INDIRECTION FAILED
TSUE:}"CERR(59);


***
*** TXPD(A)
***
* CODE GENERATOR FOR NON-ARRAY SUBSCRIPTING AND FULL-WORD TAILING

FUNCTION TXPD(POINTER A75);
}'IF V75_TSMA(A75) DO;
},RESULT_A75;
},RETURN V75;
}'ENDIF;
}'TSPPZ(A75.TO1,A75.TO2,RVALX:,A75);
}'TSI(ZADX,A75);
}'RETURN RADDRX;

***
*** TXIF(A)
***
* CODE GENERATOR FOR IF



}'PROGRAM TXIF;
}'INCLUDE SXFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER TX81,FX81,R81,INTEGER M81;


FUNCTION TXIF(POINTER A81);
}'M81_RMODE;
}'IF R81.TOPR=OPBLOCK WHERE R81_A81.TO2 DO;
}/RESULT_FX81_TSBRA();
}/IF R81.TOPR=OPCON WHERE R81_A81.TO1 DO;
}7TFIF(FX81,R81.TOIV#0);
}/ELSE DO;
}7TSCAN(R81,RFXFER);
}7TFIF(FX81,-1);
}/ENDIF;
}'ELSEIF TFGOTO(A81.TO2:,TX81) DO;
}/RESULT_TX81;
}/TSCAN(A81.TO1,RTXFER);
}/TSCAN(A81.TO3,M81);
}'ELSEIF TFGOTO(A81.TO3:,TX81) DO;
}/RESULT_TX81;
}/TSCAN(A81.TO1,RFXFER);
}/TSCAN(A81.TO2,M81);
}'ELSE DO;
}/M81_(M81 VV RVALA) AA NN (RVALS+RADDR)
}*IF M81 AA (RVALS+RADDR);
}/M81_(M81 VV RADDRA) AA NN RADDRS
}*IF M81 AA RADDRS;
}/R81_RESULT;
}/TX81_0;
}/FX81_RESULT_TSBRA();
}/TSCAN(A81.TO1,RFXFER);
}/RESULT_R81;
}/TSCAN(A81.TO2,M81);
}/RESULT_R81;
}/M81_M81 A' N' (RVALA+RVALX) V' RMODE A' (RVALA+RVALX);
}/R81_A81.TO3;
}/TSBI(ZBRU,TX81_TSBRA()) IF FLOWTHRU#0
}*AND (R81.TOPR#OPNIL OR M81#RNOVAL);
}/TSBDEF(FX81);
}/IF R81.TOPR#OPNIL DO;
}7TSCAN(R81,M81);
}7RMODE_M81;
}/ELSEIF M81 AA (RVALA+RVALX) DO;
}7TSA(ZLDA IF M81 AA RVALA ELSE ZLDX,IQ(0));
}7RMODE_(RVALA IF M81 A' RVALA ELSE RVALX);
}/ELSEIF M81#RNOVAL DO;
}7TSA(ZBLLN,RTEFD);
}/ENDIF;
}/TSBDEF(TX81) IF TX81;
}'ENDIF;
}'RETURN RMODE;

***
*** TXGOTO(A)
***
* CODE GENERATOR FOR GOTO



}'PROGRAM TXGOTO;
}'INCLUDE SXFN';

}'DP P83;

FUNCTION TXGOTO(POINTER A83);
}'P83_A83.TO1;
}'IF P83.TDEF DO;
}/TSBI(ZBRU,P83);
}'ELSE DO;
}/TSCAN(P83,RADDR);
}/TSI(ZBLLN,RESULT);
}'ENDIF;
}'FLOWTHRU_0;
}'DBFLAG_1;
}'RETURN RNOVAL;

***
*** TXSEQ(A)
***
* CODE GENERATOR FOR &


}'PROGRAM TXSEQ;
}'INCLUDE SXFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE INTEGER M86,POINTER R86;

 FUNCTION TXSEQ(POINTER A86);
}'M86_RMODE;
}'R86_RESULT;
}'TSCAN(A86.TO1,RNOVAL);
}'RESULT_R86;
}'RESULT_TSCAN(A86.TO2,M86);
}'RETURN RMODE;

***
*** TXLABEL(A)
***
* PROCESSOR FOR LABELS



}'PROGRAM TXLABEL;
}'INCLUDE SXFN';

}'DP TP92,SP92,L92;

FUNCTION TXLABEL(POINTER A92);
}'SSPTR(A92.TO1:TP92,SP92);
* LABEL IS ALREADY DECLARED ?
}'CERR(92) IF TP92.TKTYPE#TTUND AND (TP92.TKTYPE#TTLAB
}#OR TP92.TKIMPL=0);
}'TSBDW(SP92.SYVAL) IF TP92.TKIMPL;
}'SP92.SYVAL_RQ(RELLOC);
}'TP92.TKTYPE_TTLAB;
}'TP92.TKIMPL_0;
}'TP92.TKPARAM_1;
}'RETURN RNOVAL;

***
*** TFFOR(V,LL,ELL,B)
***
* GENERATE NEW ENTRY ON FOR STACK
* VARIABLE IS V, LABELS ARE LL AND ELL, BASLR IS B
* GIVE AN ERROR IF THE TREE AREA IS FULL



}'PROGRAM TFFOR;
}'INCLUDE SXFN';


FUNCTION TFFOR(V04,POINTER LL04,ELL04,INTEGER B04);
* BLOCK STACK FULL ?
}'CERR(84) IF FORSTK-FORLE<TREETOP;
}'FORSTK_FORSTK-FORLE;
}'FORSTK.BSTKOP_OPENDFOR;
}'FORSTK.BSTKID_SSID;
}'FORSTK.FORVAR_V04;
}'FORSTK.FORLL_LL04.BADWORD;
}'FORSTK.FORELL_ELL04.BADWORD;
}'FORSTK.FORBASE_BASLR;
}'BASLR_B04;
}'ILEV_ILEV+1;
}'RETURN;

***
*** TFCLF(V,L)*
***
* COMPUTE RELATION REQUIRED TO CLOSE LOOP
* WITH INCREMENT V, '-1' FLAG L.
* RELATION TRUE = GO THROUGH LOOP AGAIN



}'PROGRAM TFCLF;
}'INCLUDE SXFN';


FUNCTION TFCLF(INC04,LF04);
}'RETURN ((ORLE IF INC04>=0 ELSE ORGE)-
}#(OREQ IF LF04 ELSE 0));

***
*** TEMACH(A)
***
* CODE GENERATOR FOR MACHINE LANGUAGE



}'PROGRAM TEMACH;
}'INCLUDE SXFN';

}'DI OP69,AD69,TN69,FTN69;
}'DP TP69,SP69,P69;

FUNCTION TEMACH(POINTER A69);
}'FTN69_ICGTN;
}'P69_A69.TO1;
}'IF P69.TOPR=OPCON DO;
* ILLEGAL MACHINE OPCODE ?
},CERR(94) IF P69.TTYPE#TTINT;
},OP69_P69.TOIV;
},AD69_-1;
}'ELSEIF P69.TOPR#OPVAR OR (TN69_SSFGS(P69.TVTOKEN,
}#MOBTN,0))=0 DO;
* ILLEGAL MACHINE OPCODE
},CERR(94);
}'ELSE DO;
},SSPTR(TN69:TP69,SP69);
},OP69_SP69.SYVAL;
},AD69_SP69.SYDIM;
},SSELECT(FTN69);
}'ENDIF;
}'A69_A69.TO2;
}'IF A69.TOPR=OPNIL DO;
* REQUIRES ADDRESS ?
},CERR(100) IF AD69=1;
},TSW(OP69);
}'ELSEIF AD69=0 DO;
* MUST NOT HAVE ADDRESS
},CERR(102);
}'ELSEIF OP69 A' N' 177B DO;
* ILLEGAL MACHINE OPCODE
},CERR(94);
}'ELSEIF TFLAB(A69) WHERE OP69_OP69+(OP69 A' 100B) DO;
},TSBI(OP69,A69);
}'ELSEIF TSMA(A69)=0 AND A69.TOPR#OPVAR DO;
* ADDRESS IS NOT SIMPLE
},CERR(101);
}'ELSEIF A69.TOPR#OPCON DO;
},TSW(OP69@INSOP V' (1@INSPOP IF OP69>=200B ELSE 0)
}*V' A69.TADDR);
}'ELSE DO;
},TSI(OP69,A69);
}'ENDIF;
}'RETURN RNOVAL;

***
*** TEWHILE(A)
***
* CODE GENERATOR FOR WHILE



}'PROGRAM TEWHILE;
}'INCLUDE SXFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER LL77,ELL77;

}'DP P77;

FUNCTION TEWHILE(POINTER A77);
}'P77_A77.TO1;
}'LL77_TSBRA();
}'ELL77_TSBRA();
}'IF P77.TOPR=OPBLOCK DO;
}/TSBDEF(LL77);
}/RESULT_ELL77;
}/TSCAN(A77.TO2,RFXFER);
}/TFFOR(0,LL77,ELL77,BASLR);
}'ELSE DO;
}/TSBI(ZBRU,ELL77);
}/TSBDEF(LL77);
}/TSCAN(P77,RNOVAL);
}/TSBDEF(ELL77);
}/RESULT_LL77;
}/TSCAN(A77.TO2,RTXFER);
}'ENDIF;
}'RETURN RNOVAL;

***
*** TEFOR(A)
***
* CODE GENERATOR FOR FOR-TO AND FOR-WHILE



}'PROGRAM TEFOR;
}'INCLUDE SXFN',SGTAB;
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER X78,INC78,LIM78,LL78,ELL78, INTEGER LF78;

}'DP P78,Q78;
}'DI V78;

FUNCTION TEFOR(POINTER A78);
}'P78_A78.TO2;
}'X78_P78.TO1;
* FOR VARIABLE IS NOT SIMPLE ?
}'CERR(85) IF X78.TOPR#OPVAR OR X78.TVTOKEN=0;
}'LL78_TSBRA();
}'ELL78_TSBRA();
}'IF A78.TOPR=OPFORW DO;
* FOR X_I[,TO3] WHILE TO4 DO TO1
},IF Q78.TOPR=OPNIL WHERE Q78_A78.TO3 DO;
}1TSBDEF(LL78);
}1TSCAN(P78,RNOVAL);
},ELSE DO;
}1TSCAN(P78.TO2,RVALA);
}1TSBI(ZBRU,ELL78);
}1TSBDEF(LL78);
}1TSCAN(A78.TO3,RVALA);
}1TSBDEF(ELL78);
}1TSSCR(X78);
},ENDIF;
},RESULT_ELL78_TSBRA();
},TSCAN(A78.TO4,RFXFER);
},P78_A78.TO1;
},GOTO TFORI;
}'ELSE DO;
* FOR X_I [BY TO3] TO TO4 DO TO1
},INC78_TSCAN(A78.TO3,RVALS);
},P78_A78.TO4;
},IF P78.TOPR=OPPLUS}"AND P78.TTYPE=TTINT AND INC78.TOPR=
}*OPCON AND (Q78.TOPR=OPCON AND Q78.TOIV=(-1 IF INC78.TOIV>=0
}*ELSE 1) WHERE Q78_P78.TO2) DO;
}1LIM78_TSCAN(P78.TO1,RVALS);
}1LF78_1;
},ELSE DO;
}1LIM78_TSCAN(P78,RVALS);
}1LF78_0;
},ENDIF;
},P78_A78.TO2;
},TSCAN(P78.TO2,RVALA);
},TSSCR(X78);
},P78_A78.TO1;
},IF X78.TTYPE=TTINT AND INC78.TOPR=OPCON DO;
* INTEGERS, CONSTANT INCREMENT
}1V78_INC78.TOIV;
}1TSBI(ZBRU,ELL78);
}1TSBDEF(LL78);
}1TFFOR(X78.TADDR,LL78,ELL78,CURLR);
}1FORSTK.FORINC_INC78.TADDR;
}1FORSTK.FORLIM_LIM78.TADDR;
}1FORSTK.FORLF_LF78;
}1FORSTK.FORSIGN_(V78<0);
},ELSE DO;
* NOT THE ABOVE
}1TSBI(ZBRU,ELL78);
}1TSBDEF(LL78);
}1IF X78.TTYPE=TTINT DO;
}6TFINC(X78.TADDR,INC78.TADDR);
}1ELSE DO;
}6TSLCR(X78);
}6TFAO(INC78,TADOTB);
}6TSSCR(X78);
}1ENDIF;
}1TSBDEF(ELL78);
}1RESULT_ELL78_TSBRA();
}1IF LIM78.TOPR=OPNIL DO;
}1ELSEIF INC78.TOPR=OPCON DO;
* SIGN OF INCREMENT KNOWN
}6TFCP(LIM78);
}6TSBI(TRCTAB[7-TFCLF(INC78.TO1,LF78)],ELL78);
}1ELSE DO;
* SIGN NOT KNOWN
}6X78_TSBRA();
}6TFAO(LIM78,TSBOTB);
}6TSBI(ZBEQ,X78);
}6TSI(ZEOR,INC78);
}6TSBI(ZBGE,ELL78);
}6TSBDEF(X78);
}1ENDIF;
TFORI:}+TFFOR(0,LL78,ELL78,BASLR);
},ENDIF;
}'ENDIF;
}'IF P78.TOPR#OPBLOCK DO;
}*TSCAN(P78,RNOVAL);
}*TEEFOR(A78);
}'ENDIF;
}'RETURN RNOVAL;

***
*** TEEFOR(A)
***
* CODE GENERATOR FOR ENDFOR



}'PROGRAM TEEFOR;
}'INCLUDE SXFN',SGTAB;

}'DP P80,S80;

FUNCTION TEEFOR(POINTER A80);
* ENDFOR WITHOUT FOR OR WHILE ?
}'CERR(82) IF (S80_FORSTK)=TREELIM;
* MISNESTING OF IF AND FOR ?
}'CERR(83) IF S80.BSTKOP#OPENDFOR;
}'P80_TSBRA();
}'P80.BADWORD_S80.FORLL;
}'IF S80.FORVAR=0 DO;
},TSBI(ZBRU,P80);
},TSBDW(S80.FORELL);
}'ELSE DO;
},TFINC(S80.FORVAR,S80.FORINC);
},TSBDW(S80.FORELL);
},TSA(ZICP,S80.FORLIM) IF S80.FORLIM#IQ(0);
},TSBI(TRCTAB[TFCLF(-S80.FORSIGN,S80.FORLF)],P80);
}'ENDIF;
}'BASLR_S80.FORBASE;
}'FORSTK_FORSTK+FORLE;
}'SILEV_ILEV_ILEV-1;
}'RETURN RNOVAL;

***
*** TEELSEIF(A)
***
* CODE GENERATOR FOR ELSEIF (AND ELSE)



}'PROGRAM TEELSEIF;
}'INCLUDE SXFN';

}'DP P89,Q89;
}'DI V89;

FUNCTION TEELSEIF(POINTER A89);
* ELSE OR ELSEIF WITHOUT IF ?
}'CERR(81) IF IFSTK=TREELIM;
}'SILEV_ILEV-1;
* MISNESTING OF IF AND FOR ?
}'CERR(83) IF IFSTK.BSTKOP#OPENDIF;
}'IFSTK.BSTKID_SSID;
}'GOTO TEIP IF IFSTK.IFCONST>=0;
}'Q89_A89.TO1;
}'IF Q89.TOPR=OPCON DO;
},IFSTK.IFCONST_V89_(Q89.TOIV#0);
},GOTO TEIP IF V89=0;
}'ELSE DO;
},IFSTK.IFCONST_V89_-1;
}'ENDIF;
}'POISON_0;
}'IF IFSTK.IFNEXT#U(1,BACHN) AND FLOWTHRU#0 DO;
},P89_TSBRA();
},P89.BADWORD_IFSTK.IFCLS;
},TSBI(ZBRU,P89);
},IFSTK.IFCLS_P89.BADWORD;
}'ENDIF;
}'TSBDW(IFSTK.IFNEXT);
}'IF V89#1 DO;
},RESULT_P89_TSBRA();
},TSCAN(Q89,RFXFER);
},IFSTK.IFNEXT_P89.BADWORD;
}'ELSE DO;
},IFSTK.IFNEXT_U(1,BACHN);
}'ENDIF;
}'RETURN RNOVAL;
TEIP:}"TSBDW(IFSTK.IFNEXT);
}'IFSTK.IFNEXT_U(1,BACHN);
}'POISON_1;
}'RETURN RNOVAL;

***
*** TEEIF(A)
***
* CODE GENERATOR FOR ENDIF



}'PROGRAM TEEIF;
}'INCLUDE SXFN';

}'DP P90,Q90;

FUNCTION TEEIF(POINTER A90);
* ENDIF WITHOUT IF ?
}'CERR(80) IF IFSTK=TREELIM;
* MISNESTING OF IF AND FOR ?
}'CERR(83) IF IFSTK.BSTKOP#OPENDIF;
}'TSBDW(IFSTK.IFNEXT);
}'TSBDW(IFSTK.IFCLS);
}'IFSTK_IFSTK+IFLE;
}'SILEV_ILEV_ILEV-1;
}'RETURN RNOVAL;

}'COMMON SGFN';
}'INCLUDE COMM,STDEC,STST,SCDEC,SCOPS,SGST,SGTAB;

***********************
* SPL CODE GENERATORS *
* FOR FUNCTION CALLS}"*
***********************



* FIELD DECLARATIONS FOR TABLES ASSOCIATED WITH SPECIAL FUNCTIONS

* FIELDS FOR ARGUMENT DESCRIPTION POINTER TABLE
}'DF AWPTR(0:12,23);* INDEX OF FIRST ARG DESC BYTE
}'DF AWCNT(0:9,11);* ARG COUNT
}'DF AWSTC(0:6,8);* MAXIMUM NUMBER OF STORES
}'DF AWFSTC(0:3,5);* MAXIMUM NUMBER OF FAILURE STORES
}'DF AWFRET(0:2,2);* 1 IF FAILURE RETURN
}'DF AWBLL(0:1,1);* 1 IF CALLED WITH BLL, 0 IF OPEN CODE

* FIELDS FOR ARGUMENT DESCRIPTION TABLE
}'DF AVLOC(0:21,23);* ARGUMENT LOCATION
}'DF AVTYPE(0:15,20);* ARGUMENT TYPE
}'DF AVDI(0:9,14);* INDEX TO DEFAULT VALUE

* SPECIAL FUNCTION DEFAULT VALUE TABLE
}'DECLARE ARRAY ADTAB[7]_(
}#0,IQ(10),IQ(-1),IQ(0),IQ(8),IQ(23),IQ(1));

* SPECIAL FUNCTION ARGUMENT DESCRIPTION TABLE
* RELEVANT FIELDS: AVLOC, AVTYPE, AVDI
}'DECLARE ARRAY AVTAB[58]_(
}#31B,21B,50B,60B,60B,1020B,20B,60B,
}#3020B,1020B,30B,60B,3020B,40B,60B,3020B,
}#21B,60B,60B,20B,20B,4020B,60B,3020B,
}#3020B,60B,3020B,20B,20B,20B,3020B,20B,
}#120B,60B,60B,20B,20B,2020B,21B,20B,
}#20B,3020B,4020B,3020B,20B,3020B,5020B,3020B,
}#20B,3020B,6020B,3020B,20B,20B,3020B,20B,
}#20B,20B);

* SPECIAL FUNCTION DESCRIPTION TABLE
* RELEVANT FIELDS: AWPTR, AWCNT, AWSTC, AWFSTC, AWFRET, AWBLL
}'DECLARE ARRAY AWTAB[46]_(
}#00010000B,00010000B,00010001B,00010001B,
}#00010002B,00010002B,30020004B,30010003B,
}#30010003B,30040006B,30030012B,30030015B,
}#10010003B,10020020B,10010003B,10020020B,
}#10040022B,00030026B,00020031B,00020031B,
}#00010003B,00010003B,30020033B,20020035B,
}#30020037B,20020035B,30020035B,20020035B,
}#30020041B,00030043B,30020041B,00020046B,
}#00020046B,00030043B,30010006B,20040050B,
}#20040054B,20040060B,20030064B,20000000B,
}#20030067B,20020035B,20020035B,20010006B,
}#00010003B,00010003B);


* PARAMETERS AND STORES FOR INTRINSIC FUNCTIONS
}'DECLARE ARRAY APA74[FRMASK(AWCNT)],APP74[FRMASK(AWCNT)],
}#SA74[FRMASK(AWSTC)],FSA74[FRMASK(AWFSTC)];

***
*** TFCARG(A,I)*
***
* COMPILE ACTUAL PARAMETERS ON CHAIN A, PUTTING AP WORDS INTO TADDR
* IF I=1, ALLOW 1 ARGUMENT TO GO IN THE CENTRAL REGISTERS
* IF I=0, FORCE ALL ARGUMENTS TO BE IN STORAGE
* IF I=-1, SAME AS I=0 AND NO SPECIAL HANDLING FOR ARRAY ELEMENTS
* OTHERWISE, I POINTS TO AVTAB



}'PROGRAM TFCARG;
}'INCLUDE SGFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER P01,X01,R01;

}'DECLARE SWITCH ACTAB[2]_(TACS,TACA);
}'DI M01,T01;
}'DP Q01;

FUNCTION TFCARG(POINTER A01,INTEGER I01);
}'P01_A01;
}'A01_R01_0;
}'WHILE P01.TOPR#OPNIL DO;
}/X01_P01.TO1;
}/IF R01#0 AND TSMA(X01)#RVALS DO;
}7A01_R01.TO1;
}7TSSCR(A01_TSTEMP(A01.TTYPE));
}7R01.TADDR_R01.TADDR-APREGS+A01.TADDR;
}7R01_0;
}/ENDIF;
}/IF X01.TTYPE=TTUND DO;
* UNKNOWN ARGUMENT FOR FUNCTION OR RETURN
}7NODE_X01;
}7CERR(45);
}/ENDIF;
}/IF I01>1 DO;
}7I01_I01+1;
}7GOTO LABEL'FIXER(ACTAB[I01[-1]$AVLOC]);
}/ENDIF;
}/IF X01.TOPR=OPBX AND (Q01.TTYPE=TTARRAY WHERE Q01_
}*X01.TO1) AND I01>=0 DO;
}7TSCAN(X01,RADDRS);
}7TSIND(RESULT,RESULT//TFCAE);
}7M01_U(APMELT,APMODE)+RESULT.TADDR;
}/ELSE DO;
}7T01_X01.TTYPE;
}7IF I01=1 AND TSMA(X01)#RVALS AND TSPTAB[T01]=0 DO;
TACA:}:TSCAN(X01,RVALA);
}?M01_APREGS;
}?R01_P01;
}7ELSE DO;
TACS:}:TSCAN(X01,RVALS);
}?M01_RESULT.TADDR;
}7ENDIF;
}7M01_(U(APMARR,APMODE) IF X01.TTYPE=TTARRAY
}2ELSE U(APMVAR,APMODE) IF X01.TOPR=OPVAR
}2ELSE U(APMCON,APMODE))+M01;
}/ENDIF;
}/P01.TADDR_M01;
}/P01_P01.TO2;
}'ENDFOR;
}'TSLCR(A01) IF I01>1 AND A01#0;
}'RETURN;
* INDIRECTION FAILED
TFCAE: CERR(59);

***
*** TFARGS(B,A,F,R,N)*
***
* GENERATE BLL OR BLLN INSTRUCTION AND ACTUAL PARAMETER WORDS
* BLL IS TO B.TADDR: A IS ARGUMENT CHAIN WITH AP WORDS IN TADDR
* F=0 MEANS THERE IS ACTUALLY ANOTHER ARGUMENT (FAILURE GOTO)
* B=0 MEANS BLL HAS ALREADY BEEN GENERATED
* WHEN PARAMETERS ARE EXHAUSTED, CONTINUE UNTIL
* N WORDS HAVE BEEN STORED, USING VALUES FROM
* AVTAB STARTING WITH THE ENTRY POINTED TO BY R



}'PROGRAM TFARGS;
}'INCLUDE SGFN';

}'DP TP02,SP02,X02;
}'DI M02,W02;

FUNCTION TFARGS(POINTER B02,A02,INTEGER F02,REFERENCE R02,INTEGER N02);
}'F02_U(F02,APLAST);
}'IF B02 DO;
},W02_B02.TADDR;
},M02_((W02$INSTAG=ATREL) A' (W02$INSST=ASTIM));
},IF A02.TOPR#OPNIL OR F02=0 DO;
}4IF M02 DO;
}<TSA(ZOPR,W02);
}4ELSE DO;
}<TSI(ZBLL,B02);
}4ENDIF;
},ELSE DO;
}4IF M02 DO;
}<TSA(ZOPR,W02-400B IF (W02+2000B)$INSIMV
}7ELSE W02+1400B);
}4ELSE DO;
}<TSI(ZBLLN,B02);
}4ENDIF;
},ENDIF;
}'ENDIF;
}'WHILE A02.TOPR#OPNIL DO;
}/N02_N02-1;
}/R02_R02+1;
}/X02_A02.TO1;
}/IF (M02_X02.TTYPE)=TTARRAY AND X02.TOPR=OPVAR DO;
}7SSPTR(X02.TVTOKEN:TP02,SP02);
}7M02_TP02.TKTYPE IF SP02.SYMODE=SMARRAY;
}/ENDIF;
}/W02_A02.TADDR+(M02_U(TAPTAB[M02],APTYPE));
}/A02_A02.TO2;
}/TSA(0,W02+(F02 IF A02.TOPR=OPNIL AND N02<=0 ELSE 0));
}/IF W02$APMODE=APMELT DO;
}7X02_X02.TO1;* X01.TOPR=OPSUB
}7TSA(0,X02.TADDR+U(APMARR,APMODE));
}/ENDIF;
}'ENDFOR;
}'FOR N02_N02-1 BY -1 TO 0 DO;
}/TSW(ADTAB[R02.AVDI]+U(TAPTAB[R02.AVTYPE],APTYPE)+
}*U(APMCON,APMODE)+(F02 IF N02=0 ELSE 0));
}/R02_R02+1;
}'ENDFOR;
}'RETURN;

***
*** TFFCN(A,B)*
***
* PREPARE THE NODE A FOR BEING USED AS A FUNCTION
* (DIRECT ADDRESSING IF DEFINED FUNCTION, INDIRECT OTHERWISE)
* FRETURN IF INTRINSIC FUNCTION, RETURN OTHERWISE
* PUTTING THE FUNCTION ADDRESS INTO NODE B
* RETURN 1 IF MCALL OR UCALL, 0 IF NOT



}'PROGRAM TFFCN;
}'INCLUDE SGFN';

}'DI W03;

FUNCTION TFFCN(POINTER A03,B03), FRETURN;
}'IF A03.TDEF DO;
}/B03.TADDR_W03_A03.TADDR;
}/IF W03$INSTAG=ATREL AND W03$INSST=ASTIM DO;
}7RETN 1 IF W03$INSIMV<0 ELSE FRETN;
}/ENDIF;
}/RETN 0;
}'ENDIF;
}'TSCAN(A03,RVALS);
}'TSIND(RESULT,B03//TFFCE);
}'RETN 0;
* INDIRECTION FAILED
TFFCE: CERR(59);

***
*** TFAPT(A,I,N)*
***
* CHECK THE TYPES OF THE ACTUAL PARAMETERS ON THE CHAIN A
* AGAINST THOSE GIVEN IN THE ARGUMENT DESCRIPTION STRING
* STARTING AT ARG. DESC. TABLE ENTRY I
* RETURN 0 IF ALL OK, 1 IF TYPE MISMATCH, 2 IF REQUIRED
* ARGUMENT MISSING, 3 IF TOO MANY ARGUMENTS



}'PROGRAM TFAPT;
}'INCLUDE SGFN';

}'DI D11,V11;
}'DP P11;

FUNCTION TFAPT(POINTER A11,INTEGER I11,N11);
TFAP0: RETURN (0 IF A11=0 OR A11.TOPR=OPNIL ELSE 3)
}#IF (N11_N11-1)<0;
}'D11_AVTAB[I11];
}'I11_I11+1;
}'IF A11=0 OR A11.TOPR=OPNIL DO;
},RETURN 2 IF D11$AVDI=0 ELSE GOTO TFAP0;
}'ELSEIF P11.TTYPE#(V11_D11$AVTYPE) WHERE P11_A11.TO1 DO;
},RETURN 1 IF P11.TTYPE#TTUND ELSE P11.TTYPE_V11;
}'ENDIF;
}'A11_A11.TO2;
}'GOTO TFAP0;


***
*** TFCHZ(A)*
***
* RETURN 0 IF A IS AN EMPTY CHAIN, A OTHERWISE



}'PROGRAM TFCHZ;
}'INCLUDE SGFN';


FUNCTION TFCHZ(POINTER A12);
}'RETURN (0 IF A12.TOPR=OPNIL ELSE A12);

***
*** TFCST(A,F)*
***
* COMPILE THE STORES ON CHAIN A
* STORE THE F.P. WORDS IF F=0
* PUT THE ADDRESSES INTO THE ARRAY AT F IF F#0
* RETURN THE FINAL VALUE OF F



}'PROGRAM TFCST;
}'INCLUDE SGFN';

}'DI W13,T13;
}'DP X13,P13;

FUNCTION TFCST(POINTER A13,REFERENCE F13);
}'RETURN F13 IF A13=0;
}'T13_0;
}'WHILE A13.TOPR#OPNIL DO;
},P13_A13.TO1;
},W13_(TFFP(P13) IF P13.TOPR#OPNIL ELSE T13 IF F13 OR T13
}*ELSE (T13_P13.TADDR+(U(FPMVAL,FPMODE)+U(FPCONT,FPADRF)+
}*U(TFPTAB[TTINT],FPTYPE)) WHERE P13_TSTEMP(TTINT)));
},X13_A13.TO2;
},IF F13 DO;
}1$F13_W13 AA (FMASK(INSTAG)+FMASK(INSGD));
}1F13_F13+1;
},ELSE DO;
}1W13_W13+U(1,APLAST) IF X13.TOPR=OPNIL;
}1TSW(W13);
},ENDIF;
},A13_X13;
}'ENDFOR;
}'RETURN F13;

***
*** TXCALL(A) ###
*** TXNCALL(A) ###
***
* CODE GENERATOR FOR FUNCTION CALLS



}'PROGRAM TXCALL;
}'INCLUDE SGFN',SDOPS;
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER B74,L74, INTEGER SC74, GARBAGE;

}'DP P74;

FUNCTION TXCALL(POINTER A74);
}'B74_TFCHZ(A74.TO4);
}'SC74_L74_0;
}'IF B74 DO;
* DEAL WITH FAILURE ACTION
}/IF TFGOTO(B74:,GARBAGE)#0 AND TFCHZ(A74.TO5)=0 DO;
}7B74_B74.TO1;
}7DBFLAG_1;
}/ELSE DO;
}7L74_B74_TSBRA();
}/ENDIF;
}'ENDIF;
}'SC74_TFFCN(A74.TO1,A74//TIFC);
* GENERATE THE ACTUAL PARAMETER LIST
}'TFCARG(A74.TO2,1);
}'TFARGS(A74,A74.TO2,B74=0,0,0);
TIFF:}"IF B74 DO;
* STORE APW FOR FAILURE ACTION
}/P74_A74.TO4;
}/IF P74.TOPR=OPFRET AND P74.TO1=A74.TO5 AND
}*FRETLR>=0 AND RETOK LSH CFLOC<0
}*AND SC74=0 DO;
}7VINSA_LQ(FRETLR);
}7L74_0;
}/ELSE DO;
}7TSBU(B74,TSGL(2));
}7PUT(VAA+FNEWL,1@FWCPA) IF TFCHZ(A74.TO5);
}/ENDIF;
}/TSA(0,U(TAPTAB[TTLAB],APTYPE)+U(APMCON,APMODE)+
}*U(1,APLAST)+VINSA);
}'ENDIF;
* GENERATE SUCCESS STORES
}'IF P74_TFCHZ(A74.TO3) DO;
}/TFCST(P74.TO2,0);
}/(TFFP(P74) & TSSCR(P74)) IF P74_TFCHZ(P74.TO1);
}'ENDIF;
* NOW FAILURE STORES, IF ANY, AND FAILURE COMPUTATION
TIFR:}"IF L74 DO;
}/TSBI(ZBRU,B74_TSBRA());
}/TSBDEF(L74);
}/TFCST(A74.TO5,0);
}/TSCAN(A74.TO4,RVALA+RNOVAL);
}/TSBDEF(B74);
}'ENDIF;
}'RETURN RVALA;
TIFC:}"TXSF(A74,B74,TFCHZ(A74.TO3),TFCHZ(A74.TO5)//TIFF);
}'GOTO TIFR;

ENTRY TXNCALL(POINTER A74);
}'B74_0;
}'TFFCN(A74.TO1,A74//TIFNC);
}'TFCARG(A74.TO2,1);
}'TFARGS(A74,A74.TO2,1,0,0);
TIFNF: RETURN RVALA;
TIFNC: TXSF(A74,B74,0,0//TIFNF);
}'RETURN RVALA;

***
*** TXSF(ST,FST)
***
* PSEUDO CODE GENERATOR FOR SPECIAL FUNCTIONS



}'PROGRAM TXSF;
}'INCLUDE SGFN';
* RECURSIVE LOCAL VARIABLES
}'DECLARE INTEGER AW74,SFI74,ABI74;

}'DI I74,N74,W74, REFERENCE PT74;
}'DP FN74,Y74;
}'DI AA1=APA74[0],AA2=APA74[1],AA3=APA74[2],AA4=APA74[3];
}'DP AP1=APP74[0],AP2=APP74[1],AP3=APP74[2],AP4=APP74[3];
}'DECLARE SWITCH AS74[4]_(SFA0,SFA1,SFX,SFX);
}'DECLARE SWITCH SS74[4]_(SFS0,SFS1,SFX,SFX);
}'DECLARE SWITCH FS74[4]_(SFF0,SFS1,SFX,SFX);
* SPECIAL FUNCTION DISPATCHER:
* ADDRESS OF CODE GENERATOR IF AWBLL=0
}'DECLARE SWITCH AXTAB[46]_(
}#EFIX,EENTIER,EFLOAT,EDFLOAT,ERE,EIM,EBLL,EBLL,
}#EBLL,EBLL,EBLL,EBLL,EGCI,EWCI,EGCD,EWCD,
}#ESETUP,ESETS,ESETR,ESETW,ELENGTH,EGC,EBLL,EBLL,
}#EBLL,EBLL,EBLL,EBLL,EBLL,EBCOPY,EBLL,EINCDES,
}#ELNGDES,EBSET,EBLL,EBLL,EBLL,EBLL,EBLL,EBLL,
}#EBLL,EBLL,EBLL,EBLL,EGETR,EGETW);

FUNCTION TXSF(POINTER Z74,FRET74,ST74,FST74), FRETURN;
}'FN74_Z74.TO1;
}'N74_FN74.TADDR$INSIMV;
}'I74_ICGTN;
}'SSELECT(1);
}'SSPTR(N74:,Y74);
}'W74_Z74.TADDR_Y74.SYVAL;
}'SFI74_Y74.FSIFN-1;
}'AW74_AWTAB[SFI74];
}'Z74.TADDR_YCFD(N74) IF W74=0 AND AW74$AWBLL#0;
}'SSELECT(I74);
* FAILURE RETURN NOT ALLOWED
}'CERR(109) IF AW74$AWFRET=0 AND FRET74#0;
}'ABI74_AW74$AWPTR;
}'GOTO LABEL'FIXER(AS74[TFAPT(Z74.TO2,ABI74,AW74$AWCNT)]);
* WRONG SYNTAX FOR SPECIAL FUNCTION
SFX:}#CERR(110);
* ARGUMENT OF WRONG TYPE
SFA1:}"CERR(111);
SFA0:}"GOTO LABEL'FIXER(SS74[TFAPT(ST74,I74_ABI74+AW74$AWCNT,AW74$AWSTC)]);
* STORE INTO VARIABLE OF WRONG TYPE
SFS1:}"CERR(112);
SFS0:}"GOTO LABEL'FIXER(FS74[TFAPT(FST74,I74+AW74$AWSTC,AW74$AWFSTC)]);
SFF0:}"TFCARG(Z74.TO2,@AVTAB[ABI74]);
}'N74_TFCST(ST74,@SA74[0]);
}'SA74[I74] _ 0 FOR I74 _ N74-@SA74[0] TO AW74$AWSTC-1;
}'N74_TFCST(FST74,@FSA74[0]);
}'FSA74[I74] _ 0 FOR I74 _ N74-@FSA74[0] TO AW74$AWFSTC-1;
}'N74_AW74$AWCNT;
}'Y74_Z74.TO2;
}'GOTO EBLL IF AW74$AWBLL;
}'FOR I74_0 TO N74-1 DO;
},IF Y74.TOPR=OPNIL DO;
}1APP74[I74]_0;
}1APA74[I74]_ADTAB[AVTAB[ABI74+I74]$AVDI];
},ELSE DO;
}1APP74[I74]_Y74.TO1 ;
}1APA74[I74]_Y74.TADDR_Y74.TADDR AA
}/(FMASK(INSTAG)+FMASK(INSGD));
}1Y74_Y74.TO2;
},ENDIF;
}'ENDFOR;
}'GOTO LABEL'FIXER(AXTAB[SFI74]);


* INDIVIDUAL CODE GENERATORS

* NOT IMPLEMENTED

EENTIER:
ERE:
EIM:
}(CERR(113);
* INDIRECTION FAILED
EI:}$CERR(59);

* BLL-TYPE
EBLL:}"TFARGS(Z74,Y74,FRET74=0,@AVTAB[ABI74],N74);
}'FRETN;

* FIX, FLOAT, DFLOAT
EFIX:}"TSW(ZZFIX);
}'RETN;
EFLOAT: TSDP(TTREAL);
EFLT:}"TSW(ZZFLOAT);
}'RETN;
EDFLOAT: TSDP(TTDBL);
}'GOTO EFLT;

* GCI, WCI
EGCI:}"TSA(ZISD,AA1+FDISP(SR));
}'SFFRET(ZBEQ,ZBNE,FRET74);
}'TSA(ZLDA,TSIIA(AA1+FDISP(SR)//EI));
}'RETN;
EWCI:}"TSA(ZISD,AA2+FDISP(SW));
}'SFFRET(ZBEQ,ZBNE,FRET74);
}'TSA(ZSTA,TSIIA(AA2+FDISP(SW)//EI));
}'RETN;

* BCOPY, BSET
EBCOPY: W74_ZZMVB;
}'GOTO EBO;
EBSET: W74_ZZMVC;
EBO:}#TSA(ZLDX,AA2);
}'TSA(ZLDB,AA1);
}'IF AP3 DO;
},TSA(ZLDA,AA3);
}'ELSE DO;
},TSGL(1);
},PUT(VAA,U(IWTFLD,IWTYPE)+U(6,FIWBA)+
}*U(18,FIWBL)+U(-1,FIWDISP));
},TSA(ZLDA,TSIIA(VINSA//EI));
}'ENDIF;
}'TSW(W74);
}'RETN;

* GCD, WCD
EGCD:}"TSA(ZDSD,AA1+FDISP(SR));
}'SFFRET(ZBEQ,ZBNE,FRET74);
}'TSA(ZISD,AA1+FDISP(SW));
}'TSA(ZLDA,TSIIA(AA1+FDISP(SW)//EI));
}'TSA(ZDSD,AA1+FDISP(SR));
}'RETN;
EWCD:}"TSA(ZDSD,AA2+FDISP(SL));
}'SFFRET(ZBEQ,ZBNE,FRET74);
}'TSA(ZISD,AA2+FDISP(SR));
}'TSA(ZSTA,TSIIA(AA2+FDISP(SR)//EI));
}'TSA(ZDSD,AA2+FDISP(SL));
}'RETN;

* LENGTH, LNGDES
ELENGTH: TSA(ZLDD,AA1+FDISP(SR));
ELEN:}"TSW(ZZCLS);
}'RETN;
ELNGDES: TSA(ZLDB,AA2);
}'GOTO ELEN;

* GC
EGC:}#Y74_TSTEMP(TTINT);
}'W74_Y74.TADDR;
}'TSA(ZLDA,AA1+FDISP(SR));
}'TSA(ZLDX,IQ(1));
}'TSW(ZZASP);
}'TSA(ZSTX,W74);
}'TSA(ZLDA,TSIIA(W74//EI));
}'RETN;

* INCDES
EINCDES: TSA(ZLDX,AA2);
}'TSW(ZZASP);
}'TSW(ZZCXA);
}'RETN;

* SETUP
ESETUP: GOTO ESU1 IF AA4$INSTAG#ATREL OR AA4$INSST#ASTIM
}#ELSE GOTO ESU2 IF (AA4_AA4$INSIMV)#6 AND AA4#8
}#AND AA4#12 AND AA4#24;
}'TSGL(2);
}'W74_U(IWTSTR,IWTYPE)+U(2 IF AA4=12 ELSE AA4/8,SIWCS);
}'PUT(VAA,W74+U(3-W74$SIWCS,SIWCA)-1);
}'PUT(VAA+1,U(-1,SIWWA));
}'TSA(ZLDA,AA3);
}'TSA(ZAND,VINSA+1);
}'TSA(ZADD,VINSA);
}'TSA(ZSTA,AA1+FDISP(SL));
}'TSA(ZSTA,AA1+FDISP(SR));
}'TSA(ZSTA,AA1+FDISP(SW));
}'IF AP2.TOPR#OPCON DO;
},TSA(ZCPZ,AA2);
},SFFRET(ZBLT, ZBGE, FRET74);
}'ENDIF;
}'TSA(ZLDX,AA2);
}'TSW(ZZASP);
}'TSA(ZSTX,AA1+FDISP(SU));
}'RETN;
* CHARACTER SIZE MUST BE CONSTANT
ESU1:}"CERR(167);
* BAD CHARACTER SIZE
ESU2:}"CERR(56);

* SETR, SETW, SETS
ESETW: TSA(ZLDA,AA1+FDISP(SL));
}'ESSP(AA2,AA1+FDISP(SW),AA1+FDISP(SU));
}'RETN;
ESETS: TSA(ZLDA,AA1+FDISP(SL));
}'ESSP(AA3,AA1+FDISP(SW),AA1+FDISP(SU));
ESETR: TSA(ZLDA,AA1+FDISP(SL));
}'ESSP(AA2,AA1+FDISP(SR),AA1+FDISP(SW));
}'RETN;

* GETR, GETW
EGETR: TSA(ZLDD,AA1+FDISP(SL));
}'GOTO ELEN;
EGETW: TSA(ZLDA,AA1+FDISP(SL));
}'TSA(ZLDB,AA1+FDISP(SW));
}'GOTO ELEN;

* ESSP(I,A,B)*
* INTERNAL FUNCTION FOR SETR, SETW, SETS
* SETS THE CHARACTER POINTER AT ADDRESS A TO THE I'TH BYTE
* BEYOND (A), FORCING I>=0 AND CLS(ASP(A,I),B)<=0
* I,A,B ARE ALL MACHINE ADDRESSES



}'PROGRAM ESSP;
}'INCLUDE SGFN';


FUNCTION ESSP(SSI74,SSA74,SSB74);
}'IF SSI74$INSTAG=ATREL AND SSI74$INSST=ASTIM AND
}#SSI74$INSIMV<=0 DO;
},TSA(ZSTA,SSA74);
}'ELSE DO;
},TSA(ZLDX,SSI74);
},TSA(ZCPZ,U(ATREL,INSTAG)+U(ASTIMX,INSST));
},TSW(U(ZBGE,INSOP)+RQ(2));
},TSA(ZLDX,IQ(0));
},TSW(ZZASP);
},TSW(ZZCXB);
},TSA(ZLDA,SSB74);
},TSW(ZZCLS);
},TSW(U(ZBLE,INSOP)+RQ(2));
},TSA(ZLDB,SSB74);
},TSA(ZSTB,SSA74);
}'ENDIF;
}'RETURN;

* SFFRET(OP1,OP2,F)*
* INTERNAL FUNCTION FOR FAILURE RETURNS
* GENERATES .OP1 F IF F#0,
* OTHERWISE .OP2 R'[2], BLLN RUNTIME'FAILURE



}'PROGRAM SFFRET;
}'INCLUDE SGFN';


FUNCTION SFFRET(OP174,OP274,FR74);
}'IF FR74 DO;
},TSBI(OP174,FR74);
}'ELSE DO;
},TSW(U(OP274,INSOP)+RQ(2));
},TSA(ZBLLN,RTEFD);
}'ENDIF;
}'RETURN;

***
*** TXRET(A)
*** TXFRET(A)
***
* CODE GENERATOR FOR RETURN AND FRETURN



}'PROGRAM TXRET;
}'INCLUDE SGFN',SDOPS;
* RECURSIVE LOCAL VARIABLES
}'DECLARE POINTER P84;

}'DP Q84;
}'DI W84;

FUNCTION TXRET(POINTER A84);
}'P84_A84.TO1;
}'W84_(0 IF P84.TOPR=OPNIL OR (Q84.TOPR=OPNIL WHERE
}(Q84_P84.TO2) ELSE 1);
* WRONG NUMBER OF VALUES FOR RETURN ?
}'NRETVAL_W84 IF NRETVAL<0 ELSE CERR(169) IF NRETVAL#W84;
}'IF P84.TOPR=OPNIL DO;
},TSW(ZZRETN);
}'ELSE DO;
},TFCARG(Q84,-1);
* UNKNOWN ARGUMENT FOR FUNCTION OR RETURN ?
},CERR(45) IF A84.TTYPE=TTUND WHERE A84_P84.TO1;
},TSCAN(P84.TO1,RVALA);
},IF P84.TOPR#OPNIL WHERE P84_P84.TO2 DO;
}1ICGSP.GSNEWL_ICNEWL_ICNEWL VV U(1,FDCPR);
}1TSW(ZZRET);
}1TFARGS(0,P84,1,0,0);
},ELSE DO;
}1TSW(ZZRETN);
},ENDIF;
}'ENDIF;
* RETURN, FRETURN NOT ALLOWED ?
TRET1: CERR(57) IF RETOK LSH CFLOC>=0;* CONTINUES
}'FLOWTHRU_0;*IT'S NOT SAFE TO RESET FLOWTHRU HERE? JF 9/14/74
}'DBFLAG_1;
}'RETURN RNOVAL;


ENTRY TXFRET(POINTER A84);
* FRETURN NOT ALLOWED ?
}'CERR(107) IF FRETLR<0;
}'P84_A84.TO1;
}'TFCARG(P84,-1);
}'W84_(ZZRETN IF P84.TOPR=OPNIL ELSE ZZRET);
}'W84$INSLRD_FRETLR;
}'TSW(W84);
}'TFARGS(0,P84,1,0,0);
}'GOTO TRET1;