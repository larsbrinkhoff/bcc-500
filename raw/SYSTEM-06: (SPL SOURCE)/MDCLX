}'COMMON SDEC';
}'INCLUDE COMM,STDEC,STST,SCDEC,SCOPS,SDOPS,SGST;

***************
*}%SPL}%*
* DECLARATION *
*}"PROCESSOR}"*
***************

***
*** TEFDEC(A)
***
* PROCESSOR FOR FUNCTION, ENTRY, COMMON,
* AND T.V. DECLARATIONS



}'COMMON FDEC';
}'INCLUDE SDEC';

}'DI FTN,FSPEC'WORD,FFLOC,FLOC'INDEX,MAX'INDEX;
}'DP FTP,FSP,P,Q;


}'PROGRAM TEFDEC;
}'INCLUDE FDEC';

}'DECLARE FUNCTION ARRAY TEFFA[6]_(
}(TEFBLK,TEFBLK,TEFSPEC,TEFENTRY,TEFORG,TEFFIXED);

FUNCTION TEFDEC(POINTER A95);
}'FTN_A95.TO1;
}'SSPTR(FTN:FTP,FSP);
}'FFLOC_(FSPEC'WORD_A95.TO2)$DFLOC;
}'P_A95.TO4;
}'FLOC'INDEX_TFIC(P,-1);
}'MAX'INDEX_TMITAB[NRINGS*FFLOC+RING];
}'IF (TEFFA[FSPEC'WORD$DFTYPE])(A95) DO;
}*$FTP_$FTP A' N' 1@TKIMPL V' (1@TKGLOB+1@TKPARAM);
}*FTP.TKTYPE_FSPEC'WORD$DTYPE;
}*FSP.SYDTYPE_FSPEC'WORD$DDTYPE;
}*FSP.SYMODE_SMFUNC;
}'ENDIF;
}'RETURN RNOVAL;


}'PROGRAM TEFSPEC;
}'INCLUDE FDEC';

* PROCESSOR FOR 'MONITOR' ETC. STATEMENTS

FUNCTION TEFSPEC(POINTER Z95);
},IF FLOC'INDEX<0 OR FLOC'INDEX>TMDTAB[FFLOC] DO;
* INDEX OUT OF RANGE ?
}1CERR(69);* CONTINUES
}1RETURN 0;
},ENDIF;
},FSP.SYVAL_IQ(TMUC(FFLOC,FLOC'INDEX));
},RETURN 1;

}'PROGRAM TEFENTRY;
}'INCLUDE FDEC';

* PROCESSOR FOR 'FUNCTION' AND 'ENTRY' STATEMENTS

}'DI COPY'ARGS,ENTRY'LOC,TRAP'ENTRY'FLAG,BFTN,SFTN;
}'DP T'V'PTR;

FUNCTION TEFENTRY(POINTER Z95);
},TRAP'ENTRY'FLAG_T'V'PTR_0;
* NOT ALLOWED IN CURRENT RING ?
},(CERR(70) IF MAX'INDEX=-1) IF FLOCFLAG=0;
},IF P.TOPR#OPNIL DO;
* INDEX NOT ALLOWED ?
}1(CERR(71) & GOTO TEFIR) IF FFLOC=FLNORMAL;* CONTINUES
}1T'V'PTR_TVEA(FFLOC,FLOC'INDEX:,TRAP'ENTRY'FLAG//TEFIE) IF FLOCFLAG=0;
},ELSEIF FFLOC#FLNORMAL AND FFLOC#FLPOP DO;
* INDEX REQUIRED
}1CERR(72);* CONTINUES
},ENDIF;
TEFIR:}&P_Z95.TO3;
},IF COPY'ARGS_(P.TOPR#OPNIL OR FSPEC'WORD$DFRET#0) DO;
}1TSBI(ZBRU,COPY'ARGS_TSBRA()) IF FLOWTHRU;
},ENDIF;
},ENTRY'LOC_RELLOC;
},TFPL(P);}"NODE_Z95;
},IF FSPEC'WORD$DFRET DO;
}1FRETLR_TFGET(TTLTAB[TTLAB])$INSLRD
}/IF FRETLR<0;
}1TSW(U(ATREL,INSTAG)+U(ASTLR,INSST)+
}/U(FPCONT,FPADRF)+U(FPMVAL,FPMODE)+
}/U(FPLAB,FPTYPE)+U(FRETLR,INSLRD));
},ENDIF;
},IF COPY'ARGS DO;
}1Q_CODETOP+RELLOC-1;
}1PUT(Q,GET(Q) VV U(1,FPLAST));
},ENDIF;
},IF FFLOC=FLMONITOR OR FFLOC=FLUTILITY DO;
}1CFLOC_FFLOC IF CFLOC=FLNORMAL;
},ENDIF;
},TSA(ZBSX,RQ(INITSR)) IF INITSR>=0;
},IF COPY'ARGS>1 DO;
}1TSBDEF(COPY'ARGS);
}1COPY'ARGS_1;
},ENDIF;
},IF FSPEC'WORD$DFRET=0 AND FRETLR>=0 DO;
}1TSGL(1);
}1PUT(VAA,U(1,IWTRAP));
}1TSA(ZLDX,VINSA);
}1TSA(ZSTX,LQ(FRETLR));
},ENDIF;
},BFTN_ICGTN;
},SSPTR(FTN:FTP,FSP);
},MAX'INDEX_FSP.SYVAL;
},IF FSP.SYMODE#SMFUNC OR FTP.TKGLOB=0 DO;
* ATTEMPT TO REDECLARE NAME ?
}1CERR(64) IF TDCHK(FTN)#0;
}1MAX'INDEX_0;
},ENDIF;
},SFTN_SSFGS(FTN,1,1);
},SSPTR(SFTN:FTP,FSP);
},Q_FSP.SYVAL;
},IF FSP.FSGTN=0 DO;
}1IF Q=0 DO;
}6IF MAX'INDEX DO;
};FSP.SYVAL_Q_MAX'INDEX;
}6ELSE DO;
};Q_YCFD(SFTN);
}6ENDIF;
}1ENDIF;
}1FSP.FSGTN_BFTN;
},ELSEIF FSP.FSGTN#BFTN DO;
* ENTRY NAME ALREADY EXISTS
}1CERR(77);
},ENDIF;
},FTP.TKTYPE_FSPEC'WORD$DTYPE ;
},FSP.SYDTYPE_FSPEC'WORD$DDTYPE;
},P_Z95.TO3;
},SSELECT(BFTN);
},Q_Q+GBASE;
},PUT(Q+FNEWP,@ICCODE[0]+ENTRY'LOC);
},PUT(Q+FNEWL,U(COPY'ARGS,FDCPA) VV GET(Q+FNEWL)
}*AA NN FMASK(FDCPA) VV FMASK(FDCLL));
},SSPTR(FTN:FTP,FSP);
},FSP.SYVAL_Q-GBASE;
},IF T'V'PTR DO;
}1PUT(T'V'PTR,U(Q,IWGD)+(U(ATI,IWTAG) IF TRAP'ENTRY'FLAG ELSE
}/U(ATD,IWTAG)));
},ENDIF;
},RETURN 1;
* INDEX OUT OF RANGE
TEFIE: CERR(69);* CONTINUES
}'GOTO TEFIR;

}'PROGRAM TEFFIXED;
}'INCLUDE FDEC';

* PROCESSOR FOR 'FIXED' STATEMENT

FUNCTION TEFFIXED(POINTER Z95);
* NOT LEGAL IN COMMON BLOCK ?
},CERR(117) IF ICTYPE=IBTCB;
},IF P.TOPR#OPNIL DO;
}1FLOC'INDEX_TFIC(P,4B7);
* ILLEGAL ORIGIN ?
}1CERR(76) IF FLOC'INDEX<GBASE OR FLOC'INDEX>GBASE+BRSGA;*** ***
}7TRW(ICBA.IBMLR,ICNEWL$FWNEWL-GBASE)
}8IF ICGSP.GSASGL;
}7ICGSP.GSASGL_0;
}7ICNEWL$FWSTK_0;
}7ICNEWL$FWNEWL_FLOC'INDEX;
},ELSEIF ICNEWL$FWSTK=0 AND ICGSP.GSASGL=0 DO;
}7ICNEWL$FWSTK_1;
}7ICNEWL$FWNEWL_ICBA.IBMLR;
},ENDIF;
},ICGSP.GSNEWL_ICNEWL;
},ICGSP.GSFIXED_1;
},RETURN 0;


}'PROGRAM TEFORG;
}'INCLUDE FDEC';

* PROCESSOR FOR 'ORIGIN' STATEMENT

FUNCTION TEFORG(POINTER Z95);
*** NOT RIGHT
},IF P.TOPR=OPNIL DO;
* ONLY LEGAL IN COMMON BLOCK ?
}1CERR(118) IF ICTYPE#IBTCB;
}1FLOC'INDEX_0;
},ELSE DO;
}1FLOC'INDEX_TFIC(P,4B7);
* ILLEGAL ORIGIN ?
}1CERR(76) IF FLOC'INDEX<CODETOP OR FLOC'INDEX>=CODELIM;
}1CODETOP_FLOC'INDEX;
},ENDIF;
},ICGSP.GSORG_1;
},ICGSP.GSADDR_FLOC'INDEX;
},RETURN 0;


}'PROGRAM TEFBLK;
}'INCLUDE FDEC';
}'DI BFTN;

* PROCESSOR FOR 'PROGRAM' AND 'COMMON' STATEMENTS

FUNCTION TEFBLK(POINTER Z95);
* IB NAME WRONG ?
},BFTN_ICGTN;
},CERR(54) IF BFTN#SSFGS(FTN,0,0);
},SSELECT(BFTN);
},RETURN 0;

***
*** TEVDEC(A)
***
* PROCESSOR FOR VARIABLE DECLARATIONS



}'COMMON VDEC';
}'INCLUDE SDEC';

}'DI VTYPE,VMODE,VTN,SPEC'WORD,VDTYPE,VABSLOC,EQUIV'ADDR,VVALUE;
}'DI DIM'FLAG,LEN'FLAG,EQUIV'FLAG,ORG'FLAG,INIT'FLAG,PARAM'FLAG;
}'DP VTP,VSP;
}'DP DCWA93,ISBA93,BS93,SLLB93,EQUIV'P,ORG'P,INIT'P;


}'PROGRAM TEVDEC;
}'INCLUDE VDEC';

FUNCTION TEVDEC(POINTER Z93);
}'VDEC'SETUP(Z93);
}'IF VTP.TKSYM=0 DO;
* DECLARAND IS NOT A SYMBOL
},CERR(63);
}'ENDIF;
}'IF SPEC'WORD$DFPAR#0 AND (INIT'FLAG VV EQUIV'FLAG VV ORG'FLAG)#0 DO;
* INITIALIZATION, EQUIVALENCE NOT ALLOWED
},CERR(73);
}'ENDIF;
}'V'REDEC'CHECK(//TEVRR);
}'RETURN RNOVAL;
TEVRR: IF VTP.TKUSE DO;
* DECLARAND HAS ALREADY BEEN USED
},CERR(162);
}'ENDIF;
* ATTEMPT TO REDECLARE NAME ?
}'CERR(64) IF TDCHK(VTN);
}'ABSLOC_VABSLOC;
}'IF VMODE=SMFIELD OR VMODE=SMSFIELD DO;
},VDEC'FIELD();
}'ELSEIF VMODE=SMVALUE OR VMODE=SMFUNC DO;
},VDEC'SCALAR(//TEVDP);
}'ELSEIF VMODE=SMEXT DO;
* EXTERNAL
},GOTO TEVDP IF INIT'FLAG OR EQUIV'FLAG OR ORG'FLAG OR LEN'FLAG
}*OR DIM'FLAG;
},YGFD(VTN:VVALUE,VTP,VSP);
},PARAM'FLAG_1;
}'ELSEIF VMODE=SMARRAY OR VMODE=SMARR1 DO;
},VDEC'ARRAY(//TEVDP);
}'ENDIF;
}'SSPTR(VTN:VTP,VSP);
}'VTP.TKPARAM_PARAM'FLAG;
}'VTP.TKTYPE_VTYPE;
}'VSP.SYDTYPE_VDTYPE;
}'VSP.SYMODE_TXMTAB[VMODE];
}'VSP.SYEQUIV_(EQUIV'FLAG VV ORG'FLAG);
}'VSP.SYVAL_VVALUE;
}'RETURN RNOVAL;
* REDUNDANT PARAMETERS
TEVDP: CERR(66);

}'PROGRAM VDEC'SETUP;
}'INCLUDE VDEC';
***
*** VDEC'SETUP()*
***
* SET UP GLOBAL VARIABLES FOR VDEC

}'DP P93;

FUNCTION VDEC'SETUP(POINTER A93);
}'NODE_A93;
}'VTN_A93.TO1;
}'SPEC'WORD_A93.TO2;
}'P93_A93.TO3;
}'INIT'P_A93.TO4;
}'EQUIV'P_A93.TO5;
}'INIT'FLAG_(INIT'P.TOPR#OPNIL);
}'EQUIV'FLAG_(EQUIV'P.TOPR#OPNIL);
}'VABSLOC_EQUIV'ADDR_-1;
}'PARAM'FLAG_0;
}'IF EQUIV'P.TOPR=OPCON DO;
},VABSLOC_TFIC(EQUIV'P,4B7);
* ILLEGAL ORIGIN ?
},CERR(98) IF RING#2 AND (VABSLOC<GBASE OR
}*VABSLOC>GBASE+FRMASK(INSGD));* KLUDGE FOR MONITOR
}'ELSEIF EQUIV'P.TOPR=OPVAR DO;
* ILLEGAL EQUIVALENCE ?
},CERR(99) IF (EQUIV'ADDR_EQUIV'P.TADDR)=0
}*OR INIT'FLAG#0 AND EQUIV'ADDR$INSTAG#ATD;
}'ELSEIF EQUIV'FLAG DO;
* ILLEGAL OBJECT IN EQUIVALENCE
},CERR(116);
}'ENDIF;
}'VTYPE_SPEC'WORD$DTYPE;
}'VDTYPE_SPEC'WORD$DDTYPE;
}'VMODE_SPEC'WORD$DMODE;
}'IF SPEC'WORD$DFREF DO;
},VTYPE_TTINT;
},VDTYPE_SDPOINT;
},VMODE_SMVALUE;
}'ENDIF;
}'IF P93.TOPR=OPPARAM DO;
},DCWA93_P93.VDCWA;
},ISBA93_P93.VISBA;
},BS93_P93.VBS;
},SLLB93_P93.VSLLB;
},ORG'P_P93.VOG;
}'ELSE DO;
},DCWA93_ISBA93_BS93_SLLB93_ORG'P_P93;
}'ENDIF;
}'DIM'FLAG_(DCWA93.TOPR#OPNIL);
}'LEN'FLAG_(SLLB93.TOPR#OPNIL);
}'ORG'FLAG_(ORG'P.TOPR#OPNIL);
}'SSPTR(VTN:VTP,VSP);
}'RETURN;

}'PROGRAM V'REDEC'CHECK;
}'INCLUDE VDEC';
***
*** V'REDEC'CHECK()*
***
* CHECK IF A DECLARATION IS A RESETTING OF A PARAMETER
* OR A FURTHER INITIALIZATION OF A CONSTANT ARRAY,
* FAIL IF NEITHER, OTHERWISE DO EVERYTHING REQUIRED

}'DI T,V,W,S93,B93,LE;
}'DP P,Q;
}'DQ NTMASK_4B7 RSH TTINT+4B7 RSH TTREAL+
}(4B7 RSH TTDBL+4B7 RSH TTCPLX;

FUNCTION V'REDEC'CHECK(), FRETURN;
}'IF INIT'FLAG#0 AND EQUIV'FLAG=0 AND ORG'FLAG=0 AND VTP.TKPARAM#0
}#AND VTYPE=VTP.TKTYPE AND VDTYPE=VSP.SYDTYPE AND VTP.TKGLOB=0 DO;
},IF NTMASK LSH VTYPE<0 AND VMODE=SMVALUE
}*AND VMODE=VSP.SYMODE AND VSP.SYEQUIV=0 DO;
* REDECLARATION OF PARAMETER
}1VSP.SYVAL_TFIV(INIT'P,VTYPE,0);
}1RETURN;
},ELSEIF (VMODE=SMARRAY OR VMODE=SMARR1) AND DIM'FLAG#0
}*AND ISBA93.TOPR=OPNIL AND VSP.SYMODE=SMARRAY AND
}*(Q$INSTAG#ATREL OR Q$INSST#ASTLR WHERE Q_
}*VSP.SYVAL) DO;
* ADDING VALUES TO EXISTING CONSTANT ARRAY
}1VAA_(Q$INSGD+GBASE IF Q$INSTAG=ATD ELSE
}/SE(Q$INSSRD,INSSRD)+ELITBUF);
}1W_GET(VAA);
}1T_(W$AIWLLIM IF (LE_W$AIWLEB) ELSE
}/W$AIWNLIM)+1-(B93_W$AIWORG);
}1S93_(W$AIWLMULT IF LE ELSE W$AIWNMULT)+1;
}1V_TFIC(DCWA93.TO1,4B7)-B93;
* CONSTANT SUBSCRIPT OUT OF RANGE ?
}1CERR(163) IF V<0 OR V>=T;
}1P_GET(VAA+FDISP(AIWADDR));
}1P_(VAA+1+SE(P$IWSRD,IWSRD) IF P$IWTAG=ATREL
}/ELSE P$IWGD);* ATREL=>ARTSR
}1TFCIL(INIT'P,VTYPE IF VTYPE#TTUND ELSE -S93,
}/P+S93*V,T-V);
}1RETURN;
},ENDIF;
}'ENDIF;
}'FRETURN;

}'PROGRAM VDEC'FIELD;
}'INCLUDE VDEC';
***
*** VDEC'FIELD()*
***
* PROCESS A FIELD DECLARATION

}'DI T,V,W,K;

FUNCTION VDEC'FIELD();
},IF DIM'FLAG DO;
* FIELD WITH PARAMETERS
* ILLEGAL EQUIVALENCE ?
}1CERR(99) IF EQUIV'ADDR#-1;
}1T_TFIC(DCWA93,4B7);
}1V_TFIC(ISBA93,0);
}1W_TFIC(SLLB93,23);
}1IF V<0 OR V>23 OR W<V OR W>23 OR
}/T<-FRMASK(FIWDISP)/2-1 OR T>FRMASK(FIWDISP)/2 DO;
* BAD PARAMETERS FOR FIELD
}6CERR(65);
}1ELSE DO;
}6PARAM'FLAG_1;
}6IF V=0 AND W=23 AND T>=-FRMASK(INSIMV)/2-1
}4AND T<=FRMASK(INSIMV)/2 DO;
* FULL-WORD
};VVALUE_IQ(T);
}6ELSE DO;
* NOT FULL-WORD
};T_IWTFLD@IWTYPE+V@FIWBA+
}9(W-V+1)@FIWBL+(VMODE=SMSFIELD)@FIWSIGN+
}9T@FIWDISP;
};IF SPEC'WORD$DFXFD OR ABSLOC>=0 OR RING>0 DO;
TEVFD:}:PUT(TSGL(1),T);
}@VVALUE_VINSA;
};ELSE DO;
}@PUT(GBASE+(K_TFGSEQ(1,LGBIT,0,
}>FRMASK(BXBASE)/2+1//TEVFD)),T);
}@RSGCTR_RSGCTR+1;
}@VVALUE_ATD@INSTAG+K@INSGD;
};ENDIF;
}6ENDIF;
}1ENDIF;
},ELSE DO;
* FIELD WITHOUT PARAMETERS
}1VVALUE_TDGET(TTLTAB[TTFIELD],EQUIV'ADDR);
},ENDIF;
}'RETURN;

}'PROGRAM VDEC'SCALAR;
}'INCLUDE VDEC';
***
*** VDEC'SCALAR()*
***
* PROCESS A SCALAR DECLARATION
* FAIL IF REDUNDANT PARAMETERS

}'DI T,V,W,K;
}'DP P,Q,D;

FUNCTION VDEC'SCALAR(), FRETURN;
},T_(TTFUNC IF VMODE=SMFUNC ELSE VTYPE);
},K_TTLTAB[T];
},IF INIT'FLAG DO;
* INITIALIZED SCALAR
}1IF T=TTSTR AND LEN'FLAG#0 DO;
* REDUNDANT PARAMETERS
TEVDP:}0CERR(66);
}1ELSE DO;
}6VAA_0 IF EQUIV'FLAG=0 ELSE TDGET(0,EQUIV'ADDR);
}6VVALUE_TFIV(INIT'P,T,VAA);
}6PARAM'FLAG_1 IF EQUIV'FLAG=0;
}1ENDIF;
},ELSEIF T#TTSTR OR LEN'FLAG=0 DO;
* SCALAR WITHOUT INITIALIZATION OR PARAMETERS
}1VVALUE_TDGET(K,EQUIV'ADDR);
},ELSE DO;
* STRING WITH PARAMETERS
}1TFGSP(BS93,SLLB93:T,V,W);
}1VVALUE_TDGET(K,EQUIV'ADDR);
}1P_VAA;
}1Q_VINSA;
}1ABSLOC_TFIC(ORG'P,-1);
}1TFGET(W);
}1IF VABSLOC>=0 OR TFSIS()#0 DO;
}6PUT(P+FDISP(SL),PUT(P+FDISP(SR),
}4PUT(P+FDISP(SW),T+VAA)));
}6PUT(P+FDISP(SU),V+VAA);
}1ELSE DO;
}6D_TSGL(2);
}6PUT(D,T+Q$INSLRD+4);
}6PUT(D+1,V-T);
}6TSW(ZZCLA);
}6TSA(ZADD,VINSA);
}6TSA(ZSTA,Q+FDISP(SL));
}6TSA(ZSTA,Q+FDISP(SR));
}6TSA(ZSTA,Q+FDISP(SW));
}6TSA(ZADD,VINSA+1);
}6TSA(ZSTA,Q+FDISP(SU));
}1ENDIF;
},ENDIF;
}'RETURN;

}'PROGRAM VDEC'ARRAY;
}'INCLUDE VDEC';
***
*** VDEC'ARRAY()*
***
* PROCESS AN ARRAY DECLARATION
* FAIL IF REDUNDANT PARAMETERS

}'DI T,V,W,I,J,K,S,B,LE;
}'DP P,Q,R,D;
}'DI AS93,IA93,IS93;
}'DQ AINMAX_FRMASK(AIWNLIM),AILMAX_FRMASK(AIWLLIM);
}'DECLARE ARRAY AUBTAB[2]_(AINMAX+1,AILMAX+1);
}'DECLARE ARRAY ARRDIM[FRMASK(SYDIM)];

FUNCTION VDEC'ARRAY(), FRETURN;
},K_T_TTLTAB[TTARRAY];
},IF DIM'FLAG=0 DO;
}1FRETURN IF LEN'FLAG;
}1VVALUE_TDGET(T,EQUIV'ADDR);
},ELSE DO;
}1IF LEN'FLAG DO;
}6GOTO TEVDP IF INIT'FLAG;
}6S_TTLTAB[TTSTR];
}1ELSEIF VTYPE=TTSTR AND ISBA93.TOPR=OPNIL AND INIT'FLAG#0
}/AND ORG'FLAG=0 AND EQUIV'FLAG=0 AND ICTYPE=IBTFN DO;
}6S_1;
}1ELSEIF LE_(ISBA93.TOPR#OPNIL) DO;
}6S_TFIC(ISBA93,4B7);
}6IF S<1 OR S>FRMASK(AIWLMULT)+1 DO;
* BAD ITEM SIZE FOR ARRAY
};CERR(67);
}6ENDIF;
}6VTYPE_TTUND IF S#TTLTAB[VTYPE];
}1ELSE DO;
}6S_TTLTAB[VTYPE];
}1ENDIF;
}1IS93_S-1;
}1B_(VMODE=SMARR1);
}1AS93_J_0;
}1D_DCWA93;
}1WHILE D.TOPR#OPNIL DO;
}6W_(V_TFIC(D.TO1,4B7))+B-1;
}6IF V<0 OR W>AUBTAB[LE] DO;
* ARRAY DIMENSION OUT OF RANGE
};CERR(68);
}6ENDIF;
}6D_D.TO2;
* TOO MANY DIMENSIONS FOR ARRAY ?
}6CERR(108) IF J=FRMASK(SYDIM);
}6ARRDIM[J]_V;
}6J_J+1;
}6AS93_AS93+K;
}6K_K*V;
}1ENDFOR;
}1T_S*K/T;
}1R_Q_TSGL(AS93);
}1IA93_VINSA;
}1TFGET(AS93) IF INIT'FLAG=0 AND TFSIS()=0;
}1VVALUE_VINSA;
}1ABSLOC_TFIC(ORG'P,-1);
* ILLEGAL ORIGIN ?
}1CERR(98) IF ORG'FLAG#0 AND (ABSLOC<GBASE OR ABSLOC>
}/CODELIM-T);
}1TDGET(T,EQUIV'ADDR) IF INIT'FLAG=0 OR EQUIV'ADDR#-1
}/ELSE TSGL(T);
}1PARAM'FLAG_1;
}1D_VIWA;
}1K_1;
}1FOR I_0 TO J-1 DO;
}6W_(V_ARRDIM[I])+B-1;
}6IF I=J-1 DO;
};IF D$IWTAG=ATREL AND D$IWRT=ARTSR DO;
}@D$IWSRD_D$IWSRD-(Q+
}>FDISP(AIWADDR)-ELITBUF);
}@S_S-TTLTAB[TTARRAY];
};ENDIF;
};TFGAD(B@AIWORG+(IS93@AIWLMULT+
}9W@AIWLLIM+1@AIWLEB IF LE
}9ELSE IS93@AIWNMULT+W@AIWNLIM),
}9D,Q,S,K);
}6ELSE DO;
};TFGAD(B@AIWORG+(T-1)@
}9AIWNMULT+W@AIWNLIM+1@AIWMIB,
}9ATREL@IWTAG+ARTSR@IWRT+
}9(T*V*K-FDISP(AIWADDR))@IWSRD,
}9R,T*V,K);
};R_R+T*(K_K*V);
}6ENDIF;
}1ENDFOR;
}1IF IA93#VVALUE DO;
}6TSA(ZLDD,IA93);
}6TSA(ZSTD,VVALUE);
*** ABOVE ONLY WORKS FOR 1-DIMENSIONAL ARRAYS
}1ENDIF;
}1IF LEN'FLAG DO;
}6TFGSP(BS93,SLLB93:T,V,W);
}6TFGET(K*W);
*** GENERATE CODE TO SET UP STRING DESCRIPTORS
* NOT IMPLEMENTED
}6CERR(113);
}1ENDIF;
}1IF INIT'FLAG DO;
* INITIALIZED ARRAY
}6TFCIL(INIT'P,VTYPE IF VTYPE#TTUND ELSE -S,
}4VAA,T);
}1ENDIF;
},ENDIF;
}'RETURN;
* REDUNDANT PARAMETERS
TEVDP: CERR(66);

***
*** TFGSP(A,B)
***
* A IS THE NODE FOR THE CHARACTER SIZE FOR A STRING FORM,
* B IS THE NODE FOR THE CHARACTER COUNT.}"CHECK BOTH FOR
* INTEGER CONSTANCY (EXCEPT THAT A MAY BE NIL).
* RETURN WORDS 0 AND 3 OF THE DESCRIPTOR -THE ORIGIN,
* AND THE NUMBER OF WORDS OCCUPIED BY THE STRING
* ERROR IF THE PARAMETERS ARE ILLEGAL OR NON-CONSTANT



}'PROGRAM TFGSP;
}'INCLUDE SDEC';

}'DI U11,V11,W11,N11,T11;

FUNCTION TFGSP(POINTER Y11,Z11);
}'N11_TFIC(Y11,NORCSIZE);
}'V11_TFIC(Z11,4B7);
}'IF N11#6 AND N11#8 AND N11#12 AND N11#24 DO;
* BAD CHARACTER SIZE
}/CERR(56);
}'ENDIF;
}'U11_(2 IF N11=12 ELSE 4-N11/8);
* ILLEGAL STRING LENGTH ?
}'CERR(106) IF V11<0 OR V11>(FRMASK(SIWWA)+1)*U11;
}'W11_U(IWTSTR,IWTYPE)+U(4-U11,SIWCS)-U(1,SIWWA);
}'T11_V11+U11-1;
}'RETURN (W11+U(U11-1,SIWCA),W11+U(T11 MOD U11,SIWCA)+
}#U(T11/U11,SIWWA),(N11*V11+23)/24);

***
*** TFGAD(W0,W1,A,K,N)
***
* GENERATE N ARRAY DESCRIPTORS AT ABSOLUTE ADDRESS A,
* STARTING WITH (W0,W1) AND INCREMENTING W1 BY K EACH TIME
* IWTYPE IS SET TO IWTARR IN W0
* X-MODIFICATION IS TURNED ON IN W1



}'PROGRAM TFGAD;
}'INCLUDE SDEC';

}'DI I12;

FUNCTION TFGAD(W012,W112,POINTER A12,INTEGER K12,N12);
}'W012_W012+U(IWTARR,IWTYPE);
}'N12_2*N12-2;
}'IF W112$IWTAG=ATD DO;
}/W112$IWTAG_ATX;
}'ELSEIF W112$IWTAG=ATROD DO;
}/W112$IWTAG_ATROX;
}'ELSE DO;* MUST BE RELATIVE MODE
}/W112$IWRELX_1;
}'ENDIF;
}'FOR I12_0 BY 2 TO N12 DO;
}/PUT(A12+I12,W012);
}/PUT(A12+I12+1,W112);
}/W112_W112+K12;
}'ENDFOR;
}'RETURN;

***
*** TFSIS()
***
* SET UP INITIALIZATION SUBROUTINE IF REQUIRED
* RETURN 1 IF COMMON BLOCK, 0 IF FUNCTION



}'PROGRAM TFSIS;
}'INCLUDE SDEC';

}'DP P13;
}'DI T13;

FUNCTION TFSIS();
}'RETURN 1 IF ICTYPE=IBTCB;
}'IF INITSR<0 DO;
}/INITSR_RELLOC;
}/TSW(U(ZHLT,INSOP));* BECOMES STX LINK
}'ENDIF;
}'RETURN 0;


***
*** TEIS()
***
* END INITIALIZATION SUBROUTINE IF REQUIRED

FUNCTION TEIS();
}'RETURN IF INITSR<0 OR INITSF>=0;
}'T13_TFGET(1);
}'P13_CODETOP+INITSR-RELORG;
}'PUT(P13,U(ZSTX,INSOP)+T13);
}'TSA(ZBRU,TSIIA(T13//FTLERR));
}'INITSF_0;
}'RETURN;

***
*** TFPL(P)
***
* PROCESS THE (REVERSED) FP DECLARATION CHAIN P



}'PROGRAM TFPL;
}'INCLUDE SDEC';

}'DQ TFPMASK_FMASK(DTYPE)+FMASK(DDTYPE)+FMASK(DMODE);
}'DI W14,Z14;
}'DP TP14,SP14;

FUNCTION TFPL(POINTER P14);
}'RETURN IF P14.TOPR=OPNIL;
}'TFPL(P14.TO2);
}'P14_P14.TO1;
* EXPECTED VDEC ?
}'CERR(74) IF P14.TOPR#OPVDEC;
}'SSPTR(P14.TO1:TP14,SP14);
}'Z14_U(TP14.TKTYPE,DTYPE)+U(SP14.SYDTYPE,DDTYPE)+
}#U(SP14.SYMODE,DMODE);
}'IF Z14=U(TTUND,DTYPE)+U(SDNOR,DDTYPE)+U(SMVALUE,DMODE) DO;
},TEVDEC(P14);
}'ELSEIF W14$DNONE=0 WHERE W14_P14.TO2 DO;
* CONFLICTING DECLARATIONS ?
},CERR(75) IF (W14 AA TFPMASK)#Z14 AND W14$DFREF=0;
}'ELSE DO;
},P14.TO2_W14 AA NN TFPMASK VV Z14;
}'ENDIF;
}'TSW(TFFP(P14));
}'RETURN;

***
*** TDGET(N,A)
***
* GET N LOCAL WORDS IF A=-1, OTHERWISE RETURN A



}'PROGRAM TDGET;
}'INCLUDE SDEC';

}'DI D16;

FUNCTION TDGET(N16,A16);
}'IF (VINSA_A16)=-1 DO;
},TFGET(N16);
}'ELSEIF A16$INSTAG=ATD DO;
},VAA_GBASE+(D16_A16$INSGD);
},VIWA_U(ATD,IWTAG)+U(D16,IWGD);
}'ELSEIF A16$INSRT=ARTSR DO;* MUST HAVE INSTAG=ATREL
}+VAA_ELITBUF+(D16_SE(A16$INSSRD,INSSRD));
}+VIWA_U(ATREL,IWTAG)+U(ARTSR,IWRT)+U(D16,IWSRD);
}'ELSEIF A16$INSST=ASTLR DO;
}+VIWA_U(ATREL,IWTAG)+U(ASTLR,IWST)+U(A16$INSLRD,IWLRD);
}'ENDIF;
}'RETURN VINSA;

***
*** TMUC(L,N)
***
* CONSTRUCT THE IMMEDIATE ADDRESS FOR AN MCALL (L=FLMONITOR)
* OR A UCALL (L=FLUTILITY) WITH INDEX N



}'PROGRAM TMUC;
}'INCLUDE SDEC';


}(FUNCTION TMUC(L17,N17);
}'RETURN ((-1000B IF L17=FLMONITOR ELSE -2000B IF N17=0
}(ELSE 0)-N17);

***
*** TFIC(A,K)
***
* CHECK A FOR BEING AN INTEGER CONSTANT OR NIL
* IF NIL, RETURN K UNLESS K=4B7, IN WHICH CASE GIVE AN ERROR
* IF INTEGER CONSTANT, RETURN THE VALUE
* OTHERWISE GIVE AN ERROR



}'PROGRAM TFIC;
}'INCLUDE SDEC';


}(FUNCTION TFIC(POINTER A18,INTEGER K18);
}'IF A18.TOPR=OPNIL AND K18#4B7 DO;
}+RETURN K18;
}'ELSEIF A18.TOPR=OPCON AND A18.TTYPE=TTINT DO;
}+RETURN A18.TOIV;
}'ELSE DO;
* PARAMETER NOT INTEGER CONSTANT
},CERR(58);
}'ENDIF;

***
*** TVEA(L,N)
***
* COMPUTE THE ABSOLUTE ADDRESS OF ENTRY N IN THE
* TRANSFER VECTOR CORRESPONDING TO (D)FLOC L
* RETURN THE ADDRESS, AND A FLAG WHICH IS 0 IF
* THE T.V. IS BLL-TYPE, 1 IF BRU-TYPE
* FRETURN IF THE INDEX IS OUT OF BOUNDS



}'PROGRAM TVEA;
}'INCLUDE SDEC';

}(DI U26,T26;
}'DP P26;

}(FUNCTION TVEA(L26,N26), FRETURN;
}'IF L26=FLSYSPOP DO;
}+FRETN IF N26<0;
}+N26_N26+SYSPTN;
}+L26_FLTRAP;
}'ENDIF;
}'U26_TMITAB[NRINGS*L26+RING];
}'T26_TTVTAB[L26]$TV1ORG;
}'FRETN IF N26<T26 OR N26>U26;
}'P26_P26+GBASE IF TTVTAB[L26]<0 WHERE P26_TTVTAB[L26]$IWGD;
}'RETN (GET(P26)$IWGD+N26-T26+2,TTVTAB[L26]$TVTRAP);

***
*** TDCHK(T)
***
* CHECK IF THE SYMBOL WITH TN T IN THE CURRENT IB
* HAD A DECLARATION BROUGHT DOWN FROM A COMMON BLOCK:
* IF SO, DELETE IT AND RETURN 0.}"ALSO RETURN 0 IF
* THE SYMBOL IS UNDECLARED.}"RETURN 1 IF DECLARED AND NOT COMMON



}'PROGRAM TDCHK;
}'INCLUDE SDEC';

}(DP TP28,SP28;

}(FUNCTION TDCHK(TN28);
}'SSPTR(TN28:TP28,SP28);
}'RETURN 0 IF TP28.TKTYPE=TTUND AND SP28.SYMODE=SMVALUE
}(ELSE RETURN 1 IF TP28.TKGLOB=0;
}'$TP28_$TP28 AA (FMASK(TKSI)+FMASK(TKSYM)) VV U(TTUND,TKTYPE);
}'SP28[FDISP(SYFLAGS)]_SP28[FDISP(SYFLAGS)] AA NN FMASK(SYFLAGS)
}(VV (U(SMVALUE,SYMODE)+U(SDNOR,SYDTYPE));
}'SP28.SYVAL_0;
}'RETURN 0;

***
*** TFGBLK(N,D)
***
* FIND AN N-WORD FREE BLOCK IN THE FREELIST DESCRIBED BY D
* RETURN ADDRESS OF BLOCK
* FRETURN IF NO BLOCK CAN BE FOUND



}'PROGRAM TFGBLK;
}'INCLUDE SDEC';

}(DP P64,Q64,L64,R64;
}'DI M64,A64;

}(FUNCTION TFGBLK(N64,POINTER D64), FRETURN;
}'L64_D64.GFLIST;
}'R64_D64.GFROVER;
}'FRETURN IF L64=0;
}'P64_R64;
TFGB1: Q64_P64;
}'P64_P64.GFPTR;
}'IF (M64_P64.GFCNT-N64)>=0 DO;
}+A64_P64.GFADDR;
}+IF M64#0 DO;
}/P64.GFCNT_M64;
}/D64.GFROVER_P64;
}/P64.GFADDR_A64+N64;
}+ELSEIF P64=Q64 DO;
}/P64.GFPTR_FFREE;
}/FFREE_P64;
}/D64.GFLIST_D64.GFROVER_0;
}+ELSE DO;
}/D64.GFROVER_Q64_Q64.GFPTR_P64.GFPTR;
}/D64.GFLIST_Q64 IF L64=P64;
}+ENDIF;
}+RETN A64;
}'ENDIF;
}'FRETN IF P64=R64 ELSE GOTO TFGB1;

***
*** TFFBLK(A,N,D)
***
* FREE N WORDS OF FREESPACE AT A TO THE FREELIST DESCRIBED BY D
* IF THE FREELIST AREA IS FULL, THE SPACE MAY BE LOST
* RETURN NO VALUE



}'PROGRAM TFFBLK;
}'INCLUDE SDEC';

}(DP P65,F65,Q65,L65,R65;
}'DI B65,M65;

}(FUNCTION TFFBLK(A65,N65,POINTER D65);
}'L65_D65.GFLIST;
}'IF L65=0 DO;
}+RETURN IF (F65_FFREE)=0;
}+F65.GFCNT_N65;
}+F65.GFADDR_A65;
}+FFREE_F65.GFPTR;
}+D65.GFLIST_D65.GFROVER_F65.GFPTR_F65;
}+RETURN;
}'ENDIF;
}'R65_D65.GFROVER;
}'P65_(L65 IF R65.GFADDR>A65+N65 ELSE R65);
TFFB1: Q65_P65.GFPTR;
}'IF (B65_P65.GFADDR)+(M65_P65.GFCNT)=A65 DO;
}+IF Q65.GFADDR=A65+N65 DO;
}/P65.GFCNT_M65+N65+Q65.GFCNT;
}/P65.GFPTR_Q65.GFPTR;
}/Q65.GFPTR_FFREE;
}/FFREE_Q65;
}/D65.GFROVER_P65 IF R65=Q65;
}/RETURN;
}+ELSE DO;
}/P65.GFCNT_M65+N65;
}/RETURN;
}+ENDIF;
}'ELSEIF B65=A65+N65 DO;
}+P65.GFADDR_A65;
}+P65.GFCNT_M65+N65;
}+RETURN;
}'ELSEIF B65>A65 DO;
}+RETURN IF (F65_FFREE)=0;
}+FFREE_F65.GFPTR;
}+F65.GFCNT_M65;
}+F65.GFADDR_B65;
}+F65.GFPTR_Q65;
}+P65.GFCNT_N65;
}+P65.GFADDR_A65;
}+P65.GFPTR_F65;
}+RETURN;
}'ENDIF;
}'P65_Q65;
}'GOTO TFFB1;

***
*** TAW(N)
***
* ALLOCATE N WORDS IN WGS
* ACQUIRE A NEW PAGE OF WGS IF REQUIRED
* ERROR IF WGS COLLIDES WITH RSGS
* SET UP VINSA,VIWA,VAA AND RETURN VAA



}'PROGRAM TAW;
}'INCLUDE SDEC';

}(DI I82,J82;

}(FUNCTION TAW(N82);
}'WGCTR_WGCTR+N82;
TAW0:}"VAA_TFGBLK(N82,WGDESC//TAW1)+GBASE;
}'VIWA_U(ATD,IWTAG)+U(VAA,IWGD);
}'VINSA_U(ATD,INSTAG)+U(VAA-GBASE,INSGD);
}'RETURN VAA;
* WRITEABLE GLOBAL STORAGE FULL ?
TAW1:}#CERR(160) IF FFREE=0 OR EWGA>=(J82_BRSGA-MINSL);
}'I82_4000B-(GBASE+EWGA+MINSL)$VWA;
}'I82_J82 IF I82>J82 WHERE I82_EWGA+I82;
}'TFFBLK(EWGA,I82-EWGA,WGDESC);
}'SCPG((GBASE+EWGA)$VPA,-1);
}'EWGA_I82;
}'STKTOP_(STKBOT_GBASE+EWGA)+MINSL;
}'STKCHANGE_1;
}'GOTO TAW0;


***
*** TRW(N,L)
***
* RELEASE N WORDS OF WGS AT G-RELATIVE ADDRESS L

}(FUNCTION TRW(N83,L83);
* TRW ERROR ?
}(CERR(161) IF N83<0 OR L83<BWGA OR L83+N83>EWGA;
}'TFFBLK(L83,N83,WGDESC);
}'RETURN;