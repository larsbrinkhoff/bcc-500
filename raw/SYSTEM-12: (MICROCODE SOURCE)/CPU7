}+ORG 2750B;
BASEFP:}$R0_R0;
}+Q_Q LCY 12, R0_1, GOTO FP2;
}+Q_Q LCY 12, R0_3, GOTO FP2;
}+Q_Q LCY 12, R0_7, GOTO FP2;
}+Z_Q_IR_RES, GOTO FP1;
}+Z_P_P+1, ER_0, SETBA, GOTO NX2;
}+AR_RES_6B7, M_K;
}+Q_1B4, DGOTO TFO;
}+ER_M_M+Q;
*
FP1:}'CALL FRSH;
}+HROV, ER_Q;
}+BR_M, DGOTO FPT;
}+RES_AR_Z, DGOTO TFOL;
*
FP2:}'Z_K, K_Z;
}+ER_Z-Q, Z_K;
}+M_M LCL Z;
}+M_M LCH Z, Q_RES;
}+Q_Q LCL Z;
}+Z_Q LCH Z, Q_R0;
}+AR_RES_Z_M AND Q ! Z AND NOT Q, DGOTO FPT;
}+BR_M_M AND NOT Q, DGOTO TFOL;

FAD1:}&Q_Z-Q, R6_BR, GOTO XCH IF X<0;
}+Z_Q LCY 12, Q_24;
FAD2:}&Z_Q-Z, GOTO FAD5 IF X<0;
*
FAD3:}&M_M LCH Z, GOTO FAD6 IF Z<0;
}+R0_M_M LCL Z, Q_S;
}+M_Q LCH Z;
}+DGOTO Z MRG BASEMSK;
}+SETBB, DGOTO *+1;
}+Z_M LCL Z,M_R0;
}+M_M AND Q ! Z AND NOT Q, S, GOTO FAD7 IF Y<0;
}+Z_Z AND Q, Q_R6;
FAD4:}&BR_M+Q, HROV, Q_IR;
FAD9:}&GOTO FAD8 IF CARRY;
}+AR_RES_Z_Z+Q, HROV, DGOTO TFOL;
FPT:}'M, .VCY, Q_Z_E1, GOTO FNORM IF FPN;
FNORM:}%K_ER, GOTO Q MRG BASEFP;
*
XCH:}'R6_M, M_R6;
}+Q_R0, Z_Q LCY 12 MRG 7777B4;
}+ER_Q, Q_IR;
}+IR_S;
}+S_Q, Q_24, DGOTO FAD3;
}+Z_Q+Z, GOTO FAD5 IF X<0;
*
FAD5:}"Z_Z+Q, M_S, .VCY, DGOTO FAD3 IF Y<0;
}'S_-1;
}'S_0, GOTO FAD3;
*
FAD6:}&M_Z_0, Q_R6, GOTO FAD4;
*
FAD7:}&Z_Z OR NOT Q, Q_R6, DGOTO FAD9;
}+BR_M+Q, HROV, Q_IR;
*
FAD8:}&AR_RES_Z_Z+Q, .LOC, HROV, DGOTO TFOL;
}+M, .VCY, Q_Z_E1, GOTO FNORM IF FPN;
*
FSB1:}&M_NOT M+1, HROV;
}+S_NOT Z, Z_ER, DGOTO FAD1;
}+R0_Q, GOTO FSB2 IF CARRY;
FSB2:}&S_S+1, GOTO FAD1;
FLD1:}&BR_M, SETBA, P_P+1, DGOTO NX2;
}+RES_AR_Z, Z_P;
FMUL1:}%M EOR Q, S_Q_3777B4, GOTO UFN IF LB=0;
}+R0_R6+1, Q_M AND Q, DGOTO FMUL5 IF M[1];
}+MFETCH, Z_M, R0_E1, .VCY, GOTO BPAGEF IF Y<0;
FMUL6:}%K_Q, GOTO FMUL2 IF Z>=0;
}+M_NOT M+1, HROV, S_4B7, CALL FNS;
FMUL2:}%Q_Z;
}+M_M LCY 12;
}+Z_Q LCY 12, Q_7777B;
}+MH1_Z AND NOT Q ! M AND Q, .LSPX_0;
}+ML1_M, Q_7777B, .LSPX_0;
}+Z_AR;
}+M_IR_BR, CALL FROUND;
}+R0_Q_S, GOTO FMUL3 IF Z>=0;
}+R0_NOT Q;
}+M_NOT M+1, HROV, CALL FNS;
FMUL3:}%ML2_M_M LCY 1, .LSPX_0;
}+Q_Z;
}+Z_Q LCY 1, Q_1;
}+MH2_Z AND NOT Q ! M AND Q, Q_K, .LSPX_0;
}+Z_ER, M_1B4;
}+Q_Z+Q;
}+ER_Q+M, HROV;
*}"MULTIPLICATION IS COMPLETED, RESULT IS IN MHR,MMR AND MLR
}+M_MMR, DGOTO FMUL4 IF R0<0, .TSPY_0;
}+Z_MHR, .TSPY_0;
}+BR_M, DGOTO FPT;
}+RES_AR_Z, DGOTO TFOL;
*
FMUL4:}%M_NOT M+1, HROV, CALL FNS;
}+BR_M+0, HROV, DGOTO FPT;
}+RES_AR_Z, DGOTO TFOL;
FMUL5:}%Q_Q MRG 4B7, GOTO FMUL6;
*
FDIV1:}%K_NOT Z, GOTO FDIV2 IF Z>=0;
}+M_NOT M+1, HROV, CALL FNS;
FDIV2:}%DV1_Z, IR_0, GOTO FDIVZ IF Z=0;
}+DV2_M, R6_0;
FDIV3:}%Z_ER, M_1B4;
}+Z_Z-M, RES_37777732B;
}+ER_Z-Q;
}+Z_AR;
}+M_BR, GOTO FDIVD IF Z>=0;
}+S_K, M_NOT M+1, HROV, CALL FNS;
FDIVD:}%S_Z, Z_S;
}+DSIGN_Z;
}+Z_K_M, M_S, DGOTO FDIV7;
}+Q_DV2;
*
FDIV4:}%M_M LCY 1, Q_R6;
}+Z_Q LCY 1, Q_1, DGOTO FDIV5 IF R0>=0;
}+IR_M AND NOT Q ! Z AND Q;
}+R6_Z AND NOT Q, Q_K, DGOTO FDIV6;
}+Z_Q LCY 1, M_S;
FDIV5:}%R6_Z AND NOT Q MRG 2B3, Q_LO;
}+Z_Q LCY 1, M_R0;
FDIV6:}%M_M LCY 1, Q_1;
}+S_M_M AND NOT Q ! Z AND Q, RES, GOTO FDIV9 IF Y<0;
}+K_Z_Z AND NOT Q, Q_DV2;
FDIV7:}%Z_Z-Q, HROV, Q_DV1;
}+LO_Z, RES_RES+1, GOTO FDIV8 IF CARRY;
}+R0_M+NOT Q, M_IR, GOTO FDIV4;
FDIV8:}%R0_M-Q, M_IR, GOTO FDIV4;
*
FDIV9:}%Z_K, Z_M;
}+Z_IR, S_1B3, DGOTO FDIVA IF Z#0;
}+Q_K_ER;
}+S_0;
FDIVA:}%M_R6, CALL FRSH IF Z<0;
}+ER_Q, Q_S;
}+DSIGN, GOTO FDIVC IF Y<0;
FDIVB:}%BR_M OR Q, HROV, DGOTO FPT;
}+RES_AR_Z, DGOTO TFOL;
FDIVC:}%M_NOT M+1, HROV, CALL FNS;
}+GOTO FDIVB;

FCP1:}&Z EOR Q, Z_ER, SETBA, GOTO NX1 IF X<0;
}+Z_Z-M, M_BR;
}+RES_Z EOR Q, Q_K, SETBA, GOTO NX1 IF Z#0;
}+IR_M-Q, HROV, M_AR;
}+Q_S, GOTO FCP2 IF CARRY;
}+RES_Z_M+NOT Q, GOTO FCP3;
FCP2:}&RES_Z_M-Q;
FCP3:}&Z_IR, SETBA, GOTO NX1 IF Z#0;
}+Z_P_P+1, SETBA, GOTO NX2 IF Z=0;
}+RES_1, SETBA, GOTO NX2;

*}"ROUND TO NEAREST NUMBER
*}"IR = M = LOW ORD., Z = HIGH, Q = 7777B, K = EXP
*
FROUND:}$M_Q AND M, Q_2B3;
}+Q EOR M, M_IR, RETURN IF LB=0;
}+M_Q+M, HROV, Q_3777B, DRETURN;
}+M_M AND NOT Q, GOTO FRO1 IF CARRY;
FRO1:}&Z_Z+1, HROV, DRETURN;
}+GOTO FRSH IF OVFLW, IR_Z;
*
*}"SHIFT (Z,M) RIGHT 1.}"IR = Z, K = EXP
*
FRSH:}&M_M LCY 20;
}+M_M LCY 3, Q_IR;
}+Q_Q LCY 20;
}+Z_Q LCY 3, Q_4B7;
}+IR_M AND NOT Q ! Z AND Q, M_IR;
}+M_M AND Q;
}+Z_Z AND NOT Q ! M EOR Q, M_1B4;
}+Q_K, DRETURN;
}+Q_K_M+Q, M_IR;
*

STF1:}&Q_S_Z, SETBA, GOTO ROIA IF D;
}+M_M LCY 12, R0, .VCY, GOTO BCSTORE IF STERR;
}+Z_M LCY 1;
}+Q_Q LCY 12;
}+M_Q LCY 1, Q_17777B;
}+IR_Z AND Q ! M AND NOT Q, Z_K;
}+Q_7777B, S, DGOTO STF2 IF Y<0;
}+M_M AND Q ! Z MRG 4B7, Q_0;
}+Q_4B7;
STF2:}&Q_Q MRG 2B7;
}+Z_IR, M_M EOR Q, STORE;
}+M_Z, R0_R6+1, CALL BSTR1;
}+M_K, DGOTO TFO;
}+GOTO BLL84 IF C;
*
FIXS:}&Q_Q LCY 12, IR_4B7, GOTO FIXS2 IF Z>=0;
}+M, IR_0, GOTO FIXS3 IF LB#0;
}+S_NOT Z+1, GOTO FIXS2;
FIXS3:}%S_NOT Z;
FIXS2:}%R6, M_22, GOTO FIXS1 IF Y<0;
}+R0_Q_M-Q, M_24;
}+Z_M-Q, M_S, GOTO FXTRP IF R0<0;
}+M_M LCL Z;
}+DGOTO Z MRG BASEMSK;
}+SETBB, DGOTO *+1;
}+M_M LCH Z;
}+Z_M AND Q, IR, RETURN IF Y<0;
}+Z_NOT M OR NOT Q+1, RETURN;
FIXS1:}%Z_0, RETURN;

TFOL:}&M_ER;
TFO:}'Z_P_P+1, Q_0, SETBA, GOTO NX2 IF M[0]=M[1];
TFO1:}&M, IR_2, .VCY, SETBA, GOTO RDTRAP IF X>=0;*}"FOV
}+IR_3, SETBA, GOTO RDTRAP;}0*}"FUFL
*
FDIVZ:}%IR_8, Q_0, SETBA, GOTO RDTRAP;
FXTRP:}%IR_7, Q_0, SETBA, GOTO RDTRAP;
UFN:}'IR_6, Q_0, SETBA, GOTO RDTRAP;

FLX1:}&CALL FIXS;
}+XR_Z, Z_P_P+1, SETBA, GOTO NX2;
FIX1:}&M_Q, R6_Q_ER, CALL FIXS;
}+AR_RES_Z, SETBA, GOTO NX1;
FNA1:}&AR_RES_NOT Z+1, SETBA, GOTO NX1 IF CARRY;
}+AR_RES_NOT Z, SETBA, GOTO NX1;
FLOAT1:}$RES_Z+0, HROV, DGOTO FPT;
}+ER_26B4, DGOTO TFOL;
*
FOP1:}&FETCH;
}+SETBA, GOTO TI IF A;
}+CLEARA;
FOP:}'S_M_M EOR Q, Q_2001B4, GOTO FOP1 IF AORB;
}+M EOR Q, Q_3777B4, GOTO UFN IF LB=0;
}+R0_R6+1, Z_M AND Q;
}+Q_NOT M LCY 3 MRG 1B5, DGOTO FOP3 IF M[1];
}+MFETCH, R0_E1, .VCY, GOTO BPAGEF IF Y<0;
}+R6_Z;
FOP2:}&Z_NOT Q LCY 8, R0_S, DGOTO FOP4 IF Y<0;
}+M_M LCY 3, DGOTO *+1 IF R0<0;
}+M_M LCY 8, Q_3777B;
}+S_Z_Z AND NOT Q ! M AND Q, DRETURN;
}+K_M_M AND NOT Q, Q_R6;
*
FOP3:}&R6_Z MRG 4B7, GOTO FOP2;
*
FOP4:}&Z_Z MRG 4B7;
*
*
*}"FLOATING NEGATE, CALL:}"M_NOT M+1, HROV, CALL FNS
*
FNS:}'DRETURN;
}+Z_NOT Z, GOTO FNS1 IF CARRY;
FNS1:}&Z_Z+1, RETURN;
}+ALL;
}+ALL;
}+SETBA, CALL 1776B;}#*ILLEGAL MICROINSTRUCTION

*
}+END;