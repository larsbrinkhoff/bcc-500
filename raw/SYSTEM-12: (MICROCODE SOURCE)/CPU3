*
}+ORG 700B;
*
*
*
*}"THE FOLLOWING CODE IS ENTERED IF AN EMPTY
*}$PAGE IS REFERENCED, OR THE RING PROTECTION
*}$IS VIOLATED.
*
PAGEF:}%M_Z_R0 , Q_0, SETA, GOTO PAGE1;
*
*}"OR IF A STORE IS ATTEMPTED INTO A PAGE WHICH
*}"IS READ-ONLY OR NOT DIRTY.
CSTORE:}$Z_Q_M_R0, CLEARA, GOTO PAGEF IF R0<0;
*}"PREPARE MACC TRAP (#1)
PAGE1:}%R0_Q LCY 3, Q_3777B, GOTO PAGE5 IF M[4];
}+MAPAD, M_E1, IR_1, DGOTO MACC IF M[1];
}+PARAM_Z AND Q ! M AND NOT Q, Q_77B, GOTO PRO IF R0<0;
}+Z_M LCY 12, M_MBA;
}+R0_Z AND Q+M, .VCY, Q_7777B, DGOTO PAGE2 IF Z<0;
}+FETCH;
}+M_M LCY 12;
PAGE2:}%MAPRO_M_M AND Q, Q_377B;
}+Z_M AND Q LCY 2, Q_MBA;
*}"60 IS 300B-200B-4
}+Z_Z+Q, Q_60, GOTO PNIM IF Z=0;
}+R0_Z+Q;
}+FETCH, Z_P;
}+UN0_Z_M, R0_R0+1, SSOURCE;
}+FETCH, IR_Q;
}+UN1_M, R0_R0+1;
}+R0_R0+1, Q_2B7, FETCH;
}+M LCY 12, K_0, GOTO PNIC IF X>=0;
}+PMTRO_M_M OR Q, STORE, K_0; * PREPARE PNIC TRAP
}+Q_Z, M_UN1, CALL CHTSRCH;
}+Q_4B7, DGOTO PAGE3 IF A;
}+IR_M AND Q LCY 8;
}+M_M OR Q, IR_200B, STORE;
PAGE3:}%M_NOT M LCY 12 MRG 3777700B, Q_MAPRO;
}+Z_NOT M LCY 1, M_PMTRO;
}+Q_Q LCY 12;
}+M_M OR Q LCY 8, Q_200B;
}+M_M AND Q LCY 1, Q_IR;
}+Q_Q LCY 2, R0_PARAM;
}+Z_M OR Q ! Z;
}+ZTOMAP, .VCY, DGOTO IDLE3;
*}"BEWARE OF DIRTY TRICK
PNIC:}&Q_K, M_2, UNPROTECT;
*}"NOTE THAT 2 AND 4 = 0 USED AT PAGE4
}+Q, Q_IR_4, GOTO PAGE4 IF X>=0;
*}"SEND STROBE2 IF UN NOT FOUND AT WAKEUP
}+M_K, 2, STOP;}2* STROBE2,
}+R0_Y_CPUNO*4+2454B, STORE, GOTO 1721B;
}+S_3B6, CLEARA, GOTO TOSP2;
*
PNIM:}&IR_3, Q_0, GOTO PAGE4;
PRO:}'IR_2, Q_0, GOTO PAGE4;
MACC:}&M_4B5, Q_E1, READS;
PAGE4:}%Q_M AND Q LCY 1, Q_PARAM, GOTO FIXTRP;
*
*}"SCAN PHYSICAL MAP FOR PAGE
PAGE5:}%R0_Y_CPUNO*4+2455B, FETCH;
}+Z_M;
}+SCAN, E1, M_4B7, GOTO PAGE6 IF Y<0;
}+STORE, IR_12, Q_0, GOTO FIXTRP;
PAGE6:}%STORE, GOTO IDLE3;
*
*
*}"Q=UN0, M=UN1, ROUTINE PUTS CHT INDEX+1 INTO R0
*
CHTSRCH:}#Q_IR_M EOR Q, M_132B3;
}+2, PROTECT, GOTO * IF NPROTECT;
}+M_M EOR Q LCY 8, Z_400B;
}+M_M EOR Q LCY 8 MRG 777774B2, Q_IR, .TCY_1;
}+R0_M EOR Q+Z;
CHT1:}&FETCH, Q_77B6;
}+IR_R0_M AND NOT Q;
}+FETCH, NOT M AND NOT Q, Q_UN0, GOTO PNIC IF LB=0;
}+R0_R0+1, Q EOR M, GOTO CHT2 IF LB#0;
}+FETCH, Q_UN1;
}+Q EOR M, R0_R0+1, GOTO CHT3 IF LB=0;
CHT2:}&Z_IR, Q_5, DGOTO CHT1;
}+R0_Z+Q, Q_77B6;
CHT3:}&R0_R0+1, FETCH, Q_36B6, DRETURN;
}+M AND Q, Q_774B3, GOTO PNIC IF LB#0;
*
*}"K=BASE ADDRESS-1, DO NOT CHANGE HOLDING REGISTERS
*
SSTATE:}$R6_OS;
}+R0_K_K+1;
}+M_P, CALL SST2 IF B;
}+M_AR, CALL SST1;
}+M_BR, CALL SST1;
}+M_CR, CALL SST1;
}+M_DR, CALL SST1;
}+M_ER, CALL SST1;
}+R0_K_K+1;
}+M_XR, CALL SST2 IF B;
}+M_LR, CALL SST1;
}+M_GR, CALL SST1;
}+CALL GETSR;
}+Z_R6, CALL SST1;
}+GOTO Z;
*
*}"S=BASE ADDRESS
*
LSTATE:}$R6_OS;
}+R0_S, CALL LST1;
}+R0_S_S+1, Q_M, CALL LST1;
}+R0_S_S+1, AR_M, CALL LST1;
}+R0_S_S+1, BR_M, CALL LST1;
}+R0_S_S+1, CR_M, CALL LST1;
}+R0_S_S+1, DR_M, CALL LST1;
}+R0_S_S+1, ER_M, CALL LST1;
}+R0_S_S+1, XX_M, CALL LST1;
}+R0_S_S+1, LR_M, CALL LST1;
}+R0_S_S+1, GR_M, CALL LST1;
}+K_Q, CALL LOADSR;
}+Z_R6;
}+Q_K, GOTO Z;
*
*}"LOAD OR STORE ABSOLUTE DEPENDING ON B
SST1:}&R0_K_K+1;
SST2:}&MAP, GOTO SST3 IF B;
}+R0_E1, GOTO CSTORE IF STERR, .VCY;
SST3:}&E1, STORE, RETURN;
*
LST1:}&MAP, GOTO LST2 IF B;
}+R0_E1, GOTO PAGEF IF Y<0;
LST2:}&E1, FETCH, RETURN;
*
*}"TRAPNO=TRAP, Q_PARAM
RDTRAP:}$Z_GR, M_4, GOTO TOSP IF INTRPT1;
}+R0_K_Z+M, Z_M_P, ABCD0;
}+R6_15000006B, SSOURCE, CALL STOR1;
}+M_Q, CALL STORX;
}+R0_S_K+1, GOTO IA;
*
FIXTRP:}$S_Q, Z_6B5, SETB;
}+SSOURCE, K_MBA MRG 2751B, CALL SSTATE;
}+M_S, Q_61B, X23LCK;
}+4, Z_SR, PROTECT, GOTO * IF NPROTECT;
}+SR_Z AND NOT Q, Z_IR, CLM940;
}+XR_Z;
}+AR_M, Q_6B5, ABCD0, DGOTO NX5;
}+GR_Q, R0_P_Z_604002B;
*
T940:}&P, GOTO NY8 IF M940;
TOSP:}&S_3B6, CLEARA, GOTO TOSP1 IF TO;
TOSP2:}%K_MBA MRG 2763B, SETB, CALL SSTATE;
}+Z_CTCR, ALERT;
}+PIN, M_E2, CALL SST1;
}+Z_ITR, ALERT;
}+Z_8, PIN, M_E2, CALL SST1;
}+Q_M LCY 8, M_PRTINDEX, DGOTO TOSP3 IF SPANL;
}+R0_Z+M,}"GOTO TOSP3 IF A;
}+Q_12343210B, M_0;
}+R0_Y_23B+CPUNO, STORE;
BRK:}'Q EOR M, Z_406B5, GOTO IDLE2 IF LB=0;
TOSP3:}%Z_6B5, FETCH, GOTO BRK IF Z<0;
}+Z_Q LCY 1, Q_776B5;
}+M_M AND NOT Q ! Z AND Q, Z_2, STORE;
TOSP4:}%10B, PROTECT, GOTO * IF NPROTECT;
}+R0_Y_USIBTOP, FETCH;
}+M_M+Z, Q_USIBMSK;
}+M AND Q, GOTO TOSP5 IF LB=0;
}+STORE;
}'R0_M, M_S, .VCY, .TSPY, .SSP_@PRTINDEX, CALL SST3, START/STOP; * M_PRTINDEX;
}+M_CPUNO , R0_R0+1, STORE;
}+10B, M_0, UNPROTECT, DGOTO IDLE;
}+2, STROBE;
*
*
*}"SYSTEM INITIALIZING
*
RSET1:}%17B, UNPROTECT;
}+2, LPF;
}+CLEARSP;
}+X23LCK;
}+CRSL2;
}+NONE;
*
*
IDLE:}&R0_6+CPUNO, GOTO IDLE1 IF NSP;
}+CLEARSP, GOTO IDLEA;
IDLE1:}%R0_Y_CPUNO*4+2455B;
}+M, M_4B7, GOTO IDLE IF X<0;
}+SCAN;
},GOTO IDLE;
IDLEA:}%FETCH;
}+Q_M, M_0, X23LCK, GOTO IDLEA IF LB=0;
}+STORE, PRTINDEX_IR_Q;
}+R0_IR, FETCH;
}+4, UNPROTECT;
}+UN0_Q_M, R0_R0+1, FETCH;
*}"NOTE THAT K IS PREPARED TO CRASH IF PNIC
}+UN1_M, K_4B7, SETB, CALL CHTSRCH;
}+MBA_M_M AND Q MRG 200B, CLEARMAP;
}+Q_M LCY 12, R0_602764B;
*}"SET DIRTY BIT IN CONTEXT BLOCK ENTRY
}+Z_Q LCY 1 MRG 1000B, DGOTO PATCH;
}+ZTOMAP, .VCY, Z_R0;
IDLE2:}%S_MBA MRG 2764B, SSOURCE, CALL LSTATE;
}+R0_S_S+1, Z_CTCL, CALL LST1;
}+Q_XX, P_Q, ALERT;
}+POT, Z_M, R0_S+1, CALL LST1;
}+XR_Q, Z_ITL, ALERT;
}+Z_M, POT;
}+2;}.*UNPROTECT REMOVED
IDLE3:}%R0_S_Z_P, ABCD0;
}+MFETCH, R0_E1, .VCY, GOTO PAGEF IF Y<0;
}+R0+1, TAKE, DGOTO NX3;
}+R6_M, Q_7B7, SSOURCE, GOTO 1712B IF INTRPT3;
*
TOSP5:}%10B, UNPROTECT, GOTO TOSP4;
*
TOSP1:}%IR_5, Q_0, GOTO FIXTRP;
*
*
*
*
*
*
NY1:}'Z_P_P+1;
NY2:}'M_NI, SABCDE0, GOTO NY6 IF INTRPT, .C_1, .TSPY_0;
NY3:}'R0_H2_M LCY 1, Z_XR, DGOTO INDEX IF M[1];
}+H3_X_M, Q_7774B4, SETA, GOTO POP940 IF R0[1];
NY4:}'Z_R0_H1_M AND NOT Q, GOTO INDIRECT IF M[9];
NY5:}'M_H2, Q_176B5, GOTO NY9;
}+GOTO TOSP;
NY9:}'Q_AR, DGOTO M AND Q LCY 8 MRG BASE940 IF A;
}+MFETCH, .VCY, R0_E1, DGOTO ASGNA IF A;
*}"A HAS BEEN CLEARED IF THE INSTRUCTION IS A SYSPOP
}+M_H2, Q_176B5, RESETCM;
}+IR_M AND Q LCY 8, Q_LR;
}+Z_3, ABCD0;
}+Z_R0_Z+Q, M_P, CALL STOR1;
}+K_Z-1, CALL SSTATE;
}+Q_LR, Z_9;
}+R0_Q+Z, M_XR, CALL STOR1;
}+M_IR;
}+XR_M, M_H1;
}+AR_M, Z_2, DGOTO NX5;
}+R0_Z_P_Z+Q, CLM940;
*
*}"PAGE CROSSING IN THE INSTUCTION SEQUENCE
NY6:}'R0_P+1, .C_1, GOTO TOSP IF INTRPT2;
NY8:}'MAP, DGOTO NY3;
}+R0_E1, TAKE, GOTO PAGEF IF Y<0;
*
*}"ENTRY TO THE MAIN LOOP AT INSTRUCTION R0=Z
NY7:}'MFETCH, R0_E1, .VCY, GOTO PAGEF IF Y<0;
}+GOTO BRU1, ABCD0;
*
*
INDEX:}%Z_M+Z, GOTO INDA;
* 
INDIRECT:}"MFETCH, .VCY, R0_E1, Z_114B5, GOTO TOSP IF INTRPT1;
}+Q_H2;
}+Q_Q EOR Z, Z_176B5;
}+Z_Q AND Z, Q_H2;
}+Z_132B5, GOTO RCH IF Z=0;
}+Z_Q AND Z;
}+Q_7774B4, GOTO NY5 IF Z=0;
}+H3_M, Z_XR, DGOTO INDEX IF M[1];
}+GOTO PAGEF IF R0<0;
}+GOTO NY4;
* 
ASGNA:}%GOTO PAGEF IF R0<0;
}+AR_M, DGOTO NY2;
}+Z_P_P+1;
* 
BRX1:}&XR_Z_Z+1, Q_4B4;
}+Z_Z AND Q, DGOTO 1710B;
}+Z_H1, GOTO NY1 IF Z=0, ABCD0;
*}"BRU, Z=EFF. ADDRESS, M=NEW INSTR. , R0=Z MAPPED
BRU1:}&P_Z, R0+1, TAKE, DGOTO NY3;
}+R0_P+1, SABCDE0, GOTO 1706B IF INTRPT, .C_1;
* 
XMA1:}&R0, GOTO CSTORE IF STERR, .VCY;
}+AR_M, M_H1;
ST940:}%R0, GOTO CSTORE IF STERR, .VCY;
}+STORE, Z_P_P+1, GOTO NY2;
*
BRM1:}&Z_H1+1, DGOTO BRM2 IF OV;
BRM3:}&M_M OR Q, Q_4B7, GOTO CSTORE IF R0[2];
}+M_M EOR Q;
BRM2:}&STORE, DGOTO NY7;
}+R0_Z;
* 
SKB1:}&Z_M AND Q;
SKE1:}&Z_P, Q_2, GOTO NY1 IF Z#0;
}+R0_Z_Z+Q, GOTO NY7;
* 
BRR1:}&Z_R0_M AND NOT Q, Q_4B7, GOTO NY7 IF Z>=0;
}+Q+M, ROV, GOTO NY7;
* 
*
SUC1:}&GOTO SUB IF Z<0;
}+M_Q+NOT M, ROV, GOTO ADD1;
ADC1:}&GOTO ADD IF Z>=0;
}+M_Q+M, .LOC, ROV;
ADD1:}&AR_M, Q_4B7, GOTO ADD2 IF CAR;
}+XR_Z AND NOT Q, Z_P_P+1, GOTO NY2;
ADD2:}&XR_Z OR Q, Z_P_P+1, GOTO NY2;
* 
SKR1:}&Z_M, Q_2, GOTO CSTORE IF R0[2];
}+STORE, Z_P, GOTO NY1 IF Z>=0;
}+R0_Z_Z+Q, GOTO NY7;
* 
SKM1:}&Z_M AND Q, GOTO SKE1;
* 
EAX1:}&Z_H1;
LDX1:}&XR_M AND NOT Q ! Q AND Z, Z_P_P+1, GOTO NY2;
* 
LDB1:}&BR_M, Z_P_P+1, GOTO NY2;
*
SKG1:}&GOTO SKG2 IF OVFLW;
SKN1:}&Z_P, Q_2, GOTO NY1 IF Z>=0;
}+Z_R0_Z+Q, GOTO NY7;
SKG2:}&Z_P, Q_2, GOTO NY1 IF Z<0;
}+R0_Z_Z+Q, GOTO NY7;
*
ROV1:}&Q AND M, M_2, GOTO REO IF LB#0;
}+Q AND M, Q_E1, GSB, GOTO ROV2 IF LB=0;
}+CLEAROV;
ROV2:}&GOTO NY1 IF NZ[16];
}+Z_Q AND M, GOTO SKE1;
REO:}'Q_M_XR, Z_37777B3;
}+M_M LCY 1;
}+M_M EOR Q, Q_1B3, DGOTO NY2;
}+M AND Q+Z, ROV, Z_P_P+1;
*
RCH1:}&M_M LCY 12, H2_0, GOTO RCH2 IF NZ[16];
}+Q_77777B3;
RCH2:}&M_M LCY 1, Z_AR, CALL CNA IF X<0;}+*}"CNA
}+M_M LCY 1, Z_AR, CALL CX IF X<0;},*}"CAX
}+M_M LCY 1, Z_XR, CALL CA IF X<0;},*}"CXA
}+M_M LCY 2, CALL CB IF X<0;}2*}"CXB
}+M_M LCY 1, Z_BR, CALL CX IF X<0;},*}"CBX
}+M_M LCY 1, Z_BR, CALL CA IF X<0;},*}"CBA
}+M_M LCY 1, Z_AR, CALL CB IF X<0;},*}"CAB
}+M_M LCY 1, Z_0, CALL CB IF X<0;}-*}"CLB
}+M_M LCY 1, CALL CA IF X<0;}2*}"CLA
}+M_M LCY 2, CALL CX IF X<0;}2*}"CLX
}+Z_R0, CALL CCA IF A;
}+Z_H1, CALL CCB IF B;
}+Z_H2, CALL CCX IF D;
}+Z_P_P+1, GOTO NY2;
*
CCA:}'M_AR, DRETURN;
}+AR_M AND Q ! Z AND NOT Q;
CCB:}'M_BR, DRETURN;
}+BR_M AND Q ! Z AND NOT Q;
CCX:}'XR_Z AND NOT Q, RETURN IF NZ[15];
}+XR_Z OR Q, RETURN;
*
CNA:}'Z_NOT Z+1;
CA:}(R0_R0, .TXW, Z, SETA, RETURN;
CB:}(H1_H1, .TXW, Z, SETB, RETURN;
CX:}(H2_H2, .TXW, Z, SETD, RETURN;
*
SKD1:}&M_Z AND Q, Z_BR, GOTO SKD2 IF NZ[15];
}+M_M OR NOT Q;
SKD2:}&Q_Z AND Q, Z_777B, GOTO SKD3 IF NZ[15];
}+Q_Q OR NOT Z;
SKD3:}&R0_Z_Q-M;
}+M_Q EOR M, Q_777B, GOTO SKD4 IF R0>=0;
}+Z_NOT Z+1;
SKD4:}&XR_M AND NOT Q ! Q AND Z, Z_R0, GOTO SKN1;
*
RS1:}'R0_M LCY 8, M_H1;
}+CLEARA, M_M AND Q, Q_48, DGOTO RCY IF R0[2];
}+Z_NOT M+1, M_H3, DGOTO ASDR IF NR0[2];
}+M_BR, Q_77B, GOTO NY1 IF Z=0;
RCY:}'M LCY 12, Q_48, GOTO LRSH IF X<0;
}+R0_Z_Q+Z, DGOTO CYDL;
}+Q_77B, GOTO NX1 IF R0<0;
LRSH:}&M_BR, Q_77B, SETA, GOTO ASDR;
LS1:}'M_M LCY 2, Z_H1;
}+CLEARA, Z_Z AND Q, R0_Q_48, GOTO NORM IF M[9];
}+M LCY 8, M_BR, GOTO ASDL IF X>=0;
}+R0_Q-Z, DGOTO CYDL;
NORM:}&S_M_AR, SETC, GOTO NY1 IF R0<0;
}+Q_BR, K_Z, SETBB, CALL LLT1;
}+Z_Z-1, M_XR, GOTO NORM1 IF Z#0;
}+Z_47, S, GOTO NORM1 IF Y<0;
}+Z_48;
NORM1:}%Q-Z, GOTO NORM2 IF X>=0;
}+Z_Q;
NORM2:}%XR_M-Z, DGOTO ASDL;
}+M_BR, SETA;
*
*
POP940:}$H3, GOTO SYSPOP IF Y<0;
}+M_H2, R0_0;
}+MAP, .VCY, R0_E1, Q_376B5, GOTO CSTORE IF STERR;
}+Z_M AND Q LCY 8, Q_4324B4, DGOTO BRM3;
}+M_P, CLEAROV, DGOTO BRM2 IF OV;
*
SYSPOP:}$CLEARA, DGOTO NY4;
}+GOTO INDEX IF M[1];
*
*
*
*
}+R0_P+1, GOTO NX6 IF XPAGE;
}+GOTO NY3;
}+END;