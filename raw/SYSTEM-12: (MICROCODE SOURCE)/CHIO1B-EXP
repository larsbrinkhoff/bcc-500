*IBF: INPUT BIT FOUND
*THIS IS CALLED TO PROCESS AN INPUT ON BIT ON AN INPUT LINE THAT IS
*NOT RECEIVING A CHARACTER AT THE TIME. IT ASSUMES IT IS THE LEADING 
*ONE BIT THAT HEROLDS THE START OF A CHARACTER
*IBF TURNS ON THE INPUT BIT FOR THE TTY FOR (THIS BIT SLICE + 3) MOD 7
*IT ALSO TURNS OFF BIT IN NCIP
*
* ARGUMENTS:
*}'M: WORD CONTAINING CIP
*}'R0: ADDRESS OF CIP
*
*VALUE: NONE
*
*SIDE EFFECTS: BIT TABLE UPDATED TO REFLECT INCOMING BIT
*
*
}'ORG 637B;

637:}"IBF:}#M _ M MRG -20000B, STORE
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.TCX = 1}#43
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
.C = -20000}#18,19,20,21,22,23,24,25,26,27,28,
}'
640:}"Z _ BTIME, Q _ 8
.SSP = 33}#56,55,53,52
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.C = 10}#38,
}'
641:}"GOTO IBF1 ON Z AND Q#0, M _ 10B
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.MC = 3}#5,4
.B = 643}$9,10,12,16,17,
.C = 10}#38,
CHECKBIT IS 56}#
}'
642:}"M _ -6
.TCX = 1}#43
.LMX = 1}#72
.VCYP = 1}#86
.C = -6}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,
*SET BIT AT 3 BIT SLICES FURTHER ON, THIS IS DONE BY ADDING
*16 MOD 16 THE THE POINTER INTO THE BIT TABLE WHICH IS
*DONE BY ADDING 8 OR SUBTRACTING 8

643:}"IBF1:}"HFETCH R0_Z - M, Q _ LBIT
.BR = 4}#83
.BL = 13}#81,80,78
.SSP = 23}#56,55,52
.MS = 45}#65,63,60
.LOC = 1}#50
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
644:}"M _ Q OR M, STORE
.BR = 10}#82
.BL = 6}#80,79
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
645:}"HFETCH R0_LBTBE MRG NCIP/1B4, DRETURN
.MCONT = 2}#6
.SSP = 35}#56,54,53,52
.MS = 45}#65,63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.MC = 1}#5,
.DGO = 1}#87
.C = 16}#38,39,40,
}'
646:}"M _ M AND NOT Q, STORE
.BR = 10}#82
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
*

*
*INLOGIC: INPUT CHARACTER LOGIC
*INLOGIC DOES THE FOLLOWING
*
*}'1) WRITES CHARACTER IN THE INPUT LINE
*}'2) DECIDES IF PROCESS SHOULD BE AWAKENED
*}'3) DECIDES IF CHARACTER SHOULD BE ECHOED
*}'4) IF CHARACTER SHOULD BE ECHOED IT DOES THIS FOR LINKED LINE
*}'5) IF PROCESS IS AWAKENED AND AWT =0 SET AWT TO XWT (BY WAKEUP)
*}'6) IF CHARACTER IS A BREAK CHARACTER ECHO IT IF EBC IS OFF
*}'7) IF A BREAK CHARACTER, SET CLE BIT
*}'8) IF CHAR IS A CARRAIGE RETURN AND LFK BIT IS ON INSERT LINE FEED
*
*IF THE CHARACTER IS > 400B IT WILL WRITE A SHIFT1 AND THEN THE 
*CHARACTER MOD 400B IN THE LINPUT LINE
*
* ARGUMENTS:
*}'M: CHAR
*
*VALUE: NONE
*
*LEVEL: 3
*
*SUBROUTINES CALLED: WCH1, GLE, WAKEUP, WKCQ,ECHO;
*
*SIDEEFFECTS: NONE
*

647:}"INLOGIC:}#Z _ OS,}"Q _ MSK7*TWO0, GOTO SH4
.TCX = 1}#43
.LQX = 1}#74
.LZY = 1}#77
.MC = 20}#1
.VCYP = 1}#86
.TOSY = 1}#57
.B = 1574}$8,9,11,12,13,14,15,
.C = 377}#34,35,36,37,38,39,40,41,

650:}"INL1:}"CHARI _ M, Q _ 377B
.BR = 10}#82
.BL = 4}#79
.SSP = 53}#56,55,53,51
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
651:}"GOTO CHRS2 ON M AND NOT Q # 0
.BR = 10}#82
.BL = 14}#79,78
.TAX = 1}#49
.MC = 3}#5,4
.B = 675}$9,10,12,13,14,15,17,

652:}"INLL:}"CHAR _ M AND Q, CALL WCH1
.MCONT = 1}#7
.BR = 10}#82
.SSP = 22}#55,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5
.B = 1420}$8,9,13,
CHECKBIT IS 30}#
*Z <= 0 IF CNT > WKCNT
}'
653:}"DGOTO WCIL2 IF Z<0
.MC = 17}#5,4,3,2
.DGO = 1}#87
.VCYP = 1}#86
.B = 677}$9,10,12,13,14,15,16,17,
CHECKBIT IS 30}#
}'
654:}"CALL WKCQ, M _ CHARI
.MCONT = 1}#7
.SSP = 53}#56,55,53,51
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1,
.B = 1431}$8,9,13,14,17,
*Z HAS WAKEUP/CHARACTER TYPE

655:}"WCIL0:}$M _ WD1, Q _ MSK0*TWO18
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 1000000}#23,
*ECHO CHARACTER IF CLE IS OFF AND CHARACTER NOT, BREAK;
*IF CHARACTER QUIT OR ESCAPE NOT ECHO IT, IF BREAK, ECHO
*ACCORDING TO EBC, AND SET CLE
}'
656:}"GOTO NOECH ON M AND Q # 0, Q _ WKB
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 667}$9,10,12,13,15,16,17,
.C = 2}#40,
CHECKBIT IS 56}#
}'
657:}"GOTO DOECH ON Z -Q < 0, Q _MSK0*TWO18
.BR = 4}#83
.BL = 15}#81,79,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 4}#3
.B = 663}$9,10,12,13,16,17,
.C = 1000000}#23,
CHECKBIT IS 56}#
*CHARACTER IS BREAK TURN ON CLE
}'
660:}"WD1 _ M _ M OR Q
.BR = 10}#82
.BL = 6}#80,79
.SSP = 24}#54,52
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
661:}"STORE R0_MTAE MRG CLE/1B4, Q _ MSK0*TWO6
.SSP = 10}#53
.MS = 42}#64,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.C = 100}#35,
}'
662:}"GOTO NOECH ON M AND Q =0
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 667}$9,10,12,13,15,16,17,
CHECKBIT IS 30}#
*WAKEUP PROCESS AND ECHO CHARACTER

663:}"DOECH:}$CALL WAKEUP ON Z # 0
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.TAX = 1}#49
.MC = 3}#5,4
.B = 1334}$8,10,11,13,14,15,
CHECKBIT IS 30}#
}'
664:}"M _ CHARI, Q _ MSK7*TWO0
.SSP = 53}#56,55,53,51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
665:}"CHAR _ M AND Q, CALL ECHO
.MCONT = 1}#7
.BR = 10}#82
.SSP = 22}#55,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 357}$10,11,12,14,15,16,17,
CHECKBIT IS 30}#
}'
666:}"GOTO NOECC
.MC = 20}#1,
.VCYP = 1}#86
.B = 670}$9,10,12,13,14,
*JUST WAKEUP PROCESS

667:}"NOECH:}$CALL WAKEUP ON Z # 0
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.TAX = 1}#49
.MC = 3}#5,4
.B = 1334}$8,10,11,13,14,15,
CHECKBIT IS 30}#
*IF CHARACTER IS A CARRAIGE RETURN AND LFK IS ON}"INSERT LINE FEED
*(MAKES SENSE FOR MODEL 35 ONLY)

670:}"NOECC:}$M _ CHARI, Q _ CRET
.SSP = 53}#56,55,53,51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 215}#34,38,39,41,
CHECKBIT IS 87}#
}'
671:}"GOTO RTSS3 ON M - Q # 0, Q _ MSK0*TWO14
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 26}$13,15,16,
.C = 40000}#27,
CHECKBIT IS 56}#
}'
672:}"FETCH R0_MTAE MRG LFK/1B4
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 3}#40,41,
}'
673:}"GOTO RTSS3 ON M AND Q =0, Q _ 377B
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 26}$13,15,16,
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
674:}"CHAR _ M _ LINEFD, GOTO INL1
.SSP = 22}#55,52
.TCX = 1}#43
.LMX = 1}#72
.LSPX = 1}#59
.MC = 1}#5
.B = 650}$9,10,12,14,
.C = 212}#34,38,40,

675:}"CHRS2:}$CHAR _ SHIFT1, CALL WCH1
.MCONT = 1}#7
.SSP = 22}#55,52
.TCX = 1}#43
.LSPX = 1}#59
.MC = 20}#1
.B = 1420}$8,9,13,
.C = 37}#37,38,39,40,41,
CHECKBIT IS 50}#
}'
676:}"M _ CHARI, Q _ MSK7*TWO0, GOTO INLL
.SSP = 53}#56,55,53,51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 1}#5
.B = 652}$9,10,12,14,16,
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 50}#
*

677:}"WCIL2:}$GOTO WCIL0 ON Z-WKI>=0
.BR = 4}#83
.BL = 7}#81,80,79
.TAX = 1}#49
.MC = 5}#5,3
.B = 655}$9,10,12,14,15,17,
}'
700:}"Z _ WKI, GOTO WCIL0
.BL = 10}'78,
.BR = 10}'82,
.LOC = 1}'50
.TAX = 1}'49
.LZX = 1}#76
.MC = 20}#1,
.VCYP = 1}#86
.B = 655}$9,10,12,14,15,17,
*

*
*INL2: CONVERT FROM ABSOLUTE SET (0-377B)}"AND CALL INLOGIC
*
*INL2 CONVERT CHARS IN THE RANGE FRM 0 TO 37 TO
*CHARACTERS IN THE RANGE 440 TO 447 WO INLOGIC WILL PRINT THEM 
*AS SHIFT1 THEN 40+ CHARACTER, SO CHAR WILL NOT BE CONFUSEED
*WITH A CONTROL CHARACTER
* ARGUMENTS:
*}'M: CHAR
*
*VALUE: NONE
*
*LEVEL: 3
*
*SUBROUTINES CALLED: INLOGIC(GOTO)
*

701:}"INL2:}$Q _ 37B
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 37}#37,38,39,40,41,
CHECKBIT IS 87}#
}'
702:}"GOTO INLOGIC ON M AND NOT Q # 0, Q _ MSK7*TWO0
.BR = 10}#82
.BL = 14}#79,78
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 647}$9,10,12,15,16,17,
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
703:}"M _ M AND Q MRG SHIFT1*400B+40B, GOTO INLOGIC
.BR = 10}#82
.TCX = 1}#43
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5,
.VCYP = 1}#86
.B = 647}$9,10,12,15,16,17,
.C = 17440}#29,30,31,32,33,36,
CHECKBIT IS 56}#
*

*
*IRCH: INITIALIZE RCH
*
*MUST BE CALLED BEFORE A SERIES OF RCHS
*
* ARGUMENTS:
*}'M: READ POINTER;
*}'Q: END READ POINTER;
*}'Z: LINK TO NEXT BUFFER SUBROUTINE
*
*VALUE: NONE
*
*SIDE EFFECTS: RWORD, RCP, RBUF, RCPEND ARE SETUP
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*
*

704:}"IRCH:}%FETCH R0_RCP _ M
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.TXW = 1}#47
.TAX = 1}#49
.LRN = 5}#71,69
.LR0 = 1}#58
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
705:}"RCPEND _ Q
.BR = 10}#82
.BL = 2}#80
.SSP = 32}#55,53,52
.TAX = 1}#49
.LSPX = 1}#59
}(
706:}"RBUF _ Z, DRETURN
.MCONT = 2}#6
.BR = 4}#83
.BL = 10}#78
.SSP = 26}#55,54,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}#1,
.DGO = 1}#87
CHECKBIT IS 30}#
}(
707:}"RWORD _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 30}#53,52
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
*

*
*IWCH: INITIALIZE WRITE CHARACTER SUBROUTINE
*
*THIS MUST BE CALLED BEFORE A SERIES OF WCHS ARE CALLED.
*
* ARGUMENTS:
*}'Q: WRITE CHARACTER POINTER.
*}'Z: LOCATION OF SUBROUTINE TO CALL TO LINK TO NEXT BUFFER
*
*VALUE: NONE
*
*LEVEL: -
*
*SIDE EFFECTS: WBUF, WCP, AND WWORD ARE SETUP, WCNT _ 0
*
*SUBROUTINES CALLED: NONE
*

710:}"IWCH:}$FETCH R0_WCP _ Q
.BR = 10}#82
.BL = 2}#80
.MS = 44}#63,60
.TXW = 1}#47
.TAX = 1}#49
.LRN = 4}#69
.LR0 = 1}#58
.VCYP = 1}#86
}'
711:}"WBUF _ Z, WCNT _ 0, DRETURN
.MCONT = 2}#6
.BR = 4}#83
.BL = 10}#78
.SSP = 27}#56,55,54,52
.TYW = 1}#48
.TAX = 1}#49
.LRN = 3}#71,70
.LSPX = 1}#59
.MC = 1}#5,
.DGO = 1}#87
CHECKBIT IS 30}#
}'
712:}"WWORD _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 31}#56,53,52
.TAX = 1}#49
.LSPX = 1}#59
*

*
*LNKB: LINK TO NEXT BUFFER
*
*LNK JUMPS TO THE NEXT BUFFER. 
*LNKB IS CALLED ONLY FROM RCH
*RCND CAN PREVENT THE BUFFER FROM BEING FREED BY ZEROING PRB
*
* ARGUMENTS:
*}'RCP: POINTS 1 PAST OLD BUFFER
*
*VALUE: NONE
*
*SIDE EFFECTS: RCP UPDATED
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*

713:}"LNKB:}$M _ RCP, BFLAG _ 4B7
.RRN = 5}#68,66
.SSP = 16}#55,54,53
.TCX = 1}#43
.THY = 1}#46
.LMY = 1}#73
.LSPX = 1}#59
.C = -40000000}#18,
CHECKBIT IS 87}#
}'
714:}"Z _ 8
.TCX = 1}#43
.LZX = 1}#76
.VCYP = 1}#86
.C = 10}#38,
CHECKBIT IS 87}#
}'
715:}"M_R0_}"M - Z, Z _ BUF0
.BR = 13}#85,84,82
.BL = 4}#79
.SSP = 65}#56,54,52,51
.LOC = 1}#50
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.LR0 = 1}#58
}'
716:}"PRB_M-Z, FETCH
.BR = 13}#85,84,82
.BL = 4}#79
.SSP = 54}#54,53,51
.MS = 44}#63,60
.LOC = 1}#50
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
717:}"Q_LINE
.SSP = 21}#56,52
.TSPY = 1}#45
.LQY = 1}#75
CHECKBIT IS 87}#
}'
720:}"Z _ Q LCY 16, Q _ MSK7*TWO16
.BR = 10}#82
.BL = 2}#80
.MS = 7}#65,64,63
.TCY = 1}#44
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
}'
721:}"CALL ABORT ON M AND Q - Z AND Q # 0, Z _ BUF0
.MCONT = 1}#7
.BR = 17}#85,84,83,82
.SSP = 65}#56,54,52,51
.LOC = 1}#50
.TSPY = 1}#45
.TAX = 1}#49
.LZY = 1}#77
.MC = 3}#5,4
.B = 13}$14,16,17,
CHECKBIT IS 30}#

722:}"LNKB2:}$RCP _ M AND NOT Q + Z MRG STFLAG, RETURN
.MCONT = 2}#6
.BR = 4}#83
.BL = 14}#79,78
.TCX = 1}#43
.TXW = 1}#47
.TAX = 1}#49
.LRN = 5}#71,69
.MC = 20}#1,
.C = -40000000}#18,
*

*
*MBLK: MOVE BLOCK
*
*THIS IS THE CODE THAT MOVES A BLOCK OF DATA FOR THE CPU
*
* ARGUMENTS:
*}'CARG1: SOURCE
*}'CARG2: DESTINATION
*}'CARG3: NUMBER OF WORDS
*
*VALUE: NONE
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*

723:}"MBLK:}$FETCH R0_CARG1/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
724:}"Q _ M-1, FETCH R0_R0+1
.BR = 7}#85,84,83
.BL = 4}#79
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
725:}"Z _ M-1, FETCH R0_R0+1
.BR = 7}#85,84,83
.BL = 4}#79
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
726:}"GOTO CPUFIN ON VR_0-M=0
.BR = 10}#82
.BL = 13}#81,80,78
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LRN = 6}#70,69
.MC = 2}#4
.B = 204}$10,15,
CHECKBIT IS 30}#

727:}"LOLP:}$FETCH R0_Q _ Q+1
.BR = 10}#82
.BL = 2}#80
.MS = 44}#63,60
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
}'
730:}"STORE R0_Z _ Z+1, DGOTO LOLP
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.MC = 1}#5
.DGO = 1}#87
.B = 727}$9,10,11,13,15,16,17,
CHECKBIT IS 30}#
}'
731:}"GOTO CPUFIN ON VR _ VR + 1 >=0
.RRN = 6}#67,66
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LRN = 6}#70,69
.MC = 7}#5,4,3
.B = 204}$10,15,
CHECKBIT IS 30}#
*

*
*OUTLOGIC: OUTPUT LOGIC FOR CHARACTER
*
*OUTLOGIC HANDLES THE LOGIC ASSOCIATED WITH GETTING AN OUTPUT CHARACTER 
*IN THE LINE. IT MUST:
*
*}'1) GET THE OUTPUT CHARACTER
*}'2) IF OUTPUT LINE IS EMPTY IT MUST TURN OFF DE IF WIC IS SET
*}'3) IF THE OUTPUT CHARACTER COUNT IS LESS THEN WKCNT IT SHOULD 
*}+AWAKEN THE PROCESS FOR OUTPUT
*
* ARGUMENTS: EXPECTS GMTL TO BE CALLED
*
*VALUE: M: CHARACTER READ
*}&Q: 37B USEFUL FOR OUTL2)
*
*LEVEL: 2
*
*SUBROUTINES CALLED: WAKEUP,RCH1
*
*NMR: O(MAX 1)
*

732:}"OUTLOGIC:}$Z _ OS
.LZY = 1}#77
.VCYP = 1}#86
.TOSY = 1}#57
}'
733:}"SVR2 _ Z, CALL RCH1
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.SSP = 36}#55,54,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 1103}$8,11,16,17,
CHECKBIT IS 30}#
}'
734:}"CALL WAKEUP IF ASET, Z _ WKO
.MCONT = 1}#7
.TCX = 1}#43
.LZX = 1}#76
.MC = 33}#5,4,2,1
.VCYP = 1}#86
.B = 1334}$8,10,11,13,14,15,
.C = 7}#39,40,41,
}'
735:}"M _ CHAR, Q _ MSK0*TWO14
.SSP = 22}#55,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 40000}#27,
}'
736:}"M, GOTO OUTLX IF LB#0, Z _ WD1
.BR = 10}#82
.BL = 4}#79
.SSP = 24}#54,52
.TSPY = 1}#45
.TAX = 1}#49
.LZY = 1}#77
.MC = 23}#5,4,1
.B = 742}$9,10,11,12,16,
}'
737:}"GOTO OUTLX ON Z AND Q=0, Q _ MSK1*TWO18
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 742}$9,10,11,12,16,
.C = 3000000}#22,23,
CHECKBIT IS 56}#
}'
740:}"WD1 _ M _ Z AND NOT Q
.BR = 14}#83,82
.BL = 10}#78
.SSP = 24}#54,52
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
741:}"STORE R0_MTAE MRG CLE/1B4
.SSP = 10}#53
.MS = 42}#64,60
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
CHECKBIT IS 87}#

742:}"OUTLX:}$M _ CHAR, Q _ 37B, GOTO RTSS2
.SSP = 22}#55,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 20}#1,
.B = 23}$13,16,17,
.C = 37}#37,38,39,40,41,
*

*
*OUTL2: OUTLOGIC ABSOLUTE
*
*OUTL2 DELIVERS A CHARACTER FOR THE OUTPUT LINE WITH THE
*SHIFT 1 REMOVED UNLESS THERE ISNO SUCH CHARACTER.
*IN TIS CASE IT DELIVERS THE CHARACTER IN M
*AND SETS A AS A SIGNAL
*IF THERE ARE NO CHARACTERS LEFT IN THE LINE
*IT CALLS WKOL TO TURN IT OFF
* ARGUMENTS: NONE
*
*VALUE: M: CHARACTER READ (0-377, NO CONTROL CHARACTERS) IF A SET
*}*OTHERWISE THE CONTROL CHARACTER (SNULL,FLDCHAR, OR 0 IF NO CHARS)
*}'A: SET IF NO CHARACTER TO DELIVER
*
**LEVEL:3
*SUBROUTINES CALLED: OUTLOGIC
*

743:}"OUTL2:}%Z _ OS
.LZY = 1}#77
.VCYP = 1}#86
.TOSY = 1}#57

744:}"OUTLL:}$SVR3 _ Z, CALL OUTLOGIC
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.SSP = 64}#54,52,51
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}#1,
.B = 732}$9,10,11,13,14,16,
}'
745:}"GOTO OTRN ON M = 0, Q _ 40B, RESETA
.BR = 10}#82
.BL = 4}#79
.MS = 31}#65,62,61
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 752}$9,10,11,12,14,16,
.C = 40}#36,
CHECKBIT IS 56}#
}'
746:}"GOTO RTSS3 ON M-Q>=0, Q _ SHIFT1
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 5}#5,3
.B = 26}$13,15,16,
.C = 37}#37,38,39,40,41,
CHECKBIT IS 56}#
}'
747:}"SETA, GOTO RTSS3}"ON M - Q # 0
.BR = 15}#85,83,82
.BL = 4}#79
.MS = 30}#62,61
.LOC = 1}#50
.TAX = 1}#49
.MC = 3}#5,4
.B = 26}$13,15,16,
*SHIFT1 RECEIVED
}'
750:}"CALL OUTLOGIC
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 732}$9,10,11,13,14,16,
}'
751:}"CHAR _ M _ M AND Q, GOTO RTSS3, RESETA
.BR = 10}#82
.SSP = 22}#55,52
.MS = 31}#65,62,61
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
.MC = 20}#1
.B = 26}$13,15,16,
*IF NO MORE CHARS FOR LINE TURN OFF

752:}"OTRN:}$CALL WKOL, Z _ 0
.MCONT = 1}#7
.LZX = 1}#76
.MC = 1}#5
.VCYP = 1}#86
.B = 1505}$8,9,11,15,17,
}'
753:}"GOTO RTSS3, SETA
.MS = 30}#62,61
.MC = 20}#1
.VCYP = 1}#86
.B = 26}$13,15,16,
*

*
*
*PRP: PUT READ}"POINTER
*
*IF BFLAG < 0 A BUFFER HAS BEEN FREED
*NIQ OR NOQ IS RESET IF CCNT >WCNT
*
* ARGUMENTS: NONE
*
*VALUE: A IS SET ON CCNT <= WCNT, OTHERWISE RESET
*
*SIDE EFFECTS: NONE
*
*LEVEL: -
*
*NMR: 4
*
*SUBROUTINES CALLED: CRCH (BY GOTO)
*

754:}"PRP:}#GOTO PRP4 ON M _ RCP >=0, Q _ STFLAG
.RRN = 5}#68,66
.TCX = 1}#43
.THY = 1}#46
.LMY = 1}#73
.LQX = 1}#74
.MC = 7}#5,4,3
.B = 775}$9,10,11,12,13,14,15,17,
.C = -40000000}#18,
CHECKBIT IS 50}#
}'
755:}"RCP _ M _ M AND NOT Q, DGOTO PRP2 ON BFLAG >=0
.BR = 10}#82
.BL = 14}#79,78
.SSP = 16}#55,54,53
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LMX = 1}#72
.LRN = 5}#71,69
.MC = 7}#5,4,3
.DGO = 1}#87
.B = 771}$9,10,11,12,13,14,17,
* DECREASE BUFFER COUNT BY 1
}'
756:}"Z _ MTCE, Q _ MSK7*TWO16
.RRN = 1}#68
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 87}#
}'
757:}"FETCH R0_VR _ Z + ABCNT/1B4, Z _ RTCE1
.BR = 4}#83
.BL = 10}#78
.SSP = 73}#56,55,53,52,51
.MS = 44}#63,60
.LOC = 1}#50
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LRN = 6}#70,69
.LR0 = 1}#58
}'
760:}"DGOTO PRP1 ON M AND Q - Z AND Q<=0, Q _ 1
.BR = 17}#85,84,83,82
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 13}#5,4,2
.DGO = 1}#87
.B = 764}$9,10,11,12,13,15,
.C = 1}#41,
}'
761:}"Z _ M, M _ LINE
.BR = 10}#82
.BL = 4}#79
.SSP = 21}#56,52
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
CHECKBIT IS 87}#
*UPDATE EXTRA BUFFER COUNT (XIB / XOB)
}'
762:}"FETCH}"R0_M AND Q MRG XIB
.BR = 10}#82
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
.VCYP = 1}#86
.C = 60}#36,37,
CHECKBIT IS 87}#
}'
763:}"M _ M - 1, STORE
.BR = 7}#85,84,83
.BL = 4}#79
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87}#

764:}"PRP1:}$M _ TWO16, Q _ RCPEND
.SSP = 32}#55,53,52
.TCX = 1}#43
.TSPY = 1}#45
.LMX = 1}#72
.LQY = 1}#75
.C = 200000}#25,
CHECKBIT IS 87}#
}'
765:}"M _ Z-M,}"STORE R0_VR
.RRN = 6}#67,66
.BR = 4}#83
.BL = 13}#81,80,78
.MS = 42}#64,60
.LOC = 1}#50
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
766:}"GOTO PRP2 ON Q>=0, M _ RCP
.RRN = 5}#68,66
.BR = 10}#82
.BL = 2}#80
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.MC = 5}#5,3
.B = 771}$9,10,11,12,13,14,17,
CHECKBIT IS 30}#
*
*IF RCPEND CHANGED ALL CHARS READ, LINE EMPTY
}'
767:}"M _ RCP _ BUF0
.SSP = 65}#56,54,52,51
.TSPY = 1}#45
.TYW = 1}#48
.LMY = 1}#73
.LRN = 5}#71,69
}'
770:}"STORE R0_VR, M _ 0, GOTO PRP3
.RRN = 6}#67,66
.MS = 42}#64,60
.THY = 1}#46
.TYW = 1}#48
.LMX = 1}#72
.LR0 = 1}#58
.MC = 1}#5
.VCYP = 1}#86
.B = 773}$9,10,11,12,13,14,16,17,
CHECKBIT IS 30}#
* BUFFER COUNT IS CORRECT AT THIS POINT
*KNOW THAT RTCE HAS RCP PART = 0
*M HAS RCP

771:}"PRP2:}$Z _ BUF0
.SSP = 65}#56,54,52,51
.TSPY = 1}#45
.LZY = 1}#77
CHECKBIT IS 87}#
}'
772:}"M _ M - Z
.BR = 13}#85,84,82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72

773:}"PRP3:}$Z _ RTCE1, Q _ - MSK15*TWO0-1
.SSP = 73}#56,55,53,52,51
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.C = -200000}#18,19,20,21,22,23,24,25,
***}#STORE Z _ MTCE + DISP(RCPF), M _ M AND NOT Q + Z AND Q;
}'
774:}"STORE R0_Z _ MTCE, M _ M AND NOT Q + Z AND Q
.RRN = 1}#68
.BL = 14}#79,78
.MS = 42}#64,60
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.LR0 = 1}#58
*READ POINTER HAS BEEN UPDATED AT THIS POINT.
*UPDATE CHARACTER COUNT

775:}"PRP4:}$Z _ MTCE, Q _ CCNT/1B4
.RRN = 1}#68
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = 2}#40,
}'
776:}"FETCH R0_Q + Z, Z _ WCNT
.RRN = 3}#68,67
.BR = 4}#83
.BL = 2}#80
.MS = 44}#63,60
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LR0 = 1}#58
}'
777:}"Z _ M - Z, Q _ MSK11*TWO0
.BR = 13}#85,84,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.C = 7777}#30,31,32,33,34,35,36,37,38,39,40,41,
}'
1000:}"Z _ M _ M AND NOT Q + Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.LZX = 1}#76
*SETA AND CLEAR NIQ(NOQ) IF CCNT <= WAKEUP COUNT
*KNOW MASK(CCNT) = MASK(WKCNT)
}'
1001:}"Q _ M AND NOT Q LCY 12, .TAX, M _ WD2
.BR = 10}#82
.BL = 14}#79,78
.SSP = 25}#56,54,52
.MS = 6}#64,63
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.LQX = 1}#74
CHECKBIT IS 87}#
*Z HAS MTCE(2) WHICH HAS WKCNT IN THE LEFT HAND SIDE
}'
1002:}"RESETA, GOTO CRCH ON Q - Z<0, R0 _ MTAE MRG NIQ/1B4
.BR = 13}#85,84,82
.BL = 2}#80
.SSP = 10}#53
.MS = 31}#65,62,61
.LOC = 1}#50
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 4}#3
.B = 247}$10,12,15,16,17,
.C = 1}#41,
*KNOW MASK(NOQ) = MASK(NIQ) LCY 1
}'
1003:}"GOTO NOUBLEQ IF NODD,}"LINE, Q _ MSK0*TWO22, SETA
.SSP = 21}#56,52
.MS = 30}#62,61
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.MC = 24}#3,1
.B = 1005}$8,15,17,
.C = 20000000}#19,
}'
1004:}"Q _ Q LCY 1
.BR = 10}#82
.BL = 2}#80
.MS = 1}#65
.LQX = 1}#74
.VCYP = 1}#86

1005:}"NOUBLEQ:}"M _ WD2 _ M AND NOT Q, GOTO CRCH, STORE
.BR = 10}#82
.BL = 14}#79,78
.SSP = 25}#56,54,52
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
.MC = 20}#1
.B = 247}$10,12,15,16,17,
*

*
*PWP: PUT WRITE POINTER
*
*PWP MUST:
*}'1) REPLACE POINTERS (IF CHANGED)
*}'2) SET NIQ OR NOQ IF THE BUFFER COUNT EXCEEDS MP*XBCNT
*}'3) INDICATE CHAR COUNT HIGH BY VALUE
*
* ARGUMENTS: NONE
* ASSUMES GLE AND GWP CALLED HAVE BEEN CALLED
*
*VALUE:}"Z < O IF WKCNT < CCNT, ELSE >=0.
*
*LEVEL: -
*
*SUBROUTINES CALLED: CWCH (BY GOTO)
*
*NMR: 2-3
*

1006:}"PWP:}#GOTO PWP3 ON BFLAG >=0, Q _ MSK7*TWO16
.SSP = 16}#55,54,53
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.MC = 7}#5,4,3
.B = 1031}$8,13,14,17,
.C = -200000}#18,19,20,21,22,23,24,25,
***}$FETCH MTCE + DISP(XBCNT);
}'
1007:}"FETCH R0_MTCE
.RRN = 1}#68
.MS = 44}#63,60
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.VCYP = 1}#86
}'
1010:}"Z _ M AND Q LCY 8, R0 _ -8
.BR = 10}#82
.MS = 5}#65,63
.TCY = 1}#44
.TYW = 1}#48
.LZX = 1}#76
.LR0 = 1}#58
.VCYP = 1}#86
.C = -10}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,
}'
1011:}"Q _ 0, M _ MP
.SSP = 55}#56,54,53,51
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
*
*MULTIPLY MP (0 - 64) (IN Z)}"BY ABCNT (IN M LEFT SHIFTED 16) AND DIVIDE
 BY 64

1012:}"FFOO:}$Q _ Q LCY 1, GOTO EFOO ON R0 _ R0 + 1 >=0
.BR = 10}#82
.BL = 2}#80
.MS = 1}#65
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.MC = 7}#5,4,3
.B = 1015}$8,14,15,17,
}'
1013:}"GOTO FFOO ON}"M _ M LCY 1 >=0
.BR = 10}#82
.BL = 4}#79
.MS = 1}#65
.LMX = 1}#72
.MC = 5}#5,3
.B = 1012}$8,14,16,
}'
1014:}"Q _ Q + Z, GOTO FFOO
.BR = 4}#83
.BL = 2}#80
.TAX = 1}#49
.LQX = 1}#74
.MC = 1}#5
.B = 1012}$8,14,16,
CHECKBIT IS 30}#

1015:}"EFOO:}$M _ Q LCY 16,Q _ 4B7 + 177B, GOTO 1613B
.BR = 10}#82
.BL = 2}#80
.MS = 7}#65,64,63
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.MC = 1}#5,
.VCYP = 1}#86
.B = 1613}$8,9,10,14,16,17,
.C = -37777601}#18,35,36,37,38,39,40,41,
CHECKBIT IS 50}#
}'
1016:}"M _ WTCE2, Z _ TWO16
.SSP = 15}#56,54,53
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LZX = 1}#76
.C = 200000}#25,
CHECKBIT IS 87}#
}(
*}"NOTE FAMOUS 1020 PUNTS DISABLED ON 12/13/75}#(WWL)
*}"NEXT LINE USED TO SAY "CALL ABORT ON M_...Z < 0
1017:}"M _ WTCE2 _ M AND Q + Z
(.MCONT = 1}#7)}/DELETED
.BR = 4}#83
.SSP = 15}#56,54,53
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
(.MC = 4}#3)}2DELETED
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
1020:}"Q _ M AND Q LCY 8, M _ VR
.RRN = 6}#67,66
.BR = 10}#82
.MS = 5}#65,63
.THY = 1}#46
.LMY = 1}#73
.LQX = 1}#74
.VCYP = 1}#86
*
*FINISH MULTIPLY: GOTO PWP3 IF MP*XBCNT/64*4>ABCNT*256
}'
1021:}"GOTO PWP3 ON M - Q>0
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.MC = 6}#4,3
.B = 1031}$8,13,14,17,
CHECKBIT IS 30}#
*SET NIQ(NOQ) AND UPDATE XIB(OR XOB)
}(
1022:}"Q _ MSK0*TWO22, M _ WD2
.SSP = 25}#56,54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 20000000}#19,
CHECKBIT IS 87}#
*KNOW: MASK(NIQ) = MASK(NOQ) *2 AND OUTPUT LINE IS ODD
}(
1023:}"GOTO PWP2 IF}"NODD, Z _ 0, LINE
.SSP = 21}#56,52
.TSPY = 1}#45
.LZX = 1}#76
.MC = 24}#3,1
.B = 1025}$8,13,15,17,
CHECKBIT IS 30}#
}(
1024:}"Q _ Q LCY 1, Z _ 1
.BR = 10}#82
.BL = 2}#80
.MS = 1}#65
.TCY = 1}#44
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = 1}#41,
CHECKBIT IS 87}#

1025:}"PWP2:}%WD2 _ M _ M AND NOT Q+Q
.BR = 2}#84
.BL = 14}#79,78
.SSP = 25}#56,54,52
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
}'
1026:}"STORE R0_MTAE MRG NIQ/1B4
.SSP = 10}#53
.MS = 42}#64,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 1}#41,
CHECKBIT IS 87}#
*Z STILL HAS A 1 IF LINE IS OUTPUT, 0 IF INPUT
}(
1027:}"FETCH R0_Z MRG XIB
.BR = 4}#83
.BL = 10}#78
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
.VCYP = 1}#86
.C = 60}#36,37,
}(
1030:}"M _ M + 1, STORE
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
*UPDATE WCP IF CHANGED

1031:}"PWP3:}$Z _ MTCE, Q _ STFLAG
.RRN = 1}#68
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = -40000000}#18,
}'
1032:}"GOTO PWP4 ON Z _ WCP>=0, R0_Z+WCPF/1B4
.RRN = 4}#66
.BR = 4}#83
.BL = 10}#78
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LR0 = 1}#58
.MC = 7}#5,4,3
.B = 1035}$8,13,14,15,17,
}'
1033:}"M _ BUF0, Q _ 4B7
.SSP = 65}#56,54,52,51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 40000000}#18,
}'
1034:}"M _ Z AND NOT Q - M, M _ WTCE2, STORE
.BR = 14}#83,82
.BL = 13}#81,80,78
.SSP = 15}#56,54,53
.MS = 42}#64,60
.LOC = 1}#50
.TSPY = 1}#45
.TAX = 1}#49
.LMX = 1}#72
.LMY = 1}#73
*UPDATE CHARACTER COUNT

1035:}"PWP4:}$M_CCNT/1B4, Z _ MTCE
.RRN = 1}#68
.TCX = 1}#43
.THY = 1}#46
.LMX = 1}#72
.LZY = 1}#77
.VCYP = 1}#86
.C = 2}#40,
}'
1036:}"FETCH R0_Z+M, Z _ WCNT
.RRN = 3}#68,67
.BR = 4}#83
.BL = 4}#79
.MS = 44}#63,60
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LR0 = 1}#58
}'
1037:}"Z _ M +Z, Q _ MSK11*TWO0
.BR = 4}#83
.BL = 4}#79
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.C = 7777}#30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
1040:}"M _ M AND NOT Q + Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87
}'
1041:}"CALL ABORT ON M AND NOT Q - Z AND NOT Q#0, Q _ MSK11*TWO12
.MCONT = 1}#7
.BR = 3}#85,84
.BL = 14}#79,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 13}$14,16,17,
.C = -10000}#18,19,20,21,22,23,24,25,26,27,28,29,
CHECKBIT IS 56}#
}'
1042:}"M _ M AND}"Q LCY WKCNT*TWO18/TWO18+1, DGOTO CWCH
.BR = 10}#82
.MS = 6}#64,63
.LMX = 1}#72
.MC = 20}#1,
.DGO = 1}#87
.VCYP = 1}#86
.B = 251}$10,12,14,17,
}'
1043:}"Z _ M - Z AND NOT Q, RESETA
.BR = 3}#85,84
.BL = 4}#79
.MS = 31}#65,62,61
.LOC = 1}#50
.TAX = 1}#49
.LZX = 1}#76
*

*
*PUTFIELD: STORES INTO A LINE TABLE FIELD
*
* ARGUMENTS: 
*}'CARG1: FIELD DISCRIPTER
*}'CARG2: VALUE FOR FIELD
*
*VALUE: NONE
*
*NMR: 2
*
*LEVEL: TOP
*
*SUBROUTINES CALLED: GFD
*

1044:}"PUTFIELD:}$CALL GFD
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 471}$9,12,13,14,17,
CHECKBIT IS 30}#
}'
1045:}"VR _ R0, M _ 24
.TCX = 1}#43
.THY = 1}#46
.TYW = 1}#48
.LMX = 1}#72
.LRN = 6}#70,69
.VCYP = 1}#86
.C = 30}#37,38,
}'
1046:}"Z _ M - Z, FETCH R0_CARG2/1B4
.BR = 13}#85,84,82
.BL = 4}#79
.MS = 44}#63,60
.LOC = 1}#50
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.C = 44}#36,39,
CHECKBIT IS 87}#
}'
1047:}"M _ M LCH Z
.BR = 10}#82
.BL = 4}#79
.MS = 12}#64,62
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1050:}"Z _ M LCL Z
.BR = 10}#82
.BL = 4}#79
.MS = 11}#65,62
.LZX = 1}#76
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1051:}"FETCH R0_VR, DGOTO CPUFIN
.RRN = 6}#67,66
.MS = 44}#63,60
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 204}$10,15,
CHECKBIT IS 30}#
}'
1052:}"M _ M AND NOT Q ! Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
*

*
*PUTREG: LOAD REGISTERS
*
*THIS LOADS THE LIVE REGISTERS OF THE CHIO FOR COMMUNICATION WITH THE CPU
*
*
*THIS IMPLEMENTS THE LOAD REGISTER CPU CALL
*THE SCRATCH PAD REGISTERS MAY BE LOADED BY THIS CALL
*LOWER REGISTERS MAY NOT BE LOADED
*
* ARGUMENTS:
*}'CARG1: SCRATCH PAD REGISTER NUMBER
*}'CARG2: VALUE FOR REGISTER
*
*VALUE: NONE
*
*SIDE EFFECTS: ONE OF THE REGITERS IS CHANGED
*
*LEVEL: -
*

1053:}"PUTREG:}$FETCH R0_CARG1/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
1054:}"Z _ M, FETCH R0_R0 + 1, DGOTO CPUFIN
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.MC = 1}#5
.DGO = 1}#87
.VCYP = 1}#86
.B = 204}$10,15,
}'
1055:}"SKZ _ M, M _ 0
.BR = 10}#82
.BL = 4}#79
.MS = 13}#65,64,62
.TAX = 1}#49
.LMY = 1}#73
.LSPX = 1}#59
CHECKBIT IS 87}#
*

*
*RCH: READ CHARACTER
*
*THIS IS THE BASIC READ CHARACTER SUBROUTINE USED IN THE CHIO.
*IT ASSUMES THAT RCP POINTS TO A WORD THAT IS IN RWORD AND WILL READ
*ONE CHARACTER FROM RWORD.
*IF RWORD IS EMPTY IT WILL ADVANCE THE POINTER AND FETCH
*THE NEXT WORD AND PLACE IT IN RWORD AND READ A CHARACTER FROM THAT
*WWORD IS FOR THE FORM XXX, XNN, OR XXN, AND OCCASIONALY NNN.
*IF WWORD IS NNN THE CORRECT VALUE WHOULD BE FETCH FROM MEMORY
*NULL CHARACTERS WHICH SHOULD NEVER APPEAR ARE NOT READ AND NOTCOUNTED
*IF THERE ARE NO CHARACTERS THEN CHAR IS SET TO 0
*$RBUF IS CALLED IF THE NEXT BUFFER IS TO BE LINKED TO.
*$RBUF MAY HAVE ABORT OR LNKB IN IT
*
* ARGUMENTS: NONE
*
*VALUE: 
*}'M: CHAR (0 IF NO CHARS LEFT)
*}'CHAR: CHAR
*
*SIDE EFFECTS: RCP, RWORD MODIFIED;
*
*SUBROUTINES CALLED: $RBUF MAYBE
*
*NMR: 1/3
*
*LEVEL: 0
*

1056:}"RCH:}#M _ RWORD, Q _ MSK7*TWO16
.SSP = 30}#53,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 87}#

1057:}"RCH01:}$Z _ RWORD _ M AND NOT Q LCY 8, VR _ RCNT, DRETURN
.MCONT = 2}#6
.RRN = 2}#67
.BR = 10}#82
.BL = 14}#79,78
.SSP = 30}#53,52
.MS = 5}#65,63
.THY = 1}#46
.TYW = 1}#48
.LZX = 1}#76
.LRN = 6}#70,69
.LSPX = 1}#59
.MC = 20}#1
.DGO = 1}#87
}'
1060:}"GOTO RCH3 ON CHAR _ M _ M AND Q LCY 8 = 0, RCNT _ RCNT + 1
.RRN = 2}#67
.BR = 10}#82
.SSP = 22}#55,52
.MS = 5}#65,63
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LMX = 1}#72
.LRN = 2}#70
.LSPX = 1}#59
.MC = 2}#4
.B = 1071}$8,12,13,14,17,
CHECKBIT IS 30}#
*
*STEP TO NEXT WORD

1061:}"RCH2:}$Z _ RCP, Q _ STFLAG
.RRN = 5}#68,66
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = -40000000}#18,
CHECKBIT IS 87}#
}'
1062:}"M _ RCPEND
.SSP = 32}#55,53,52
.TSPY = 1}#45
.LMY = 1}#73
}'
1063:}"GOTO RCH4 ON M _ M AND NOT Q - Z AND NOT Q =0, Q _ MSK7*TWO16
.BR = 3}#85,84
.BL = 14}#79,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.MC = 2}#4
.B = 1073}$8,12,13,14,16,17,
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 56}#
}'
1064:}"FETCH R0_RCP _ RCP + 1 MRG STFLAG, GOTO RCH01 IF NMOD8
.RRN = 5}#68,66
.MS = 44}#63,60
.IHR = 1}#42
.TCY = 1}#44
.THY = 1}#46
.TYW = 1}#48
.LRN = 5}#71,69
.LR0 = 1}#58
.MC = 21}#5,1
.B = 1057}$8,12,14,15,16,17,
.C = -40000000}#18,
CHECKBIT IS 50
}'
1065:}"GOTO SH5, Z _ OS
.LZY = 1}#77
.MC = 1}#5,
.VCYP = 1}#86
.TOSY = 1}#57
.B = 1575}$8,9,11,12,13,14,15,17,
CHECKBIT IS 30}#
}'
1066:}"M _ RBUF, CALL GOTOM
.MCONT = 1}#7
.SSP = 26}#55,54,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1,
.B = 40}$12,
CHECKBIT IS 30}#
}'
1067:}"DGOTO RTSS0, M _ CHAR
.SSP = 22}#55,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 1}#5,
.DGO = 1}#87
.B = 15}$14,15,17,
*NOTE THAT RCH WHEN CALLED THIS TIME WILL RETURN TO RTSS0 WHICH WILL
*RETURN TO THE CORRECT PLACE.}"RCH WHEN CALLED WILL NOT GET TO
*THIS PLACE UNLESS THE LINKED TO BUFFER CONTAINS 21 NULLS AN IMPOSIBILITY
}'
1070:}"CALL RCH ON M =0
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 1056}$8,12,14,15,16,
CHECKBIT IS 30}#
*
*TRYED TO READ A NULL CHARACTER STEP PAST IT AND UNCOUNT IT

1071:}"RCH3:}$GOTO RCH01 ON}"M _ Z # 0
.BR = 4}#83
.BL = 10}#78
.TAX = 1}#49
.LMX = 1}#72
.MC = 3}#5,4
.B = 1057}$8,12,14,15,16,17,
CHECKBIT IS 30}#
}'
1072:}"GOTO RCH2, RCNT _ VR
.RRN = 6}#67,66
.THY = 1}#46
.TYW = 1}#48
.LRN = 2}#70
.MC = 20}#1,
.VCYP = 1}#86
.B = 1061}$8,12,13,17,

1073:}"RCH4:}$GOTO SH7, Z _ OS
.LZY = 1}#77
.MC = 1}#5,
.VCYP = 1}#86
.TOSY = 1}#57
.B = 1577}$8,9,11,12,13,14,15,16,17,

1074:}"FU7:}#CALL BLAKE ON BFLAG <0
.MCONT = 1}#7
.SSP = 16}#55,54,53
.TSPY = 1}#45
.MC = 10}#2
.B = 116}$11,14,15,16,
CHECKBIT IS 30}#
}'
1075:}"Z _ RCP, Q _ BFLAG _ 4B7, .LZX
.RRN = 5}#68,66
.SSP = 16}#55,54,53
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZX = 1}#76
.LZY = 1}#77
.LSPX = 1}#59
.C = -40000000}#18,
CHECKBIT IS 87}#
}'
1076:}"M _ RWEB/1B4
.TCX = 1}#43
.LMX = 1}#72
.VCYP = 1}#86
.C = 57}#36,38,39,40,41,
CHECKBIT IS 87}#
*DONT RETURN CPU BUFFER
}'
1077:}"M _ RCP _ BUF0 MRG STFLAG, GOTO *+2 ON M-Z AND NOT Q =0
.BR = 3}#85,84
.BL = 4}#79
.SSP = 65}#56,54,52,51
.LOC = 1}#50
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LMY = 1}#73
.LRN = 5}#71,69
.MC = 2}#4
.B = 1101}$8,11,17,
.C = -40000000}#18,
CHECKBIT IS 42}#
}'
1100:}"PRB_ Z AND NOT Q - M AND NOT Q
.BR = 14}#83,82
.BL = 3}#81,80
.SSP = 54}#54,53,51
.LOC = 1}#50
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
1101:}"RCPEND _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 32}#55,53,52
.TAX = 1}#49
.LSPX = 1}#59
}'
1102:}"M _ CHAR, GOTO RTSS0
.SSP = 22}#55,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1,
.B = 15}$14,15,17,
CHECKBIT IS 30}#

*
*RCH1: READ ONE CHARACTER FROM SPECIFIED LINE.
*
* ARGUMENTS:
* IMPLICIT: MTCE
*
*VALUE:
*}'CHAR: CHARACTER READ
*}(A IS SET IF CCNT>=WKCNT, OTHERWISE RESET
*
*SIDE EFFECTS: CCNT, AND RCPF FOR THE LINE ARE MODIFIED 
*
*LEVEL: 1
*
*SUBROUTINES CALLED: GRP, RCH, PRP
*
*NMR: O
*

1103:}"RCH1:}$Z _ OS,
.LZY = 1}#77
.VCYP = 1}#86
.TOSY = 1}#57
}'
1104:}"SVR1 _ Z,CALL GRP
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.SSP = 37}#56,55,54,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}#1,
.B = 612}$9,10,14,16,
}'
1105:}"WCNT _ 1, CALL RCH
.MCONT = 1}#7
.BL = 10}'78,
.BR = 10}'82,
.LOC = 1}'50
.TAX = 1}'49
.TXW = 1}#47
.LRN = 3}#71,70
.MC = 1}#5,
.VCYP = 1}#86
.B = 1056}$8,12,14,15,16,
}'
1106:}"GOTO *+2 ON M#0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 3}#5,4
.B = 1110}$8,11,14,
CHECKBIT IS 30}#
}'
1107:}"WCNT _ 0
.TXW = 1}#47
.LRN = 3}#71,70
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1110:}"CALL PRP
.MCONT = 1}#7
.MC = 20}#1,
.VCYP = 1}#86
.B = 754}$9,10,11,12,14,15,
}'
1111:}"M _ CHAR, GOTO RTSS1
.SSP = 22}#55,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 1}#5,
.B = 20}$13,
CHECKBIT IS 30}#
*

*
*RCND: READ STRING NON DESTRUCTIVELY
*
*RCND WILL READ A STRING WITHOUT ADVANCING THE POINTER
*
* ARGUMENTS: CARG1 NUMBER OF CHARACTERS TO READ
*
*VALUE: M: NUMBER OF CHARACTERS READ
*
*LEVEL: 1
*
*SUBROUTINES CALLED: RCH,WCH,IWCH,CWCH,GRP, NSR1
*

1112:}"RCND:}$Q _ R0}"_}"RWSB/1B4, M _ 0, STORE
.MS = 42}#64,60
.TCX = 1}#43
.TXW = 1}#47
.LMY = 1}#73
.LQX = 1}#74
.LR0 = 1}#58
.VCYP = 1}#86
.C = 51}#36,38,41,
}'
1113:}"Z _ ABCPU, CALL IWCH
.MCONT = 1}#7
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1
.VCYP = 1}#86
.B = 710}$9,10,11,14,
.C = 5}#39,41,
}'
1114:}"FETCH R0_CARG1/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
1115:}"CALL GRP, RCNT _ 0-M
.MCONT = 1}#7
.BR = 10}#82
.BL = 13}#81,80,78
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LRN = 2}#70
.MC = 1}#5,
.B = 612}$9,10,14,16,
CHECKBIT IS 30}#

1116:}"RCLP:}$GOTO RECL ON RCNT >=0
.RRN = 2}#67
.THY = 1}#46
.MC = 7}#5,4,3
.B = 1124}$8,11,13,15,

1117:}"RCLP1:}$CALL RCH
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 1056}$8,12,14,15,16,
CHECKBIT IS 30}#
}'
1120:}"CALL NSR1 ON M=0
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 45}$12,15,17,
CHECKBIT IS 30}#
}'
1121:}"GOTO RECL ON M = 0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 1124}$8,11,13,15,
CHECKBIT IS 30}#
}'
1122:}"PRB _ 0, CALL WCH
.MCONT = 1}#7
.SSP = 54}#54,53,51
.LSPX = 1}#59
.MC = 1}#5
.B = 1410}$8,9,14,
}'
1123:}"GOTO RCLP
.MC = 20}#1
.VCYP = 1}#86
.B = 1116}$8,11,14,15,16,

1124:}"RECL:}$Q _ CHAR, M _ SHIFT1
.SSP = 22}#55,52
.TCX = 1}#43
.TSPY = 1}#45
.LMX = 1}#72
.LQY = 1}#75
.C = 37}#37,38,39,40,41,
}'
1125:}"GOTO RCLP1 ON M - Q = 0
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.MC = 2}#4
.B = 1117}$8,11,14,15,16,17,
}'
1126:}"PRB _ 0, CALL CWCH, SETA
.MCONT = 1}#7
.SSP = 54}#54,53,51
.MS = 30}#62,61
.LSPX = 1}#59
.MC = 1}#5
.B = 251}$10,12,14,17,
CHECKBIT IS 30}#
}'
1127:}"M _ WCNT, LCWS1 _ 0
.RRN = 3}#68,67
.SSP = 20}#52
.THY = 1}#46
.LMY = 1}#73
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
1130:}"Q _ ICC, DGOTO CPUFIN
.SSP = 5}#56,54
.TSPY = 1}#45
.LQY = 1}#75
.MC = 20}#1,
.DGO = 1}#87
.B = 204}$10,15,
CHECKBIT IS 30}#
}'
1131:}"ICC _ M + Q
.BR = 2}#84
.BL = 4}#79
.SSP = 5}#56,54
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
*

*
*RESTART:}#CONTROL GOES HERE IF A REQUEST STROBE 2 IS RECEIVED
*
*RESTART:}#CALLED WHEN THE IS TO BE RESTARTED
*
*SEE DOCUMENT SINIT/W-19 FOR DETAILS
*
*SUBROUTINES CALLED: TOFF24, GET360(INTERNAL);
*
*
*ZAP RESETS MEMORY, REST OF DEVICE INITIALIZATION MUST PROCEED
*
*SEE SINIT/W-19 TAPE FOR DEFINITION OFRESTART PROCEEDURE
*

1132:}"RESTART:}$RESETFAIL, GOTO * + 1 IF ATT1
.MS = 32}#64,62,61
.MC = 36}#4,3,2,1
.B = 1133}$8,11,13,14,16,17,
}'
1133:}"RESETCPU, GOTO * + 1}"IF ATT2, Q _ 14B6
.MS = 23}#65,64,61
.TCX = 1}#43
.LQX = 1}#74
.MC = 34}#3,2,1
.B = 1134}$8,11,13,14,15,
.C = 14000000}#20,21,
}%
1134:}"-1, UNPROTECT, GOTO * + 1}"IF ATT3,}"Z_4B6
.BR = 10}#82
.BL = 7}#81,80,79
.MS = 20}#61
.TCY = 1}'44
.TAX = 1}#49
.LZY = 1}#77
.MC = 35}#5,3,2,1
.B = 1135}$8,11,13,14,15,17,
.C = 4000000}#21,
*-01 DO RESTART
}(
1135:}"R0 _}"SRMEM, GOTO 1610B, RESETTU
.MS = 26}#64,63,61
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.MC = 1}#5,
.VCYP = 1}#86
.B = 1610}&8,9,10,14,
.C = 5}#39,41,
CHECKBIT IS 50}#
}'
1136:}"GOTO STEP75 ON M AND Q - Z AND Q # 0
.BR = 17}#85,84,83,82
.LOC = 1}#50
.TAX = 1}#49
.MC = 3}#5,4
.B = 1165}$8,11,12,13,15,17,
CHECKBIT IS 30}#

1137:}"TAPERESTART:}$CALL TOFF24, M _ MSK0*TWO8
.MCONT = 1}#7
.TCX = 1}#43
.LMX = 1}#72
.MC = 1}#5,
.VCYP = 1}#86
.B = 1330}$8,10,11,13,14,
.C = 400}#33,
}'
1140:}"Z_ 103B, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 103}#35,40,41,
}'
1141:}"Z _ 7667B, POT
.MS = 15}#65,63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 7667}#30,31,32,33,34,36,37,39,40,41,

1142:}"GNB:}#CALL GET360, CHK360 _ Q _ 0
.MCONT = 1}#7
.SSP = 60}#52,51
.LQX = 1}#74
.LSPX = 1}#59
.MC = 20}#1,
.B = 1171}$8,11,12,13,14,17,
CHECKBIT IS 30}#
}'
1143:}"M _ NUL360
.TCX = 1}#43
.LMX = 1}#72
.VCYP = 1}#86
.C = 107}#35,39,40,41,
}'
1144:}"GOTO GNB ON M - Z = 0, Q _ M _ 77B
.BR = 13}#85,84,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.LQY = 1}#75
.MC = 2}#4
.B = 1142}$8,11,12,16,
.C = 77}#36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
1145:}"GOTO 1621B ON M AND Q - Z AND Q=0
.BR = 17}#85,84,83,82
.LOC = 1}#50
.TAX = 1}#49
.MC = 2}#4
.B = 1621}$8,9,10,13,17,
CHECKBIT IS 30}#
}'
1146:}"Q _ Z AND Q, CALL QQCYZ, Z _ 13B
.MCONT = 1}#7
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LQX = 1}#74
.LZY = 1}#77
.MC = 1}#5
.VCYP = 1}#86
.B = 43}$12,16,17,
.C = 13}#38,40,41,
CHECKBIT IS 56}#
}'
1147:}"R0 _ Q - 1
.BR = 7}#85,84,83
.BL = 2}#80
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
}'
1150:}"VR _ -2049
.TCX = 1}#43
.TXW = 1}#47
.LRN = 6}#70,69
.VCYP = 1}#86
.C = -4001}#18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#

1151:}"LP360:}$Q _ 0, CALL GET360
.MCONT = 1}#7
.LQX = 1}#74
.MC = 20}#1
.VCYP = 1}#86
.B = 1171}$8,11,12,13,14,17,
CHECKBIT IS 30}#
}'
1152:}"CALL GET360
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 1171}$8,11,12,13,14,17,
}'
1153:}"CALL GET360
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 1171}$8,11,12,13,14,17,
}'
1154:}"CALL GET360
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 1171}$8,11,12,13,14,17,
}'
1155:}"Q _ CHK360, M _ Q
.BR = 10}#82
.BL = 2}#80
.SSP = 60}#52,51
.TSPY = 1}#45
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
CHECKBIT IS 87}#
}'
1156:}"Q _ CHK360 _ M EOR Q
.BR = 10}#82
.BL = 16}#80,79,78
.SSP = 60}#52,51
.TAX = 1}#49
.LQX = 1}#74
.LSPX = 1}#59
}'
1157:}"GOTO * + 2 ON VR _ VR + 1 >= 0, Z _ CORCHK
.RRN = 6}#67,66
.IHR = 1}#42
.TCX = 1}#43
.THY = 1}#46
.TYW = 1}#48
.LZX = 1}#76
.LRN = 6}#70,69
.MC = 7}#5,4,3
.B = 1161}$8,11,12,13,17,
.C = -25252526}#18,20,22,24,26,28,30,32,34,36,38,40,
}'
1160:}"STORE R0_R0 +1, GOTO LP360
.MS = 42}#64,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.MC = 20}#1,
.VCYP = 1}#86
.B = 1151}$8,11,12,14,17,
}'
1161:}"GOTO *+2 ON Z - Q = 0, M _ VCC
.BR = 4}#83
.BL = 15}#81,79,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.MC = 2}#4
.B = 1163}$8,11,12,13,16,17,
.C = 110}#35,38,
}'
1162:}"M _ IVCC
.TCX = 1}#43
.LMX = 1}#72
.VCYP = 1}#86
.C = 101}#35,41,
}'
1163:}"ALERT, Z _ 103B
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 103}#35,40,41,
}'
1164:}"POT, Z _ M MRG MSK0*TWO11,}"GOTO GNB
.BR = 10}#82
.BL = 4}#79
.MS = 15}#65,63,62
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.MC = 1}#5
.B = 1142}$8,11,12,16,
.C = 4000}#30,
CHECKBIT IS 56}#

1165:}"STEP75:}$Z _ 103B, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 103}#35,40,41,
}'
1166:}"Z _ 7676B, POT
.MS = 15}#65,63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 7676}#30,31,32,33,34,36,37,38,39,40,

1167:}"FIN360:}$GOTO * IF NOREQ
.MC = 27}#5,4,3,1
.VCYP = 1}#86
.B = 1167}$8,11,12,13,15,16,17,
CHECKBIT IS 30}#
}'
1170:}"R2 _ -LSCRATCH, GOTO LOADST
.TCY = 1}#44
.TYW = 1}#48
.LRN = 2}#70
.MC = 20}#1,
.VCYP = 1}#86
.B = 1306}$8,10,11,15,16,
.C = 77777600}"18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,
*
*INTERNAL SUBROUTINE TO GET A CHARACTER FROM THE 360
*AND PACKS SIX BITS OF}"IT INTO RIGHT SIDE OF THE Q REGISTER CYCLESIN LEFT 6
*ON RETURN Z HAS THE CHARACTER
*
*USE RCP AS TEMP STORE
*

1171:}"GET360:}$RCP _ M _ Q, ALERT, Z _ 2B7 + 20B
.BR = 10}#82
.BL = 2}#80
.MS = 14}#63,62
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.LRN = 5}#71,69
.C = 20000020}#19,37,
}'
1172:}"Z _ E2, PIN, Q _ 400B, DGOTO 1614B
.MS = 16}#64,63,62
.TCX = 1}#43
.LQX = 1}#74
.LZY = 1}#77
.MC = 1}#5
.DGO = 1}#87
.TE2Y = 1}#89
.B = 1614}$8,9,10,14,15,
.C = 400}#33,
}'
1173:}"GOTO GET360 ON Z AND Q=0, Q _ RCP
.RRN = 5}#68,66
.BL = 10}#78
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 1171}$8,11,12,13,14,17,
}'
* THIS INSTRUCTION NEVER EXECUTED
1174:}"CALL ABORT
.MCONT = 1}%7
.MC = 20}'5,
.VCYP = 1}&86
.B = 13}(14,16,17,
CHECKBIT IS 30
}'
1175:}"M _ M LCH 6
.BR = 10}#82
.BL = 4}#79
.MS = 4}#63
.LMX = 1}#72
.VCYP = 1}#86
}'
1176:}"M _ M LCL 6, Q _ MSK7*TWO0
.BR = 10}#82
.BL = 4}#79
.MS = 2}#64
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = 377}#34,35,36,37,38,39,40,41,
}'
1177:}"Z _ Z AND Q, Q _ 77B
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = 77}#36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
1200:}"Q _ Z AND Q + M AND NOT Q, RETURN
.MCONT = 2}#6
.BL = 14}#79,78
.TAX = 1}#49
.LQX = 1}#74
.MC = 1}#5
.VCYP = 1}#86
*

*
*RSTB: READ STRING TO BREAK CHARACTER
*
*RSTB READ CHARACTERS FROM THE SPECIFIED LINE UNTIL:
*}'1) THERE ARE NO CHARACTERS IN THE LINE
*}'2) A BREAK CHARACTER IS REACHED (NSR=0)
*}'3) CARG1 CHARACTERS HAVE BEEN READ (NSR = 0)
*}'4) NO MORE CHARACTERS CAN BE READ(NSR = 2)
*
*RSTB SHOULD NOT BE ASKED TO READ MORE THEN 20 CHARACTERS. IF THE
*LAST CHARACTER TO BE READ IS A SHIFT1, 1 EXTRA CHARACTER IS READ
*
*IF THERE ARE NO INPUT CHARACTERS THEN NONE ARE RETURNED, NSR _ 1;
* AN ATTEMPT TO READ 0 CHARACTERS WILL ALWAYS SUCCEED READING 0 CHARACTERS
*
*RSTB MUST:
*}'1)READ THE CHARACTERS
*}'2)IF THE (INPUT ONLY) LINE IS IN DEFERRED ECHO MODE AND THE ECHO
 
*}'STRATAGY IS 1, IT SHOULD ECHO THE CHARACTER
*}'3) DITTO TO THE (INPUT ONLY) LINKED LINE (IF THERE IS ONE)
*}'4) IF AN (INPUT ONLU) LINE INPUTS A BREAK CHARACTE IT MUST NOT BE
*};*ECHOED IF EBC IS OFF 
*}'5) SET DEFERED ECHO MODE IF CHARACTER INPUT IS A BREAK CHARACTER
*}'6) IF THE (INPUT ONLY) LINE IS EMPTY IT MUST RESUME LOCAL ECHO
*}'7) IF THE (INPUT ONLY) LINE IS EMPTY IT MUST WAKEUP ANY CCP TYPE
 
*}'PROCESS
*}'8) IF THE LINE IS AN OUTPUT LINE IT MUST TURN OFF OUTPUT
*}'9) IT MUST SIGNAL AN EMPTY LINE NSR=1
*}%10) SET WIC IF INPUT LINE IS EMPTY
*
* ARGUMENTS: IN CPUIT
*
*VALUE: M: NUMBER OF CHARACTERS READ
*
*TURN OFF OUTPUT IF LINE READ FROM IS AN OUTPUT LINE

1201:}"RSTB:}$Z _ 0
.LZX = 1}#76
.VCYP = 1}&86,
CHECKBIT IS 87
*SETUP READ AND WRITE ROUTINES
}'
1202:}"R0_Q_RWSB/1B4, M _ 0, STORE
.MS = 42}#64,60
.TCX = 1}#43
.TXW = 1}#47
.LMY = 1}#73
.LQX = 1}#74
.LR0 = 1}#58
.VCYP = 1}#86
.C = 51}#36,38,41,
}'
1203:}"Z _ ABCPU, CALL IWCH
.MCONT = 1}#7
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1
.VCYP = 1}#86
.B = 710}$9,10,11,14,
.C = 5}#39,41,
}'
1204:}"FETCH R0_CARG1/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
1205:}"RCNT _ 0-M, CALL GRP
.MCONT = 1}#7
.BR = 10}#82
.BL = 13}#81,80,78
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LRN = 2}#70
.MC = 1}#5,
.B = 612}$9,10,14,16,
CHECKBIT IS 30}#
*RCNT IS SET TO NUMBER OF CHARACTERS TO READ

1206:}"RSTLP:}$GOTO RSTF1 ON RCNT>=0
.RRN = 2}#67
.THY = 1}#46
.MC = 7}#5,4,3
.B = 1217}$8,10,14,15,16,17,

1207:}"RSTCLP:}$CALL RCH
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 1056}$8,12,14,15,16,
CHECKBIT IS 30}#
}'
1210:}"GOTO RSTF3 ON M = 0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 1225}$8,10,13,15,17,
}'
1211:}"CALL WCH
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 1410}$8,9,14,
CHECKBIT IS 30}#
}'
1212:}"CALL WKCQ, M _ CHAR
.MCONT = 1}#7
.SSP = 22}#55,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1,
.B = 1431}$8,9,13,14,17,
}'
1213:}"M_WD1, Q_MSK0*TWO19
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 2000000}#22,
}'
1214:}"DGOTO RSTF2 ON Z-WKI>0
.BR = 4}#83
.BL = 7}#81,80,79
.TAX = 1}#49
.MC = 6}#4,3
.DGO = 1}#87
.B = 1241}$8,10,12,17,
CHECKBIT IS 30}#
}'
1215:}"CALL ECHO ON M AND Q # 0
.MCONT = 1}#7
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
.B = 357}$10,11,12,14,15,16,17,
CHECKBIT IS 30}#
}'
1216:}"GOTO RSTLP
.MC = 1}#5
.VCYP = 1}#86
.B = 1206}$8,10,15,16,
CHECKBIT IS 30}#
*FINISHED: STOPPED BY GETTING REQUIRED COUNT (NSR = 0)

1217:}"RSTF1:}$GOTO RSTCLP ON LCWS1 <0
.SSP = 20}#52
.TSPY = 1}#45
.MC = 10}#2
.B = 1207}$8,10,15,16,17,
CHECKBIT IS 30}#
}'
1220:}"CALL PRP, LCWS1 _ 0
.MCONT = 1}#7
.SSP = 20}#52
.LSPX = 1}#59
.MC = 20}#1,
.B = 754}$9,10,11,12,14,15,
CHECKBIT IS 30}#
}'
1221:}"CALL CWCH, SETA
.MCONT = 1}#7
.MS = 30}#62,61
.MC = 1}#5,
.VCYP = 1}#86
.B = 251}$10,12,14,17,

1222:}"RSTF5:}$Q _ ICC
.SSP = 5}#56,54
.TSPY = 1}#45
.LQY = 1}#75
CHECKBIT IS 87}#
}'
1223:}"DGOTO CPUFIN, M_WCNT
.RRN = 3}#68,67
.THY = 1}#46
.LMY = 1}#73
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 204}$10,15,
}'
1224:}"ICC _ M + Q
.BR = 2}#84
.BL = 4}#79
.SSP = 5}#56,54
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
*INPUT LINE EMPTY (NSR = 1)

1225:}"RSTF3:}$M _ WD1 MRG MSK0*TWO14, CALL NSR1
.MCONT = 1}#7
.SSP = 24}#54,52
.TCY = 1}#44
.TSPY = 1}#45
.LMY = 1}#73
.MC = 1}#5,
.B = 45}$12,15,17,
.C = 40000}#27,
}'
1226:}"STORE R0_MTAE MRG WIC/1B4, CALL 1640B
.MCONT = 1}#7
.SSP = 10}#53
.MS = 42}#64,60
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.MC = 20}#1,
.B = 1640}$8,9,10,12,
CHECKBIT IS 30}#
}'
1227:}"GOTO RSTF1 IF ODD, LINE, Q _ MSK0*TWO17
.SSP = 21}#56,52
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.MC = 25}#5,3,1
.B = 1217}$8,10,14,15,16,17,
.C = 400000}#24,
*WAKEUP ANY CCP TYPE PROCESS
}'
1230:}"GOTO 1636B ON M AND Q=0, Q _ MSK0*TWO16
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 1636}$8,9,10,13,14,15,16,
.C = 200000}#25,
}'
1231:}"FETCH R0_MTAE MRG LQNK/1B4
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 2}#40,
CHECKBIT IS 87}#
}'
1232:}"GOTO 1636B ON Z AND Q#0, Q_MSK12*TWO0
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 1636}$8,9,10,13,14,15,16,
.C = 17777}#29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
1233:}"M_M AND}"Q LCY LQNK*TWO18/TWO18+1, RESETA, CALL GLE
.MCONT = 1}#7
.BR = 10}#82
.MS = 31}#65,62,61
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1
.VCYP = 1}#86
.B = 514}$9,11,14,15,
}'
1234:}"FETCH R0_MTAE MRG PROC/1B4
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 3}#40,41,
}'
1235:}"Q_MSK12*TWO0
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 17777}#29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
1236:}"M_M AND}"Q LCY PROC*TWO18/TWO18+1, CALL WAKEUP, Z_WKBERT
.MCONT = 1}#7
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.MC = 1}#5
.VCYP = 1}#86
.B = 1334}$8,10,11,13,14,15,
.C = 6}#39,40,
CHECKBIT IS 56}#
*TURN OFF DEFERRED ECHO AND CLE

1237:}"RSTFX:}$Q_MSK1*TWO18, Z_WD1, DGOTO RSTF1
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.MC = 20}#1
.DGO = 1}#87
.B = 1217}$8,10,14,15,16,17,
.C = 3000000}#22,23,
CHECKBIT IS 50}#
}'
1240:}"M _ Z AND NOT Q,}"STORE R0_MTAE MRG DECLE/1B4
.BR = 14}#83,82
.BL = 10}#78
.SSP = 10}#53
.MS = 42}#64,60
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
* BREAK, QUIT, OR ESCAPE CHARACTER READ (NSR = 2)

1241:}"RSTF2:}$M _ WD1, Q _ MSK0*TWO19
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 2000000}#22,
}'
1242:}"GOTO RN2 ON M AND Q #0
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
.B = 1247}$8,10,12,15,16,17,
CHECKBIT IS 30}#
}'
1243:}"M _ M OR Q
.BR = 10}#82
.BL = 6}#80,79
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1244:}"M _ WD1 MRG MSK0*TWO19
.SSP = 24}#54,52
.TCY = 1}#44
.TSPY = 1}#45
.LMY = 1}#73
.C = 2000000}#22,
CHECKBIT IS 87}#
}'
1245:}"STORE R0_MTAE MRG DE/1B4, Q _ MSK0*TWO6
.SSP = 10}#53
.MS = 42}#64,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.C = 100}#35,
}'
1246:}"CALL ECHO ON M AND Q=0
.MCONT = 1}#7
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 357}$10,11,12,14,15,16,17,
*NSR=2 SIGNALS LAST CHAR IS A BREAK CHARACTER

1247:}"RN2:}#NSRFLAG _ 2, GOTO RSTF1
.SSP = 71}#56,53,52,51
.TCX = 1}#43
.LSPX = 1}#59
.MC = 1}#5,
.B = 1217}$8,10,14,15,16,17,
.C = 2}#40,
CHECKBIT IS 50}#

*
*
*RTUPDATE: UPDATE REAL TIME CLOCK IN CORE
*
* ARGUMENTS: M: TIME OF INTERUPT (GNR TYPE CALL ONLY)
*}&Q: UPAM (SET UP BY CALLING BRANCH VECTOR) (GNR TYPE CALL ONLY)
*
*VALUE: NONE
* 
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*
*ENTRY FROM GNR
*

1250: RTUPDATE:}"NCI _ Q + M
.BR = 2}#84
.BL = 4}#79
.SSP = 40}#51
.TAX = 1}#49
.LSPX = 1}#59
*
*ENTRY FROM CPURQ
*

1251:}"RTUPC:}"Z_RDCKL,ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 60}(36,37,
CHECKBIT IS 87}#
}'
1252:}"PIN , M _ E2
.MS = 16}#64,63,62
.LMY = 1}#73
.TE2Y = 1}#89
}'
1253:}"Z _ RDCKH, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 61}(36,37,41,
}'
1254:}"PIN, GOTO RTUPC ON VR _ E2<0, Z _ Q}"_ M
.BR = 10}#82
.BL = 4}#79
.MS = 16}#64,63,62
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LZX = 1}#76
.LRN = 6}#70,69
.MC = 10}#2
.TE2Y = 1}#89
.B = 1251}$8,10,12,14,17,
CHECKBIT IS 30}#
*VR: HIGH ORDER PART; Q,Z: LOW ORDER PART
}'
1255:}"FETCH R0_RTLBASE
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 13}#38,40,41,
}'
1256:}"Q _ M EOR Q
.BR = 10}#82
.BL = 16}#80,79,78
.TAX = 1}#49
.LQX = 1}#74
.VCYP = 1}#86
}'
1257:}"M _ M + Z, HSTORE R0_RTLOW
.BR = 4}#83
.BL = 4}#79
.MS = 43}#65,64,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
.C = 11}#38,41,
CHECKBIT IS 87
* CARRY IF OVERFLOW; OVERFLOW IS NOT OF SIGN OF RESULT, IF OPERANDS 
*HAVE DIFFERENT SIGNS; SIGN OF OPERAND, IF OPERANDS HAVE SAME SIGN
*
* AT THIS POINT Q=4B7 IF OPERAND'S SIGN DIFFERENT, 0 IF SAME
*M = RESULT, Z = ONE OF THE OPERANDS
}'
1260:}"M _ NOT M AND Q + Z AND NOT Q, Q _ 4B7
.BR = 14}#83,82
.BL = 12}#80,78
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = -40000000}#18,
CHECKBIT IS 87}#
*M IS NOW 1 IF A CARRY IS TO TAKE PLACE, ELSE ZERO
}'
1261:}"Z _ M AND Q LCY 1, R0 _RTHBASE
.BR = 10}#82
.MS = 1}#65
.TCY = 1}#44
.TYW = 1}#48
.LZX = 1}#76
.LR0 = 1}#58
.VCYP = 1}#86
.C = 12}#38,40,
}'
1262:}"FETCH
.MS = 44}#63,60
.VCYP = 1}#86
}'
1263:}"Z _ M + Z, M _ VR
.RRN = 6}#67,66
.BR = 4}#83
.BL = 4}#79
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
CHECKBIT IS 87}#
}'
1264:}"Z _ M + Z, FETCH R0_RTLOW
.BR = 4}#83
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.C = 11}#38,41,
*SIGN OF HIGH ORDER PART IS SAME AS SIGN OF LOW ORDER PART
}'
1265:}"M _ Z AND NOT Q ! M AND Q, DRETURN, STORE R0_RTHIGH
.MCONT = 2}#6
.BR = 14}#83,82
.MS = 42}#64,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.C = 10}#38,
CHECKBIT IS 56}#
*STROBE TO UTP
}'
1266:}"SIGUTP, ATMS
.MS = 17}#65,64,63,62
.TCX = 1}#43
.VCYP = 1}#86
.C = 2}#40,
*

*
*SAVESTATE:}"CALLED WHEN STATE SHOULD BE SAVED, ALSO ENTERED
*}$WHEN START SHULD BE RELOADED (BWAIT OR LOADST)
*
* PARAMETERS DEFINING THE SAVE AREA, USED BY THE STATE STORE AND
* LOAD ROUTINES
}'DEFINE PARAMETER SAVE _ 2740B;})* FOR UTP. SEE SYSP/W-15
}'DEFINE PARAMETER LSCRATCH _ 200B;}'*LENGTH OF SCRATCH PDA SAVE
}'DEFINE PARAMETER SAVER0 _ SAVE+LSCRATCH;
* THE CODE SAVES R0-R6, OS, QAND Z IN SEQUENCE
}'DEFINE PARAMETER SAVER1 _ SAVER0+1;
}'DEFINE PARAMETER SAVEZ _ SAVER0+9;
* A SCRATCHPAD LOCATION MUST BE DEDICATED TO SAVING M
}'DEFINE REGISTER SK0 AS SSMREG;
* THE O REGISTER IS RESTORED FROM
}'DEFINE PARAMETER BREAK _ 22B;}** FOR CHIO. SEE SYSP/W-15
* AND WE WAIT AFTER STORING THE STATE FOR
}'DEFINE PARAMETER BRKWAIT _ 27B;}(* FOR CHIO. SEE SYSP/W-15
* TO BECOME NON-ZERO BEFORE STARTING TO RELOAD

* BREAK. DUMP STATE IN THE SAVE AREA.}"THE STRATEGY IS AS FOLLOWS
* 1) SAVE M IN SSMREG IN THE SCRATCHPAD
* 2) STORE R0 AT SAVER0. STORE OS AT SAVEOS
* 3) STORE Z,Q AT SAVEZ,Q AND R1-R6 AT SAVER1 TO SAVER6
* 4) EXCHANGE SCRATCHPAD AND SAVE TO SAVE+LSCRATCH-1

* AFTER SAVING THE STATE, BREAK WAITS UNTILL BRKWAIT
* BECOMES NON-ZERO.

* THE RELOAD STRATEGY IS OBTAINED BY DOING STEPS 4-3 IN REVERSE,
* AND THEN
* 2) FETCH SAVEOS AND DGOTO IT
* 1) DGOTO *+1 (THIS SETS UP OS), FETCH BREAK
* 0) DGOTO M (THIS SETS UP O), FETCH SAVER0
* -1) R0_M, M_SSMREG

}'MACRO IMS_R0_Z_Z+1, STORE;

1267:}"SAVEST:}#SSMREG _ M, STORE, GOTO 1635B
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 1635}$8,9,10,13,14,15,17,
CHECKBIT IS 30}#
}'
1270:}"M_Z, R0_SAVEZ, STORE
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
.VCYP = 1}#86
.C = 3151}#31,32,35,36,38,41,
CHECKBIT IS 87}#
}'
1271:}"M_R1, R0_Z_SAVER1, STORE
.RRN = 1}#68
.MS = 42}#64,60
.TCX = 1}#43
.THY = 1}#46
.TXW = 1}#47
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
.VCYP = 1}#86
.C = 3141}#31,32,35,36,41,
}'
1272:}"M_R2, R0_Z_Z+1, STORE
.RRN = 2}#67
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
1273:}"M_R3, R0_Z_Z+1, STORE
.RRN = 3}#68,67
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
}'
1274:}"M_R4, R0_Z_Z+1, STORE
.RRN = 4}#66
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
1275:}"M_R5, R0_Z_Z+1, STORE
.RRN = 5}#68,66
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
}'
1276:}"M_R6, R0_Z_Z+1, STORE
.RRN = 6}#67,66
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
}'
1277:}"M_OS, R0_Z_Z+1, STORE
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LR0 = 1}#58
.TOSY = 1}#57
}'
1300:}"M_Q, R0_Z_R0+1, STORE
.BR = 10}#82
.BL = 2}#80
.MS = 42}#64,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.LR0 = 1}#58
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1301:}"R0_SAVE-1
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 2737}#31,33,34,35,37,38,39,40,41,
}'
1302:}"R2_-LSCRATCH, Z_0, CALL XSCRATCH
.MCONT = 1}#7
.TCX = 1}#43
.TXW = 1}#47
.LZY = 1}#77
.LRN = 2}#70
.MC = 1}#5
.VCYP = 1}#86
.B = 1324}$8,10,11,13,15,
.C = -200}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,
}(
1303:}"R0_BRKWAIT, STORE, M _ 0
.MS = 42}#64,60
.TCX = 1}#43
.TXW = 1}#47
.LMY = 1}#73
.LR0 = 1}#58
.VCYP = 1}#86
.C = 27}#37,39,40,41,
}'
1304:}"Q _ 12343210B, FETCH
.MS = 44}#63,60
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 12343210}#20,22,25,26,27,31,32,34,38,
CHECKBIT IS 87}#
}'
1305:}"GOTO *-1 ON M-Q#0, R2_-LSCRATCH
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LRN = 2}#70
.MC = 3}#5,4
.B = 1304}$8,10,11,15,
.C = -200}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,
CHECKBIT IS 56}#

1306:}"LOADST: R0_SAVE-1, Z_0, CALL XSCRATCH
.MCONT = 1}#7
.TCX = 1}#43
.TXW = 1}#47
.LZY = 1}#77
.LR0 = 1}#58
.MC = 20}#1,
.VCYP = 1}#86
.B = 1324}$8,10,11,13,15,
.C = 2737}#31,33,34,35,37,38,39,40,41,
}'
1307:}"R0_SAVER1, FETCH
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 3141}#31,32,35,36,41,
}'
1310:}"R1_M, CALL FN
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 1}#71
.MC = 1}#5
.VCYP = 1}#86
.B = 1323}$8,10,11,13,16,17,
CHECKBIT IS 30}#
}'
1311:}"R2_M, CALL FN
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 2}#70
.MC = 20}#1
.VCYP = 1}#86
.B = 1323}$8,10,11,13,16,17,
CHECKBIT IS 30}#
}'
1312:}"R3_M, CALL FN
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 3}#71,70
.MC = 1}#5
.VCYP = 1}#86
.B = 1323}$8,10,11,13,16,17,
}'
1313:}"R4_M, CALL FN
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 4}#69
.MC = 20}#1
.VCYP = 1}#86
.B = 1323}$8,10,11,13,16,17,
CHECKBIT IS 30}#
}'
1314:}"R5_M, CALL FN
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 5}#71,69
.MC = 1}#5
.VCYP = 1}#86
.B = 1323}$8,10,11,13,16,17,
}'
1315:}"R6_M, CALL FN
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 6}#70,69
.MC = 20}#1
.VCYP = 1}#86
.B = 1323}$8,10,11,13,16,17,
}'
1316:}"DGOTO M, R0_R0+1, FETCH
.MCONT = 3}#7,6
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 1}#5
.DGO = 1}#87
.VCYP = 1}#86
CHECKBIT IS 30}#
}'
1317:}"Q_M, R0_R0+1, FETCH, CALL *+1
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
.MC = 20}#1
.VCYP = 1}#86
.B = 1320}$8,10,11,13,
}'
1320:}"Z_M, R0_BREAK, FETCH
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.VCYP = 1}#86
.C = 22}#37,40,
CHECKBIT IS 87}#
}'
1321:}"DGOTO M, R0_SAVER0, FETCH
.MCONT = 3}#7,6
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 1}#5,
.DGO = 1}#87
.VCYP = 1}#86
.C = 3140}#31,32,35,36,
}'
1322:}"R0_M, M_SSMREG
.BR = 10}#82
.BL = 4}#79
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LR0 = 1}#58

* SUBROUTINE TO BUMP R0 AND FETCH

1323:}"FN:}$R0_R0+1, FETCH, RETURN
.MCONT = 2}#6
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.MC = 20}#1
.VCYP = 1}#86

* SUBROUTINE TO EXCHANGE -(R2) SCRATCHPAD LOCATIONS, STARTING AT (Z),
* WITH CORE LOCATIONS STARTING AT (R0)+1. CLOBBERS M,Z,R1,R2

1324:}"XSCRATCH: FETCH, R0_R0+1
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.VCYP = 1}#86
}'
1325:}"R1_SKZ
.MS = 13}#65,64,62
.TSPY = 1}#45
.TYW = 1}#48
.LRN = 1}#71
CHECKBIT IS 87}#
}'
1326:}"SKZ_M, M_R1, DGOTO XSCRATCH
.RRN = 1}#68
.BR = 10}#82
.BL = 4}#79
.MS = 13}#65,64,62
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.LSPX = 1}#59
.MC = 1}#5
.DGO = 1}#87
.B = 1324}$8,10,11,13,15,
}'
1327:}"STORE, Z_Z+1, RETURN ON R2_R2+1>=0
.MCONT = 2}#6
.RRN = 2}#67
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.LOC = 1}#50
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LRN = 2}#70
.MC = 7}#5,4,3
CHECKBIT IS 30}#

*
*TOFF24: POT TO ALL 2400 BAUD LINES FOR INITIALIZATION
*
*ALSO MAY BE CALLED AS A CPU REQUEST
*
*ARGUMENTS M: (CARG1:) OUTPUT REQUEST (Z REG WHEN POT)

1330:}"TOFF24:}$VR _ -100B
.TCX = 1}#43
.TXW = 1}#47
.LRN = 6}#70,69
.VCYP = 1}#86
.C = -100}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,

1331:}"I24LP:}$Q _ 77B, Z _ VR
.RRN = 6}#67,66
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = 77}#36,37,38,39,40,41,
}'
1332:}"DRETURN, ALERT, Z _ Q AND Z MRG OUTRQ
.MCONT = 2}#6
.BL = 10}#78
.MS = 14}#63,62
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.MC = 20}#1,
.DGO = 1}#87
.C = 40000100}"18,35,
}'
1333:}"POT, Z _ M, GOTO I24LP ON VR _ VR+1<0
.RRN = 6}#67,66
.BR = 10}#82
.BL = 4}#79
.MS = 15}#65,63,62
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LRN = 6}#70,69
.MC = 10}#2
.B = 1331}$8,10,11,13,14,17,
*
*

*
*WAKEUP: WAKEUP A PROCESS
*
*WAKEUP WILL WAKEUP A PROCESS WITH THE WAKEUP SPECIFIED BY Z.
*EXCEPT THAT IF IT IS TO WAKE IT UP FOR INPUT OR OUTPUT IT WILL
*INSIST THAT WIC OR WOC BE SET.
*IF THE PROCESS IS AWAKENED FOR OUTPUT AND IT IS LINKED THEN IT WILL
* BE AWAKENED IF NOQ IS OFF FOR BOTH LINES, BUT IF IT IS ON
*THEN AN ATTEMPT IS MADE TO AWAKE BOTH PROCESSES
*
*IF A PROCESS IS AWAKENED FOR INPUT THEN: AWT _ XWT
*NOTE THAT THE VALUE OF WKCQ IS THE ARGUMENT FOR WAKEUP
*
* ARGUMENTS: 
*}'Z: TYPE OF WAKEUP
*}(0) WKNONE: NO WAKEUP
*}(1) WKI:}#WAKEUP FOR INPUT IF WIC IS ON
*}(2) WKB:}$SAME AS WKI
*}(3) WKQ:}%WAKEUP FOR A QUIT CHARACTER
*}(4) WKX:}%WAKEUP FOR AN ESCAPE CHARACTER
*}(5) WKN:}%WAKEUP NORMAL
*}(6) WKBERT:}"WAKEUP PROCESS IN M NORMAL
*}(7) WK0:}%WAKEUP FOR OUTPUT IF WOC IS ON
*}&M: PROCESS TO WAKEUP IF Z = WKBERT
*
*VALUE: A IS SET IF PROCESS IS AWAKENED
*
*SIDE EFFECTS: PROCESS (USUALLY) AWAKENED.
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*

1334:}"WAKEUP:}$Q _ WKBV, RESETA, VR _ 0, GOTO GOQPZ
.MS = 31}#65,62,61
.TCX = 1}#43
.TYW = 1}#48
.LQX = 1}#74
.LRN = 6}#70,69
.MC = 1}#5
.VCYP = 1}#86
.B = 42}$12,16,
.C = 1335}#32,34,35,37,38,39,41,

1335:}"WKBV:}$RETURN
.MCONT = 2}#6
.MC = 20}#1
.VCYP = 1}#86
}'
1336:}"Q_Q
.BR = 10}#82
.BL = 2}#80
.TAX = 1}#49
.LQX = 1}#74
.VCYP = 1}#86
}'
1337:}"M _ WD1, Q _ MSK0*TWO14, GOTO WKP4
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 1}#5,
.B = 1372}$8,10,11,12,13,14,16,
.C = 40000}#27,
}'
1340:}"Z _ MSK0*TWO18, GOTO WIN
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1,
.VCYP = 1}#86
.B = 1350}$8,10,11,12,14,
.C = 1000000}#23,
CHECKBIT IS 50}#
}'
1341:}"Z _ MSK0*TWO19, GOTO WIN
.TCX = 1}#43
.LZX = 1}#76
.MC = 1}#5,
.VCYP = 1}#86
.B = 1350}$8,10,11,12,14,
.C = 2000000}#22,
CHECKBIT IS 50}#
}'
1342:}"Z _ MSK0*TWO16, GOTO WIN
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1,
.VCYP = 1}#86
.B = 1350}$8,10,11,12,14,
.C = 200000}#25,
CHECKBIT IS 50}#
}'
1343:}"VR _ M, Z _ MSK0*TWO16, GOTO WIN3
.BR = 10}#82
.BL = 4}#79
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LRN = 6}#70,69
.MC = 1}#5,
.VCYP = 1}#86
.B = 1353}$8,10,11,12,14,16,17,
.C = 200000}#25,
CHECKBIT IS 56}#
* ATTEMPT TO AWAKE PROCESS FOR LINE FOR OUTPUT

1344:}"TWKOW:}#M _ WD1, Q _ MSK0*TWO16
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 200000}#25,

1345:}"WKP1:}$GOTO WKP3 ON M AND Q#0, Q _ MSK0*TWO15
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 1376}$8,10,11,12,13,14,15,16,
.C = 100000}#26,
*MASK(WIC) OR MASK(WOC) IN Q, WD1 IN M
*TEST WIC,WOC;}"IF SET CLEAR AND WAKEUP, ELSE RETURN

1346:}"WKP2:}$RETURN ON M AND Q=0, Z _ MSK0*TWO16
.MCONT = 2}#6
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LZY = 1}#77
.MC = 2}#4
.C = 200000}#25,
}'
1347:}"M _ M AND NOT Q, STORE R0_MTAE MRG WIC/1B4
.BR = 10}#82
.BL = 14}#79,78
.SSP = 10}#53
.MS = 42}#64,60
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
*WAKEUP WORD IN Z, PROCESS IN MTAE.PROC

1350:}"WIN:}#FETCH R0_MTAE MRG PROC/1B4
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 3}#40,41,
}'
1351:}"Q _ MSK12*TWO0
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 17777}#29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
1352:}"M _ VR _ M AND}"Q LCY PROC*TWO18/TWO18+1
.BR = 10}#82
.TXW = 1}#47
.TAX = 1}#49
.LMX = 1}#72
.LRN = 6}#70,69
.VCYP = 1}#86
*WAKEUP PROCESS IN VR, WORD IN Z

1353:}"WIN3:}%M_10B, UNPROTECT
.MS = 20}#61
.TCX = 1}#43
.LMX = 1}'72
.C = 10}#38,
CHECKBIT IS 87
}'
1354:}"PROTECT, M, Q _ 2, GOTO WIN3 IF IFUNPRO
.BR = 10}#82
.BL = 4}#79
.MS = 25}#65,63,61
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 30}#2,1
.B = 1353}$8,10,11,12,14,16,17,
.C = 2}#40,
CHECKBIT IS 56}#
}'
1355:}"FETCH R0_WPL
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 15}#38,39,41,
}'
1356:}"GOTO 1606B, M _ M + Q,}"Q _ 37B
.BR = 2}#84
.BL = 4}#79
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.MC = 1}#5
.B = 1606}$8,9,10,15,16,
.C = 37}#37,38,39,40,41,
*NO SPACE IN TABLE SO INCREMENT BADWK WHILE WAITING
}'
1357:}"FETCH R0_BADWK
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.LR0 = 1}#58
.VCYP = 1}#86
.C = 71}#36,37,38,41,
CHECKBIT IS 87}#
}'
1360:}"M _ M + 1, STORE, GOTO WIN3
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1,
.B = 1353}$8,10,11,12,14,16,17,

1361:}"WKPZ:}%SIGUTP, ATMS
.MS = 17}#65,64,63,62
.TCX = 1}#43
.VCYP = 1}#86
.C = 2}#40,
}'
1362:}"STORE, Q_ MSK5*TWO18
.MS = 42}#64,60
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = -1000000}#18,19,20,21,22,23,
}'
1363:}"R0 _ M
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1364:}"Z _ VR, VR _ Z
.RRN = 6}#67,66
.BR = 4}#83
.BL = 10}#78
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LRN = 6}#70,69
.VCYP = 1}#86
}'
1365:}"M _ Z AND NOT Q MRG WKPRI, STORE
.BR = 14}#83,82
.BL = 10}#78
.MS = 42}#64,60
.TCX = 1}#43
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
.C = 2000000}#22,
CHECKBIT IS 87}#
}'
1366:}"M _ VR, VR _ Z
.RRN = 6}#67,66
.BR = 4}#83
.BL = 10}#78
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LRN = 6}#70,69
.VCYP = 1}#86
}'
1367:}"STORE R0_R0 + 1
.MS = 42}#64,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.VCYP = 1}#86
*IF VR<0 LINKED LINE'S PROCESS WAS AWAKENED, WAKEUP PROCESS FOR NORMAL LINE
}'
1370:}"UNPROTECT, 10B, RETURN}"ON VR>=0
.MCONT = 2}#6
.RRN = 6}#67,66
.MS = 20}#61
.TCX = 1}#43
.THY = 1}#46
.MC = 7}#5,4,3
.C = 10}#38,
CHECKBIT IS 50}#
}'
1371:}"M _ WD1, Q _ MSK0*TWO15, GOTO WKP2
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 1}#5,
.B = 1346}$8,10,11,12,15,16,
.C = 100000}#26,
CHECKBIT IS 50}#
*WKI, WKB CONTINUED

1372:}"WKP4:}$RETURN ON M AND Q=0, FETCH R0_MTAE MRG AWT/1B4
.MCONT = 2}#6
.BR = 10}#82
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 2}#4
.C = 2}#40,
CHECKBIT IS 42}#
*MTAE.AWT_MTAE.XWT
* A +23 IS HIDDEN IS STCY THAT HAS TO BE COUNTERACTED BY THE TWO -23S
}'
1373:}"Z _ M LCY 20, Q_MSK3*TWO16
.BR = 10}#82
.BL = 4}#79
.MS = 10}#62
.TCY = 1}#44
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = 3600000}#22,23,24,25,
}'
1374:}"M _ M AND NOT Q+ Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
}'
1375:}"M _ WD1, Q _ MSK0*TWO14, GOTO WKP2
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 20}#1
.B = 1346}$8,10,11,12,15,16,
.C = 40000}#27,
CHECKBIT IS 50}#
*PROCESS LINKED, WAKEUP SHOULD ONLY OCCUR IF NOQ OF BOTH LINES ARE OFF
*KLUDEGERY HERE, IF LINKED PROCESS HAS NOQ ON, RETURN, OTHERWISE
* ATTEMPT TO AWAKE BOTHE, WAKEING THE LINKED PROCESS BY PUTTING IT
*IN Z AND GOING TO WIN3, AND SETTING THE 4B7 BIT IN VR(THE PROCESS) AS
* A FLAG INDICATING THE NORMAL PROCESS SHOULD BE AWAKENED

1376:}"WKP3:}$M _ WD2, Q _ MSK0*TWO23
.SSP = 25}#56,54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = -40000000}#18,
CHECKBIT IS 87}#
}'
1377:}"RETURN ON M AND Q # 0, FETCH R0_MTAE MRG LQNK/1B4
.MCONT = 2}#6
.BR = 10}#82
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 3}#5,4
.C = 2}#40,
}'
1400:}"Z _ MTAA, Q _ 17776B
.SSP = 1}#56
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.C = 17776}#29,30,31,32,33,34,35,36,37,38,39,40,
***}$M _ STUFF(LQNK)+2, Q _ MASK(NOQ);
}'
1401:}"M _ M AND Q LCY 1, Q _ MSK0*TWO23
.BR = 10}#82
.MS = 1}#65
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = -40000000}#18,
***}$Z _ M + Z, FETCH M + Z MRG DISP(NOQ);
}'
1402:}"Z _ M + Z, FETCH R0_NOQ/1B4, .TXW
.BR = 4}#83
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TXW = 1}#47
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.C = 1}#41,
}'
1403:}"RETURN ON M AND Q#0, Q _ MSK0*TWO15
.MCONT = 2}#6
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.C = 100000}#26,
CHECKBIT IS 56}#
}'
1404:}"FETCH R0_Z, Z _ 2B5
.BR = 4}#83
.BL = 10}#78
.MS = 44}#63,60
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LR0 = 1}#58
.VCYP = 1}#86
.C = 200000}#25,
}'
1405:}"RETURN ON M AND Q = 0, Q _17777B
.MCONT = 2}#6
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.C = 17777}#29,30,31,32,33,34,35,36,37,38,39,40,41,
}'
1406:}"FETCH R0_R0, R0 _ X _}"PROC/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}'47
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.VCYP = 1}#86
.C = 3}#40,41,
CHECKBIT IS 87
}'
1407:}"VR _ M AND}"Q LCY PROC*TWO18/TWO18+1 MRG 4B7, GOTO WIN3
.BR = 10}#82
.TCX = 1}#43
.TXW = 1}#47
.TAX = 1}#49
.LRN = 6}#70,69
.MC = 1}#5,
.VCYP = 1}#86
.B = 1353}$8,10,11,12,14,16,17,
.C = -40000000}#18,
CHECKBIT IS 56}#
*

*
*WCH:}"WRITE CHARACTER;
*
*THIS IS THE GENERAL WRITE CHARACTER SUBROUTINE.
* ALL WRITING OF CHARACTERS IS DONE WITH THIS SUBROUTINE.
*IT ASSUMES THAT WCP POINTS TO THE WORD INTO WHICH THE
* CHARACTER IS BEING WRITTEN}"AND WILL STORE INTO THE WORD
*POINTED TO BY WCP, AND INCREMENT WCP.
*WCH WILL NEVER FETCH FROM MEMORY AND WILL STORE INTO MEMORY ON 
*ONLY ONE OF EVERY THREE CALLS.
*IF WCP IS INCREMENTED ACROSS A BUFFER BOUNDARY
*(WCP WAS 7 MOD 8) THEN THE SUBROUTINE SPECIFIED BY WBUF IS CALLED TO
*SETUP WCH TO POINT TO THE APPROPRIATE LOCATION.
*
*WWORD IS ASSUMED TO BE NNX, NXX, OR XXX WHERE N IS THE NULL CHARACTER,
* AND X'S ARE NON NULL CHARACTERS. WHEN Y IS WRITTEN WWORD
* BECOMES: NYX, YXX, OR NNY.}"IN THE LAST CASE THE OLD WWORD IS STORED IN
*THE LOCATION SPECIFIED BY WCP, AND WCP IS INCREMENTED BY ONE AND IF
*IT CROSSES A MOD 8 BOUNDRY $WBUFF IS CALLED. (GAB ONLY)
*WCNT IS INCREMENTED BY 1
*THIS SUBROUTINE IS A NO OP IF THE CHARACTER IS A NULL (0)
*
* ARGUMENTS:
*}'M: CHARACTER TO BE STORED
*
*VALUE: NONE
*
*SIDE EFFECTS: WCP, WWORD,MAY BE MODIFIED
*
*LEVEL: -
*
*SUBROUTINES CALLED: $WBUF (GAB OR ABORT ONLY) (GOTO)
*
*NMR: 1/3
*

1410:}"WCH:}#RETURN ON Q _ M = 0, M _ MSK7*TWO0
.MCONT = 2}#6
.BR = 10}#82
.BL = 4}#79
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.LQX = 1}#74
.MC = 2}#4
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
1411:}"R0 _ Z _ Q _ Q AND M LCY 16, M _ WWORD
.BR = 10}#82
.SSP = 31}#56,53,52
.MS = 7}#65,64,63
.TSPY = 1}#45
.TXW = 1}#47
.LMY = 1}#73
.LQX = 1}#74
.LZX = 1}#76
.LR0 = 1}#58
}'
1412:}"WWORD _ Q OR M LCY 8, Q _ MSK7*TWO16
.BR = 10}#82
.BL = 6}#80,79
.SSP = 31}#56,53,52
.MS = 5}#65,63
.TCY = 1}#44
.LQY = 1}#75
.LSPX = 1}#59
.C = -200000}#18,19,20,21,22,23,24,25,
*}**RETURN IF OLD WWORD WAS NOT XXX.
}'
1413:}"M AND Q, RETURN IF LB=0, WCNT _ WCNT + 1
.MCONT = 2}#6
.RRN = 3}#68,67
.BR = 10}#82
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LRN = 3}#71,70
.MC = 22}#4,1
.VCYP = 1}#86
}'
1414:}"STORE R0_WCP, Q _ Z
.RRN = 4}#66
.BR = 4}#83
.BL = 10}#78
.MS = 42}#64,60
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
.VCYP = 1}#86
}'
1415:}"WWORD _ Q LCY 8
.BR = 10}#82
.BL = 2}#80
.SSP = 31}#56,53,52
.MS = 5}#65,63
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
1416:}"WCP _ WCP + 1 MRG STFLAG, RETURN IF NMOD8
.MCONT = 2}#6
.RRN = 4}#66
.IHR = 1}#42
.TCY = 1}#44
.THY = 1}#46
.TYW = 1}#48
.LRN = 4}#69
.MC = 21}#5,1
.C = -40000000}#18,
CHECKBIT IS 50
}'
1417:}"Z _ WBUF, GOTO GOTOZ
.SSP = 27}#56,55,54,52
.TSPY = 1}#45
.LZY = 1}#77
.MC = 20}#1
.B = 37}$13,14,15,16,17,
CHECKBIT IS 30}#
*

*
*WCH1: WRITE ONE CHARACTER IN LINE
*
*
* ARGUMENTS: 
*}'CHAR: CHARACTER OR SHIFT1, CHARACTER
*}'LINE, MTCE ARE SETUP
*
*VALUE: Z < 0 IF CCNT >= WKCNT, ELSE Z >=0;
*
*SIDE EFFECTS: WWORD, WCP MODIFIED
*
*LEVEL: 1
*
*SUBROUTINES CALLED: GWP,WCH,PWP
*
*NMR: 0
*

1420:}"WCH1:}$Z _ OS
.LZY = 1}#77
.VCYP = 1}#86
.TOSY = 1}#57
}'
1421:}"CALL GWP, SVR1 _ Z
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.SSP = 37}#56,55,54,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}#1
.B = 622}$9,10,13,16,
}'
1422:}"M _ CHAR, Q _ MSK7*TWO0
.SSP = 22}#55,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 87}#
}'
1423:}"GOTO WCH11 ON M AND NOT Q = 0
.BR = 10}#82
.BL = 14}#79,78
.TAX = 1}#49
.MC = 2}#4
.B = 1426}$8,9,13,15,16,
CHECKBIT IS 30}#
}'
1424:}"CHAR _ M AND Q, Q _ MSK7*TWO8
.BR = 10}#82
.SSP = 22}#55,52
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.C = 177400}#26,27,28,29,30,31,32,33,
}'
1425:}"M _ M AND}"Q LCY MCHAR*TWO18/TWO18+1, CALL WCH
.MCONT = 1}#7
.BR = 10}#82
.MS = 7}#65,64,63
.LMX = 1}#72
.MC = 1}#5,
.VCYP = 1}#86
.B = 1410}$8,9,14,

1426:}"WCH11:}$CALL WCH, M _ CHAR
.MCONT = 1}#7
.SSP = 22}#55,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1,
.B = 1410}$8,9,14,
}'
1427:}"CALL PWP
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 1006}$8,15,16,
CHECKBIT IS 30}#
}'
1430:}"GOTO RTSS1
.MC = 20}#1,
.VCYP = 1}#86
.B = 20}$13,
*

*
*WKCQ: IS IT A WAKEUP (W), BREAK (B), QUIT (Q), OR ESCAPE (X)
*
*ON RETURN Z WILL CONTAIN
*}'0) WKNONE}+CHAR NOT Q, B, W, OR X.
*}'1) WKI}.CHAR IS W, IS NOT Q, B, OR X.
*}'2) WKB}.CHAR IS B, NOT Q OR X.
*}'3) WKQ}.CHAR IS Q, NOT X.
*}'4) WKX}.CHAR IS X.
*
*WITH THE EXCEPTHIO OF SHIFT1 ALL CONTROL CHARS ARE BREAK CHARS.
*CBREAK MAY EVE BE A QUIT CHARCTER. THIS IS AN AMBIGIOUS CASE
*BECAUSE QUITC=377B WILL CAUSE IT TO STOP ON EITHER 377B ON CBREAK.
**IF A SHIFT1 1 IS RECEIVED IT IS NOT A BREAK CHARACTER. THE 
*FLAG LCWS1 IS SET.
*IT THIS FLAG IS SET ON INPUT THE CHARACTER IS TAKEN TO BE THEINPUT CHAR
*MOD 40B.
*ANY SUBROUTINE THAT MIGHT CALL WKCQ WITH A SHIFT1
*THAT WILL NOT IMMEDIATLTY RECALL IT MUST RESET LCWS1;
*
*NOTE THAT THE VALUE OF WKCQ IS THE ARGUMENT FOR WAKEUP
*
* ARGUMENTS: 
*}'M: CHARACTER EITHER 8 BIT CHARACTER OR SHIFT1 8 BIT CHARACTER
*}.(ALL CSES HANDLED CORRECTLY INCLUDING
*}.SUCSEVICE CALLS WITH SHIFT1 AND 40+CHAR)
*
*VALUE:
*}'Z: SEE ABOVE
*
*LEVEL: 1
*
*SUBROUTINES CALLED: NONE
*
*NMR: 1,2
*
*SIDE EFFECTS: LCWS1, CHISC ARE SETUP
*

1431:}"WKCQ:}%VR _ M
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 6}#70,69
.VCYP = 1}#86
}'
1432:}"Q _ MSK2*TWO0, M _ WD1
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 7}#39,40,41,
}'
1433:}"Q _ M AND Q LCY 2
.BR = 10}#82
.MS = 2}#64
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1434:}"Z _ Q LCY 3, M _ VR
.RRN = 6}#67,66
.BR = 10}#82
.BL = 2}#80
.MS = 3}#65,64
.THY = 1}#46
.LMY = 1}#73
.LZX = 1}#76
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1435:}"Q _ Q + Z, Z _ DVTBA
.BR = 4}#83
.BL = 2}#80
.SSP = 6}#55,54
.TSPY = 1}#45
.TAX = 1}#49
.LQX = 1}#74
.LZY = 1}#77
CHECKBIT IS 87}#
}'
1436:}"DVTBE _ Q + Z, Q _ 400B
.BR = 4}#83
.BL = 2}#80
.SSP = 13}#56,55,53
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.C = 400}#33,
CHECKBIT IS 87}#
*THAT CODE WAS TO SET UP DVTBE TO DVTBA+36D(44B)*DEVICE TYPE
}'
1437:}"GOTO WK17 ON M-Q>=0, Q_37B
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 5}#5,3
.B = 1442}$8,9,12,16,
.C = 37}#37,38,39,40,41,
}'
1440:}"DGOTO NORC ON LCWS1 >=0
.SSP = 20}#52
.TSPY = 1}#45
.MC = 7}#5,4,3
.DGO = 1}#87
.B = 1450}$8,9,12,14,
CHECKBIT IS 30}#
}'
1441:}"M AND NOT Q, GOTO ISACC IF LB=0, Z _ SHIFT1
.BR = 10}#82
.BL = 14}#79,78
.TCY = 1}#44
.TAX = 1}#49
.LZY = 1}#77
.MC = 22}#4,1
.VCYP = 1}#86
.B = 1444}$8,9,12,15,
.C = 37}#37,38,39,40,41,
CHECKBIT IS 56}#

1442:}"WK17:}$LCWS1 _ 1
.SSP = 20}#52
.BL = 10}'78
.BR = 10}'82
.LOC = 1}'50
.TAX = 1}'49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
1443:}"VR _ M _ M AND Q, GOTO CCOMC
.BR = 10}#82
.TXW = 1}#47
.TAX = 1}#49
.LMX = 1}#72
.LRN = 6}#70,69
.MC = 1}#5,
.VCYP = 1}#86
.B = 1451}$8,9,12,14,17,
* IS A CONTROL CHARACTER

1444:}"ISACC:}$GOTO TRCB ON Z-M #0, Q _ Z _ CBREAK
.BR = 4}#83
.BL = 13}#81,80,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZY = 1}#77
.MC = 3}#5,4
.B = 1446}$8,9,12,15,16,
.C = 32}#37,38,40,
}'
1445:}"LCWS1 _ 4B7, Z _ WKNONE, RETURN
.MCONT = 2}#6
.SSP = 20}#52
.TCX = 1}#43
.LZY = 1}#77
.LSPX = 1}#59
.MC = 20}#1
.C = -40000000}#18,

1446:}"TRCB:}$GOTO TQC ON Z-M = 0, M _ Q _ MSK7*TWO0
.BR = 4}#83
.BL = 13}#81,80,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.LQY = 1}#75
.MC = 2}#4
.B = 1452}$8,9,12,14,16,
.C = 377}#34,35,36,37,38,39,40,41,
}'
1447:}"GOTO TESC, Z _ WKNONE
.LZX = 1}#76
.MC = 1}#5,
.VCYP = 1}#86
.B = 1501}$8,9,11,17,
*NORMAL CHARACTER

1450:}"NORC:}#LCWS1 _ 0
.SSP = 20}#52
.LSPX = 1}#59
CHECKBIT IS 87}#

1451:}"CCOMC:}$Z _ WD2, Q _ MSK7*TWO0
.SSP = 25}#56,54,52
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.C = 377}#34,35,36,37,38,39,40,41,

1452:}"TQC:}#GOTO *+2 ON M AND Q- Z AND Q # 0, RESETA
.BR = 17}#85,84,83,82
.MS = 31}#65,62,61
.LOC = 1}#50
.TAX = 1}#49
.MC = 3}#5,4
.B = 1454}$8,9,12,14,15,
CHECKBIT IS 30}#
}'
*}"FOLLOWING CAUSES "0" QUITC TO BE IGNORED}"7/4/75}#(WWL)
1453:}"GOTO *-1 ON Z AND Q = 0, Z _ 1, SETA
.BL = 10}#78
.MS = 30}#62,61
.TAX = 1}#49
.TCY = 1}#44
.LZY = 1}#77
.MC = 2}#4
.B = 1452}#8,9,12,14,16,
.C = 1}#41
}'
1454:}"Z _ M _ M LCY 1, Q _ 760B
.BR = 10}#82
.BL = 4}#79
.MS = 1}#65
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = 760}#33,34,35,36,37,
}'
1455:}"Q _ M AND Q LCY 20, M _ DVTBE MRG C0/1B4
.BR = 10}#82
.SSP = 13}#56,55,53
.MS = 10}#62
.TCY = 1}#44
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 2}#40,
CHECKBIT IS 87}#
}'
1456:}"FETCH R0_M+Q, Q _ 17B
.BR = 2}#84
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
.C = 17}#38,39,40,41,
}'
1457:}"Z _ Z AND Q
.BL = 10}#78
.TAX = 1}#49
.LZX = 1}#76
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1460:}"M _ M LCL Z
.BR = 10}#82
.BL = 4}#79
.MS = 11}#65,62
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1461:}"M _ M LCH Z, Q _ 6B7
.BR = 10}#82
.BL = 4}#79
.MS = 12}#64,62
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = -20000000}#18,19,
CHECKBIT IS 87}#
}'
1462:}"Z _ M _ M AND Q LCY 2, Q _ 3
.BR = 10}#82
.MS = 2}#64
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = 3}#40,41,
}'
1463:}"CHISC _ 0
.SSP = 60}#52,51
.LSPX = 1}#59
}'
1464:}"M EOR Q, GOTO *+2 IF LB#0
.BR = 10}#82
.BL = 16}#80,79,78
.TAX = 1}#49
.MC = 23}#5,4,1
.VCYP = 1}#86
.B = 1466}$8,9,12,13,15,16,
}'
1465:}"CHISC _ 4B7
.SSP = 60}#52,51
.TCX = 1}#43
.LSPX = 1}#59
.C = -40000000}#18,
*
*A WAS SET IF QUIT CHAR SO CHISC COULD BE SETUP}"IF QUIT CANT BE WS OR BS
}'
1466:}"Q _ MSK1*TWO20, M _ WD1, GOTO SQE IF ASET
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 33}#5,4,2,1
.B = 1477}$8,9,12,13,14,15,16,17,
.C = 14000000}#20,21,
CHECKBIT IS 50}#
}'
1467:}"M_ M AND}"Q LCY WS*TWO18/TWO18+1, GOTO WKNOT IF LB=0
.BR = 10}#82
.MS = 4}#63
.LMX = 1}#72
.MC = 22}#4,1
.VCYP = 1}#86
.B = 1500}$8,9,11,
}'
1470:}"M _ M + Z, Q _ 3
.BR = 4}#83
.BL = 4}#79
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.C = 3}#40,41,
CHECKBIT IS 87}#
*
*
*
*IF WS+CHAR TYPE>=3 THEN CHAR IS A WAKEUP CHAR AND MAYBE A BREAK CHAR
*WIITH ONE EXCEPTION WS=0 (AND CHAR TYPE IMPLICITY 3)
*
}'
1471:}"GOTO WKNOT ON M-Q<0
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.MC = 4}#3
.B = 1500}$8,9,11,
CHECKBIT IS 30}#
}'
1472:}"M _ WD1, Q _ MSK1*TWO22
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = -20000000}#18,19,
CHECKBIT IS 87}#
}'
1473:}"M _ M AND}"Q LCY BS*TWO18/TWO18+1, Q _ 3
.BR = 10}#82
.MS = 2}#64
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = 3}#40,41,
CHECKBIT IS 87}#
}'
1474:}"M _ M + Z
.BR = 4}#83
.BL = 4}#79
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87}#
*
*IF BS + CHAR TYPE >=3 THEN CHAR IS A BREAK CHAR}%BS<=WS
*
}'
1475:}"GOTO TESC ON M-Q< 0, Z _ WKI
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LZY = 1}#77
.MC = 4}#3
.B = 1501}$8,9,11,17,
.C = 1}#41,
CHECKBIT IS 56}#
}'
1476:}"Z _ WKB, GOTO TESC
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1,
.VCYP = 1}#86
.B = 1501}$8,9,11,17,
.C = 2}#40,

1477:}"SQE:}#Z _ WKQ, GOTO TESC
.TCX = 1}#43
.LZX = 1}#76
.MC = 1}#5,
.VCYP = 1}#86
.B = 1501}$8,9,11,17,
.C = 3}#40,41,
CHECKBIT IS 50}#

1500:}"WKNOT:}$Z _ WKNONE
.LZX = 1}#76
.VCYP = 1}#86
CHECKBIT IS 87}#
*Z HAS WAKEUP TYPE UNLESS WAKEUP TYPE IS ESCAPE(WKX)

1501:}"TESC:}$FETCH R0_DVTBE MRG ESCCH/1B4, Q _ MSK7*TWO16
.SSP = 13}#56,55,53
.MS = 44}#63,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 87}#
}'
1502:}"Q _ M AND}"Q LCY ESCCH*TWO18/TWO18+1, M _ VR
.RRN = 6}#67,66
.BR = 10}#82
.MS = 5}#65,63
.THY = 1}#46
.LMY = 1}#73
.LQX = 1}#74
.VCYP = 1}#86
}'
*}"CHANGE DISABLES ESCAPE WAKEUPS:}"RETURN (ON M - Q # 0)
1503:}"RETURN
.MCONT = 2}#6
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.MC = 1 (3)}#5,}#(5,4)
CHECKBIT IS 30

1504:}"Z _ WKX, RETURN
.MCONT = 2}#6
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1,
.VCYP = 1}#86
.C = 4}#39,
CHECKBIT IS 50}#
*

*WKOL: WAKEUP AN OUTPUT LINE
*
*WKOL SET A BIT IN THE LOCAL DEVICE BIT TABLE
*SO THAT CHARACTERS CAN BE OUTPUT BY BSCN;
*IT WILL NOT TURN THE LINE ON IF AWT # 0
*2400 BAUD LINES ARE ALSO AWAKENED
*
* ARGUMENTS:
*}'Z: 0 IF LINE IS TO BE TURNED OFF, -1 IF IT IS TO BE TURNED ON
*
*VALUE: NONE
*
*SIDE EFFECTS: SEE GLBTE
*
*LEVEL: 1
*
*SUBROUTINES CALLED: GLBTE
*

1505:}"WKOL:}$Z _ OS, GOTO SH6, TFWK _ Z
.BR = 4}#83
.BL = 10}#78
.SSP = 70}#53,52,51
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5,
.TOSY = 1}#57
.B = 1576}$8,9,11,12,13,14,15,16,
CHECKBIT IS 30}#

1506:}"FU6:}#FETCH R0_MTAE MRG AWT/1B4
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 2}#40,
CHECKBIT IS 87}#
}'
1507:}"Q _ MSK3*TWO16, Z _ WD1
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.C = 3600000}#22,23,24,25,
CHECKBIT IS 87}#
}'
1510:}"GOTO RTSS1 ON M AND Q#0, Q _ MSK5*TWO7
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 20}$13,
.C = 17600}#29,30,31,32,33,34,
}'
1511:}"M _ WD1, Z _ TWO7
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LZX = 1}#76
.C = 200}#34,
}'
1512:}"GOTO W24 ON M AND Q - Z = 0, R0_MTAE MRG LDVN/1B4
.BR = 13}#85,84,82
.SSP = 10}#53
.LOC = 1}#50
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 2}#4
.B = 1530}$8,9,11,13,14,
.C = 3}#40,41,
CHECKBIT IS 42}#
}'
1513:}"CALL ABORT ON M AND Q #0, Q _ MSK2*TWO0
.MCONT = 1}#7
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 13}$14,16,17,
.C = 7}#39,40,41,
}'
1514:}"M _ M AND Q, GOTO 1616B
.BR = 10}#82
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1,
.VCYP = 1}#86
.B = 1616}$8,9,10,14,15,16,
*GET DEVICE NUMBER
}'
1515:}"FETCH R0_MTAE MRG LDVN/1B4
.SSP = 10}#53
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 3}#40,41,
}'
1516:}"VR _ M
.BR = 10}#82
.BL = 4}#79
.TXW = 1}#47
.TAX = 1}#49
.LRN = 6}#70,69
.VCYP = 1}#86
*GENERATE RANDOM NUMBER 0-6 REPEATABLE GIVEN LINE NUMBER 
}'
1517:}"M _ MTCE, Q _ 16B
.RRN = 1}#68
.TCX = 1}#43
.THY = 1}#46
.LMY = 1}#73
.LQX = 1}#74
.VCYP = 1}#86
.C = 16}#38,39,40,
}'
1520:}"GOTO *+2 ON Q _ M AND Q - 1 >=0
.BR = 7}#85,84,83
.TAX = 1}#49
.LQX = 1}#74
.MC = 5}#5,3
.B = 1522}$8,9,11,13,16,
CHECKBIT IS 30}#
}'
1521:}"Q _ 1
.BL = 10}'78,
.BR = 10}'82,
.LOC = 1}'50
.TAX = 1}'49
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
*NOW SET (RESET) THE BIT
}(
1522:}"R0 _ Q + Z
.BR = 4}#83
.BL = 2}#80
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
}'
1523:}"M _ VR, Q _ MSK7*TWO16
.RRN = 6}#67,66
.TCX = 1}#43
.THY = 1}#46
.LMY = 1}#73
.LQX = 1}#74
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
}'
1524:}"M _ M AND}"Q LCY LDVN*TWO18/TWO18+1, Z _ 24
.BR = 10}#82
.MS = 5}#65,63
.TCY = 1}#44
.LMX = 1}#72
.LZY = 1}#77
.VCYP = 1}#86
.C = 30}#37,38,
}'
1525:}"Z _ Z - M, Q _ 4B7, CALL QQCYZ
.MCONT = 1}#7
.BR = 4}#83
.BL = 13}#81,80,78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.MC = 1}#5,
.B = 43}$12,16,17,
.C = -40000000}#18,
}'
1526:}"Z _ TFWK, DGOTO RTSS1, FETCH
.SSP = 70}#53,52,51
.MS = 44}#63,60
.TSPY = 1}#45
.LZY = 1}#77
.MC = 20}#1,
.DGO = 1}#87
.B = 20}$13,
CHECKBIT IS 30}#
}'
1527:}"M _ M AND NOT Q + Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
*
*RCNO = 1}"MEANS 2400 BAUD LINE

1530:}"W24:}#FETCH, Q _ MSK7*TWO16
.MS = 44}#63,60
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
}'
1531:}"Z_M AND}"Q LCY LDVN*TWO18/TWO18+1 MRG 100B
.BR = 10}#82
.MS = 5}#65,63
.TCX = 1}#43
.LZX = 1}#76
.VCYP = 1}#86
.C = 100}#35,
}'
1532:}"M _ TFWK, Q _ MSK0*TWO10, ALERT, DRETURN
.MCONT = 2}#6
.SSP = 70}#53,52,51
.MS = 14}#63,62
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 1}#5
.DGO = 1}#87
.C = 2000}#31,
}'
1533:}"Z _ M AND Q MRG MSK0*TWO9+CHSTAT+RQSEND, POT
.BR = 10}#82
.MS = 15}#65,63,62
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.C = 21400}#28,32,33,
CHECKBIT IS 87}#
*

*
*WST: WRITE STRING
*
*WST DOES THE FOLLOWING:
*
*}'1) COPY STRING TO BUFFERS
*}'2) WAKEUP PROCESS IF LINE BEING WRITTEN ON IS AN INPUT LINE
*}'3) IF NOQ IS SET (BY PWP) SET WOC 
*}'4) IF THE LINE IS AN OUTPUT LINE WAKEUP THE LINE 
*}'5) IF THE CHARACTER IS AN ILLEGAL}"CONTROL CHARACTER CHECK CARG2
*}'6) SET NSR = 1 IF NIQ(NOQ) IS SET
*}'7) OUTPUT TO LINKED LINE
*}'8) WOC IS SET IF AN OUTPUT LINE AND NSR =1
*
*
*ARGUMENTS: IN CPUIT
*
*VALUE: NONE
*
*SIDE EFFECTS: RCP, WCP ETC GET GRONKED, LINE BUFFERS
*MIGHT HAVE CHANGED MARKEDLY.
*
*LEVEL: TOP
*
*}"SUBROUTINES CALLED WCH,RCH,IRCH, CRCH,GWP,PWP,WAKEUP,ECHO;


1534:}"WST:}#M_RWSB/1B4
.TCX = 1}#43
.LMX = 1}#72
.VCYP = 1}#86
.C = 51}#36,38,41,
CHECKBIT IS 87}#
}'
1535:}"Q_RWEB/1B4
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 57}#36,38,39,40,41,
CHECKBIT IS 87}#
}'
1536:}"Z _ ABCPU, CALL IRCH
.MCONT = 1}#7
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1,
.VCYP = 1}#86
.B = 704}$9,10,11,15,
.C = 5}#39,41,
}'
1537:}"CALL GWP
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 622}$9,10,13,16,
}'
1540:}"FETCH R0_CARG1/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
1541:}"RCNT_-1-M
.BR = 7}#85,84,83
.BL = 13}#81,80,78
.LOC = 1}#50
.TXW = 1}#47
.TAX = 1}#49
.LRN = 2}#70
CHECKBIT IS 87}#
*COPY STRING TO BUFFERS

1542:}"WSTLP:}$CALL RCH
.MCONT = 1}#7
.MC = 20}#1,
.VCYP = 1}#86
.B = 1056}$8,12,14,15,16,
CHECKBIT IS 30}#
*CONSIDER ILLEGAL CONTROL CHARS
}'
1543:}"GOTO WSTFIN ON RCNT>=0
.RRN = 2}#67
.THY = 1}#46
.MC = 7}#5,4,3
.B = 1551}$8,9,11,12,14,17,
}'
1544:}"VR _ M, Q_CHAX
.BR = 10}#82
.BL = 4}#79
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
.VCYP = 1}#86
.C = 35}#37,38,39,41,
}'
1545:}"GOTO BADCH ON Q-M>0
.BR = 2}#84
.BL = 13}#81,80,78
.LOC = 1}#50
.TAX = 1}#49
.MC = 6}#4,3
.B = 1565}$8,9,11,12,13,15,17,

1546:}"WSTOK:}#CALL WCH
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 1410}$8,9,14,
CHECKBIT IS 30}#
}'
1547:}"M_WD1, Q_MSK0*TWO16, DGOTO WSTLP
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 20}#1
.DGO = 1}#87
.B = 1542}$8,9,11,12,16,
.C = 200000}#25,
CHECKBIT IS 50}#
}'
1550:}"CALL ECHO ON CHISC _ M AND Q#0
.MCONT = 1}#7
.BR = 10}#82
.SSP = 60}#52,51
.TAX = 1}#49
.LSPX = 1}#59
.MC = 3}#5,4
.B = 357}$10,11,12,14,15,16,17,
*RCNT INCREMENTED BY RCH

1551:}"WSTFIN:}$CALL PWP
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 1006}$8,15,16,
CHECKBIT IS 30}#
*SET NSR TO 1 IF NIQ/NOQ SET
}'
1552:}"M_WD2, Q_MSK0*TWO22
.SSP = 25}#56,54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 20000000}#19,
CHECKBIT IS 87}#
}'
1553:}"CALL QQCYZ IF ODD,}"LINE, Z _ 1
.MCONT = 1}#7
.SSP = 21}#56,52
.BL = 10}'78,
.BR = 10}'82,
.LOC = 1}'50
.TAX = 1}'49
.TSPY = 1}#45
.LZX = 1}#76
.MC = 25}#5,3,1
.B = 43}$12,16,17,
}'
1554:}"GOTO WST2 ON M AND Q=0, VR _ LINE
.BR = 10}#82
.SSP = 21}#56,52
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LRN = 6}#70,69
.MC = 2}#4
.B = 1560}$8,9,11,12,13,
CHECKBIT IS 30}#
}'
1555:}"NSRFLAG _ 1, VR, GOTO WST2 IF NODD
.RRN = 6}#67,66
.SSP = 71}#56,53,52,51
.BL = 10}'78,
.BR = 10}'82
.LOC = 1}'50
.TAX = 1}'49
.THY = 1}#46
.LSPX = 1}#59
.MC = 24}#3,1
.B = 1560}$8,9,11,12,13,
}'
1556:}"M _ WD1 MRG MSK0*TWO15
.SSP = 24}#54,52
.TCY = 1}#44
.TSPY = 1}#45
.LMY = 1}#73
.C = 100000}#26,
CHECKBIT IS 87}#
}'
1557:}"STORE R0_MTAE MRG WOC/1B4
.SSP = 10}#53
.MS = 42}#64,60
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
CHECKBIT IS 87}#

1560:}"WST2:}$CALL WKOL IF ODD, LINE, Z _ -1
.MCONT = 1}#7
.SSP = 21}#56,52
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49
.TSPY = 1}#45
.LZX = 1}#76
.MC = 25}#5,3,1
.B = 1505}$8,9,11,15,17,
CHECKBIT IS 30}#
}'
1561:}"CALL WAKEUP IF NODD, Z_WKI,}"LINE
.MCONT = 1}#7
.SSP = 21}#56,52
.BL = 10}'78,
.BR = 10}'82,
.LOC = 1}'50
.TAX = 1}'49
.TSPY = 1}#45
.LZX = 1}#76
.MC = 24}#3,1
.B = 1334}$8,10,11,13,14,15,
}'
1562:}"M _ OUTCC
.SSP = 7}#56,55,54
.TSPY = 1}#45
.LMY = 1}#73
}'
1563:}"Q _ WCNT, DGOTO CPUFIN
.RRN = 3}#68,67
.THY = 1}#46
.LQY = 1}#75
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 204}$10,15,
}'
1564:}"OUTCC _ M + Q
.BR = 2}#84
.BL = 4}#79
.SSP = 7}#56,55,54
.TAX = 1}#49
.LSPX = 1}#59
*DONT WCH CONTROL CHARACTERS UNLESS CARG SAYS OK

1565:}"BADCH:}$.VCY_0
.VCYP = 1}#86
}'
1566:}"GOTO WSTFIN ON Q _ M = 0, FETCH R0_CARG2/1B4
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
.MC = 2}#4
.B = 1551}$8,9,11,12,14,17,
.C = 44}#36,39,
CHECKBIT IS 56}#
}'
1567:}"GOTO WSTOK ON M <0, M _ VR
.RRN = 6}#67,66
.BR = 10}#82
.BL = 4}#79
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.MC = 4}#3
.B = 1546}$8,9,11,12,15,16,
CHECKBIT IS 30}#
}'
1570:}"NSRFLAG_2, GOTO WSTLP
.SSP = 71}#56,53,52,51
.TCX = 1}#43
.LSPX = 1}#59
.MC = 1}#5
.B = 1542}$8,9,11,12,16,
.C = 2}#40,
*START OF PATCHES

1571:}"SH1:}#SVR4 _ Z, M _ VR, GOTO 273B
.RRN = 6}#67,66
.BR = 4}#83
.BL = 10}#78
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.LSPX = 1}#59
.MC = 1}#5,
.B = 273}$10,12,13,14,16,17,

1572:}"SH2:}#SVR2 _ Z, GOTO 361B
.BR = 4}#83
.BL = 10}#78
.SSP = 36}#55,54,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5
.B = 361}$10,11,12,13,17,
CHECKBIT IS 30}#

1573:}"SH3:}#SVR1 _ Z, GOTO 472B
.BR = 4}#83
.BL = 10}#78
.SSP = 37}#56,55,54,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 472}$9,12,13,14,16,

1574:}"SH4:}#SVR3 _ Z, GOTO 650B
.BR = 4}#83
.BL = 10}#78
.SSP = 64}#54,52,51
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5
.B = 650}$9,10,12,14,
CHECKBIT IS 30}#

1575:}"SH5:}#SVR0 _ Z, GOTO 1066B
.BR = 4}#83
.BL = 10}#78
.SSP = 66}#55,54,52,51
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 1066}$8,12,13,15,16,
CHECKBIT IS 30}#

1576:}"SH6:}#SVR1 _ Z, GOTO 1506B
.BR = 4}#83
.BL = 10}#78
.SSP = 37}#56,55,54,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5
.B = 1506}$8,9,11,15,16,

1577:}"SH7:}#GOTO 1074B, SVR0 _ Z
.BR = 4}#83
.BL = 10}#78
.SSP = 66}#55,54,52,51
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 1074}$8,12,13,14,15,
CHECKBIT IS 30}#

1600:}"PA1:}#Q _ Q LCY 8, GOTO RE1
.BL = 2}#80
.MS = 5}#65,63
.LQX = 1}#74
.MC = 1}#5
.VCYP = 1}#86
.B = 166}$11,12,13,15,16,

1601:}"PA2:}#Q _ Q LCY 8, GOTO RE2
.BL = 2}#80
.MS = 5}#65,63
.LQX = 1}#74
.MC = 1}#5,
.VCYP = 1}#86
.B = 262}$10,12,13,16,
CHECKBIT IS 30
}'
1602:}"GOTO 544B IF ATT2
.MC = 34}#3,2,1
.VCYP = 1}#86
.B = 544}'9,11,12,15,
CHECKBIT IS 30}#
}'
1603:}"GOTO B2400
.MC = 1}#5,
.VCYP = 1}#86
.B = 47}$12,15,16,17,
CHECKBIT IS 30}#
}'
1604:}"Q _ 36B5, DRETURN
.MCONT = 2}#6
.TCY = 1}#44
.LQY = 1}#75
.MC = 1}#5
.DGO = 1}#87
.VCYP = 1}#86
.C = 3600000}#22,23,24,25,
CHECKBIT IS 50}#
}'
1605:}"GOTO WKOL ON M AND Q = 0
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 1505}$8,9,11,15,17,
CHECKBIT IS 30}#
}'
1606:}"GOTO WKPZ ON M AND Q # 0
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
.B = 1361}$8,10,11,12,13,17,
CHECKBIT IS 30}#
}'
1607:}"GOTO 1357B
.MC = 1}#5,
.VCYP = 1}#86
.B = 1357}$8,10,11,12,14,15,16,17,
CHECKBIT IS 30}#
}'
1610:}"GOTO * IF NOREQ
.MC = 27}#5,4,3,1
.VCYP = 1}#86
.B = 1610}$8,9,10,14,
}'
1611:}"DGOTO RESTART, RESETCPU
.MS = 23}#65,64,61
.MC = 1}#5,
.DGO = 1}#87
.B = 1132}$8,11,13,14,16,
CHECKBIT IS 30}#
}'
1612:}"GOTO 1136B, FETCH
.MS = 44}#63,60
.MC = 1}#5
.VCYP = 1}#86
.B = 1136}$8,11,13,14,15,16,
CHECKBIT IS 30}#
}'
1613:}"VR _ M AND Q LCY 1, Q _ 776B5, GOTO 1016B
.BR = 10}#82
.MS = 1}#65
.TCY = 1}#44
.TXW = 1}#47
.LQY = 1}#75
.LRN = 6}#70,69
.MC = 1}#5,
.VCYP = 1}#86
.B = 1016}$8,14,15,16,
.C = -200000}#18,19,20,21,22,23,24,25,
}'
1614:}"ALERT, Z _ 2B7 + 103B
.MS = 14}#63,62
.TCY = 1}#44
.LZY = 1}#77
.C = 20000103}#19,35,40,41,
CHECKBIT IS 87}#
}'
1615:}"PIN, Z _ E2, GOTO 1175B
.MS = 16}#64,63,62
.LZY = 1}#77
.MC = 1}#5,
.TE2Y = 1}#89
.B = 1175}$8,11,12,13,14,15,17,
}'
1616:}"M _ M - 1
.BR = 7}#85,84,83
.BL = 4}#79
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87}#
}'
1617:}"Q _ M LCY 4, Z _ LBTBA
.BR = 10}#82
.BL = 4}#79
.SSP = 34}#54,53,52
.MS = 4}#63
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
}'
1620:}"Z _ Q + Z, GOTO 1515B
.BR = 4}#83
.BL = 2}#80
.TAX = 1}#49
.LZX = 1}#76
.MC = 1}#5
.B = 1515}$8,9,11,14,15,17,
}'
1621:}"SIGUTP, 2, GOTO 1167B
.MS = 17}#65,64,63,62
.TCX = 1}#43
.MC = 1}#5,
.VCYP = 1}#86
.B = 1167}$8,11,12,13,15,16,17,
.C = 2}#40,
}'
1622:}"Q _ 2B4, FETCH R0_LDVTE
.SSP = 12}#55,53
.MS = 44}#63,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.C = 20000}#28,
CHECKBIT IS 87}#
}'
1623:}"GOTO RTSS4 ON M AND Q = 0
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 31}$13,14,17,
CHECKBIT IS 30}#
}'
1624:}"M _ M AND NOT Q, STORE R0_LDVTE, GOTO 1631B
.BR = 10}#82
.BL = 14}#79,78
.SSP = 12}#55,53
.MS = 42}#64,60
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
.MC = 1}#5
.B = 1631}$8,9,10,13,14,17,
}'
1625:}"Z _ 23400B, POT, GOTO 130B
.MS = 15}#65,63,62
.TCY = 1}#44
.LZY = 1}#77
.MC = 1}#5,
.B = 130}$11,13,14,
.C = 23400}#28,31,32,33,
}&
1626:}"RETURN ON Z < 0
.MCONT = 2}#6
.MC = 17}'2,3,4,5,
.VCYP = 1}&86
CHECKBIT IS 30
}'
1627:}"ALERT, Z _ 103B
.MS = 14}#63,62
.TCY = 1}#44
.LZY = 1}#77
.C = 103}#35,40,41,
}'
1630:}"POT, Z _ 400B, GOTO 141B
.MS = 15}#65,63,62
.TCY = 1}#44
.LZY = 1}#77
.MC = 1}#5
.B = 141}$11,12,17,
.C = 400}#33,
CHECKBIT IS 50}#
}'
1631:}"CALL 530B
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 530}$9,11,13,14,
}'
1632:}"GOTO DID5
.MC = 1}#5
.VCYP = 1}#86
.B = 302}$10,11,16,
}'
1633:}"DGOTO DID2, VR _ M, Q _ 7774B4
.BR = 10}#82
.BL = 4}#79
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
.MC = 1}#5,
.DGO = 1}#87
.VCYP = 1}#86
.B = 304}$10,11,15,
.C = -40000}#18,19,20,21,22,23,24,25,26,27,
CHECKBIT IS 56}#
}'
1634:}"GOTO DID3 ON M AND Q = 0
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 272}$10,12,13,14,16,
CHECKBIT IS 30}#
}'
1635:}"GOTO 1270B, R0 _ SAVER0, M _ R0, STORE
.MS = 42}#64,60
.TCX = 1}#43
.THY = 1}#46
.TXW = 1}#47
.LMY = 1}#73
.LR0 = 1}#58
.MC = 1}#5,
.VCYP = 1}#86
.B = 1270}$8,10,12,13,14,
.C = 3140}#31,32,35,36,
CHECKBIT IS 50}#
}'
1636:}"WD1 _ M, GOTO 1237B
.BR = 10}#82
.BL = 4}#79
.SSP = 24}#54,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5
.B = 1237}$8,10,13,14,15,16,17,
CHECKBIT IS 30}#
}'
1637:}"CALL ABORT
.MCONT = 1}%7
.MC = 20}'1,
.VCYP = 1}&86
.B = 13}(14,16,17,
CHECKBIT IS 30
}'
}'ORG 1640B;
}'
1640:}"LCWS1 _ 0, RETURN
.MCONT = 2}#6
.SSP = 20}#52
.LSPX = 1}#59
.MC = 20}#1,
CHECKBIT IS 30}#
}'
1641:}"M _ M AND NOT Q LCY 12, GOTO GLE
.BR = 10}#82
.BL = 14}#79,78
.MS = 6}#64,63
.LMX = 1}#72
.MC = 1}#5,
.VCYP = 1}#86
.B = 514}$9,11,14,15,
CHECKBIT IS 30}#
*}"PATCH TO ALLOW CHECKING FOR CTP

1642:}"GOCTP:}#M _ MODE, .MS_53B
.MS = 53}#65,64,62,60
.TSPY = 1}&45
.SSP = 74}&51,52,53,54,
.LMY = 1}#73
CHECKBIT IS 87}#
}'
1643:}"RETURN ON M > 0
.MCONT = 2}#6
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 6}#4,3
CHECKBIT IS 30}#
}'
1644:}"GOTO 172B, Z _ 0, .MS_60B
.MS = 60}#61,60
.LZX = 1}#76
.MC = 1}(5
.VCYP = 1}#86
.B = 172}$11,12,13,14,16,
CHECKBIT IS 30}#
}'
1645:}".C _ 4B3
.C = 4000}&30,

1646:}&.DGO
.DGO = 1}'87

1647:}&.LOC
.LOC = 1}'50

*THE NEXT THREE INSTRUCTIONS HAVE BEEN USED BY THE CHIO PHASE
*2 MICROCODE FOR PATCHES.}"THEY ARE NOT USED BY THE PHASE 1 CHIO.
1650:
.TSPY = 1}&45
.SSP = 60}&51,52
.LR0 = 1}'58
.MS = 42}'60,64,
.LMX = 1}'72
.TYW = 1}'48
.MC = 20}'1
.B = 664}'9,10,12,13,15,
CHECKBIT IS 30

1651:
.MS = 42}'60,64
.TSPY = 1}&45
.SSP = 61}%51,52,56,
.LR0 = 1}'58
.TYW = 1}'48
.LMX = 1}'72
.LZY = 1}'77
.TCY = 1}'44
.C = 3})40,41,

1652:
.BL = 7}(79,80,81,
.BR = 4}(83,
.MS = 42}'60,64
.TSPY = 1}&45
.SSP = 61}&51,52,56,
.LR0 = 1}'58
.LMY = 1}'73
.TCY = 1}'44
.TXW = 1}&47
.TAX = 1}'49
.MC = 20}'1
.B = 700}'9,10,11,
.C = 44}(36,39,


*PATCHES FOR 24 CHIO PORTS
}'ORG 1654B;
}'
1654:}"Z_42B, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 42}#36,40,
.VCYP = 1}&86
}'
1655:}"Z_M, POT, RETURN
.MCONT = 2}#6
.BR = 10}#82
.BL = 4}#79
.MS = 5}#65,63
.LZX = 1}#76
.TAX = 1}#49
.MC = 20}#1
}'
1656:}"POT
.MS = 15}#65,63,62
}'
1657:}"Z_42B, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 42}#36,40,
.VCYP = 1}#86
}'
1660:}"PIN, Z_ E2
.MS = 16}#64,63,62
.LZY = 1}#77
.TE2Y = 1}#89
}'
1661:}"Q_Q LCY 8,DGOTO 166B
.BR = 10}#82
.BL = 2}#80
.MS = 5}#65,63
.LQX = 1}#74
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 166}$11,12,13,15,16,
}'
1662:}"Q_Q OR Z
.BR = 6}#84,83
.BL = 10}#78
.TAX = 1}#49
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
1663:}"Z_42B, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 42}#36,40,
.VCYP = 1}&86
}'
1664:}"PIN, Z_ E2
.MS = 16}#64,63,62
.LZY = 1}#77
.TE2Y = 1}#89
}'
1665:}"Q_Q LCY 8, DGOTO 262B
.BR = 10}#82
.BL = 2}#80
.MS = 5}#65,63
.LQX = 1}#74
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 262}$10,12,13,16,
CHECKBIT IS 30}#
}'
1666:}"Z _ Q OR Z, Q_ LBIT
.BR = 6}#84,83
.BL = 10}#78
.SSP = 23}#56,55,52
.TSPY = 1}#45
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
CHECKBIT IS 87}#

1667:}&R0_M+1, FETCH, DGOTO INL2
.BR = 10}#82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.TXW = 1}#47
.LR0 = 1}#58
.MS = 44}#60,63
.DGO = 1}#87
.MC = 20}#1
.B = 701}#9,10,11,17,
CHECKBIT IS 30

1670:}&M_CHAR, RETURN ON M<0
.BR = 10}#82
.BL = 4}#79
.SSP = 22}#52,55
.TSPY = 1}#45
.LMY = 1}#73
.TAX = 1}#49
.MC = 4}#3
.MCONT = 2}#6

1671:}&.C_4B3
.C = 4000}&30,

1672:}&.DGO
.DGO = 1}'87

1673:}&.LOC
.LOC = 1}'50

1674:}&.SSP_1
.SSP = 1}'56

1675:}&.C_4B3
.C = 4000}&30,

1676:}&.DGO
.DGO = 1}'87

}'ORG 1677B;
}'
1677:}"CALL ABORT
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 13}$14,16,17,
CHECKBIT IS 30}#