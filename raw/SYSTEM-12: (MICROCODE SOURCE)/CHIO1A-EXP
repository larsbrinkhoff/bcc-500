*
*TRICKS USED IN CODING:
*
* CERTAIN TABLES ARE ORIGINED AT LOCATIONS DIVISIBLE BY 2 ^ N FOR SOME N
*SO THAT A MRG RATHER THAN AN ADD CAN BE USED TO FETCH A WORD FROM 
*THE TABLE
*
*
* CALL A AND RETURN IS SOMETIMES WRITTEN GOTO A;
* AN EXAMPLE OF THIS IS THAT RCH CALLS LNK WHICH CALLS RCH BUT
*EACH OF THE CALLS IS DONE BY A BRANCH. THIS HAS TWO ADVANTAGES.
* 1) EACH CAN BE WRITTEN AS A LEVEL 0 SUBROUTINE BECAUSE
*}#IT DOESNT HAVE TO SAVE MORE THEN ONE LINK AT A TIME.
* 2) A PROGRAM CAN SORT OF CALL ITSELF RECURSIVELY.
*
@}&NOLIST EXT
*

* DOCUMENTATION CONVENTIONS:
*
* A COMMENT THAT BEGINS WITH THE WORD 'KNOW' INDICATES THAT THE MICROCODE
* AT THAT POINT USES AD HOC KNOWLEDGE ABOUT SOMETHING
*
*
*FOR EACH SUBROUTINE THE}"VARIBLES THAT ARE SET UP FOR THE
*SUBROUTINE ARE LISTED UNDER ARGUMENTS, AND THE VALUE IS LISTED.
*UNDER SIDE EFFECTS IS LISTED THE SCRATCH PAD REIGISTERS THAT MIGHT
* CHANGE AS A RESULT OF THIS CALL
*
*REGISTERS M, Q, Z, R0, AND VR ARE VOLATILE AND MAY BE CHANGED AT ANY 
*TIME UNLESS EXPLICITLY STATED THAY ARE DESTROYED ACROSS 
*SUBROUTINE CALLS
*
*
* CONSIDER THE THE FOLLOWING PAIRS OF SPL AND EQUIVILENT MICROPROCESSOR 
*STATEMENTS:
*
*})MICROPROCESSOR STATEMENT}'SPL STATEMENT
*
*}'DF,F,D,FB,LB;}4DECLARE FIELD F(D:FB,LB);
*
*}'@SKN};NUMBER(0 TO 63) OF THE SCRATCH PAD
*
*}'DISP(F)}:F
*
*}'MASK(F)}:FMASK(F)
*
*}'NMASK(F)}9FMASK(F) EOR -1
*
*}'ONE(F)};IF A_0, A$F_1, THEN A = ONE(F)
*
*}'HIGH(F)}:1 LCY (23 - FB)
*
*}'LDCY(F)}:23-FSHIFT(F)
*
*}'STCY(F)}:FSHIFT(F)
*
*}'[N]STUFF(F)}6M AND [NOT] Q LCY LDCY(F)}"#
*
*}'[N]STUFL(F)}6M AND [NOT] Q LCY LDCYL(F)
*
*
*# COUNT MUST BE 0,1,2,3,4,8,12,16,20 OR ERROR MESSAGE RESULTS
*IF COUNT IS ZERO}"A _ B LCY 0 ASSUMED TO BE JUST A _ B;
* AND IS GATED THROUGH THE ADDER

*
*GENERAL COMMENTS ABOUT READ AND WRITE CHARACTER SUBROUTINES.
*
*READ AN WRITE CHARACTER POINTERS MAY ONLY POINT TO WORDS THUS
*THE REST OF THE WORD MUST BE PADDED WITH NULLS.
*THIS MEANS THAT THERE MAY NOT BE ANY POINTERS TO THE MIDDLE
*OF STRINGS.}"THIS DOES NOT OCCUR IN THE CHIO HOWEVER.
*RCP POINTS TO THE WORD TO BE READ, AND WCP POINTS TO THE
*WORD TO BE WRITTEN.
*
*THE GENERAL READ CHARACTER AND WRITE CHARACTER PRIMITIVES (RCH, WCH)
*HOLD THE WORD}"POINTED TO, THE POINTER, AND THE
* COUNT OF THE NUMBER OF CHARACTER READ (WRITTEN) IN LIVE REGISTERS.
*THIS MINIMIZES MEMORY REFERENCES.
*NEW WORDS MUST BE FETCHED (FOR RCH) OR STORED (FOR WCH) WHENEVER
*THE POINTER IS INCREMENTED.
*
*IF THE READ (WRITE) CHARACTER POINTER ATTEMPTS TO INCREMENT
*INTO A LOCATION DIVISIBLE BY 8 THEN A SUBROUTINE FOUND
*IN RBUF (WBUF) IS CALLED TO MOVE THE POINTER TO THE 
*NEXT BUFFER (GET A NEW BUFFER ).
*
*IF A LINE IS EMPTY BOTH RCH AND WCH POINT TO BUF0 WHICH CONTAINS 0;
*
*IRCH AND IWCH ARE CALLED TO INITIALIZE THE SUBROUTINES AND 
* CRCH AND CWCH ARE CALL TO CLEANUP AFTER THE SUBROUTINES.
*
*WHENEVER A CHARACTER IS READ (WRITTEN),}"RCNT (WCNT) IS INCREMENTED;
*RCP (WCP) IS USED TO HOLD THE POINTER.
*THERE IS AN IMPORTANT CONCEPTIUAL DIFFERENCE BETWEEN RCNT AND WCNT.
*RCNT IS INCREMENTED FOR EACH NULL CHARACTER STEPPED OVER AS WELL AS EACH
*CHARACTER READ. THUS RCNT IS USED TO DETERMINE THE NUMBR OF 
*CHARACTER SHIPPED FROM THE CPU.
*WCNT INDICATES THE NUMBER OF CHARACTERS WRITTEN AND IS THUS USED
*TO KEEP TRACK OF THE CHARACTER COUNT IN THE LINE
*RWORD (WWORD) IS USED TO HOLD THE WORD BEING
*POINTED TO.
* CORE IS UPDATED TO RWORD AND WWORD ONLY WHEN NECESSARY.
*
*IF RCP, OR WCP IS UPDATED THEN THIS IS SIGNALED BY SETTING
*THE BIT (STFLAG)IN THE WORD:
*
*WCP AND RCP ARE ABSOLUTE MEMORY ADDRESSES
*

* BUFFER ALLOCATION:
*
*1) IF THERE ARE ANY BUFFERS IN THE SYSTEM THEN A REQUEST FOR A 
* BUFFER IS ALWAYS FULFILLED
*2) CONSIDER THE SET OF ALL INPUT LINES SUCH THAT
*
*}'ABCNT > XBCNT}#WHERE D = ABCNT - XBCNT AND ABCNT IS THE ACTUAL
*
* BUFFER COUNT AND}"XBCNT IS THE MAX BUFFER COUNT FOR THE LINE
* THEN XIB IS SET TO BE THE SUM OF D FOR ALL LINES IN THE SET.
*
*SIMILERLY XOB IS SO SET FOR OUTPUT LINES
*
*NFB IS THE NUMBER OF FREE BUFFERS
*
*IF AT ANY TIME ONE OF THE FOLLOWING FORUR CONDITIONS OCCURS:
*
* NFB < MINFB, NFB > MAXFB.
*
*THEN THE PROCESS BERTHOLD IS AWAKENED IF IT IS NOT ALREADY AWAKE
* BRECHT IS A FLAG WHOSE VALUE IS 1 IF BERTHOLD IS NOT AWAKE.
*
*THERE ALSO EXISTS A MULTIPLIER MP WHICH}"MAY TAKE ON A VALUE FROM 1 TO 
*64
*WHENEVER A PROCESS DOES A WST IF:
*
*}'ABCNT >= MP * XBCNT/64
*
*THE PROCESS IS ADVISED NOT TO OUTPUT MORE CHARACTERS. (NSR = 1)
*
*MP IS ONLY UPDATED BY THE CPU
*WHEN A BERTHOLD IS AWAKENED IT SHOULD CHECK FOR THE REASONABLENES OFF
*XIB, XOB, AND NFB;
*

*
*THE TIME INTERUPT QUEUE
*
*SCRATCH PAD REGISTERS NCI TO LCI ARE OF THE FOLLOWING FORM:
*FTOSUB HA A TABLE ENTRY OF A SUBROUTINE
*FTOTIM HAS THE TIME (17 BITS WOTH , CLOCK TICK 10 MICROS.)
*
*THE HIGH ORDER TIME BIT IS NORMALLY 0.
*WHEN A SUBROUTINES IS CALLED IT MUST SPECIFY THE NEXT TIME THAT 
*IT SOULD BE CALLED BY INCREMENTING}"NCI APPROPRIATLY AND WHEN IT
*RETURNS GNRFIN WILL SORT THESE SCRATCH PAD REGISTERS
*THE TABLE OF SUBROUTINES CALLED IN GNR
*THE INITIALIZATION OF SUCH SUBROUTINE CALLS IN NCI TO LCI IS DONE BY THE CPU
*
* DOESN'T WORD IF THE INCRIMENT IS >2^17 * 10 US. (APX. 1 SEC)
*
*HE EIGHTEENTH BIT IS USED AS AN OVERFLOW BIT, IF ALL REGS
*HAVE THE OVERFLOW BIT ON CKFXP IS CALLED TO TURN THEM ALL OFF
*

*
*LIST OF ALL SIGNALS BETWEEN CHIO AND OTHER PROCESSORS
*
*THE CPU CAN SEND A STROBE1 TO THE CHIO INDICATING A REQUEST
*
*THE UTP CAN SEND A STROBE 1 TO THE CHIO INDICATING RESUME FROM RESTART
*SEQUENCE.}"THIS CASE IS DIFFERENT FROM THE ONE BEFORE IT
*BECAUSE IT CAN ONLY OCCUR AFTER A Z.M. SIGNAL.
*
*THE CHIO CAN SEND A STOBE1 (SIGUTP) TO THE UTP INDICATING A PROCESS
*HAS BEEN AWAKENED OR THAT THE CLOCK IN CORE HAS BEEN
*UPDATED (EVERY 1 M.S.)
*
*THE CHIO CAN SEND A STROBE2 (SETFAIL) TO THE}"UTP INDICATEING IT SHOULD
 
*CRASH THE SYSTEM.
*THE UTP CAN SEND A STROBE2(NFAIL) TO THE CHIO INDICATING THAT IT SHOULD
*CLEAN UP IN PREPERATION FOR A SYSTEM CRASH
*
*THE MICROSCHEDULER MAY SEND A Z.M. SIGNAL WHICH SETS THE CHIOS
*PROGRAM COUNTER TO 0 AND SIGNALS EITHER A SYSTEM CRASH(FAILURE) OR
*THE CHIO SHOULD RELOAD ITS REGISTERS AND DO
*A SYSTEM RESTART AS DETERMINED BY SRMEM. (SEE RESTART)
*
*THE LOCATION COUNTER MAY ALSO BE SET TO ZERO BY A HARDWARE
*BREAKPOINT.}"THIS IS TESTED BY THE BRANCH CONDITION IBREAK.
*

*
*HERE FOLLOWS THE CALL AND RETURN MICROSUBROUTINES
*FOR LEVELS 0 TO 4;
* A LEVEL - SUBROUTINE WILL CALL NO SUBROUTINES DIRECTLY ALTHOUGH IT 
*MAY BRANCH TO ANOTHER LEVEL - SUBROUTINE
* A LEVEL TOP SUBROUTINE DOES NOT RETURN BUT BRANCHES TO ANOTHER
*TOP LEVEL SUBROUTINE
*WCH AND RCH ARE ON LEVEL 0 BY DEFINITION.}"SUBROUTINES THAT CALL THEM 
* ARE ON LEVEL 1 OR HIGHER.
*NOTE THAT A SUBROUTINE MAY EITHER RETURN BY RETURNING OR
*GOING TO RTSSN. OS IS SET UP TO MAKE THIS POSSIBLE
*
*THE FOLLOWING INSTRUCTION MUST BE IN LOCATION 0
}'ORG 0;

0:}"SYSI:}"GOTO SAVEST IF IBREAK
.MC = 45}#5,3,0
.B = 1267}$8,10,12,13,15,16,17,
CHECKBIT IS 30}#
}'
1:}"GOTO RESTART
.MC = 1}#5,
.VCYP = 1}#86
.B = 1132}$8,11,13,14,16,

2:}"GOGNR:})GOTO GNR
.MC = 20}#1,
.VCYP = 1}#86
.B = 535}$9,11,13,14,15,17,
CHECKBIT IS 30}#
}/
3:}"GOTO 1B, .MS_60B
.MS = 60}#61,60
.MC = 1}#5,
.VCYP = 1}#86
.B = 1}$17,
}/
4:}"M_2404B
.TCX = 1}#43
.LMX = 1}#72
.VCYP = 1}#86
.C = 2404}#31,33,39,
CHECKBIT IS 87}#
*
*BAD CPU REQUEST 
*

5:}"ABCPU:}$DGOTO ABORT
.MC = 1}#5,
.DGO = 1}#87
.VCYP = 1}#86
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
6:}"M _ OS, STORE R0_VALU/1B4, GOTO *+1
.MS = 42}#64,60
.TCX = 1}#43
.TXW = 1}#47
.LMY = 1}#73
.LR0 = 1}#58
.MC = 20}#1,
.VCYP = 1}#86
.TOSY = 1}#57
.B = 7}$15,16,17,
.C = 42}#36,40,
CHECKBIT IS 50}#
}'
7:}"FETCH R0_NSR/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 40}#36,
}'
10:}"Q _ MSK1*TWO14
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 140000}#26,27,
}'
11:}"M _ M OR Q, Q _ MSK0*TWO13
.BR = 10}#82
.BL = 6}#80,79
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = 20000}#28,
}'
12:}"M _ M AND NOT Q, STORE, GOTO GNR
.BR = 10}#82
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5
.VCYP = 1}#86
.B = 535}$9,11,13,14,15,17,

13:}"ABORT:}$GOTO SAVEST, SETFAIL
.MS = 33}#65,64,62,61
.MC = 20}#1
.B = 1267}$8,10,12,13,15,16,17,
CHECKBIT IS 30}#

14:}"SVOS0: SVR0 _ Z, GOTO ABORT, Z _ OS
.BR = 4}#83
.BL = 10}#78
.SSP = 66}#55,54,52,51
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5
.TOSY = 1}#57
.B = 13}$14,16,17,
CHECKBIT IS 30}#

15:}"RTSS0:}"VR _ Q, Q _ SVR0
.BR = 10}#82
.BL = 2}#80
.SSP = 66}#55,54,52,51
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
CHECKBIT IS 87}#
}'
16:}"GOTO Q, Q _ VR
.MCONT = 3}#7,6
.RRN = 6}#67,66
.BR = 10}#82
.BL = 2}#80
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.MC = 20}#1,
.VCYP = 1}#86

17:}"SVOS1: SVR1 _ Z, GOTO ABORT, Z _ OS
.BR = 4}#83
.BL = 10}#78
.SSP = 37}#56,55,54,53,52
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5,
.TOSY = 1}#57
.B = 13}$14,16,17,

20:}"RTSS1:}"Q _ SVR1, VR _ Q
.BR = 10}#82
.BL = 2}#80
.SSP = 37}#56,55,54,53,52
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
}'
21:}"GOTO Q, Q _ VR
.MCONT = 3}#7,6
.RRN = 6}#67,66
.BR = 10}#82
.BL = 2}#80
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.MC = 20}#1
.VCYP = 1}#86

22:}"SVOS2: SVR2 _ Z, GOTO ABORT, Z _ OS
.BR = 4}#83
.BL = 10}#78
.SSP = 36}#55,54,53,52
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5
.TOSY = 1}#57
.B = 13}$14,16,17,
CHECKBIT IS 30}#

23:}"RTSS2:}"Q _ SVR2, VR _ Q
.BR = 10}#82
.BL = 2}#80
.SSP = 36}#55,54,53,52
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
CHECKBIT IS 87}#
}'
24:}"GOTO Q, Q _ VR
.MCONT = 3}#7,6
.RRN = 6}#67,66
.BR = 10}#82
.BL = 2}#80
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.MC = 20}#1,
.VCYP = 1}#86

25:}"SVOS3: SVR3_Z, GOTO ABORT, Z _ OS
.BR = 4}#83
.BL = 10}#78
.SSP = 64}#54,52,51
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5,
.TOSY = 1}#57
.B = 13}$14,16,17,

26:}"RTSS3:}"Q _ SVR3, VR _ Q
.BR = 10}#82
.BL = 2}#80
.SSP = 64}#54,52,51
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
}'
27:}"GOTO Q, Q _ VR
.MCONT = 3}#7,6
.RRN = 6}#67,66
.BR = 10}#82
.BL = 2}#80
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.MC = 20}#1
.VCYP = 1}#86

30:}"SVOS4: SVR4 _ Z, GOTO ABORT, Z _ OS
.BR = 4}#83
.BL = 10}#78
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5
.TOSY = 1}#57
.B = 13}$14,16,17,
CHECKBIT IS 30}#

31:}"RTSS4:}"Q _ SVR4, VR _ Q
.BR = 10}#82
.BL = 2}#80
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
CHECKBIT IS 87}#
}'
32:}"GOTO Q, Q _ VR
.MCONT = 3}#7,6
.RRN = 6}#67,66
.BR = 10}#82
.BL = 2}#80
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.MC = 20}#1,
.VCYP = 1}#86
*
*
*SPECIAL TRIVIAL SUBROUTINES AND LOCATIONS
*

33:}"RETRESET:}$RESETA, RETURN
.MCONT = 2}#6
.MS = 31}#65,62,61
.MC = 1}#5,
.VCYP = 1}#86
CHECKBIT IS 30}#
*

34:}"RETSET:}$SETA, RETURN
.MCONT = 2}#6
.MS = 30}#62,61
.MC = 20}#1,
.VCYP = 1}#86
*

35:}"FSTORE:}#STORE, RETURN
.MCONT = 2}#6
.MS = 42}#64,60
.MC = 1}#5,
.VCYP = 1}#86
*

36:}"FFETCH:}$FETCH, RETURN
.MCONT = 2}#6
.MS = 44}#63,60
.MC = 20}#1,
.VCYP = 1}#86

37:}"GOTOZ: GOTO Z
.MCONT = 3}#7,6
.BR = 4}#83
.BL = 10}#78
.TAX = 1}#49
.MC = 1}#5,
.VCYP = 1}#86

40:}"GOTOM: GOTO M
.MCONT = 3}#7,6
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 20}#1,
.VCYP = 1}#86

41:}"GOMPQ: GOTO M+Q
.MCONT = 3}#7,6
.BR = 2}#84
.BL = 4}#79
.TAX = 1}#49
.MC = 1}#5,
CHECKBIT IS 30}#

42:}"GOQPZ: GOTO Q+Z
.MCONT = 3}#7,6
.BR = 4}#83
.BL = 2}#80
.TAX = 1}#49
.MC = 20}#1,
CHECKBIT IS 30}#

43:}"QQCYZ: Q _ Q LCH Z, DRETURN
.MCONT = 2}#6
.BR = 10}#82
.BL = 2}#80
.MS = 12}#64,62
.LQX = 1}#74
.MC = 1}#5,
.DGO = 1}#87
.VCYP = 1}#86
}(
44:}"Q _ Q LCL Z
.BR = 10}#82
.BL = 2}#80
.MS = 11}#65,62
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#

45:}"NSR1:}"NSRFLAG_1, RETURN
.MCONT = 2}#6
.BL = 10}(78,
.BR = 10}'82,
.LOC = 1}'50,
.TAX = 1}'49,
.SSP = 71}#56,53,52,51
.LSPX = 1}#59
.MC = 20}#1

46:}"NSR2:}"NSRFLAG_2, RETURN
.MCONT = 2}#6
.SSP = 71}#56,53,52,51
.TCX = 1}#43
.LSPX = 1}#59
.MC = 1}#5
.C = 2}#40,

*
* B2400: HANDLE 2400 BAUD LINE REQUEST
*
* ARGUMENTS: IN HARDWARE INTERFACE
*
*VALUE: NONE
*
*LEVEL: TOP
*
*NMR: 0
*
*SUBROUTINES CALLED: OUTL2, INL2, INLOGIC, GMTL;
*

47:}"B2400:})ALERT, Z _ WHYAT2
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 20000020}#19,37,
CHECKBIT IS 87}#
}'
50:}"PIN, M _ E2, Q _ MSK6*TWO0
.MS = 16}#64,63,62
.TCX = 1}#43
.LMY = 1}#73
.LQX = 1}#74
.TE2Y = 1}#89
.C = 77}#36,37,38,39,40,41,
}'
51:}"BWORD _ Q _}"M AND Q
.BR = 10}#82
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LQX = 1}#74
.LSPX = 1}#59
CHECKBIT IS 87}#
*
*SETUP LDVTE
}'
52:}"Q _ Q LCY 1, Z _ LB24T
.BR = 10}#82
.BL = 2}#80
.SSP = 74}#54,53,52,51
.MS = 1}#65
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
CHECKBIT IS 87}#
}'
53:}"LDVTE_ Z + Q, Q _ MSK0*TWO9
.BR = 4}#83
.BL = 2}#80
.SSP = 12}#55,53
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.C = 1000}#32,
}'
54:}"GOTO INER ON M AND Q # 0, Q _ MSK0*TWO8
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 61}$12,13,17,
.C = 400}#33,
CHECKBIT IS 56}#
}'
55:}"GOTO B24I ON M AND Q # 0, Q _ MSK0*TWO7
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 75}$12,13,14,15,17,
.C = 200}#34,
CHECKBIT IS 56}#
}'
56:}"GOTO B2403 ON M AND Q # 0
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
.B = 70}$12,13,14,
*IF FALSE REQUEST RETURN
}'
57:}"FETCH R0_F24C
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 66}#36,37,39,40,
CHECKBIT IS 87}#
}'
60:}"M _ M + 1, STORE, GOTO GNR
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1,
.B = 535}$9,11,13,14,15,17,
CHECKBIT IS 30}#

61:}"INER:}$ALERT, Z _ BWORD MRG INRQ
.SSP = 72}#55,53,52,51
.MS = 14}#63,62
.TCY = 1}#44
.TSPY = 1}#45
.LZY = 1}#77
.C = 20000100}#19,35,
}'
62:}"PIN, M _ Q _ 71B, Z _ E2
.MS = 16}#64,63,62
.TCX = 1}#43
.LMX = 1}#72
.LQX = 1}#74
.LZY = 1}#77
.TE2Y = 1}#89
.C = 71}#36,37,38,41,
CHECKBIT IS 87}#
}'
63:}"GOTO TRE24 ON M AND Q - Z AND Q = 0
.BR = 17}#85,84,83,82
.LOC = 1}#50
.TAX = 1}#49
.MC = 2}#4
.B = 110}$11,14,
*SEND STATUS CHANGE INFORMATION
}'
64:}"BWORD _ Z, CALL GMTL, Z _ 0
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5
.B = 530}$9,11,13,14,
}'
65:}"CALL INLOGIC, M _ FLDCHAR
.MCONT = 1}#7
.TCX = 1}#43
.LMX = 1}#72
.MC = 20}#1
.VCYP = 1}#86
.B = 647}$9,10,12,15,16,17,
.C = 33}#37,38,40,41,
}'
66:}"M _ BWORD, Q _ MSK6*TWO8, DGOTO B24I
.SSP = 72}#55,53,52,51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 1}#5
.DGO = 1}#87
.B = 75}$12,13,14,15,17,
.C = 77400}#27,28,29,30,31,32,33,
CHECKBIT IS 50}#
}'
67:}"CALL INLOGIC, M _ M AND}"Q LCY MSF*TWO18/TWO18+1 MRG 200B
.MCONT = 1}#7
.BR = 10}#82
.MS = 7}#65,64,63
.TCX = 1}#43
.LMX = 1}#72
.MC = 20}#1
.VCYP = 1}#86
.B = 647}$9,10,12,15,16,17,
.C = 200}#34,
CHECKBIT IS 50}#
*OUTPUT CHARACTER

70:}"B2403:}$CALL GMTL, Z _ 1
.MCONT = 1}#7
.BL = 10}'78,
.BR = 10}'82,
.LOC = 1}'50,
.TAX = 1}'49,
.LZX = 1}#76
.MC = 1}#5
.VCYP = 1}#86
.B = 530}$9,11,13,14,
CHECKBIT IS 30}#
}'
71:}"CALL OUTL2
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 743}$9,10,11,12,16,17,
}'
72:}"GOTO B24N IF ASET
.MC = 33}#5,4,2,1
.VCYP = 1}#86
.B = 113}$11,14,16,17,
}'
73:}"ALERT, Z _ BWORD MRG OUTRQ
.SSP = 72}#55,53,52,51
.MS = 14}#63,62
.TCY = 1}#44
.TSPY = 1}#45
.LZY = 1}#77
.C = 100}#35,
CHECKBIT IS 87}#
*
}'
74:}"Z _ M MRG MSK0*TWO11, POT, GOTO GNR
.BR = 10}#82
.BL = 4}#79
.MS = 15}#65,63,62
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.MC = 1}#5
.B = 535}$9,11,13,14,15,17,
.C = 4000}#30,
CHECKBIT IS 56}#
*INPUT CHARACTER

75:}"B24I:}$CALL GMTL, Z _ 0
.MCONT = 1}#7
.LZX = 1}#76
.MC = 20}#1
.VCYP = 1}#86
.B = 530}$9,11,13,14,
CHECKBIT IS 30}#
}'
76:}"ALERT, Z _ BWORD MRG 200B + INRQ
.SSP = 72}#55,53,52,51
.MS = 14}#63,62
.TCY = 1}#44
.TSPY = 1}#45
.LZY = 1}#77
.C = 20000300}#19,34,35,
CHECKBIT IS 87}#
}'
77:}"M _ E2, PIN, Q _ MSK0*TWO8
.MS = 16}#64,63,62
.TCX = 1}#43
.LMY = 1}#73
.LQX = 1}#74
.TE2Y = 1}#89
.C = 400}#33,
CHECKBIT IS 87}#
}'
100:}"BWORD _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
101:}"GOTO B24I1 ON M AND Q =0, Q _ MSK7*TWO0
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 106}$11,15,16,
.C = 377}#34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
102:}"CALL INLOGIC, M _ SUBI
.MCONT = 1}#7
.TCX = 1}#43
.LMX = 1}#72
.MC = 1}#5
.VCYP = 1}#86
.B = 647}$9,10,12,15,16,17,
.C = 31}#37,38,41,
CHECKBIT IS 50}#
}'
103:}"FETCH R0_RECC
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 64}#36,37,39,
}'
104:}"M _ M + 1, STORE
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
}'
105:}"M _ BWORD
.SSP = 72}#55,53,52,51
.TSPY = 1}#45
.LMY = 1}#73
CHECKBIT IS 87}#

106:}"B24I1:}$BWORD _ M AND}"Q, Q _ MSK0*TWO9, DGOTO GNR
.BR = 10}#82
.SSP = 72}#55,53,52,51
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.MC = 20}#1,
.DGO = 1}#87
.B = 535}$9,11,13,14,15,17,
.C = 1000}#32,
CHECKBIT IS 42}#
}'
107:}"M _ BWORD, CALL INL2 ON M AND Q # 0
.MCONT = 1}#7
.BR = 10}#82
.SSP = 72}#55,53,52,51
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.MC = 3}#5,4
.B = 701}$9,10,11,17,
*
*TRANSMITTER RATE ERROR BUMP TRECNT

110:}"TRE24:}$FETCH R0_TRECNT
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 67}#36,37,39,40,41,
}'
111:}"BWORD _ Z
.BR = 4}#83
.BL = 10}#78
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
112:}"M _ M + 1, STORE, GOTO B24I
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5
.B = 75}$12,13,14,15,17,
*
*
* ASET: NO OUTPUT = 0}"ONLY LEGAL CHARACTER
*

113:}"B24N:}$GOTO GNR ON M = 0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 535}$9,11,13,14,15,17,
CHECKBIT IS 30}#
}'
114:}"FETCH R0_ILC24
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 72}#36,37,38,40,
CHECKBIT IS 87}#
}'
115:}"M _ M + 1, STORE, GOTO GNR
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1
.B = 535}$9,11,13,14,15,17,
CHECKBIT IS 30}#

*
* BLAKE: KEEPS TRACK OF FREE BUFFERS
*
* BLAKE IS CALLED AT THE END OF EACH REQUEST THAT MIGHT HAVE USED OR
*RETURNED BUFFERS. IT ENSURES THAT PRB WILL NOT POINT TO A BUFFER AND
*THAT AVB WILL.
* BLAKE WILL WAKEUP BERTHOLD IF:
*}'1) NFB< MINFB
*}'2) NFB > MAXFB
*
*NOTE: NORMALLY NO REQUEST MAY USE OR FREE MORE THEN ONE
* BUFFER (ONE REQUEST WILL NOT DO BOTH).
* AN EXCEPTION EXISTS FOR LINKED LINE, WHICH MIGHT USE
*TWO BUFFERS IN ONE REQUEST.}"THEREFORE THE LOGIC THAT HANDLES LINKING
*MUST CALL BLAKE EVERY TIME IT WRITES A CHARACTER IN A LINKED LINE;
*
* ARGUMENTS:
*}'BFLAG: 0, NO ACTION, 4B7: CHECK AVB AND PRB.
* WAKEUP (3 AND 4 ABOVE)
*
*VALUE: NONE
*
*LEVEL: -
*
*SUBROUTINES CALLED: WAKEUP(GOTO)
*

116:}"BLAKE:}&Z _ MSK7*TWO16+7B
.TCX = 1}#43
.LZX = 1}#76
.VCYP = 1}#86
.C = -177771}#18,19,20,21,22,23,24,25,39,40,41,
CHECKBIT IS 87}#
}'
117:}"Q _ PRB
.SSP = 54}#54,53,51
.TSPY = 1}#45
.LQY = 1}#75
* PRB = 0,NO BUFFER RELEASED; PRB = 1 TO 7 , NULL SOURCE BUFFER 
* WHICH SHOULD NOT BE RELEASED
}'
120:}"GOTO BLAK2 ON Q _ Q AND NOT Z = 0, M _ FREEL
.BR = 12}#84,82
.BL = 10}#78
.SSP = 51}#56,53,51
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.LQX = 1}#74
.MC = 2}#4
.B = 130}$11,13,14,
CHECKBIT IS 30}#
*RETURN RELEASED BUFFER
}'
121:}"FREEL _ Q
.BR = 10}#82
.BL = 2}#80
.SSP = 51}#56,53,51
.TAX = 1}#49
.LSPX = 1}#59
}'
122:}"Z _ BUF0
.SSP = 65}#56,54,52,51
.TSPY = 1}#45
.LZY = 1}#77
CHECKBIT IS 87}#
}'
123:}"STORE R0_Q + Z
.BR = 4}#83
.BL = 2}#80
.MS = 42}#64,60
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
}'
124:}"PRB _ 0, FETCH R0_NFB/1B4
.SSP = 54}#54,53,51
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.LR0 = 1}#58
.LSPX = 1}#59
.C = 41}#36,41,
}'
125:}"STORE, M _ M + 1, Z _ MAXFB
.BR = 10}#82
.BL = 4}#79
.SSP = 61}#56,52,51
.MS = 42}#64,60
.LOC = 1}#50
.TSPY = 1}#45
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
CHECKBIT IS 87}#
}'
126:}"GOTO BLAK2 ON Z - M > 0, M _ FREEL
.BR = 4}#83
.BL = 13}#81,80,78
.SSP = 51}#56,53,51
.LOC = 1}#50
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.MC = 6}#4,3
.B = 130}$11,13,14,
CHECKBIT IS 30}#
*SIGNAL WAKEUP OF BERTHOLD BY RESETING BFLAG;
}'
127:}"ALERT, BFLAG _ 0, Z_103B, GOTO 1625B
.SSP = 16}#55,54,53
.MS = 14}#63,62
.TCY = 1}#44
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5,
.B = 1625}$8,9,10,13,15,17,
.C = 103}#35,40,41,
CHECKBIT IS 50}#
*NOW SEE IF THER IS AN AVAILABLE BUFFER AND IF THERE IS NOT MAKE ONE 
* AVAILABLE
*M CONTAINS FREEL

130:}"BLAK2:}$M, Z _ AVB, CALL ABORT IF LB=0
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.SSP = 52}#55,53,51
.TSPY = 1}#45
.TAX = 1}#49
.LZY = 1}#77
.MC = 22}#4,1
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
131:}"GOTO BLAKA IF Z>=0, Z _ BUF0
.SSP = 65}#56,54,52,51
.TSPY = 1}#45
.LZY = 1}#77
.MC = 16}#4,3,2
.B = 141}$11,12,17,
CHECKBIT IS 30}#
*MAKE BUFFER AVAILABLE
}'
132:}"AVB _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 52}#55,53,51
.TAX = 1}#49
.LSPX = 1}#59
}'
133:}"FETCH R0_M + Z, Q _ MSK7*TWO16+7B
.BR = 4}#83
.BL = 4}#79
.MS = 44}#63,60
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
.C = -177771}#18,19,20,21,22,23,24,25,39,40,41,
CHECKBIT IS 87}#
}'
134:}"CALL ABORT ON M AND Q # 0
.MCONT = 1}#7
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
135:}"FREEL _ M, FETCH R0_NFB/1B4
.BR = 10}#82
.BL = 4}#79
.SSP = 51}#56,53,51
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.LSPX = 1}#59
.C = 41}#36,41,
CHECKBIT IS 87}#
}'
136:}"STORE, M _ M - 1, Z _ MINFB
.BR = 7}#85,84,83
.BL = 4}#79
.SSP = 62}#55,52,51
.MS = 42}#64,60
.TSPY = 1}#45
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
}'
137:}"Z _ Z - M, GOTO BLAKA ON BFLAG>=0
.BR = 4}#83
.BL = 13}#81,80,78
.SSP = 16}#55,54,53
.LOC = 1}#50
.TSPY = 1}#45
.TAX = 1}#49
.LZX = 1}#76
.MC = 7}#5,4,3
.B = 141}$11,12,17,
*IF Z>=O TURN OFF 360
* BFLAG = 0 USED A FLAG TO WAKEUP BERTHOLD
}'
140:}"GOTO 1626B, BFLAG _ 0
.SSP = 16}#55,54,53
.LSPX = 1}#59
.MC = 1}#5
.B = 1626}$8,9,10,13,15,16,
*
*WAKEUP BERTHOLD

141:}"BLAKA:}$DRETURN ON BFLAG < 0
.MCONT = 2}#6
.SSP = 16}#55,54,53
.TSPY = 1}#45
.MC = 10}#2
.DGO = 1}#87
}'
142:}"BFLAG _ 0, Z _ WKBERT
.SSP = 16}#55,54,53
.TCY = 1}#44
.LZY = 1}#77
.LSPX = 1}#59
.C = 6}#39,40,
CHECKBIT IS 87}#
}'
143:}"FETCH R0_BRECHT
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 63}#36,37,40,41,
CHECKBIT IS 87}#
}'
144:}"STORE, RETURN ON M = 0, M _ 0
.MCONT = 2}#6
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.TAX = 1}#49
.LMY = 1}#73
.MC = 2}#4
CHECKBIT IS 30}#
}'
145:}"FETCH R0_BERTHOLD, GOTO WAKEUP
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.MC = 1}#5,
.VCYP = 1}#86
.B = 1334}$8,10,11,13,14,15,
.C = 62}#36,37,40,
CHECKBIT IS 50}#
*

*
* BSCN: BIT SCAN
*
* BSCN IS CALLED EACH 1/7 OF A BIT TIME TO SCAN THE TTYS
* AND DO ANY INPUT OR OUTPUT THAT MIGHT BE NECESSARY
* BSCN LOOKS FOR THREE DIFFERENT TYPES OF REQUESTS:
*
* 1) NO INPUT IN PROGRESS- IF A ONE BIT COMES IN INITIATE CHARACTER READ
* 2) INPUT BIT MUST BE READ
* 3) OUTPUT BIT TO TTY.
*
*THE TTYS
* ARE STAGGERED SO THAT EACH 1/7 OF A BIT TIME 1/7 OF THE TTYS ARE 
*SERVICED AND THAT TTY IS NOT RESERVICED UNTIL THE NEXT BIT TIME.
*
* ARGUMENTS:
*}'M: TIME
*}'Z: INTERVAL (SET UP IN BRANCH VECTOR)
*
*VALUE: NONE
*
*SIDE EFFECTS: ALL VARIABLE REGISTERS MAY BY DESTROYED
*
*LEVEL: TOP
*
*SUBROUTINES CALLED: GLBTE,IBF,FLB,DID,DOD (SETBT, AN INTERNAL SUB)
*
*NOT THAT THE SUBROUTINE NUMBER IS THE DEVICE NUMBER

146:}"BSCN:}$NCI _ M + Z, Q _ MSK3*TWO20
.BR = 4}#83
.BL = 4}#79
.SSP = 40}#51
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.C = -4000000}#18,19,20,21,
}'
147:}"M _ M AND}"Q LCY FTOSUB*TWO18/TWO18+1, CALL GLBTE
.MCONT = 1}#7
.BR = 10}#82
.MS = 4}#63
.LMX = 1}#72
.MC = 20}#1
.VCYP = 1}#86
.B = 506}$9,11,15,16,
CHECKBIT IS 30}#
}'
150:}"STORE
.MS = 42}#64,60
.VCYP = 1}#86
* DO INPUT
}'
*}D(Q_-1)
151:}"HFETCH R0_BTIME MRG 1, .BL_7, .BR_10B, .TAX, .LQX,}"CALL SETBT
.MCONT = 1}#7
.BR = 10}#82
.BL = 7}#81,80,79
.SSP = 33}#56,55,53,52
.MS = 45}#65,63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
.MC = 1}#5,
.B = 173}$11,12,13,14,16,17,
.C = 1}#41,
CHECKBIT IS 42}#
*KLUDGE TO GET -1 TO Q TO AVOID MICRO PROBLEMS
*M HAS BWORD

152:}"BSCN6:}$GOTO BSCN7 ON M=0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 156}$11,12,14,15,16,
}'
153:}"CALL FLB
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 434}$9,13,14,15,
}'
154:}"Q _ 3777B, CALL DOD, HFETCH R0_LDVTE
.MCONT = 1}#7
.SSP = 12}#55,53
.MS = 45}#65,63,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.MC = 1}#5
.B = 321}$10,11,13,17,
.C = 3777}#31,32,33,34,35,36,37,38,39,40,41,
}'
155:}"M _ BWORD, GOTO BSCN6
.SSP = 72}#55,53,52,51
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1
.B = 152}$11,12,14,16,
* DO OUTPUT

156:}"BSCN7:}#Q _ -1, FETCH R0_BTIME , CALL SETBT
.MCONT = 1}#7
.SSP = 33}#56,55,53,52
.MS = 44}#63,60
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.MC = 1}#5
.B = 173}$11,12,13,14,16,17,
*M HAS BWORD

157:}"BSCN8:}$GOTO BSCN1 ON M =0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 163}$11,12,13,16,17,
}'
160:}"CALL FLB
.MCONT = 1}#7
.MC = 20}#1,
.VCYP = 1}#86
.B = 434}$9,13,14,15,
}'
161:}"Q _ 77740000B, CALL DID, HFETCH R0_LDVTE
.MCONT = 1}#7
.SSP = 12}#55,53
.MS = 45}#65,63,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.MC = 1}#5,
.B = 255}$10,12,14,15,17,
.C = -40000}#18,19,20,21,22,23,24,25,26,27,
}'
162:}"M _ BWORD, GOTO BSCN8
.SSP = 72}#55,53,52,51
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1,
.B = 157}$11,12,14,15,16,17,
*SERVICE LEADING BITS ON INACTIVE INPUT TTYS

163:}"BSCN1:}$FETCH R0_LBTBE MRG NCIP/1B4
.SSP = 35}#56,54,53,52
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 16}#38,39,40,
}'
164:}"Z_TINPUT, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 20000040}#19,36,
CHECKBIT IS 87
}'
165:}"PIN, Q _ E2, GOTO 1657B
.MS = 16}#64,63,62
.LQY = 1}#75
.MC = 1}#5,
.TE2Y = 1}#89
.B = 1657}$8,9,10,12,14,15,16,17,
CHECKBIT IS 30

166:}"RE1:}#BWORD _ M _ M AND NOT Q
.BR = 10}#82
.BL = 14}#79,78
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
CHECKBIT IS 87}#
*M HAS BWORD

167:}"BSCN4:}$GOTO GNRFIN ON M =0
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.MC = 2}#4
.B = 563}$9,11,12,13,16,17,
CHECKBIT IS 30}#
}'
170:}"CALL FLB
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 434}$9,13,14,15,
}'
171:}"CALL IBF, HFETCH R0_LDVTE
.MCONT = 1}#7
.SSP = 12}#55,53
.MS = 45}#65,63,60
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.MC = 20}#1
.B = 637}$9,10,13,14,15,16,17,
}'
172:}"M _ BWORD, GOTO BSCN4
.SSP = 72}#55,53,52,51
.TSPY = 1}#45
.LMY = 1}#73
.MC = 1}#5
.B = 167}$11,12,13,15,16,17,
*

173:}"SETBT: BWORD _ M _ M AND Q, RETURN
.MCONT = 2}#6
.BR = 10}#82
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
.MC = 20}#1
CHECKBIT IS 30}#
*

*
* CKFXP: CLOCK FIXUP
*
* CKFXP IS CALLED WHEN THE OVERFLOW BIT(BIT 18) IS ON FOR ALL THE
* CLOCK DRIVEN FUNCTIONS.
*IT WILL TURN OFF THE BIT IN ALL OF THE CLOCK DRIVEN FUNCTIONS
*(SEE GNR)
*THIS SUBROUTINE MAY BE CALLED TO INITIALIZE THE STACK. IT 
*THIS IS DONE BY STTING THE TIME TO ZERO (THUS THE WHOLE WORD IS ZERO)
* CKFXP WILL THEN SET THE TIME FOR EACH OF THE REGISTERS TO THE CURRENT 
*TIME
*
* ARGUMENTS:
*}'R0: -@LCI+@NCI-1 SETUP IN GNR
*
*VALUE: NONE
*
*SIDE EFFECTS: NONE
*
*LEVEL: -
*

174:}"CKFXP:}$VR _ Z _ @NCI+1
.TCX = 1}#43
.TXW = 1}#47
.LZX = 1}#76
.LRN = 6}#70,69
.VCYP = 1}#86
.C = 41}#36,41,
CHECKBIT IS 87}#

175:}"CKL:}#M _ SKZ, Q _ MSK0*TWO19
.MS = 13}#65,64,62
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 2000000}#22,
CHECKBIT IS 87}#
}'
176:}"Z _ M AND NOT Q, GOTO GNRFIN ON R0_R0+1 >=0
.BR = 10}#82
.BL = 14}#79,78
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.MC = 7}#5,4,3
.B = 563}$9,11,12,13,16,17,
CHECKBIT IS 30}#
}'
177:}"GOTO CKL2 ON M AND Q#0, Q _ MSK19*TWO0
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 3}#5,4
.B = 202}$10,16,
.C = 3777777}#22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
}'
200:}"Z _ RDCKL, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 20000020}#19,37,
CHECKBIT IS 87}#
}'
201:}"PIN, Z _ E2, NCI _ MSK0*TWO19
.SSP = 40}#51
.MS = 16}#64,63,62
.TCX = 1}#43
.LZY = 1}#77
.LSPX = 1}#59
.TE2Y = 1}#89
.C = 2000000}#22,

202:}"CKL2:}$M _ M AND NOT Q + Z AND Q, Z _ VR
.RRN = 6}#67,66
.BL = 14}#79,78
.THY = 1}#46
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
CHECKBIT IS 87
}'
203:}"SKZ _ M, Z _ VR _ VR + 1, GOTO CKL
.RRN = 6}#67,66
.BR = 10}#82
.BL = 4}#79
.MS = 13}#65,64,62
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZY = 1}#77
.LRN = 6}#70,69
.LSPX = 1}#59
.MC = 1}#5,
.B = 175}$11,12,13,14,15,17,
CHECKBIT IS 30}#
*

*
* CPUFIN: BRANCHED TO AT END OF CPU REQUEST
*
* ARGUMENTS:
*}'M: VALU
*

204:}"CPUFIN:}$STORE R0_VALU/1B4, Q _ NSRFLAG
.SSP = 71}#56,53,52,51
.MS = 42}#64,60
.TCX = 1}#43
.TSPY = 1}#45
.TXW = 1}#47
.LQY = 1}#75
.LR0 = 1}#58
.C = 42}#36,40,
}'
205:}"Q _ Q LCH -NSR*TWO18/TWO18+23
.BR = 10}#82
.BL = 2}#80
.MS = 6}#64,63
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
206:}"Z _ Q LCL -NSR*TWO18/TWO18+23, Q _ MSK0*TWO13
.BR = 10}#82
.BL = 2}#80
.MS = 2}#64
.TCY = 1}#44
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = 20000}#28,
CHECKBIT IS 87}#
}'
207:}"FETCH R0_RWCH/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 40}#36,
*IF NO REQUEST WAITING SOMETHING VERY STRANGE HAPPENED
}'
210:}"CALL ABORT ON Q AND M = 0
.MCONT = 1}#7
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 13}$14,16,17,
}'
211:}"M _ M AND NOT Q, Q _ MSK1*TWO14, DGOTO GNR
.BR = 10}#82
.BL = 14}#79,78
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 535}$9,11,13,14,15,17,
.C = 140000}#26,27,
CHECKBIT IS 56}#
}'
212:}"M _ M AND NOT Q + Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87
*

*
* CPURQ: SERVICE CPU REQUEST
* CPU FUNCTIONS MAY EITHER RETURN OR BRANCH TO CPUFIN
*NOTE: THE LINE NUMBER FOR THE FIELD MUST BE LEGAL EVEN IF NOT USED
*
* ARGUMENTS: CPUIT
*
*VALUE: NONE
*
*LEVEL: TOP
*
*SUBROUTINES CALLED: BRANCHES TO REQUEST SPECIFIC CODE, GLE
*
*
*SIDE EFFECTS: ALL REGISTERS THAT HOLD VARIABLES CLOBBERED
*

213:}"CPURQ:}$FETCH R0_LNO/1B4, DGOTO RESTART
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.MC = 1}#5,
.DGO = 1}#87
.VCYP = 1}#86
.B = 1132}$8,11,13,14,16,
.C = 40}#36,
CHECKBIT IS 50}#
}'
214:}"NSRFLAG _ 0, Q _ MSK7*TWO16, GOTO *+1 IF NFAIL
.SSP = 71}#56,53,52,51
.TCY = 1}#44
.LQY = 1}#75
.LSPX = 1}#59
.MC = 31}#5,2,1
.B = 215}$10,14,15,17,
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 50}#
}'
215:}"VR _ M AND}"Q LCY CRT*TWO18/TWO18+1, Q _ MSK0*TWO13
.BR = 10}#82
.MS = 5}#65,63
.TCY = 1}#44
.TXW = 1}#47
.LQY = 1}#75
.LRN = 6}#70,69
.VCYP = 1}#86
.C = 20000}#28,
CHECKBIT IS 87}#
}'
216:}"CALL BDRQ ON M AND Q=0, Q _ MSK12*TWO0, RESETCPU
.MCONT = 1}#7
.BR = 10}#82
.MS = 23}#65,64,61
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 245}$10,12,15,17,
.C = 17777}#29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
*KNOW GLE DOES NOT DESTROY VR
}'
217:}"M _ LINE _ Q AND M, RESETA, CALL GLE
.MCONT = 1}#7
.BR = 10}#82
.SSP = 21}#56,52
.MS = 31}#65,62,61
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
.MC = 20}#1
.B = 514}$9,11,14,15,
*
*MAXIMUM LEGAL LINE NUMBER MUST BE HAND COMPILED IN
*
}'
220:}"Q _ VR, M _ 17B
.RRN = 6}#67,66
.TCX = 1}#43
.THY = 1}#46
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = 17}#38,39,40,41,
}'
221:}"CALL GOQPZ ON M - Q >= 0, Z _ CPUTBL
.MCONT = 1}#7
.BR = 15}#85,83,82
.BL = 4}#79
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LZY = 1}#77
.MC = 5}#5,3
.B = 42}$12,16,
.C = 222}#34,37,40,
CHECKBIT IS 56}#
*NOTE NEXT INSTRUCTION}"MUST BE GOTO CPUFIN

222:}"CPUTBL:}$GOTO CPUFIN
.MC = 20}#1,
.VCYP = 1}#86
.B = 204}$10,15,
CHECKBIT IS 30}#
}'
223:}"GOTO WST
.MC = 1}#5,
.VCYP = 1}#86
.B = 1534}$8,9,11,13,14,15,
CHECKBIT IS 30}#
}'
224:}"GOTO RCND
.MC = 20}#1,
.VCYP = 1}#86
.B = 1112}$8,11,14,16,
CHECKBIT IS 30}#
}'
225:}"GOTO RSTB
.MC = 1}#5,
.VCYP = 1}#86
.B = 1201}$8,10,17,
}'
226:}"GOTO MBLK
.MC = 20}#1,
.VCYP = 1}#86
.B = 723}$9,10,11,13,16,17,
CHECKBIT IS 30}#
}'
227:}"CPUFLAG _ -1, GOTO CPUFIN
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.SSP = 14}#54,53
.LSPX = 1}#59
.MC = 1}#5,
.B = 204}$10,15,
}'
230:}"CPUFLAG _ 0, GOTO CPUFIN
.SSP = 14}#54,53
.LSPX = 1}#59
.MC = 20}#1,
.B = 204}$10,15,
CHECKBIT IS 30}#
}'
231:}"GOTO PUTFIELD
.MC = 1}#5,
.VCYP = 1}#86
.B = 1044}$8,12,15,
}'
232:}"GOTO GETFIELD
.MC = 20}#1,
.VCYP = 1}#86
.B = 463}$9,12,13,16,17,
}'
233:}"GOTO GETREG
.MC = 1}#5,
.VCYP = 1}#86
.B = 466}$9,12,13,15,16,
}'
234:}"GOTO PUTREG
.MC = 20}#1,
.VCYP = 1}#86
.B = 1053}$8,12,14,16,17,
}'
235:}"GOTO RTUPC
.MC = 1}#5,
.VCYP = 1}#86
.B = 1251}$8,10,12,14,17,
}'
236:}"GOTO DOAPOT
.MC = 20}#1,
.VCYP = 1}#86
.B = 311}$10,11,14,17,
CHECKBIT IS 30}#
}'
237:}"GOTO DOAPIN
.MC = 1}#5,
.VCYP = 1}#86
.B = 315}$10,11,14,15,17,
}'
240:}"FETCH, R0 _ 43B, GOTO TOFF24
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.MC = 20}#1,
.VCYP = 1}#86
.B = 1330}$8,10,11,13,14,
.C = 43}#36,40,41,
*
* INCREMENT MAXIMUM LEGAL LINE NUMBER IF NEW CALLS ADDED
*
}'
241:}"R2_-LSCRATCH, GOTO LOADST
.TCY = 1}#44
.TYW = 1}#48
.LRN = 2}#70
.MC = 1}#5,
.VCYP = 1}#86
.B = 1306}$8,10,11,15,16,
.C = 77777600}"18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,
}'
242:}"GOTO CPUFIN, RESETTU
.MS = 26}#64,63,61
.MC = 20}#1,
.VCYP = 1}#86
.B = 204}$10,15,
}'
243:}#.LOC}$*SPARE
.LOC = 1}'50
}%
244:}"CALL ABORT
.MCONT = 1}#7
.MC = 20}#1,
.VCYP = 1}#86
.B = 13}$14,16,17,
CHECKBIT IS 30}#

245:}"BDRQ:}$FETCH R0_NULRQC
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 73}#36,37,38,40,41,
}'
246:}"M _ M + 1, STORE, GOTO GNR
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5
.B = 535}$9,11,13,14,15,17,
CHECKBIT IS 30}#
*

*
* CRCH: CLEANUP FOR RCH
*
*THIS MUST BE CALLED AFTER A SERIES OF CALLS TO RCH
*
* ARGUMENTS: NONE
*
*NMR: 1
*
*VALUE:
*}'A: AS ON ENTRY
*
*SIDE EFFECTS: NONE
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*
*KNOW: A IS LEFT ALONE
*

247:}"CRCH:}$M _ RWORD, DRETURN
.MCONT = 2}#6
.SSP = 30}#53,52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1
.DGO = 1}#87
}(
250:}"STORE R0_RCP
.RRN = 5}#68,66
.MS = 42}#64,60
.THY = 1}#46
.TYW = 1}#48
.LR0 = 1}#58
.VCYP = 1}#86
CHECKBIT IS 87}#
*

*
* CWCH: CLEANUP WRITE CHARACTER SUBROUTINE SUBROUTINE
*
* CWCH MUST BE CALLED AFTER A SERIES OF WCHS ARE CALLED.
* A IS SET FOR RSTB AND RCND SO CHAR CAN BE LEFT JUSTIFIED IN CPUIT
*
* ARGUMENTS: A IS SET IF WORD SHOULD BE LEFT JUSTIFIED BEFORE STORE
*}&Z: UNRTOUCHED (FOR PWP)
*
*NMR: 1
*
*VALUE:
*}&Z: AS ON ENTRY
*
*SIDE EFFECTS: NONE
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*
*KNOW: A IS LEFT AS IS

251:}"CWCH:}$M _ WWORD, Q _ MSK7*TWO16, DRETURN IF ARESET
.MCONT = 2}#6
.SSP = 31}#56,53,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 32}#4,2,1
.DGO = 1}#87
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 50}#
}'
252:}"STORE R0_WCP, RETURN ON M = 0
.MCONT = 2}#6
.RRN = 4}#66
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 2}#4
}'
253:}"RETURN ON M AND Q # 0
.MCONT = 2}#6
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
}'
254:}"M _ M LCY 8, GOTO *-2
.BR = 10}#82
.BL = 4}#79
.MS = 5}#65,63
.LMX = 1}#72
.MC = 1}#5
.VCYP = 1}#86
.B = 252}$10,12,14,16,

*
*
* DID: DO INPUT DEVICE
*
*THIS SUBROUTINE IS CALLED WHEN AN INPUT BIT TO}"TTY IS FOUND
*DID SHIFTS IN THE NEXT BIT AND LOOKS FOR 2 IMPORTANT CASES
*}"1) THE CHARACTER WAS AND IS ALL ONES INDICATING A FALSE FIRST BIT WAS
 FOUND
*}"2) THE LEADING BIT OF THE CHARACTER WAS A ZERO INDICATING THE CHARACTER
*}"IS NOW CORRECT AND SHOULD BE PLACED IN THE LINE. THIS IS DONE.
*}"3) IF THE CHARACTER IS ALL ZEROS (MORE THEN 8 BITS) SEND CBREAK
*
*NOTE THAT THE CHARACTER IS BAS ACKWARDS
*(LOW ORDER BIT FIRST, AND LINE HIGHT MEANS 0.
*
*WHEN THERE IS NO CHARACTER THE BUFFER IS ALL ONES
*
* ARGUMENTS
*}'R0: ADDRESS OF CIPT
*}'M: WORD CONTAINING CIPT
*}'Q: MASK(CIP)
*
*VALUE: NONE
*
*SIDE EFFECTS: CHARACTER IS UPDATED AND PUT IN THE LINE IF COMPLETE
*
*SUBROUTINES CALLED: INLOGIC, GMTL
*
*LEVEL: 4
*

255:}"DID:}#Q _ NOT M OR NOT Q LCL 23 MRG 10B
.BR = 10}#82
.BL = 17}#81,80,79,78
.MS = 3}#65,64
.TCX = 1}#43
.LQX = 1}#74
.VCYP = 1}#86
.C = 10}#38,
}'
256:}"Z _ NOT Q LCH 23, Q _ MSK9*TWO14
.BR = 10}#82
.BL = 15}#81,79,78
.MS = 10}#62
.TCY = 1}#44
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = -40000}#18,19,20,21,22,23,24,25,26,27,
}'
257:}"M _ M AND NOT Q ! Z AND Q, Q _ LBIT
.BL = 14}#79,78
.SSP = 23}#56,55,52
.TSPY = 1}#45
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
}'
260:}"Z_TINPUT, ALERT
.MS = 14}#63,62
.TCX = 1}#43
.LZX = 1}#76
.C = 20000040}#19,36,
CHECKBIT IS 87
}'
261:}"Z _ Q, Q _ E2, PIN, GOTO 1663B
.MS = 16}#64,63,62
.LQY = 1}#75
.MC = 1}#5,
.TE2Y = 1}#89
.B = 1663}$8,9,10,12,13,16,17,
*

262:}"RE2:}#GOTO DID1 ON Z AND Q=0, Q _ MSK9*TWO14, SETA
.BL = 10}#78
.MS = 30}#62,61
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 264}$10,12,13,15,
.C = -40000}#18,19,20,21,22,23,24,25,26,27,
}'
263:}"M _ M MRG}"4B7
.BR = 10}#82
.BL = 4}#79
.TCX = 1}#43
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
.C = -40000000}#18,

264:}"DID1:}$STORE, GOTO DID2 ON NOT M AND Q=0, Q _ 1B5
.BR = 10}#82
.BL = 12}#80,78
.MS = 42}#64,60
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 304}$10,11,15,
.C = 100000}#26,
}'
265:}"DRETURN ON NOT M AND Q=0, Q _ 40000B, RESETA
.MCONT = 2}#6
.BR = 10}#82
.BL = 12}#80,78
.MS = 31}#65,62,61
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.DGO = 1}#87
.C = 40000}#27,
}'
266:}"GOTO 1633B ON M AND Q = 0, Z _ NCI MRG 4B6-1
.BR = 10}#82
.SSP = 40}#51
.TCY = 1}#44
.TSPY = 1}#45
.TAX = 1}#49
.LZY = 1}#77
.MC = 2}#4
.B = 1633}$8,9,10,13,14,16,17,
.C = 3777777}#22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 42}#
*IF TYPE = 2741, CHARACTER HAS BEEN RECEIVED OTHERWISE ONE MORE BIT TIME
}'
267:}"M _ M LCL 23, Q _ M2741T*4B6+4B6-1
.BR = 10}#82
.BL = 4}#79
.MS = 3}#65,64
.TCY = 1}#44
.LMX = 1}#72
.LQY = 1}#75
.VCYP = 1}#86
.C = 17777777}#20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41
CHECKBIT IS 87}#
}'
270:}"M _ M LCH 23 MRG 4B7, DGOTO DID2
.BR = 10}#82
.BL = 4}#79
.MS = 10}#62
.TCX = 1}#43
.LMX = 1}#72
.MC = 1}#5
.DGO = 1}#87
.VCYP = 1}#86
.B = 304}$10,11,15,
.C = 40000000}#18,
CHECKBIT IS 50}#
}'
271:}"RETURN ON Z-Q#0
.MCONT = 2}#6
.BR = 4}#83
.BL = 15}#81,79,78
.LOC = 1}#50
.TAX = 1}#49
.MC = 3}#5,4

272:}"DID3:}"Q _ MSK9*TWO14, Z _ OS, GOTO SH1
.TCX = 1}#43
.LQX = 1}#74
.LZY = 1}#77
.MC = 20}#1,
.VCYP = 1}#86
.TOSY = 1}#57
.B = 1571}$8,9,11,12,13,14,17,
.C = -40000}#18,19,20,21,22,23,24,25,26,27,
}'
273:}"GOTO 1622B ON M AND Q=0, Q _ MSK7*TWO15
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 1622}$8,9,10,13,16,
.C = 37700000}#19,20,21,22,23,24,25,26,
CHECKBIT IS 56}#
*STORED WORD HAS CHARACTER IN LEFT 8 BITS
}'
274:}"M _M AND Q LCL CIP*TWO18/TWO18+1
.BR = 10}#82
.MS = 1}#65
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
275:}"CHAR _ M}"LCY 8, CALL GMTL, Z _ 0
.MCONT = 1}#7
.BR = 10}#82
.BL = 4}#79
.SSP = 22}#55,52
.MS = 5}#65,63
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5,
.B = 530}$9,11,13,14,
CHECKBIT IS 30}#
}'
276:}"M _ MTCE, CALL 1667B}&* PATCH OF 12/13/75 (WWL)
.MCONT = 1}#7
.RRN = 1}#68
.THY = 1}#46
.LMY = 1}#73
.MC = 20}#1,
.B = 1667}#8,9,10,12,13,15,16,17,
}'
277:}"FETCH R0_BTIME
.SSP = 33}#56,55,53,52
.MS = 44}#63,60
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
}'
300:}"Q _ LBIT, GOTO RTSS4
.SSP = 23}#56,55,52
.TSPY = 1}#45
.LQY = 1}#75
.MC = 1}#5
.B = 31}$13,14,17,
}'
301:}"M _ M AND NOT Q, STORE, CALL DID2
.MCONT = 1}#7
.BR = 10}#82
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1
.VCYP = 1}#86
.B = 304}$10,11,15,

302:}"DID5:}"M _ CHAR}"_ CBREAK, CALL INLOGIC
.MCONT = 1}#7
.SSP = 22}#55,52
.TCX = 1}#43
.LMX = 1}#72
.LSPX = 1}#59
.MC = 1}#5
.B = 647}$9,10,12,15,16,17,
.C = 32}#37,38,40,
CHECKBIT IS 50}#
}'
303:}"GOTO RTSS4
.MC = 20}#1
.VCYP = 1}#86
.B = 31}$13,14,17,
*FIRST BIT STORED AS A FALSE START; ALSO CLEVERLY CALLED FROM DID1+7

304:}"DID2:}"VR _ M, Q _ LBIT
.BR = 10}#82
.BL = 4}#79
.SSP = 23}#56,55,52
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
}'
305:}"FETCH R0_BTIME
.SSP = 33}#56,55,53,52
.MS = 44}#63,60
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
}'
306:}"M _ M AND NOT Q, STORE
.BR = 10}#82
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
307:}"FETCH R0_LBTBE MRG NCIP/1B4, DRETURN
.MCONT = 2}#6
.SSP = 35}#56,54,53,52
.MS = 44}#63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.MC = 1}#5,
.DGO = 1}#87
.C = 16}#38,39,40,
CHECKBIT IS 50}#
}'
310:}"M _ M OR Q, STORE, GOTO DID3 IF ARESET
.BR = 10}#82
.BL = 6}#80,79
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
.MC = 32}#4,2,1
.VCYP = 1}#86
.B = 272}$10,12,13,14,16,
CHECKBIT IS 30}#
*

*
*DOAPOT AND DOAPIN
*
*JUST FOR THE CONVIENCE OF RANDOM PEOPLE
*

311:}"DOAPOT:}(FETCH, R0 _ 43B
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
312:}"FETCH R0_R0+1, Z _ M
.BR = 10}#82
.BL = 4}#79
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.VCYP = 1}#86
}'
313:}"Q _ M, ALERT
.BR = 10}#82
.BL = 4}#79
.MS = 14}#63,62
.TAX = 1}#49
.LQX = 1}#74
CHECKBIT IS 87}#
}'
314:}"Z _ Q, POT, GOTO CPUFIN
.BR = 10}#82
.BL = 2}#80
.MS = 15}#65,63,62
.TAX = 1}#49
.LZX = 1}#76
.MC = 20}#1,
.B = 204}$10,15,
CHECKBIT IS 30}#

315:}"DOAPIN:}"FETCH R0_CARG1
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}$41,40,36,
}'
316:}"Z _ M, ALERT
.BR = 10}#82
.BL = 4}#79
.MS = 14}#63,62
.TAX = 1}#49
.LZX = 1}#76
CHECKBIT IS 87}#
}'
317:}"PIN, M _ E2
.MS = 16}#64,63,62
.LMY = 1}#73
.TE2Y = 1}#89
}'
320:}"GOTO CPUFIN
.MC = 1}#5
.VCYP = 1}#86
.B = 204}$10,15,
CHECKBIT IS 30}#
*

*
* DOD: DO OUTPUT DEVICE
*THIS SUBROUTINE IS CALLED TO OUTPUT A BIT TO A LOCAL DEVICE
*
*THIS USES A NINE (2741), TEN (MODEL 37), OR AN ELEVEN (MODEL 35) BIT
*CHARACTER, THE FIRST BIT BEING A 1 AND THE
*LAST}"ONE TWO BEING ZEROS. THIS CHARACTER IS FILLED WITH 1 WHEN IT IS
*SHIFTED AND IF THE CHARACTER IS ALL ONES THEN IT
*HAS BEEN OUTPUT AND MUST BE RELOADED.
*THE BITS ARE BAS ACKWARDS
*LEAST SIGNIFICANT BIT FIRST)
*
* ARGUMENTS
*}'R0: ADDRESS OF COP
*}'M: WORD CONTAINING COP
*}'Q: MASK(COP)
*
*VALUE: NONE
*
*SIDE EFFECTS: 1 BIT IS OUTPUT AND A CHARACTER MAY BE FETCHED.
*
*LEVEL: 4
*
*SUBROUTINES CALLED: OUTLOGIC, GMTL, WKOL,DOD;
*
*SHIFT RIGHT 1 AND SHIFT IN A 0 BIT.

321:}"DOD:}#GOTO DOD2 ON Q _ M AND Q}"LCH 23 = 0, Z _ MSK0*TWO10
.BR = 10}#82
.MS = 10}#62
.TCY = 1}#44
.LQX = 1}#74
.LZY = 1}#77
.MC = 2}#4
.B = 332}$10,11,13,14,16,
.C = 2000}#31,
CHECKBIT IS 50}#
}'
322:}"Q _ Q LCL 23
.BR = 10}#82
.BL = 2}#80
.MS = 3}#65,64
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
323:}"Z _ Q AND NOT Z, Q _ MSK10*TWO0
.BR = 12}#84,82
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = 3777}#31,32,33,34,35,36,37,38,39,40,41,
}'
324:}"M _ M AND NOT Q + Z AND Q, STORE, Q _ LBIT
.BL = 14}#79,78
.SSP = 23}#56,55,52
.MS = 42}#64,60
.TSPY = 1}#45
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
*4B7 BIT IN Z IS BIT SHIFTED OUT
}'
325:}"Z _ 0, GOTO DOD1 IF Z>=0, M _ OBITS
.SSP = 57}#56,55,54,53,51
.TSPY = 1}#45
.LMY = 1}#73
.LZX = 1}#76
.MC = 16}#4,3,2
.B = 327}$10,11,13,15,16,17,
}'
326:}"Z _ - 1
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.LZX = 1}#76
.VCYP = 1}#86
*CHANGE OBITS AND OUTPUT

327:}"DOD1:}"OBITS _ M _}"M AND NOT Q ! Z AND Q, Z _ TOUTPUT, ALERT
.BL = 14}#79,78
.SSP = 57}#56,55,54,53,51
.MS = 14}#63,62
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.LSPX = 1}#59
.C = 40}#36,
}'
330:}"Z_M LCY 16, DGOTO 1654B
.BR = 10}#82
.BL = 4}#79
.MS = 7}#65,64,63
.LZX = 1}#76
.MC = 20}#1,
.DGO = 1}#87
.VCYP = 1}#86
.B = 1654}&8,9,10,12,14,15,
}'
331:}"POT
.MS = 15}#65,63,62
* NEED A NEW CHARACTER, OUTPUT WORD FILLED WITH ZEROS.

332:}"DOD2: Z _ OS
.LZY = 1}#77
.VCYP = 1}#86
.TOSY = 1}#57
}'
333:}"CALL GMTL, SVR4 _ Z, Z _ 1
.MCONT = 1}#7
.BR = 4}#83
.BL = 10}#78
.TCY = 1}#44
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 20}#1
.B = 530}$9,11,13,14,
.C = 1}#41,
}'
334:}"CALL}"OUTL2
.MCONT = 1}#7
.MC = 1}#5
.VCYP = 1}#86
.B = 743}$9,10,11,12,16,17,
}'
335:}"GOTO DOD4 IF ASET
.MC = 33}#5,4,2,1
.VCYP = 1}#86
.B = 350}$10,11,12,14,
}'
336:}"VR _ 0
.TXW = 1}#47
.LRN = 6}#70,69
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
337:}"VR _ M LCY 1
.BR = 10}#82
.BL = 4}#79
.MS = 1}#65
.TXW = 1}#47
.LRN = 6}#70,69
.VCYP = 1}#86

340:}"DOD9:}"Q _ LBTBE
.SSP = 35}#56,54,53,52
.TSPY = 1}#45
.LQY = 1}#75
CHECKBIT IS 87}#
*VR NOW HAS WORD TO BE OUTPUT WITH START AND STOP BITS FOR MODEL 35
}'
341:}"M _ LBTBA
.SSP = 34}#54,53,52
.TSPY = 1}#45
.LMY = 1}#73
}'
342:}"Q _ Q - M
.BR = 2}#84
.BL = 13}#81,80,78
.LOC = 1}#50
.TAX = 1}#49
.LQX = 1}#74
}'
343:}"Q _ Q LCY 20, Z _ BV3
.BR = 10}#82
.BL = 2}#80
.MS = 10}#62
.TCY = 1}#44
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = 353}#34,35,36,38,40,41,
*SET UP OUTPUT BUFFER: 2 STOP BITS(0), CHARACTER, 1 START BIT(1).
*THE WHOLE THING IS COMPLEMENTED ON OUTPUT
*DISPATCH ON DEVICE TYPE
}'
344:}"DGOTO Q + Z + 1, M _ VR
.MCONT = 3}#7,6
.RRN = 6}#67,66
.BR = 4}#83
.BL = 2}#80
.LOC = 1}#50
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.MC = 20}#1,
.DGO = 1}#87
CHECKBIT IS 30}#
}'
345:}"DGOTO DOD3
.MC = 1}#5,
.DGO = 1}#87
.VCYP = 1}#86
.B = 346}$10,11,12,15,16,
CHECKBIT IS 30}#

346:}"DOD3:}"HFETCH R0_LDVTE, Q _ MSK10*TWO0, DGOTO RTSS4
.SSP = 12}#55,53
.MS = 45}#65,63,60
.TCX = 1}#43
.TSPY = 1}#45
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.MC = 20}#1,
.DGO = 1}#87
.B = 31}$13,14,17,
.C = 3777}#31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 50}#
***}$HFETCH LDVTE MRG DISP(COP), Q _ MASK(COP), DGOTO RTSS4;
}'
347:}"M _ M AND NOT Q ! Z AND Q, CALL DOD
.MCONT = 1}#7
.BL = 14}#79,78
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5,
.VCYP = 1}#86
.B = 321}$10,11,13,17,

350:}"DOD4:}"GOTO DOD9 ON M # 0, VR _ MSK10*TWO0
.BR = 10}#82
.BL = 4}#79
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LRN = 6}#70,69
.MC = 3}#5,4
.B = 340}$10,11,12,
.C = 3777}#31,32,33,34,35,36,37,38,39,40,41,
*0 MEANS NOT OUTPUT TURN OFF LINE,}"(ALL OTHER CONT CH. AS SNULL)
}'
351:}"CALL WKOL, Z _ 0
.MCONT = 1}#7
.LZX = 1}#76
.MC = 20}#1
.VCYP = 1}#86
.B = 1505}$8,9,11,15,17,
}'
352:}"GOTO RTSS4
.MC = 1}#5
.VCYP = 1}#86
.B = 31}$13,14,17,
*M HAS CHARACTER SHIFTED LEFT ONE

353:}"BV3:}#CALL ABORT
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
354:}"Z _ M MRG MSK0*TWO9
.BR = 10}#82
.BL = 4}#79
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.VCYP = 1}#86
.C = 1000}#32,
}'
355:}"Z _ M MRG MSK1*TWO9
.BR = 10}#82
.BL = 4}#79
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.VCYP = 1}#86
.C = 3000}#31,32,
CHECKBIT IS 87}#
}'
356:}"Z _ M MRG MSK0*TWO8
.BR = 10}#82
.BL = 4}#79
.TCX = 1}#43
.TAX = 1}#49
.LZX = 1}#76
.VCYP = 1}#86
.C = 400}#33,
*
*NOTE THAT SNULL IS WRONG

*
*ECHO:}"ECHO CHARACTER TO OUTPUT LINE ALSO
*
*THE NAME ECHO IS SOMEWHAT OF A MISNOMER. ECHO IS CALLED BY
* A SUBROUTINE THAT HAS REASON TO BELIEVE
*THAT THE CHARACTER IN CHAR SHOULD BE OUTPUT TO SOME LINE OTHER
*THE OBVIOUS ONE, EITHER AS AN ECHOED CHARACTER OR AS A LINKED
* CHARACTER (OR BOTH).
*ECHO WILL SEND CHARACTERS TO THE APPROPRIATE LINES,
*IT IS A LITTLE TRICKY BECAUSE IT MUST SAVE AND RESTORE
*THE STATE OF THE LINE BEING WRITTEN
*ECHO SAVES AND RESTORES WCNT, WWORD, WCP AND BFLAG
*
*
*
*ECHO SHOULD:
*}%1) ECHO TO THE OUTPUT LINE IF THE LINE IS AN INPUT LINE
*}&2) LINK TO AN OUTPUT LINE
*
*}"ARGUMENTS:
*}&CHAR: CHARACTER TO BE ECHOED
*
*}"VALUE: NONE
*
*}"LEVEL:}#2
*
*SUBROUNTINES CALLED:}"WCH1,GLE
*

357:}"ECHO:}"M _ LINE
.SSP = 21}#56,52
.TSPY = 1}#45
.LMY = 1}#73
CHECKBIT IS 87}#
}'
360:}"XLINK _ M, Z_OS, GOTO SH2
.BR = 10}#82
.BL = 4}#79
.SSP = 50}#53,51
.TAX = 1}#49
.LZY = 1}#77
.LSPX = 1}#59
.MC = 1}#5
.TOSY = 1}#57
.B = 1572}$8,9,11,12,13,14,16,
CHECKBIT IS 30}#
*
*PUSH DOWN WWORD, WCNT, WCP, BFLAG
}'
361:}"M _ WWORD
.SSP = 31}#56,53,52
.TSPY = 1}#45
.LMY = 1}#73
}'
362:}"SWORD _ M, M _ WCNT
.RRN = 3}#68,67
.BR = 10}#82
.BL = 4}#79
.SSP = 75}#56,54,53,52,51
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.LSPX = 1}#59
}'
363:}"SWCNT _ M, M _ WCP
.RRN = 4}#66
.BR = 10}#82
.BL = 4}#79
.SSP = 67}#56,55,54,52,51
.THY = 1}#46
.TAX = 1}#49
.LMY = 1}#73
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
364:}"SWCP _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 77}#56,55,54,53,52,51
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
365:}"M _ BFLAG
.SSP = 16}#55,54,53
.TSPY = 1}#45
.LMY = 1}#73
}'
366:}"SBFLAG _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 76}#55,54,53,52,51
.TAX = 1}#49
.LSPX = 1}#59
}'
367:}"CALL BLAKE ON BFLAG<0
.MCONT = 1}#7
.SSP = 16}#55,54,53
.TSPY = 1}#45
.MC = 10}#2
.B = 116}$11,14,15,16,
CHECKBIT IS 30}#
}(
370:}"M_WD1, Q_MSK0*TWO13
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 20000}#28,
}'
371:}"GOTO ECHO2 ON M AND Q =0
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 407}$9,15,16,17,
}'
372:}"GOTO ECHO2 IF ODD, Q _ LINE
.SSP = 21}#56,52
.TSPY = 1}#45
.LQY = 1}#75
.MC = 25}#5,3,1
.B = 407}$9,15,16,17,
*ECHO CHARACTER
}'
373:}"SETA,}"CALL GLE, M_LINE MRG 1
.MCONT = 1}#7
.SSP = 21}#56,52
.MS = 30}#62,61
.TCY = 1}#44
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1
.B = 514}$9,11,14,15,
.C = 1}#41,
CHECKBIT IS 50}#
*
*THE FOLLOWING CODE IS A HORRIBLE KLUGE WHICH HANDELS THE PROBLEM OF
*ECHOING (OR NOT ECHOING OF CHISC IS 4B7) SHIFT1 CONTROL CHARACTER
*IF LCWS1 = 1 THEN A SHIFT1 IS ECHOED BEFORE CHAR, ALSO LCWS1 IS
*KLUGILY USED AS STORAGE FOR THE CHARACTER
}'
374:}"GOTO ECHO2 ON M _ LCWS1<0
.SSP = 20}#52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 10}#2
.B = 407}$9,15,16,17,
CHECKBIT IS 30}#
}'
375:}"GOTO OKTE ON M = 0, M _ CHAR
.BR = 10}#82
.BL = 4}#79
.SSP = 22}#55,52
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.MC = 2}#4
.B = 404}$9,15,
CHECKBIT IS 30}#
}'
376:}"LCWS1 _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 20}#52
.TAX = 1}#49
.LSPX = 1}#59
}'
377:}"CHAR _ SHIFT1
.SSP = 22}#55,52
.TCX = 1}#43
.LSPX = 1}#59
.C = 37}#37,38,39,40,41,
}'
400:}"CALL WCH1 ON CHISC >=0
.MCONT = 1}#7
.SSP = 60}#52,51
.TSPY = 1}#45
.MC = 7}#5,4,3
.B = 1420}$8,9,13,
CHECKBIT IS 30}#
}'
401:}"M _ LCWS1
.SSP = 20}#52
.TSPY = 1}#45
.LMY = 1}#73
}'
402:}"CHAR _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 22}#55,52
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
403:}#.VCYP}#*NOP
.VCYP = 1}&86

404:}"OKTE:}#CALL WCH1 ON CHISC >=0
.MCONT = 1}#7
.SSP = 60}#52,51
.TSPY = 1}#45
.MC = 7}#5,4,3
.B = 1420}$8,9,13,
CHECKBIT IS 30}#
}'
405:}"CALL BLAKE ON BFLAG<0
.MCONT = 1}#7
.SSP = 16}#55,54,53
.TSPY = 1}#45
.MC = 10}#2
.B = 116}$11,14,15,16,
CHECKBIT IS 30}#
}'
406:}"CALL WKOL ON CHISC >= 0, Z _ -1
.MCONT = 1}#7
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.SSP = 60}#52,51
.TSPY = 1}#45
.LZX = 1}#76
.MC = 7}#5,4,3
.B = 1505}$8,9,11,15,17,
CHECKBIT IS 30}#
*NOW OUTPUT TO LINKED LINE IF LNKBIT IS ON

407:}"ECHO2:}%M_WD1, Q_MSK0*TWO16
.SSP = 24}#54,52
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.C = 200000}#25,
}(
410:}"GOTO ECHOR ON M AND Q=0, Q _ MSK12*TWO0
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 425}$9,13,15,17,
.C = 17777}#29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
*YES LINK, GET THE LINE NUMBER
}(
411:}"HFETCH R0_MTAE MRG LQNK/1B4
.SSP = 10}#53
.MS = 45}#65,63,60
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.LR0 = 1}#58
.C = 2}#40,
}(
412:}"M_M AND}"Q LCY LQNK*TWO18/TWO18+1, RESETA, CALL GLE
.MCONT = 1}#7
.BR = 10}#82
.MS = 31}#65,62,61
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5
.VCYP = 1}#86
.B = 514}$9,11,14,15,
}'
413:}"GOTO ECHOR ON M _ LCWS1<0
.SSP = 20}#52
.TSPY = 1}#45
.LMY = 1}#73
.MC = 10}#2
.B = 425}$9,13,15,17,
CHECKBIT IS 30}#
}'
414:}"GOTO OKTR ON M = 0, M _ CHAR
.BR = 10}#82
.BL = 4}#79
.SSP = 22}#55,52
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.MC = 2}#4
.B = 423}$9,13,16,17,
CHECKBIT IS 30}#
}'
415:}"LCWS1 _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 20}#52
.TAX = 1}#49
.LSPX = 1}#59
}'
416:}"CHAR _ SHIFT1
.SSP = 22}#55,52
.TCX = 1}#43
.LSPX = 1}#59
.C = 37}#37,38,39,40,41,
}'
417:}"CALL WCH1 ON CHISC >=0
.MCONT = 1}#7
.SSP = 60}#52,51
.TSPY = 1}#45
.MC = 7}#5,4,3
.B = 1420}$8,9,13,
CHECKBIT IS 30}#
}'
420:}"M _ LCWS1
.SSP = 20}#52
.TSPY = 1}#45
.LMY = 1}#73
}'
421:}"CHAR _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 22}#55,52
.TAX = 1}#49
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
422:}"LCWS1 _ 0
.SSP = 20}#52
.LSPX = 1}#59
CHECKBIT IS 87}#

423:}"OKTR:}"CALL WCH1 ON CHISC >=0
.MCONT = 1}#7
.SSP = 60}#52,51
.TSPY = 1}#45
.MC = 7}#5,4,3
.B = 1420}$8,9,13,
CHECKBIT IS 30}#
}'
424:}"CALL WKOL ON CHISC >=0, Z_-1
.MCONT = 1}#7
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.SSP = 60}#52,51
.TSPY = 1}#45
.LZX = 1}#76
.MC = 7}#5,4,3
.B = 1505}$8,9,11,15,17,
CHECKBIT IS 30}#
*

425:}"ECHOR:}%M _ XLINK, RESETA, CALL GLE
.MCONT = 1}#7
.SSP = 50}#53,51
.MS = 31}#65,62,61
.TSPY = 1}#45
.LMY = 1}#73
.MC = 20}#1
.B = 514}$9,11,14,15,
*POP WCNT, WCP, WWORD, BFLAG
}'
426:}"WCNT _ SWCNT
.SSP = 67}#56,55,54,52,51
.TSPY = 1}#45
.TYW = 1}#48
.LRN = 3}#71,70
}'
427:}"WCP _ SWCP
.SSP = 77}#56,55,54,53,52,51
.TSPY = 1}#45
.TYW = 1}#48
.LRN = 4}#69
}'
430:}"M _ SWORD
.SSP = 75}#56,54,53,52,51
.TSPY = 1}#45
.LMY = 1}#73
}'
431:}"WWORD _ M, CALL BLAKE
.MCONT = 1}%7
.BR = 10}#82
.BL = 4}#79
.SSP = 31}#56,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}'1
.B = 116}'11,14,15,16,
}'
432:}"M _ SBFLAG
.SSP = 76}#55,54,53,52,51
.TSPY = 1}#45
.LMY = 1}#73
}(
433:}"GOTO RTSS2, BFLAG _ M
.BR = 10}'82
.BL = 4}(79
.SSP = 16}&53,54,55,
.TAX = 1}'49
.LSPX = 1}&59
.MC = 1}#5,
.B = 23}$13,16,17,
*

*
*FLB: FIND LEADING BIT
*
*LEADING BIT FOUND AND LBIT IS SET TO A MASK WITH THE LEAD BIT ONLY ON.
*
* ARGUMENTS:
*}'M: BITS (AT LEAST ONE BIT MUST BE ON)
*
*VALUE:
*
*SIDE EFFECTS:
*}&LBIT: WORD WITH A BIT SET FOR INPUT TTY
*}&BWORD: OLD BWORD AND NOT LBIT
*}&LLINE: LOCAL LINE NUMBER SETUP
*}&LDVTE: SETUP
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*

434:}"FLB:}#R0_-1, Q}"_ 17B
.BR = 10}#82
.BL = 7}#81,80,79
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
.VCYP = 1}#86
.C = 17}#38,39,40,41,
CHECKBIT IS 87}#
*KLUDGE TO GET -1 TO R0 AND AVOID MICRO PROBLEMS
*FIND FIRST GROUP OF 4 BITS THAT HAS A BIT SET

435:}"CYP:}#Q _ Q LCY 20, R0 _ R0 + 1
.BR = 10}#82
.BL = 2}#80
.MS = 10}#62
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.VCYP = 1}#86

436:}"CYQ:}#GOTO CYP ON M AND Q = 0
.BR = 10}#82
.TAX = 1}#49
.MC = 2}#4
.B = 435}$9,13,14,15,17,
CHECKBIT IS 30}#
}'
437:}"Z _ Q LCY 3
.BR = 10}#82
.BL = 2}#80
.MS = 3}#65,64
.LZX = 1}#76
.VCYP = 1}#86
CHECKBIT IS 87}#
***}$LBIT _ Q _ Q AND Z, Z _ R0, R0 _ 0;
}'
440:}"LBIT _ Q _ Q AND Z, Z _ R0, .LR0
.BL = 10}#78
.SSP = 23}#56,55,52
.THY = 1}#46
.TAX = 1}#49
.LQX = 1}#74
.LZY = 1}#77
.LR0 = 1}#58
.LSPX = 1}#59
CHECKBIT IS 87}#
*FIND BIT OF THE GROUP THAT IS SET

441:}"CYR:}#GOTO FIB3 ON M AND Q # 0
.BR = 10}#82
.TAX = 1}#49
.MC = 3}#5,4
.B = 444}$9,12,15,
}'
442:}"DGOTO CYR, Q _ Q LCL 23
.BR = 10}#82
.BL = 2}#80
.MS = 3}#65,64
.LQX = 1}#74
.MC = 20}#1,
.DGO = 1}#87
.VCYP = 1}#86
.B = 441}$9,12,17,
}'
443:}"LBIT _ Q _ Q LCH 23, R0 _ R0 + 1
.BR = 10}#82
.BL = 2}#80
.SSP = 23}#56,55,52
.MS = 10}#62
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.LSPX = 1}#59
CHECKBIT IS 87}#

444:}"FIB3:}"BWORD _ M AND NOT Q
.BR = 10}#82
.BL = 14}#79,78
.SSP = 72}#55,53,52,51
.TAX = 1}#49
.LSPX = 1}#59
}'
445:}"M _ Z, Z _ R0
.BR = 4}#83
.BL = 10}#78
.THY = 1}#46
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.VCYP = 1}#86
}'
446:}"M _ M LCY 2
.BR = 10}#82
.BL = 4}#79
.MS = 2}#64
.LMX = 1}#72
.VCYP = 1}#86
}'
447:}"LLINE _ M _ M + Z
.BR = 4}#83
.BL = 4}#79
.SSP = 17}#56,55,54,53
.TAX = 1}#49
.LMX = 1}#72
.LSPX = 1}#59
}'
450:}"Q _ M LCY 1, Z _ LDVTA, DRETURN
.MCONT = 2}#6
.BR = 10}#82
.BL = 4}#79
.SSP = 3}#56,55
.MS = 1}#65
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.MC = 1}#5
.DGO = 1}#87
}'
451:}"HFETCH R0_LDVTE _ Q + Z, CALL BLAKE
.MCONT = 1}#7
.BR = 4}#83
.BL = 2}#80
.SSP = 12}#55,53
.MS = 45}#65,63,60
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
.LSPX = 1}#59
.MC = 1}#5,
.B = 116}$11,14,15,16,
*

*
*GAB: GET A BUFFER
*
*GAB IS CALLED TO GET A NEW BUFFER FOR WRITE CHARACTER. IT WILL ALWAYS 
*SUCCEED (OR ABORT.
*
* ARGUMENTS:
*}'WCP IS SETUP
*
*VALUE: NONE
*
*LEVEL: 0
*
*SUBROUTINES CALLED: NONE
*

452:}"GAB:}#CALL ABORT ON M_AVB<0, Q _ 8
.MCONT = 1}#7
.SSP = 52}#55,53,51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 10}#2
.B = 13}$14,16,17,
.C = 10}#38,
}'
453:}"Z _ WCP, AVB _ -1
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.RRN = 4}#66
.SSP = 52}#55,53,51
.THY = 1}#46
.LZY = 1}#77
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
454:}"R0 _ Z - Q, Q _ BUF0
.BR = 4}#83
.BL = 15}#81,79,78
.SSP = 65}#56,54,52,51
.LOC = 1}#50
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
CHECKBIT IS 87}#
***}$WCP_M + Q + 1 MRG STFLAG;
}'
455:}"WCP_M + Q MRG STFLAG+1
.BR = 2}#84
.BL = 4}#79
.TCX = 1}#43
.TXW = 1}#47
.TAX = 1}#49
.LRN = 4}#69
.C = -37777777}#18,41,
CHECKBIT IS 87}#
}'
456:}"VR _ M + Q, Q _ LINE
.BR = 2}#84
.BL = 4}#79
.SSP = 21}#56,52
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
CHECKBIT IS 87}#
}'
457:}"Z _ Q LCY 16, Q _ MSK7*TWO16
.BR = 10}#82
.BL = 2}#80
.MS = 7}#65,64,63
.TCY = 1}#44
.LQY = 1}#75
.LZX = 1}#76
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
}'
460:}"M _ M AND NOT Q + Z AND Q, STORE
.BL = 14}#79,78
.MS = 42}#64,60
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87
}'
461:}"BFLAG _ 4B7, DRETURN
.MCONT = 2}#6
.SSP = 16}#55,54,53
.TCX = 1}#43
.LSPX = 1}#59
.MC = 20}#1
.DGO = 1}#87
.C = -40000000}#18,
}'
462:}"M _ Z AND Q, STORE R0_VR
.RRN = 6}#67,66
.BL = 10}#78
.MS = 42}#64,60
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LMX = 1}#72
.LR0 = 1}#58
.VCYP = 1}#86
*

*
*GETFIELD: LOAD FIELD FROM LINE TABLE
*
*THIS WILL GET A FIELD FROM EITHER OF THELINE TABLES
*
* ARGUMENTS:
*}'CARG1: FIELD DISCRIPTOR
*VALUE: FIELD
*
*SUBROUTINES CALLED GFD
*
*LEVEL: TOP
*

463:}"GETFIELD:}"CALL GFD
.MCONT = 1}#7
.MC = 1}#5,
.VCYP = 1}#86
.B = 471}$9,12,13,14,17,
CHECKBIT IS 30}#
}'
464:}"M _ M AND Q LCH Z, DGOTO CPUFIN
.BR = 10}#82
.MS = 12}#64,62
.LMX = 1}#72
.MC = 20}#1,
.DGO = 1}#87
.VCYP = 1}#86
.B = 204}$10,15,
}'
465:}"M _ M LCL Z
.BR = 10}#82
.BL = 4}#79
.MS = 11}#65,62
.LMX = 1}#72
.VCYP = 1}#86
CHECKBIT IS 87}#
*

*
*GETREG: STORE REGISTER
*
* ARGUMENTS:
*}'CARG1: SAME AS FOR LDRG
*
*VALUE(IN CPUIT): REGISTERS VAALUE
*
*LEVEL: -
*
*SIDE EFFECTS: NONE
*
*SUBROUTINES CALLED: NONE
*

466:}"GETREG: FETCH R0_CARG1/1B4
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = 43}#36,40,41,
}'
467:}"Z _ M
.BR = 10}#82
.BL = 4}#79
.TAX = 1}#49
.LZX = 1}#76
.VCYP = 1}#86
}'
470:}"M _ SKZ, GOTO CPUFIN
.MS = 13}#65,64,62
.TSPY = 1}#45
.LMY = 1}#73
.MC = 1}#5
.B = 204}$10,15,
CHECKBIT IS 30}#

*GFD: GET FIELD DESCRIPTOR
*
*GFD WILL FETCH FROM CARG1 A FIELD DESCRIPTOR AND HAVE SEVERAL
*INTERESTING QUANTITIES SET UP ON RETURN
*
* ARGUMENTS: CARG1: FIELD DESCRIPTOR
*
*VALUE:
*}'M: CONTENTS OF WORD POINTED TO BY FIELD DESCRIPTOR
*}'R0: LOCATION POINTED TO BY FIELD DISCRIPTOR (IN LINE TABLE)
*}'Q: MASK FOR THE FIELD
*}'Z: CYCLE SET UP FOR 'STUFF'
*
*LEVEL: -
*
*NMR: 1
*
*SUBROUTINES CALLED: NONE
*

471:}"GFD:}#Z_OS,}"Q _ MSK0*TWO4, GOTO SH3
.TCX = 1}#43
.LQX = 1}#74
.LZY = 1}#77
.MC = 20}#1
.VCYP = 1}#86
.TOSY = 1}#57
.B = 1573}$8,9,11,12,13,14,16,17,
.C = 20}#37,
}'
472:}"FETCH R0_CARG1/1B4, Z _ MTAE
.SSP = 10}#53
.MS = 44}#63,60
.TCX = 1}#43
.TSPY = 1}#45
.TXW = 1}#47
.LZY = 1}#77
.LR0 = 1}#58
.C = 43}#36,40,41,
}'
473:}"GOTO GFD1 ON M AND Q = 0, Q _ MSK2*TWO0
.BR = 10}#82
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.B = 475}$9,12,13,14,15,17,
.C = 7}#39,40,41,
CHECKBIT IS 56}#
}'
474:}"Z _ MTCE
.RRN = 1}#68
.THY = 1}#46
.LZY = 1}#77
.VCYP = 1}#86
CHECKBIT IS 87}#

475:}"GFD1:}"R0 _ M AND Q}"+ Z, Q _ MSK4*TWO16
.BR = 4}#83
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
.C = 7600000}#21,22,23,24,25,
}'
476:}"Z _ M AND}"Q LCY FDSZ*TWO18/TWO18+1, Q _ 1, CALL QQCYZ
.MCONT = 1}#7
.BR = 10}#82
.MS = 5}#65,63
.TCY = 1}#44
.LQY = 1}#75
.LZX = 1}#76
.MC = 1}#5
.VCYP = 1}#86
.B = 43}$12,16,17,
.C = 1}#41,
}'
477:}"GOTO GFD2 ON VR _ Q - 1#0, Q _ MSK4*TWO11
.BR = 7}#85,84,83
.BL = 2}#80
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
.MC = 3}#5,4
.B = 501}$9,11,17,
.C = 174000}#26,27,28,29,30,
CHECKBIT IS 56}#
}'
500:}"VR _ -1
.BL = 7}(79,80,81,
.BR = 10}'82,
.TAX = 1}'49,
.TXW = 1}#47
.LRN = 6}#70,69
.VCYP = 1}#86

501:}"GFD2:}"Q _ M AND Q LCL FDFB*TWO18/TWO18+1
.BR = 10}#82
.MS = 1}#65
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
502:}"Q _ Q LCH FDFB*TWO18/TWO18+1
.BR = 10}#82
.BL = 2}#80
.MS = 6}#64,63
.LQX = 1}#74
.VCYP = 1}#86
CHECKBIT IS 87}#
}'
503:}"Z _}"Z+Q, M _ 24
.BR = 4}#83
.BL = 2}#80
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.C = 30}#37,38,
CHECKBIT IS 87}#
}'
504:}"Z _ M - Z, Q _ VR, CALL QQCYZ
.MCONT = 1}#7
.RRN = 6}#67,66
.BR = 13}#85,84,82
.BL = 4}#79
.LOC = 1}#50
.THY = 1}#46
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.MC = 20}#1,
.B = 43}$12,16,17,
CHECKBIT IS 30}#
}'
505:}"FETCH, Z _ M - Z, GOTO RTSS1
.BR = 13}#85,84,82
.BL = 4}#79
.MS = 44}#63,60
.LOC = 1}#50
.TAX = 1}#49
.LZX = 1}#76
.MC = 1}#5,
.B = 20}$13,
*

*
*GLBTE: GET LOCAL BIT TABLE ENTRY
*
*GLBTE SETS UP LBTBE AND BTIME AND LEAVES BSNO INCREMENTED IN M
*
* ARGUMENTS:
*}'M: DEVICE TYPE
*
*VALUE: M: BIT SLICE NUMBER(0-6)
*}&R0: LOCATION WHERE UPDATED BSNO SHOULD BE STORED
*
*SIDE EFFECTS: LBTBE AND BTIME SETUP
*
*LEVEL: -
*
*NMR: 1
*
*SUBROUTINES CALLED: NONE
*
*KNOW DOES NOT GRONK VR
*

506:}"GLBTE: M _ M - 1
.BR = 7}#85,84,83
.BL = 4}#79
.TAX = 1}#49
.LMX = 1}#72
CHECKBIT IS 87}#
}'
507:}"Q _ M LCY 4, Z _ LBTBA
.BR = 10}#82
.BL = 4}#79
.SSP = 34}#54,53,52
.MS = 4}#63
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
***}$Z _ LBTBE _ Q + Z, FETCH Q + Z + DISP(BSNO);
}'
510:}"Z _ LBTBE _ Q + Z, FETCH R0_BSNO/1B4, .TXW
.BR = 4}#83
.BL = 2}#80
.SSP = 35}#56,54,53,52
.MS = 44}#63,60
.TCY = 1}#44
.TXW = 1}#47
.TYW = 1}#48
.TAX = 1}#49
.LZX = 1}#76
.LR0 = 1}#58
.LSPX = 1}#59
.C = 17}#38,39,40,41,
}'
511:}"GOTO GLB1 ON Q _ M _ M - 1 >= 0
.BR = 7}#85,84,83
.BL = 4}#79
.TAX = 1}#49
.LMX = 1}#72
.LQX = 1}#74
.MC = 5}#5,3
.B = 513}$9,11,14,16,17,
CHECKBIT IS 30}#
}'
512:}"Q _ M _ 6
.TCX = 1}#43
.LMX = 1}#72
.LQX = 1}#74
.VCYP = 1}#86
.C = 6}#39,40,
CHECKBIT IS 87}#

513:}"GLB1:}"BTIME _ M + Q OR Z, RETURN
.MCONT = 2}#6
.BR = 6}#84,83
.BL = 4}#79
.SSP = 33}#56,55,53,52
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}#1
*

*
*GLE: GENERATE LINE ENTRY
*
* ARGUMENTS:
*}'M: LINE
*}'A: SET IF ABCPU SHOULD BE CALLED IF BAD REQUEST
*
*VALUE: NONE
*
*LEVEL: -
*
*SUBROUTINES CALLED: NONE
*
*SIDE EFFECTS: MTCE, MTAE, WD1, AND WD2 ARE SETUP
*
*NMR: 2
*
*NOTE THAT VR IS NOT DESTROYED
*

514:}"GLE:}#Q _ LINE _ M, M _ 1+4B7
.BR = 10}#82
.BL = 4}#79
.SSP = 21}#56,52
.TCY = 1}#44
.TAX = 1}#49
.LMY = 1}#73
.LQX = 1}#74
.LSPX = 1}#59
.C = -37777777}#18,41,
}'
515:}"Z _ XLINE
.SSP = 4}#54
.TSPY = 1}#45
.LZY = 1}#77
}'
516:}"GOTO BADGL ON Z - Q<0
.BR = 4}#83
.BL = 15}#81,79,78
.LOC = 1}#50
.TAX = 1}#49
.MC = 4}#3
.B = 526}$9,11,13,15,16,
CHECKBIT IS 30}#
}'
517:}"Z _ Q AND NOT M LCY 1, M _ MTAA
.BR = 10}#82
.BL = 12}#80,78
.SSP = 1}#56
.MS = 1}#65
.TSPY = 1}#45
.LMY = 1}#73
.LZX = 1}#76
CHECKBIT IS 87}#
}'
520:}"HFETCH R0_MTAE _ M + Z
.BR = 4}#83
.BL = 4}#79
.SSP = 10}#53
.MS = 45}#65,63,60
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
521:}"Z _ Q LCY 1
.BR = 10}#82
.BL = 2}#80
.MS = 1}#65
.LZX = 1}#76
.VCYP = 1}#86
}'
522:}"Z _ Q + Z, Q _ MTCA
.BR = 4}#83
.BL = 2}#80
.SSP = 2}#55
.TSPY = 1}#45
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
}'
523:}"WD1 _ M, FETCH R0_R0+1
.BR = 10}#82
.BL = 4}#79
.SSP = 24}#54,52
.MS = 44}#63,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.LSPX = 1}#59
CHECKBIT IS 87}#
}'
524:}"MTCE _ Z + Q, DRETURN
.MCONT = 2}#6
.BR = 4}#83
.BL = 2}#80
.TXW = 1}#47
.TAX = 1}#49
.LRN = 1}#71
.MC = 1}#5
.DGO = 1}#87
CHECKBIT IS 30}#
}'
525:}"WD2 _ M
.BR = 10}#82
.BL = 4}#79
.SSP = 25}#56,54,52
.TAX = 1}#49
.LSPX = 1}#59

526:}"BADGL:}$CALL ABORT IF ARESET
.MCONT = 1}#7
.MC = 32}#4,2,1
.VCYP = 1}#86
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
527:}"CALL ABCPU
.MCONT = 1}#7
.MC = 20}#1
.VCYP = 1}#86
.B = 5}$15,17,
*

*
*GMTL: GET MAIN TABLE LINE NUMBER
*
*GMTL WILL SET UP LINE AS EITHER AN INPUT OR OUTPUT LINE
*KNOWING THE LOCAL LINE IS SET UP
*
* ARGUMENTS:
*}'Z: 0 IF INPUTLINE, 1 IF OUTPUT LINE
*}'ASSUMES LDVTE SETUP
*
*VALUE: NONE
*
*LEVEL: 0
*
*NMR: 1
*
*SUBROUTINES CALLED: GLE
*

530:}"GMTL:}"Q _1, FETCH R0_LDVTE MRG CLINE/1B4
.BR = 10}#82
.BL = 10}#78
.SSP = 12}#55,53
.MS = 44}#63,60
.LOC = 1}#50
.TCY = 1}#44
.TSPY = 1}#45
.TYW = 1}#48
.TAX = 1}#49
.LQX = 1}#74
.LR0 = 1}#58
.C = 1}#41,
CHECKBIT IS 87}#
}'
*THIS NEXT INSTRUCTION ACTUALLY LOOKS LIKE}"VR _ Q AND Z, Q _ 7777B.
*UNTIL SYSTEM GETS CHANGED TO DO ADVISING.}"THIS IS ACCCOMPLISHED
* BY CUTTING BITS 4 AND 8 (TO KEEP ROM PARITY OK)
*THE GOTO PART OF THIS NEXT INSTRUCTION IS FOR LATER USE (ADVISING?)
*REFER TO PAGE 61 OF CHIO LOG.}"FOR NOW BITS 4 AND 8 ARE CUT TO KEEP
*THE GOTO FROM HAPPENING AND TO KEEP THE ROMPARITY OK
531:}"GOTO 1641B ON VR _ Q AND Z = 0, Q _ 7777B
.BL = 10}#78
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
.MC = 2}#4
.B = 1641}$8,9,10,12,17,
.C = 7777}#30,31,32,33,34,35,36,37,38,39,40,41,
}'
532:}"M _ M AND}"Q LCY CLINE*TWO18/TWO18+1, M _ VR, GOTO GLE
.RRN = 6}#67,66
.BR = 10}#82
.THY = 1}#46
.TAX = 1}#49
.LMX = 1}#72
.LMY = 1}#73
.MC = 1}(5,
.VCYP = 1}#86
.B = 514}$9,11,14,15,

*
*GNR: GET NEXT REQUEST
*
*GNR FINDS THE HIGHEST PRIORITY REQUEST AND SERVICES IT
*IT WILL DO ONE OF THE FOLLOWING:
*}&1) GOTO CPURQ TO SERVICE A CPU REQUEST
*}&2) GOTO B2400 TO SERVICE A 2400 BAUD LINE REQUEST
*}&3) DISPATCH ON A SUBROUTINE IN TIMTBL TO PERFORM A PERIODIC FUNCTION
*
*IF IT DISPATCHES ON A FUNCTION THROUGH 
*TIMTBL THE FUNCTION MAY EITHER RETURN OR GOTO GNRFIN;
*
* ARGUMENTS: NONE
*
*VALUE: NONE
*
*SIDE EFFECTS: ALL
*
*LEVEL: TOP
*
*SUBROUTINES CALLED: CPUREQ, CLOCK SUBROUTINES.
*

533:}"ONYCPU:}#DGOTO CPURQ
.MC = 20}#1
.DGO = 1}#87
.VCYP = 1}#86
.B = 213}$10,14,16,17,
}'
534:}"GOTO GNR IF NOREQ
.MC = 27}#5,4,3,1
.VCYP = 1}#86
.B = 535}$9,11,13,14,15,17,
* BLAKE WILL ENSURE THAT FREE BUFFERS ARE SET UP OK

535:}"GNR:}#CALL BLAKE ON BFLAG < 0, TOCPU
.MCONT = 1}#7
.SSP = 16}#55,54,53
.MS = 76}#64,63,62,61,60
.TSPY = 1}#45
.MC = 10}#2
.B = 116}$11,14,15,16,
*IF CPUFLAG IS ON (NEGATIVE) ONLY SERVICE CPU REQUESTS
}'
536:}"GOTO ONYCPU ON CPUFLAG < 0, Q _ 76B6
.SSP = 14}#54,53
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.MC = 10}#2
.B = 533}$9,11,13,14,16,17,
.C = -2000000}#18,19,20,21,22,
}'
537:}"Z _ RDCKL, ALERT, M _ NCI
.SSP = 40}#51
.MS = 14}#63,62
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LZX = 1}#76
.C = 60}(36,37,
}'
540:}"PIN, Z _ E2
.MS = 16}#64,63,62
.LZY = 1}#77
.TE2Y = 1}#89
}'
541:}"M _ Z AND NOT Q - M AND NOT Q, Q _ 1B6
.BR = 14}#83,82
.BL = 3}#81,80
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LQY = 1}#75
.C = 1000000}#23,
CHECKBIT IS 87}#
}'
542:}"GOTO SCI ON BL _ M AND Q}"= 0
.MC = 22}"4,1
.B = 550}$9,11,12,14,
.VCYP = 1}&86
}'
543:}"GOTO 1602B
.MC = 20}#1
.VCYP = 1}#86
.B = 1602}$8,9,10,16,
CHECKBIT IS 30}#
}'
544:}"DGOTO CPURQ
.MC = 1}#5
.DGO = 1}#87
.VCYP = 1}#86
.B = 213}$10,14,16,17,
}'
545:}"GOTO *+1 IF NOREQ
.MC = 27}#5,4,3,1
.VCYP = 1}#86
.B = 546}$9,11,12,15,16,
CHECKBIT IS 30}#
}'
546:}"CALL GOCTP
.MCONT = 1}#7
.MC = 20}#1,
.VCYP = 1}#86
.B = 1642}$8,9,10,12,16,
CHECKBIT IS 30}#
}'
547:}"GOTO GNR, SETBAS
.MS = 52}#64,62,60
.MC = 1}#5,
.VCYP = 1}#86
.B = 535}$9,11,13,14,15,17,

550:}"SCI:}#M _ NCI, Q _ MSK3*TWO20, DGOTO GNRFIN
.SSP = 40}#51
.TCX = 1}#43
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
.MC = 20}#1,
.DGO = 1}#87
.B = 563}$9,11,12,13,16,17,
.C = -4000000}#18,19,20,21,
}'
551:}"Q _ M AND}"Q LCY FTOSUB*TWO18/TWO18+1, Z _ TIMTBL, CALL GOQPZ
.MCONT = 1}#7
.BR = 10}#82
.MS = 4}#63
.TCY = 1}#44
.LQX = 1}#74
.LZY = 1}#77
.MC = 1}#5,
.VCYP = 1}#86
.B = 42}$12,16,
.C = 552}#33,35,36,38,40,
*NOTE CKFXP SUBROUTINE NUMBER IS ZERO, AND THE SUBROUTINE NUMBER FOR 
*THE BIT SCANNING SUBROUTINES IS THE SUBROUTINE NUMBER

552:}"TIMTBL:}#GOTO CKFXP, R0 _ -@LCI+@NCI-1
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.MC = 20}#1,
.VCYP = 1}#86
.B = 174}$11,12,13,14,15,
.C = -6}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,
CHECKBIT IS 50}#
}'ORG TIMTBL+M37T;
}'
553:}"GOTO BSCN, Z _ 60B}'* FOR 30 CHARS/SEC
.TCX = 1}#43
.LZX = 1}#76
.MC = 20}#1
.VCYP = 1}#86
.B = 146}$11,12,15,16,
.C = 60}(36,37,
CHECKBIT IS 50}#
}'ORG TIMTBL+M35T;
}'
554:}"GOTO BSCN, Z _ N35I
.TCX = 1}#43
.LZX = 1}#76
.MC = 1}#5
.VCYP = 1}#86
.B = 146}$11,12,15,16,
.C = 202}#34,40,
CHECKBIT IS 50}#
}'ORG TIMTBL+M2741T;
}'
555:}"GOTO BSCN, Z _ N2741
.TCX = 1}#43
.LZX = 1}#76
.MC = 1}#5,
.VCYP = 1}#86
.B = 146}$11,12,15,16,
.C = 152}#35,36,38,40,
CHECKBIT IS 50}#
}'ORG TIMTBL+4;
*SUBROUTINE SUBNUL IS SUBROUTINE NUMBER 4 IT DOES NOTHING
}'
556:}"NCI _ M + 1 MRG MSK19*TWO0, GOTO GNRFIN
.BR = 10}#82
.BL = 4}#79
.SSP = 40}#51
.LOC = 1}#50
.TCX = 1}#43
.TAX = 1}#49
.LSPX = 1}#59
.MC = 20}#1,
.B = 563}$9,11,12,13,16,17,
.C = 3777777}#22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 42}#
}'
557:}"GOTO GPRUPDATE, Z _ XLINE
.SSP = 4}#54
.TSPY = 1}#45
.LZY = 1}#77
.MC = 1}#5,
.B = 605}$9,10,15,17,
CHECKBIT IS 30}#
}'
560:}"GOTO RTUPDATE, Q _ UPAM
.SSP = 63}#56,55,52,51
.TSPY = 1}#45
.LQY = 1}#75
.MC = 20}#1,
.B = 1250}$8,10,12,14,
}'
561:}#.C _ 4B3}0*SPARE
.C = 4B3}'30,
}'
562:}"CALL ABORT
.MCONT = 1}#7
.MC = 20}#1,
.VCYP = 1}#86
.B = 13}$14,16,17,
CHECKBIT IS 30}#

*
*GNRFIN: CONTROL GOES HERE FROM ANY OF THE CLOCK DRIVEN FUNCTIONS
*
*GNRFIN MUST SORT THE CLOCK QUEUE AND GO TO MAIN LOOP
*
* ARGUMENTS: NCI: TIME THE FUNCTION SPECIFIED BY NCI WANTS TO BE CALLED
*
*VALUE: NONE
*
*SIDE EFFECTS: NONE
*
*LEVEL: TOP
*
*SUBROUTINES CALLED: NONE
*
***}#Z _ VR _ @NCI, M _ NCI;

563:}"GNRFIN:}$Z _ VR _ 32, M _ NCI
.SSP = 40}#51
.TCX = 1}#43
.TSPY = 1}#45
.TXW = 1}#47
.LMY = 1}#73
.LZX = 1}#76
.LRN = 6}#70,69
.C = 40}#36,
***}$R0 _ @NCI-@LCI;
}'
564:}"R0 _ -5
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.VCYP = 1}#86
.C = -5}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,
*VR AND Z HAVE NUMBER OF LOWER NUMBERED SCRATCH PAD REG, M HAS ITS CONTENTS

565:}"SCIL:}"Z _ Z + 1, Q _ - MSK19*TWO0-1
.BR = 4}#83
.BL = 10}#78
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LZX = 1}#76
.C = -4000000}#18,19,20,21,
}'
566:}"M _ SKZ, Z _ M
.BR = 10}#82
.BL = 4}#79
.MS = 13}#65,64,62
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
}'
567:}"DGOTO GNRR ON M AND NOT Q - Z AND NOT Q>=0
.BR = 3}#85,84
.BL = 14}#79,78
.LOC = 1}#50
.TAX = 1}#49
.MC = 5}#5,3
.DGO = 1}#87
.B = 573}$9,11,12,13,14,16,17,
CHECKBIT IS 30}#
}'
570:}"VR _ Q _ Z, Z _ VR
.RRN = 6}#67,66
.BR = 4}#83
.BL = 10}#78
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LQX = 1}#74
.LZY = 1}#77
.LRN = 6}#70,69
.VCYP = 1}#86
CHECKBIT IS 87}#
*Z HAS LOWER NUMBER REGISTER SCRATCH PAD ADDRESS, VR HAS OLD CONTENTS
*OF SCRATCH PAD Z.
*PUT CONTENTS OF SCRATCH PAD Z+1 IN SCRATCH PAD Z, AND PRETEND
*TO PUT CONTENTS OF SCRATCH PAD Z INTO SCRATCH PAD Z+1.
}'
571:}"SKZ _ M, DGOTO SCIL ON R0_R0+1<0
.BR = 10}#82
.BL = 4}#79
.MS = 13}#65,64,62
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.LSPX = 1}#59
.MC = 10}#2
.DGO = 1}#87
.B = 565}$9,11,12,13,15,17,
}'
572:}"M _ VR, VR _ Z _ Z + 1
.RRN = 6}#67,66
.BR = 4}#83
.BL = 10}#78
.LOC = 1}#50
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LMY = 1}#73
.LZX = 1}#76
.LRN = 6}#70,69
CHECKBIT IS 87}#
*PUT CONTENTS OF SCRATCH PAD Z IN SCRATCH PAD Z+1(WHICH WE ONLY 
*PRETENDED TO DO).

573:}"GNRR:}"SKZ _ Q, GOTO GNR
.BR = 10}#82
.BL = 2}#80
.MS = 13}#65,64,62
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5,
.B = 535}$9,11,13,14,15,17,
CHECKBIT IS 30}#
*

*
*GPR: GUARANTEED POOR RESPONSE
*
*WHEN GNR HAS NOTHING ELSE TO DO
*GPR IS CALLED TO DECREMENT THE 
* AWT COUNT IN THE LINE TABLE AND IT IT IS ZERO WAKEUP THE OUTPUT DEVICE.
*GPR WILL FIND ITSELF IN ONE OF THREE STATES:
*
*}'1) NORMAL: DECREMENT AWT COUNT(IF NOT 0) ON ONE LINE
*}'2) FINISHED: LAST LINE SERVICED WAS LAST LINE, SET NEXT MIN TIME;
*}'3) WAIT: WAIT UNTIL PNEXT IS EQUAL TO THE CURRENT TIME BEFORE 
*}+GOING TO STATE 1
*
* ARGUMENTS: M: CURRENT TIME
*
*VALUE: 0 WAS IN STATE ONE
*
*SIDE EFFECTS:}"NONE
*
*LEVEL: -
*
*SUBROUTINES CALLED: WKOL
*

574:}"GPR:}#Z _ Q _ PLINE, GOTO GPR1 IF ODD, SETA
.SSP = 56}#55,54,53,51
.MS = 30}#62,61
.TSPY = 1}#45
.LQY = 1}#75
.LZY = 1}#77
.MC = 25}#5,3,1
.B = 600}$9,10,
CHECKBIT IS 30}#
}'
575:}"M _ XLINE, Q _ Q LCY 1
.BR = 10}#82
.BL = 2}#80
.SSP = 4}#54
.MS = 1}#65
.TSPY = 1}#45
.LMY = 1}#73
.LQX = 1}#74
}'
576:}"GOTO GPREND ON Z - M>0, M _ MTAA, RESETA
.BR = 4}#83
.BL = 13}#81,80,78
.SSP = 1}#56
.MS = 31}#65,62,61
.LOC = 1}#50
.TSPY = 1}#45
.TAX = 1}#49
.LMY = 1}#73
.MC = 6}#4,3
.B = 603}$9,10,16,17,
CHECKBIT IS 30}#
}'
577:}"FETCH R0_M + Q MRG AWT/1B4
.BR = 2}#84
.BL = 4}#79
.MS = 44}#63,60
.TCX = 1}#43
.TXW = 1}#47
.TAX = 1}#49
.LR0 = 1}#58
.C = 2}#40,

600:}"GPR1:}"PLINE _ Z + 1, Q _ MSK3*TWO16, RETURN IF ASET
.MCONT = 2}#6
.BR = 4}#83
.BL = 10}#78
.SSP = 56}#55,54,53,51
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.MC = 33}#5,4,2,1
.C = 3600000}#22,23,24,25,
CHECKBIT IS 42}#
}'
601:}"RETURN ON M AND Q=0, Q _ TWO16, SETA
.MCONT = 2}#6
.BR = 10}#82
.MS = 30}#62,61
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.MC = 2}#4
.C = 200000}#25,
}'
602:}"GOTO 1604B, M _ M - Q, STORE, Z _ -1
.BR = 15}#85,83,82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.MC = 20}#1,
.B = 1604}$8,9,10,15,
.C = -1}#18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,
CHECKBIT IS 56}#
*NOTHING TO DO SO BUMP IDLE COUNT IF A RESET

603:}"GPREND:}%R0 _ IDLCNT, RETURN IF ASET
.MCONT = 2}#6
.TCX = 1}#43
.TXW = 1}#47
.LR0 = 1}#58
.MC = 33}#5,4,2,1
.VCYP = 1}#86
.C = 65}#36,37,39,41,
}'
604:}"M _ M + 1,}"RETURN
.MCONT = 2}#6
.BR = 10}#82
.BL = 4}#79
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 1}#5
*

*
*GPRUPDATE: CALLED EACH 1/2 SECOND TO REINITIALIZE PLINE
*
* ARGUMENTS:
*}'Z: XLINE (SET UP BY GNR)
*}'M: TIME OF INTERRUPT
*
*VALUE: NONE
*
*LEVEL: -
*SUBROUTINES CALLED: NONE
*

605:}"GPRUPDATE:}$Z _ PLINE, Q _ SEC1H
.SSP = 56}#55,54,53,51
.TCX = 1}#43
.TSPY = 1}#45
.LQX = 1}#74
.LZY = 1}#77
.C = 141520}#26,27,32,33,35,37,
CHECKBIT IS 87}#
}'
606:}"PLINE _ 0
.SSP = 56}#55,54,53,51
.LSPX = 1}#59
}'
607:}"NCI _ M + Q
.BR = 2}#84
.BL = 4}#79
.SSP = 40}#51
.TAX = 1}#49
.LSPX = 1}#59
}'
610:}"GOTO GNRFIN ON Z = 0, FETCH R0_PROB
.BR = 4}#83
.BL = 10}#78
.MS = 44}#63,60
.TCY = 1}#44
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.MC = 2}#4
.B = 563}$9,11,12,13,16,17,
.C = 70}#36,37,38,
CHECKBIT IS 56}#
}'
611:}"M _ M + 1, STORE, GOTO GNRFIN
.BR = 10}#82
.BL = 4}#79
.MS = 42}#64,60
.LOC = 1}#50
.TAX = 1}#49
.LMX = 1}#72
.MC = 20}#1
.B = 563}$9,11,12,13,16,17,
CHECKBIT IS 30}#
*

*
*GRP: GET READ POINTER
*
*GRP FINDS MCTA MOD 2 =1 DESIRABLE
*
* ARGUMENTS: NONE
*
*IMPLICIT: ASSUMES THAT GLE HAS BEEN CALLED
*
*VALUE: NONE
*
*SIDE EFFECTS: RWORD, RCP, RTCE1, RCPEND, RCNT AND RBUF ARE SET UP. PRP 
* WORRYS ABOUT CCNT
*
*LEVEL: -
*
*SUBROUTINES CALLED: IRCH
*
*NMR: 2
*
***}$HFETCH MTCE+DISP(RCPF);

612:}"GRP:}#HFETCH R0_MTCE, Q _}"- MSK15*TWO0-1
.RRN = 1}#68
.MS = 45}#65,63,60
.TCX = 1}#43
.THY = 1}#46
.TYW = 1}#48
.LQX = 1}#74
.LR0 = 1}#58
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 87}#
}'
613:}"RTCE1 _ M AND Q, R0 _ R0 + 1
.BR = 10}#82
.SSP = 73}#56,55,53,52,51
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.TAX = 1}#49
.LR0 = 1}#58
.LSPX = 1}#59
CHECKBIT IS 87}#
*KNOW RTCE1 HAS RCP PART =0
}'
614:}"GOTO GRP2 ON M AND NOT Q=0, Z _ BUF0
.BR = 10}#82
.BL = 14}#79,78
.SSP = 65}#56,54,52,51
.TSPY = 1}#45
.TAX = 1}#49
.LZY = 1}#77
.MC = 2}#4
.B = 620}$9,10,13,
CHECKBIT IS 30}#
}'
615:}"VR _ M AND NOT Q + Z, FETCH
.BR = 4}#83
.BL = 14}#79,78
.MS = 44}#63,60
.TXW = 1}#47
.TAX = 1}#49
.LRN = 6}#70,69
}'
616:}"Q _ M AND NOT Q + Z, Z _ LNKB, DGOTO IRCH
.BR = 4}#83
.BL = 14}#79,78
.TCY = 1}#44
.TAX = 1}#49
.LQX = 1}#74
.LZY = 1}#77
.MC = 1}#5
.DGO = 1}#87
.B = 704}$9,10,11,15,
.C = 713}#33,34,35,38,40,41,
}'
617:}"M _ VR
.RRN = 6}#67,66
.THY = 1}#46
.LMY = 1}#73
.VCYP = 1}#86
*NO CHARACTERS IN LINE READ FROM A NULL CHARACTER SOURCE

620:}"GRP2:}"M _ Q _}"BUF0 MRG ZRB, DGOTO IRCH
.SSP = 65}#56,54,52,51
.TCY = 1}#44
.TSPY = 1}#45
.LMY = 1}#73
.LQY = 1}#75
.MC = 20}#1,
.B = 704}$9,10,11,15,
.C = 1}#41,
.DGO = 1}'87
}'
621:}"Z _ ABORT
.TCX = 1}#43
.LZX = 1}#76
.VCYP = 1}#86
.C = 13}#38,40,41,
CHECKBIT IS 87}#
*

*
*GWP: GET WRITE POINTER
*
*THIS SUBROUTINE SETS UP AN INPUT LINE SO THAT WCH WHEN CALLED WILL
*STORE CHARACTERS INTO THAT LINE
*
* ARGUMENTS: NONE
* IMPLICIT: ASSUMES THAT GLE HAS BEEN CALLED
*
*VALUE: NONE
*
*SIDE EFFECTS: WWORD, WCP, WTCE2, , AND WBUF ARE SET UP.}"PWP WORRIES AB
* OUT CCNT
*
*
*SUBROUTINES CALLED: IWCH
*
*KNOW ABCNT, IBCNT AND WCP ARE SINGLE CYCLE FIELDS AND WCP AND ABCNT ARE
* ALL OF ONE WORD.
*LEVEL: -
*
*NMR: 1(MAX 5)
*

622:}"GWP:}#Z _ MTCE, Q _ - MSK15*TWO0-1
.RRN = 1}#68
.TCX = 1}#43
.THY = 1}#46
.LQX = 1}#74
.LZY = 1}#77
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 87}#
}'
623:}"FETCH R0_Z + WCPF/1B4, Z _ BUF0
.BR = 4}#83
.BL = 10}#78
.SSP = 65}#56,54,52,51
.MS = 44}#63,60
.LOC = 1}#50
.TSPY = 1}#45
.TXW = 1}#47
.TAX = 1}#49
.LZY = 1}#77
.LR0 = 1}#58
CHECKBIT IS 87}#
*KNOW WCTE2 HAS ABCNT ON LEFT, AND 0 ON RIGHT
}'
624:}"WTCE2 _ M AND Q, DGOTO IWCH
.BR = 10}#82
.SSP = 15}#56,54,53
.TAX = 1}#49
.LSPX = 1}#59
.MC = 1}#5
.DGO = 1}#87
.B = 710}$9,10,11,14,
CHECKBIT IS 30}#
}'
625:}"Q _ M AND NOT Q + Z, Z _ GAB, GOTO * + 1 IF LB=0
.BR = 4}#83
.BL = 14}#79,78
.TCY = 1}#44
.TAX = 1}#49
.LQX = 1}#74
.LZY = 1}#77
.MC = 22}#4,1
.B = 626}$9,10,13,15,16,
.C = 452}#33,36,38,40,
CHECKBIT IS 56}#
*NO CHARACTERS IN LINE, GET BUFFER , AND SET READ POINTER

626:}"GWPZ: CALL ABORT ON Z _ AVB < 0
.MCONT = 1}#7
.SSP = 52}#55,53,51
.TSPY = 1}#45
.LZY = 1}#77
.MC = 10}#2
.B = 13}$14,16,17,
CHECKBIT IS 30}#
}'
627:}"M _ LINE
.SSP = 21}#56,52
.TSPY = 1}#45
.LMY = 1}#73
CHECKBIT IS 87}#
}'
630:}"AVB _ -1, Q _ 377B
.BR = 10}#82
.BL = 7}#81,80,79
.SSP = 52}#55,53,51
.TCY = 1}#44
.TAX = 1}#49
.LQY = 1}#75
.LSPX = 1}#59
.C = 377}#34,35,36,37,38,39,40,41,
}'
631:}"M _ M AND Q LCY 16, Q _ BUF0 MRG STFLAG
.BR = 10}#82
.SSP = 65}#56,54,52,51
.MS = 7}#65,64,63
.TCY = 1}#44
.TSPY = 1}#45
.LMX = 1}#72
.LQY = 1}#75
.C = -40000000}#18,
}'
632:}"STORE R0_VR _ Z +Q, Q _ MTCE
.RRN = 1}#68
.BR = 4}#83
.BL = 2}#80
.MS = 42}#64,60
.THY = 1}#46
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LRN = 6}#70,69
.LR0 = 1}#58
CHECKBIT IS 87}#
}'
633:}"FETCH R0_Q + RCPF/1B4, Q _ - MSK15*TWO0-1
.BR = 10}#82
.BL = 2}#80
.MS = 44}#63,60
.TCY = 1}#44
.TXW = 1}#47
.TAX = 1}#49
.LQY = 1}#75
.LR0 = 1}#58
.VCYP = 1}#86
.C = -200000}#18,19,20,21,22,23,24,25,
CHECKBIT IS 87}#
}'
634:}"BFLAG_4B7
.SSP = 16}#55,54,53
.TCX = 1}#43
.LSPX = 1}#59
.C = -40000000}#18,
CHECKBIT IS 87}#
*STORE READ POINTER
}'
635:}"M _ M AND Q + Z AND NOT Q + 1, Z _ GAB, STORE, DGOTO IWCH
.BR = 14}#83,82
.MS = 42}#64,60
.LOC = 1}#50
.TCY = 1}#44
.TAX = 1}#49
.LMX = 1}#72
.LZY = 1}#77
.MC = 20}#1
.DGO = 1}#87
.B = 710}$9,10,11,14,
.C = 452}#33,36,38,40,
*STORE ZERO IN FIRST WORD OF BUFFER (ZEROTH WORD IS LINK)
}'
636:}"M _ 0, STORE R0_Q _ VR+1
.RRN = 6}#67,66
.MS = 42}#64,60
.IHR = 1}#42
.THY = 1}#46
.TYW = 1}#48
.LMX = 1}#72
.LQY = 1}#75
.LR0 = 1}#58
.VCYP = 1}#86
*
