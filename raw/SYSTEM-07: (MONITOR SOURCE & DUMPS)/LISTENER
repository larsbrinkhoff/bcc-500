}'COMMON}$SYSCALLS;

* MCALL DECLARATIONS

}(MACRO}%ARBMC _ UNKNOWN MONITOR;
}'MACRO}%INTMC _ INTEGER MONITOR;
}'MACRO}%STMC _ STRING MONITOR;
}'MACRO}%LNMC _ LONG MONITOR;
}'MACRO}%LNLNMC _ LONGLONG MONITOR;

}(INTMC}%CREATE'MIB _ 190;
}'ARBMC}%READ'MIBOB'INDEX _ 0;
}'ARBMC}%READ'MIBOB'NAME _ 1;
}'ARBMC}%SET'MIBOB'NAME _ 2;
}'ARBMC}%SET'MIBOB'ACCESS _ 3;
}'ARBMC}%SET'LOCK'LIST _ 4;
}'ARBMC}%DELETE'MIBOB _ 5;
}'INTMC}%CREATE'MIBOB _ 6;
}'ARBMC}%SET'MIB'ACCESS _ 10;
}'INTMC}%READ'MIB'ACCESS _ 11;
}'ARBMC}%SET'MIBOB'VALUE _ 12;
}'INTMC}%COPY'MIBOB _ 14;* UNIMPLEMENTED
}'ARBMC}%SET'NO'CHARGE _ 15;*** ???
}'INTMC}%READ'MIB'SPACE _ 16;
}'ARBMC}%SET'REF'DATE _ 18;*** ???
}'ARBMC}%SET'DURABILITY _ 28;*** ???

}(INTMC}%MOPEN'FILE _ 19;
}'ARBMC}%MREAD'OFT _ 20;
}'ARBMC}%SET'OFT'AL _ 21;
}'INTMC}%MSET'OFT'CL _ 22;
}'ARBMC}%SET'FILE'LENGTH _ 23;* IMPROVE THIS FOR UTS
}'INTMC}%CR'FILE'PAGE _ 24;
}'INTMC}%DEL'FILE'PAGE _ 25;
}'INTMC}%NEXT'FILE'PAGE _ 26;
}'ARBMC}%MOVE'PAGE'PMT _ 27;

}(INTMC}%ACQUIRE'PMT _ 50;
}'ARBMC}%NEW'PMT'PAGE _ 51;
}'ARBMC}%CLEAR'PMT _ 53;
}'ARBMC}%DELETE'PMT _ 54;
}'ARBMC}%SET'PMT'AL _ 55;
}'ARBMC}%SET'PMT'CL _ 56;
}'ARBMC}%SET'PMT'RO _ 57;
}'ARBMC}%READ'PMT _ 58;
}(ARBMC}%PUT'PAGE'DWS _ 65;
}'ARBMC}%PUT'PAGE'CWS _ 66;
}'INTMC}%DEL'PAGE'DWS _ 67;
}'INTMC}%DEL'PAGE'CWS _ 68;
}'INTMC}%READ'LWS _ 70;
}'ARBMC}%SET'LWS _ 71;

}(INTMC}%MCREATE'SP _ 90;
}'ARBMC}%MDESTROY'SP _ 91;
}'ARBMC}%MREAD'SPT _ 95;
}'ARBMC}%READ'SPCS _ 96;
}'INTMC}%MRD'SPT'FIELD _ 97;
}'ARBMC}%MST'SPT'FIELD _ 98;
}'ARBMC}%READ'MAP _ 99;
}'ARBMC}%SET'MAP _ 100;
}'INTMC}%READ'MAP'BYTE _ 101;
}'ARBMC}%SET'MAP'BYTE _ 102;
}'INTMC}%READ'SPS'PARAM _ 106;

}(ARBMC}%SP'CALL _ 111;
}'ARBMC}%SP'JUMP _ 112;
}'ARBMC}%SP'TRAP _ 113;
}'ARBMC}%TRAP'RETURN _ 114;
}'ARBMC}%SP'BRANCH _ 115;
}'ARBMC}%SP'RETURN _ 116;
}'ARBMC}%JUMP'RETURN _ 117;
}'ARBMC}%MARK'CALL _ 118;
}'ARBMC}%DELETE'CALL _ 119;
}'ARBMC}%MODIFY'CALL _ 120;

}(INTMC}%COPY'PMT'PROC _ 130;
}'INTMC}%ACTIVATE'PROC _ 132;
}'ARBMC}%TRANSFER'TERM _ 133;
}'ARBMC}%MAKE'DORMANT _ 134;
}'ARBMC}%INIT'PROC'PAGE _ 135;
}'ARBMC}%INIT'PROC'MAP _ 136;
}'ARBMC}%INIT'SPT'MAP _ 137;
}'INTMC}%READ'PROC'PARAM _ 211;*** ???

}(ARBMC}%QUIT'BLOCK _ 164;
}'INTMC}%GET'INT'NO _ 165;
}'ARBMC}%READ'ICT _ 166;
}'ARBMC}%BLOCK _ 170;
}'ARBMC}%SET'ICT _ 172;
}'ARBMC}%SET'ICT'CL _ 173;
}'INTMC}%ACQUIRE'ICT _ 174;
}(ARBMC}%SET'LINE'FIELD _ 180;
}'ARBMC}%READ'LINE'TABLE _ 181;
}'ARBMC}%READ'STRING'BRK _ 182;
}'ARBMC}%WRITE'STRING _ 183;
}'ARBMC}%READ'WRITE'CM _ 255;

}(LNMC}&READ'CLOCK _ 210;
}'INTMC}%READ'PR'PARAM _ 211;
* UCALL DECLARATIONS

}(MACRO}%ARBUC _ UNKNOWN UTILITY;
}'MACRO}%INTUC _ INTEGER UTILITY;
}'MACRO}%CHRUC _ CHARACTER UTILITY;
}'MACRO}%STUC _ STRING UTILITY;
}'MACRO}%LNUC _ LONG UTILITY;

}(ARBUC}%BREAK'POINT _ 0;*}-UCALL FOR DEBUGGING PROGRAMS
}'STUC}&ERRORMSG _ 1;*}0RETURN SYSTEM ERROR MESSAGE
}'STUC}&GET'PARAM _ 2;*}/STRIP PARAMETER FROM STRING
}'STUC}&GET'COM'LINE _ 3;*},GET CURRENT COMMAND LINE FROM UTS
}'INTUC}%ABRV'LKP _ 4;*}0LOOK UP ABBREVIATED NAME IN STARY
}'INTUC}%CON'ABRV'LKP _ 5;*},CONTINUE SAME IN NEW STARY

}(ARBUC}%NAME'SEARCH _ 10;*},CONVERT FILE ST TO UTS NAME
}'ARBUC}%SPECIAL'SEARCH _ 11;*})VARIATION OF ABOVE
}'INTUC}%CONV'NAME _ 12;*}.CONVERT FROM UTS TO MON FILE NAME
}'ARBUC}%SPREAD'NAME _ 13;*},SPLIT FILE NAME STRING INTO COMP.
}'ARBUC}%READ'MIBOB'VALUE _ 14;*}'READ 'VALUE' OF MIB OBJECT
}'ARBUC}%DELETE'FILE _ 15;*},DELETE FILE AND CONTENTS
}'INTUC}%OPEN'FILE _ 16;*}.OPEN FILE W/WO LOCKING
}'ARBUC}%CLOSE'FILE _ 17;*}-CLOSE AND UNLOCK FILE
}'ARBUC}%READ'OFT _ 18;*}/READ OFT
}'INTUC}%READ'OFT'FIELD _ 19;*})READ OFT FIELD
}'ARBUC}%SET'OFT'CL _ 20;*}-SET OFT CONTROL LOCK

}(INTUC}%CREATE'SSP _ 30;*}-CREATE SUBSIDIARY SUB-PROCESS
}'INTUC}%CREATE'PSP _ 31;*}-CREATE PARALLEL SUB-PROCESS
}'ARBUC}%ATTACH _ 32;*}1ATTACH PI FILE TO SUB-PROCESS
}'ARBUC}%DESTROY'SP _ 33;*}-DESTROY SUB-PROCESSES
}'ARBUC}%READ'SPT _ 34;*}/READ SPT
}'INTUC}%READ'SPT'FIELD _ 35;*})READ SPT FIELD
}'ARBUC}%SET'SPT'FIELD _ 36;*}*SET SPT FIELD
}'STUC}&READ'SPNAME _ 37;*},READ SUB-PROC NAME
}'ARBUC}%SET'SPNAME _ 38;*}-SET SUB-PROC NAME
}'INTUC}%SPNAME'SEARCH _39;*}+LOOK UP SP NAME

}(INTUC}%CREATE'CIOS _ 40;*},CREATE CONTROL I/O STREAM
}'INTUC}%READ'CIOS'FIELD _ 41;*}(READ CIOS FIELD
}'ARBUC}%SET'CIOS'FIELD _ 42;*})SET (SOME) CIOS FIELDS
}'ARBUC}%SET'CIOS'INPUT _ 43;*})SET UP FOR INPUT
}'ARBUC}%SET'CIOS'OUTPUT _ 44;*}(SET UP FOR OUTPUT

}(ARBUC}%PRINT'STRING _ 45;*}+WRITE STRING ON CIOS
}'ARBUC}%PRINT'CHAR _ 46;*}-WRITE (= BUFFER) CHAR ON CIOS
}'ARBUC}%OUTPUT'CHAR _ 47;*},OUTPUT CHAR (& BUFFER)
}'STUC}&READ'LINE _ 48;*}.READ NEXT INPUT LINE
}'STUC}&EDIT'LINE _ 49;*}.EDIT CURRENT LINE
}'CHRUC}%READ'CHAR _ 50;*}.READ NEXT CHARACTER
}'ARBUC}%BLOCK'OB'EMPTY _ 51;*})WAIT UNTIL OUT BUFFER IS EMPTY
}(STUC}&READ'UP'ITEM _ 60;*}+READ ITEM FROM USER PROFILE
}'STUC}&READ'UP'NAMES _ 61;*}*READ NAMES OF UP ITEMS
}'ARBUC}%SET'UP'ITEM _ 62;*},SET (CREATE) VALUE OF UP ITEM
}'ARBUC}%SET'UP'ACCESS _ 63;*}*SET ACCESS TO UP ITEM
}'LNUC}&FIND'MIB _ 64;*}/CONVERT USER NAME/NUMBER TO MIB ADDR
}'ARBUC}%CREATE'UP'ENTRY _ 65;*}(CREATE USER/UP ENTRY
}'ARBUC}%DELETE'UP'ENTRY _ 66;*}(DELETE USER/UP ENTRY

}'END;

}'COMMON}$DECDECS;
*
* SHORT DECLARATION MACROS FOR SPL
*

}(MACRO}%INT _ DECLARE INTEGER;
}'MACRO}%PTR _ DECLARE POINTER;
}'MACRO}%CHR _ DECLARE CHARACTER;
}'MACRO}%ST}"_ DECLARE STRING;
}'MACRO}%LN}"_ DECLARE LONG;
}'MACRO}%LNLN _ DECLARE LONGLONG;
}'MACRO}%LB}"_ DECLARE LABEL;

}(MACRO}%UINFL _ DECLARE INTEGER FIELD;
}'MACRO}%SINFL _ DECLARE INTEGER SIGNED FIELD;
}'MACRO}%PTRFL _ DECLARE POINTER FIELD;
}'MACRO}%CHRFL _ DECLARE CHARACTER FIELD;
}'MACRO}%STFL}"_ DECLARE STRING FIELD;
}'MACRO}%LNFL}"_ DECLARE LONG FIELD;
}'MACRO}%FNFL}"_ DECLARE FUNCTION FIELD;

}(MACRO}%INTARY _ DECLARE INTEGER ARRAY;
}'MACRO}%PTRARY _ DECLARE POINTER ARRAY;
}'MACRO}%CHRARY _ DECLARE CHARACTER ARRAY;
}'MACRO}%STARY}"_ DECLARE STRING ARRAY;
}'MACRO}%LNARY}"_ DECLARE LONG ARRAY;
}'MACRO}%LBARY}"_ DECLARE LABEL ARRAY;
}'MACRO}%FLARY _ DECLARE FIELD ARRAY;
}'MACRO}%FNARY _ DECLARE FUNCTION ARRAY;

}(MACRO}%INTARY1 _ DECLARE INTEGER ARRAYONE;
}'MACRO}%PTRARY1 _ DECLARE POINTER ARRAYONE;

}(MACRO}%INTFN _ DECLARE INTEGER FUNCTION;

}(MACRO}%ARBENT _ UNKNOWN ENTRY;
}'MACRO}%INTENT _ INTEGER ENTRY;
}'MACRO}%PTRENT _ POINTER ENTRY;
}'MACRO}%CHRENT _ CHARACTER ENTRY;
}'MACRO}%STENT _ STRING ENTRY;
}'MACRO}%LNENT _ LONG ENTRY;
}'MACRO}%ARYENT _ ARRAY ENTRY;
}(MACRO}%ARBEXT _ DECLARE UNKNOWN EXTERNAL;
}'MACRO}%INTEXT _ DECLARE INTEGER EXTERNAL;
}'MACRO}%PTREXT _ DECLARE POINTER EXTERNAL;
}'MACRO}%CHREXT _ DECLARE CHARACTER EXTERNAL;
}'MACRO}%STEXT _ DECLARE STRING EXTERNAL;
}'MACRO}%LNEXT _ DECLARE LONG EXTERNAL;
}'MACRO}%ARYEXT _ DECLARE ARRAY EXTERNAL;


}(MACRO}%LTABLE(F) _ F$FLDWDSP+1;
}'SINFL}%FLDWDSP(0: 13,23);

* LENGTHS OF NAMES
}(INT}'LMN _ 4, LTY _ 1, LFN _ LMN+LTY;
}'INT}'NBY _ 4, LNCH _ 24/NBY, NMNCH _ LMN*NBY,
}(NTYCH _ LTY*NBY, NFNCH _ LFN*NBY, NCMCH _ 90;

}'END;

}'COMMON}$MACHINE'DECS; INCLUDE DECDECS;
*
* DECLARATIONS FOR MACHINE-DEPENDENT PROGRAMMING
*

* LOW-G DEFINITIONS
}(PTR}'STACK'PTR = G'[2], STACK'LIM = G'[3],
}(RTRAP'PARAM = G'[5], RTRAP'LOC = G'[4];

* FIELDS IN BLL DESCRIPTOR
}(PTRFL}%BRDPC(0: 6,23), BRDLR(1: 6,23);

* STATE DEFINTIONS
}(INT}'PSTLOC _ 0, ASTLOC _ 1, BSTLOC _ 2, CSTLOC _ 3, DSTLOC _ 4,
}(XSTLOC _ 5, LSTLOC _ 6, GSTLOC _ 7, ESTLOC _ 8, SSTLOC _ 9,
}(LSTATE _ 10;

* FIELDS FOR TRAP DEFINITIONS
}(UINFL}%ADDR(0: 6,23), SP'TNO(-2), SP'TPAR(-1), BLL'CLASS(0: 3,5),
}(UTSE'CLASS(0: 0,1), UTSE'SPTNO(0: 1,5), UTSE'RTNO(0: 2,5);

}'END;

}'COMMON}$COMDECS; INCLUDE DECDECS, SYSCALLS;
*
* COMMON DECLARATIONS FOR CODING
*

* GENERALLY USEFUL MACROS

}(MACRO}%PTDN(N) _ PTNO(N, 4B7, 10);
}'MACRO}%PTON(N) _ PTNO(N, 4B7, 8);
}'MACRO}%NAMSET(S,L,A,B) _ SETUP(S,L,A,B) & S$WP _ S$EP;
}'MACRO}%EMPTY(S) _ LNGDES(S$RP, S$WP) <= 0;*** WP=RP OR WP=BP?
}'MACRO}%REPEAT _ WHILE 1 DO;
}'MACRO}%ENDRPT _ ENDFOR;
}'MACRO}%FDISP(F) _ RUNTIME'FAILURE() IF F$FLDSTB # 0 AND
}(F$FLDSIZE # 24 ELSE F$FLDWDSP;
}'UINFL}%FLDSTB(0: 8,12), FLDSIZE(0: 3,7);

* ERROR MACROS
}(MACRO}%NC'PUNT _ RUNTIME'FAILURE();* FOR NORMAL CALLS (EXPRESSIONS)
}'MACRO}%LF'PUNT _ VALUE NC'PUNT;* FOR LIBRARY FUNCTIONS
}'MACRO}%SF'PUNT _ LF'PUNT: ERCODE, ERMSNO;* FOR SYSTEM CALLS

* PARAMETRIC CHARACTER DEFINITIONS
}(CHR}'SCHERALD _ '>' /* SUB-COMMAND HERALD */,
}(BELCH _ 303B /* BELL */, NULCH _ 300B /* NULL */,
}(NLCH _ 307B /* NEW LINE */,
}(SQTCH _ '&'' /* SINGLE QUOTE */,
}(DQTCH _ '"' /* DOUBLE QUOTE */,
}(SEPCH _ '-' /* SEPARATOR */;

* STRING POINTER FIELDS
}(UINFL}%BP(0) /* BEGINNING */, RP(1) /* READER */,
}(WP(2) /* WRITER */, EP(3) /* END */;
* CHARACTER FIELDS
}(UINFL CH0(0: 0,7), CH1(0: 8,15), CH2(0: 16,23);
* BEAD LENGTH FIELD
}(UINFL}%LENGF(-1: 6, 23);

* FIELDS IN UTILITY FILE NAME
}(LNFL}&UFNUN(0) /* USER NUMBER/DISK ADDRESS */;
}'UINFL}%UFNEN(2) /* OBJECT ENTRY-NUMBER */,
}(UFNFN(3) /* FILE NAME */, UFNMN(3) /* MAIN NAME */,
}(UFNTY(3+LMN) /* TYPE WORD */;

* FIELDS FOR UNO/DKA
}(UINFL}%UNDKUN(0),
}(UNDKDK(1);

}(INT}'LUFN _ LTABLE(UFNTY);* LENGTH OF UTILITY FILE:NAME

}(INT}'CB'PMT _ 1;* PMT ADDRESS OF CONTEXT BLOCK
* DECLARATIONS OF COMMON FUNCTIONS

* SPL RUNTIME FUNCTIONS
*ARBEXT}$SCOPY, APPEND, CNS, RUNTIME'FAILURE;
}'PTREXT}$SBASE; INTEXT ARRAYUB, ARRAYLB;* STEXT ST'DESC;
}'LNEXT}%LONG'ADD, LONG'SUB; INTEXT LONG'LE, LONG'LT;

* STORAGE ALLOCATOR
}(PTREXT}$STKMAKE;*, MAKE, SETZONE;
*ARBEXT}$STORINIT, SELZONE, EXTZONE, FREE, FREEZONE;

}'END;

}'COMMON}$UQNDECS; INCLUDE DECDECS;

* UNIQUE NAME FIELDS
}(UINFL}%UQNTY(0: 0,1), UQNPMB(0: 0,0), UQNLFB(0: 1,1),
}(UQNOWN(0: 2,17), UQNHFN(0: 18,23);
}'UINFL}%UQNLFN(1: 0,12), UQNLPN(1: 13,23),
}(UQNSFN(1: 0,15), UQNSPN(1: 16,23);

}'END;

}'COMMON}$BFSDECS; INCLUDE UQNDECS;

* OBJECT TYPE-CODES
}(INT}'SIBSFCD _ 0, SIBLFCD _ 1, SIBPRCD _ 2, SIBAKCD _ 3,
}(SIBRSCD _ 4, SIBOWCD _ 5, SIBFRCD _ 6,
}(SIBSCCD _ 14, SIBLKCD _ 15;

* ACCESS KEY FIELDS
}(UINFL}%ACK0(0), ACK1(1:0,7), ACKUN(1:8,23);
}'INT}'NORM'FIL'AC _ 0357B;* P(NO) F(RW) O(OW) - NORMAL ACCESS

}'END;

}'COMMON}$OFTDECS; INCLUDE BFSDECS;

* FIELDS IN OFT
}(UINFL}%OFTUB(0: 0,0), OFTRB(0: 1,1), OFTWB(0: 2,2), OFTXB(0: 3,3),
}(OFTOB(0: 4,4), OFTMIX(0: 6,12),
}(OFTAL(0: 15,23);* BETTER CHECK THIS WITH REVISION

}(UINFL}%OFTCL(1: 15,23),
}(OFTOT(2: 0,3), OFTPIB(2: 8,15), OFTPMIB(2: 16,23);
}'LNFL}&OFTUN(3);

}(INT}'NOFT _ 16, LOFT _ LTABLE(OFTUN)+1;

}'END;

}'COMMON}$SIBDECS; INCLUDE BFSDECS;
*
* DECLARATIONS FOR SIB
*

* FIELDS IN SIB NAME (SIBN)
}(UINFL}%SIBNOT(0: 1,4),
}(SIBNLN(0: 10,23),
}(SIBNAA(1: 1,4), SIBNEN(1: 10,23),
}(SIBNMN(2), SIBNFN(2);
}'UINFL}%SIBNTY(SIBNMN$FLDWDSP+LMN),
}(SIBNLL(SIBNTY$FLDWDSP+1: 4,11),
}(SIBNAC(SIBNLL$FLDWDSP: 12,23);
}'UINFL}*SIBNPA(SIBNAC$FLDWDSP: 12,15),
}(SIBNFA(SIBNAC$FLDWDSP: 16,19),
}(SIBNOA(SIBNAC$FLDWDSP: 20,23);

}(INT}'LSIBN _ LTABLE(SIBNOA);* LENGTH OF SIBN TABLE

* FIELDS IN SIB VALUE (SIBV)
}(UINFL}%SIBVOT(0: 1,4),
}(SIBVLN(0: 10,23),
}(SIBVAA(1: 1,4), SIBVEN(1: 10,23);
}'LNFL}&SIBFLUN(2);
}'UINFL}%SIBFLLEN(4),
}(SIBFLWD(5),
}(SIBFLRD(6);

}(LNFL}&SIBLKUN(2);
}'UINFL}%SIBLKEN(4),
}(SIBLKMN(5),
}(SIBLKTY(5+LMN);

}(INT}'LSIBFL _ LTABLE(SIBFLRD), LSIBLK _ LTABLE(SIBLKTY),
}(LSIBV _ (LSIBFL IF LSIBFL > LSIBLK ELSE LSIBLK);
}'INT}'MLSIB _ (LSIBV IF LSIBV > LSIBN ELSE LSIBN);

}'END;

}'COMMON}$PMTDECS; INCLUDE UQNDECS;

* FIELDS FOR PMT ENTRY
}(LNFL}&PMTUN(0);
}'UINFL}%PMTFL(2: 0,0), PMTDKA(2: 2,23),
}(PMTRO(3: 0,0), PMTAL(3: 3,11), PMTCL(3: 15,23);

}(INT}'NPMT _ 128;* NUMBER OF PMT ENTRIES
}'INT}'LPMT _ 5;* SIZE OF PMT ENTRY

}'END;

}'COMMON}$SPTDECS; INCLUDE DECDECS;

* FIELDS IN SPCS
}(UINFL}%SPCSNIS(0: 0,0), SPCSNIC(0: 1,1),
}(SPCSCSP(0: 2,5), SPCSPR(0: 6,23),
}(SPCS940M(1: 0,0), SPCSR0SP(1: 2,5), SPCSLR(1: 6,23),
}(SPCSR1SP(2: 2,5), SPCSGR(2: 6,23);
}'LNFL}&SPCSIT(3);
}'INT}'LSPCS _ LTABLE(SPCSIT) + 1;

}(INT}'NSPT _ 8;

}'END;

}'COMMON}$ATTACHDECS; INCLUDE DECDECS;
*
* DEFINITION OF ATTACH (PI) FILE HEADER
*
}(UINFL}%ATFMT(0), ATNP(1), ATMAP(3), ATMNM(38),
}(ATCUF(43), ATEP(44), ATEG(45);
}'UINFL}%BYTEC(0: 12,13), BYTEP(0: 16,23);

}(INT}'FMTCODE _ 0;* VALUE OF CURRENT FORMAT

}'END;

}'COMMON}$ICTDECS; INCLUDE DECDECS;

* FIELDS IN ICT
}(UINFL}%ICTSRC(0: 0,2) /* SOURCE */,
}(ICTACT(0: 3,5) /* ACTION */,
}(ICTSPEC(0: 6,10) /* SUB-PROCESS/TRAP */,
}(ICTBLK(0: 11,11) /* BLOCKING */,
}(ICTCL(0: 15,23) /* CONTROL LOCK */;
}'LNFL}&ICTTM(1);* REAL/COMPUTE TIME VALUE

}(INT}'NICT _ 24, LICT _ LTABLE(ICTTM) + 1;

* VALUES FOR SOURCE-ACTION-BLOCK PARAMETER OF SET'ICT
}(MACRO}%ICT'SAB(S, A, B) _ S @ ICTSRC V' A @ ICTACT V' B @ ICTBLK;
}'INT}'ICTNULCD _ ICT'SAB(0, 0, 0) /* NULL */,
}(ICTBLKCD _ ICT'SAB(1, 0, 1) /* BLOCKING */,
}(ICTTRPCD _ ICT'SAB(1, 2, 1) /* TRAP */,
}(ICTRTICD _ ICT'SAB(2, 1, 1) /* REAL-TIME INTERRUPR */;

}'END;

}'PROGRAM}#SCOPY; INCLUDE COMDECS;
}'PTR}'P; ST S, D; STFL A(0);

}(ARBENT}$SCOPY(STRING @P, S), FRETURN;
}'D _ P.A; SETS(D, 0,0); GOTO L;

}(ARBENT}$APPEND(STRING @P, S), FRETURN;
}'D _ P.A;

****}&CHECK STRING CHARACTER SIZES FOR COMPATABILITY
L:
}(REPEAT;}#WCI(GCI(S// VALUE P.WP _ D$WP & RETURN), D// FRETURN); ENDRPT;

}'END;

}'PROGRAM}#CNS; INCLUDE COMDECS;
}'INT}'N, F, R, T, I, D; PTR P; ST S, B(25); STFL A(0);

}(ARBENT}$CNS(N, STRING @P, F, R), FRETURN;

}(S _ P.A;
}'FRETURN IF R < 2 OR R > 36;
}'T _ (-N IF F >= 0 AND N < 0 ELSE N);
}'B$RP _ B$WP _ B$EP; I _ 0;
LP:}$.LDA T; .LSHD -23; .DIV R; .STA T; .STB D;
}'WCD(D +('0' IF D < 10 ELSE 'A'-10), B);
}'I _ I + 1; GOTO LP IF T # 0;
}'WCD('-', B) & I _ I + 1 IF F >= 0 AND N < 0;
}'F _ F A' 77B;
}'IF F = 0 DO;
}+F _ I;
}'ELSEIF F <= I DO;
}+B$RP _ INCDES(B$EP, -I);
}'ELSE DO;
}+WCI(' ', S// FRETURN) FOR I _ I + 1 TO F;
}'ENDIF;
}'WCI(D, S// FRETURN)
}(FOR D _ GCI(B// VALUE P.WP _ S$WP & RETURN) WHILE 1;

}'END;

}'PROGRAM}#CSN; INCLUDE COMDECS;
}'PTR}'P; INT R, F, D, N; ST S; STFL A(0);

}(INTENT}$CSN(STRING @P, R), FRETURN;

}(S _ P.A; FRETURN IF R < 2 OR R > 36;

}(IF D _ GCI(S// FRETURN) = '-' OR D = '+' DO;
}+F _ (1 IF D = '-' ELSE 0); D _ GCI(S// FRETURN);
}'ELSE DO;
}+F _ 0;
}'ENDIF;

}(D _ D - '0' IF D >= '0' AND D <= '9' ELSE
}(D _ D - 'A' IF D >= 'A' AND D <= 'Z' ELSE FRETURN;
}'FRETURN IF D >= R; N _ D;

}(FOR D _ GCI(S// Y) REPEAT;
}+D _ D - '0' IF D >= '0' AND D <= '9' ELSE
},D _ D - 'A' IF D >= 'A' AND D <= 'Z' ELSE GOTO X;
}+GOTO X IF D >= R; N _ N * R + D;
}'ENDRPT;

X:}&S$RP _ INCDES(S$RP, -1);
Y:}%P.RP _ S$RP; RETURN (-N IF F ELSE N);

}'END;

}'PROGRAM}#LONG'COMPARE; INCLUDE DECDECS;
*
* COMPARE LONG VALUES
*
}(DECLARE INTEGER FIELD W0(0);
}'PTR}'P, Q; INT N;

}(INTENT}$LONG'COMPARE(INTEGER @P, INTEGER @Q, N);

}(RETURN 1 IF P[N].W0 # Q[N].W0 FOR N _ N - 1 BY -1 TO 0;
}'RETURN 0;

}'END;

}'PROGRAM}#SBASE; INCLUDE COMDECS;
*
* FIND BASE ADDRESS OF WORD-ORIGINED STRING DESCRIPTOR
*
}(ST}(S;

}(PTRENT}$SBASE(S);
}'.LDA S$BP; .LDX 1; .ASP; .CXA;
}'.CMZ 3B6; .BNE L; .ETR 777777B; RETURN;
L:}%RUNTIME'FAILURE();

}'END;

}'PROGRAM}#ST'DESC; INCLUDE COMDECS;
}'INT}'N, S, O; PTR P; ST X;
}'STENT}%ST'DESC(N, P, S, O);

}(P _ MAKE(S *(N + 24 / S - 1)/ 24) IF P = 0;

}(IF S = 8 DO;
}+.LDA 44B6;
}'ELSEIF S = 6 DO;
}+.LDA 40B6;
}'ELSEIF S = 12 DO;
}+.LDA 50B6;
}'ELSEIF S = 24 DO;
}+.LDA 54B6;
}'ELSE DO;
}+RUNTIME'FAILURE();
}'ENDIF;

}(.IOR P; .XMA O; .LSHA 18; .IOR O; .LDX -1; .ASP; .CXA;
}'.STA X$BP; .STA X$RP; .STA X$WP; .LDX N; .ASP; .STX X$EP;
}'RETURN X;

}'END;

}'PROGRAM}#AR'DESC; INCLUDE COMDECS;
}'INT}'N, S, O; PTR P;
}'ARYENT}$AR'DESC(N, P, S, O);

}(N _ N - 1 IF O = 0;
}'RUNTIME'FAILURE() IF S > 63 OR S < 1 OR S > 3 AND N > 17777B OR
}(N > 377777B OR N < O OR O # 0 AND O # 1;

}(P _ MAKE((N + 1 IF O = 0 ELSE N)* S) IF P = 0;

}(.LDA S; .SUB 1; .ICP 2; .BGT R'[3]; .IOR 100B; .LSHA 6; .LSHA 11;
}'.IOR N; .CPZ O; .BEQ R'[2]; .IOR 1B7; .IOR 6B7; .CAB;
}'.LDA P; .IOR 4B6; .XAB; RETURN;

}'END;

}'PROGRAM}#ALENGTH; INCLUDE COMDECS;
*
* COMPUTE ARRAY BOUNDS
*
}(PTR}'A; UINFL ABW(0);
}'INTENT}$ARRAYUB(A);
}'.LDA A.ABW; .CMZ 2B6; .BNE R'[2]; .ETR 17777B;
}'.ETR 377777B; RETURN;

}(INTENT}$ARRAYLB(A);
}'.LDA A.ABW; .ETR 1B7; .ASHA -21; RETURN;

}'END;

}'PROGRAM}#LONG'ARITH; INCLUDE COMDECS;
*
* LONG ARITHMETIC/RELATIONALS
*
}(LN}(X, Y; UINFL W0(0), W1(1);

}(LNENT}%LONG'ADD(X, Y);* ADD
}'.LDA X$W1, ADD Y$W1, CAB;
}'.LDA X$W0, ADC Y$W0; RETURN;

}(LNENT}%LONG'SUB(X, Y);* SUBTRACT
}'.LDA X$W1, SUB Y$W1, CAB;
}'.LDA X$W0, SUC Y$W0; RETURN;

}(INTENT}$LONG'LE(X, Y);* LESS THAN OR EQUALS
}'RETURN (1 IF LONG'SUB(X, Y)$W0 <= 0 ELSE 0);

}(INTENT}$LONG'LT(X, Y);* LESS THAN
}'RETURN (1 IF LONG'SUB(X, Y)$W0 < 0 ELSE 0);

}'END;

}'COMMON ALLOC'DECS;

*
* SPL STORAGE ALLOCATOR
*

* THE BASIC STRUCTURE OF A STORAGE BLOCK IS AS IN THE OLD ALLOCATOR,
* I.E. THE WORD BEFORE THE 0'TH WORD OF A BLOCK CONTAINS THE LENGTH
* OF THE BLOCK (NUMBER OF INFORMATION WORDS +1), A FLAG IN BIT 0
* TO SAY THAT THE BLOCK IS FREE, AND A FLAG IN BIT 1 TO SAY THAT
* THE NEXT LOWER BLOCK IS FREE.
}(DECLARE FIELD HIDDEN(-1), HSIZE(-1: 6,23), HFREE(-1: 0,0),
}(HFTAG(-1: 1,1), HZTAG(-1: 2,2);
* FREE STORAGE COMES IN ZONES.}"A ZONE CONSISTS OF A ZONE HEADER
* AND A CHAIN OF EXTENSIONS.}"THE ZONE HEADER CONTAINS: THE BLOCK
* SIZE FOR THE ZONE (0 MEANS ALL SIZES ARE ALLOWABLE), THE OVERFLOW
* ROUTINE, THE EXTENSION LIST, AND THE FREE LIST ROVER.
}(DECLARE FIELD FEXT(0), FLIST(2), FUEXT(3), FUNCTION FIELD FOVX(1);
}'DECLARE PARAMETER FZHS_4;
* THE FEXT WORD IN EACH EXTENSION POINTS TO THE NEXT ONE.}"THIS CHAIN,
* IS TERMINATED BY A -1.}"THE FIRST TWO WORDS
* OF A FREE BLOCK ARE USED TO HOLD THE ADDRESS OF THE NEXT FREE
* BLOCK AND THE PREVIOUS FREE BLOCK.}"THIS LIST IS CIRCULAR.
}(DECLARE FIELD NBLK(0),PBLK(1);
* FOR FIXED-SIZE ZONES, THE ENTIRE FREE LIST AND THE HIDDEN WORDS
* ARE SET UP AT THE TIME AN EXTENSION IS CREATED.}"FOR VARIABLE-SIZED
* ZONES, AN EXTENSION IS SET UP AS A SINGLE FREE BLOCK WHICH IS
* SUBDIVIDED AS THE NEED ARISES.}"A FIRST-FIT STRATEGY WITH A "ROVER"
* IS USED FOR THE LATTER.}"BLOCKS BELOW A MINIMUM SIZE WILL NOT BE CREATED.
}(DECLARE PARAMETER MINSIZ_3;

}(DECLARE INFINITY'ZONE, CURRENT'ZONE;* ZONE VARIABLES FOR ALLOCATOR

}'END;

}'PROGRAM}#STKMAKE; INCLUDE ALLOC'DECS;
}'FIXED;
*
* ALLOCATE LOCAL (STACKED) STORAGE
*
}(DECLARE}#SP=G'[2], SL=G'[3], BLK, SIZE;

}(FUNCTION}"STKMAKE(SIZE);

}(RUNTIME'FAILURE() IF SP + SIZE >= SL;
}'SP _ (BLK _ SP + 1) + SIZE;
}'BLK.HIDDEN _ SIZE + 1;
}'BSET(BLK, 0, SIZE);
}'RETURN BLK;

}'END;

}'PROGRAM MAKE; INCLUDE ALLOC'DECS;
*
* ASSIGN BLOCK OF SIZE (A) IN ZONE (B)
*
}(DECLARE BLK,ROVER,RSIZE,EBLK,ROVEC;

}(FUNCTION MAKE(SIZE,ZONE);

}(ZONE _ CURRENT'ZONE IF ZONE = 0;
}'SIZE _ SIZE + 1;
}'GOTO MAKEOV IF ZONE.FLIST<0;
* VARIABLE-SIZED ZONE
}(ROVEC_ROVER_ZONE.FLIST;
MAKE1: RSIZE_ROVER.HSIZE;
}'IF RSIZE<SIZE+MINSIZ AND RSIZE#SIZE DO;
}+GOTO MAKE1 IF (ROVER_ROVER.NBLK)#ROVEC
},ELSE GOTO MAKEOV;
}'ENDIF;
}'EBLK_(BLK_ROVER)+ROVER.HSIZE;
}'EBLK.HFTAG_0;
}'IF ROVER.HSIZE=SIZE DO;
* EXACT FIT
},BLK.HFREE_0;
}+ZONE.FLIST _ RFB(ROVER, ZONE);
}'ELSE DO;
* SPLIT THE BLOCK
},BLK_EBLK-SIZE;
}+BLK.HIDDEN _ 1 @ HFTAG + SIZE;
}+BLK[-2]_-(ROVER.HSIZE_ROVER.HSIZE-SIZE);
}'ENDIF;
* COMMON EXIT
}(BSET(BLK, 0, SIZE - 1);
}'RETURN BLK;

* OVERFLOW
MAKEOV: BLK _ (ZONE.FOVX)(SIZE-1,ZONE); RETURN BLK;

}'END;

}'PROGRAM RFB; INCLUDE ALLOC'DECS;
}'FUNCTION RFB(RBLK, ZONE);
* SUBROUTINE TO REMOVE A BLOCK FROM THE FREELIST
}(IF RBLK.NBLK=RBLK DO;
}+RETURN ZONE.FLIST_-1;
}'ELSE DO;
}+RBLK.NBLK.PBLK_RBLK.PBLK;
}+RETURN RBLK.PBLK.NBLK_RBLK.NBLK;
}'ENDIF;

}'END;

}'PROGRAM STORINIT; INCLUDE ALLOC'DECS;
*
* SET UP ZONES
*

}(FUNCTION STORINIT(ZONE, SIZE), FRETURN;
}'(ZONE _ ZONE + 1).HIDDEN _ SIZE;
}'SETZONE(ZONE// FRETURN);
}'INFINITY'ZONE _ ZONE;

}(FUNCTION SELZONE(ZONE);
}'CURRENT'ZONE _ ZONE; RETURN;

}'END;

}'PROGRAM SETZONE; INCLUDE ALLOC'DECS;
*
* INITIALIZE ZONE
*
}(DECLARE FAREA, FUNCTION DUMBFUCN _ OFLOTRAP;

}(FUNCTION SETZONE(ZONE), FRETURN;
}'FRETURN IF ZONE.HSIZE<FZHS+MINSIZ+4;
}'ZONE.HZTAG _ 1;
}'ZONE.FOVX _ DUMBFUCN;
}'ZONE.FEXT_ZONE.FLIST_-1;
}'ZONE.FUEXT _ 0;
}'FAREA _ ZONE + (FZHS+1);
}'FAREA.HIDDEN_ZONE.HSIZE-(FZHS+1);
}'EXTZONE(FAREA, ZONE// VALUE RUNTIME'FAILURE());
}'RETURN ZONE;

}'END;

}'PROGRAM EXTZONE; INCLUDE ALLOC'DECS;
*
* ADD EXTENSION (B) TO ZONE (A)
*
}(DECLARE EEXT,EXB,FBLK;

}(FUNCTION EXTZONE(EXT, ZONE), FRETURN;
}'FRETURN IF EXT.HSIZE<MINSIZ+2;
}'EEXT_EXT+EXT.HSIZE;
}'EXT.FEXT_ZONE.FEXT;
}'ZONE.FEXT_EXT;
}'FBLK_EXB_EXT+2;
}'EXB.HIDDEN _ (1@HFREE-3) + EXT.HSIZE;
}'(EEXT - 1).HIDDEN _ 1 @ HFTAG;
}'FPB(FBLK, ZONE);
}'RETURN;

}'END;

}'PROGRAM FREE; INCLUDE ALLOC'DECS;
*
* RELEASE BLOCK (A) TO ZONE (B)
*
}(DECLARE EXPTR,EFB,PFB;

}(FUNCTION FREE(BLK,ZONE);
}'EFB_BLK+BLK.HSIZE;
}'ZONE _ CURRENT'ZONE IF ZONE = 0;
}'BLK.HFREE_1;
* VARIABLE-SIZED ZONE
* CHECK FOR MERGE WITH NEXT HIGHER BLOCK
}(IF EFB.HFREE DO;
}+BLK.HIDDEN_BLK.HIDDEN+EFB.HSIZE;
}+RFB(EFB, ZONE);
}+EFB _ BLK + BLK.HSIZE;
}'ENDIF;
* CHECK FOR MERGE WITH NEXT LOWER BLOCK
}(IF BLK.HFTAG DO;
}+PFB_BLK+(BLK[-2] IF BLK[-2]<0 ELSE -3);
}+PFB.HIDDEN_PFB.HIDDEN+BLK.HSIZE;
}+RFB(BLK _ PFB, ZONE);
}'ENDIF;
* CLEAN UP
}(EFB.HFTAG_1;
}'EFB[-2]_-BLK.HSIZE;
}'FPB(BLK, ZONE);
}'RETURN;

}'END;

}'PROGRAM FPB; INCLUDE ALLOC'DECS;
* SUBROUTINE TO PUT A BLOCK ON THE FREELIST
}(DECLARE ZFP,ZNBP;

}(FUNCTION FPB(BLK, ZONE);
}'ZFP_ZONE.FLIST;
}'IF ZFP<0 DO;
}+ZONE.FLIST_BLK.NBLK_BLK.PBLK_BLK;
}'ELSE DO;
}+ZNBP_ZFP.NBLK;
}+ZFP.NBLK_ZNBP.PBLK_BLK;
}+BLK.NBLK_ZNBP;
}+BLK.PBLK_ZFP;
}'ENDIF;
}'RETURN;

}'END;

}'PROGRAM FREEZONE; INCLUDE ALLOC'DECS;
*
* DELETE ZONE (A)
*
}(DECLARE ZEPTR;

}(FUNCTION FREEZONE(ZF,ZF1);
}'SELZONE(INFINITY'ZONE) IF ZF = CURRENT'ZONE;
FZONE1:ZEPTR_ZF.FEXT;
}'FREE(ZF,ZF1);
}'GOTO FZONE1 IF (ZF_ZEPTR)>=0;
}'RETURN;

}(END;

}'COMMON LISTCOM; INCLUDE COMDECS,OFTDECS,ATTACHDECS;

}(UINFL}"PROCNO(3:11,23),CCNT(5:12,23),PAGE'FL(0:6,12);
}'INT}$ERMSNO,UTS'KEY _ 1,URING_400000B,MB,CD,FB;
}'CHR}$ERCODE;
}'INTARY FN[LUFN],PN[LUFN];

}(MACRO}"TFR_FRETURN(ERCODE,ERMSNO): ERCODE,ERMSNO;

}(INT}$SB,RES;
}'LN}%LUNDK_(-1,-2);

}'END;

}'PROGRAM LISTNER; INCLUDE LISTCOM;

}(INT}$LSN,CHIOCEL,M,LNO,BEGLNO_0,INITLNO_31,ENDLNO_79,
}/LSTNO_1,ADDRESS,DATA,ADD'MASK,LST,REMOVE'MASK,
}/PLNO,NCHRS;
}'LN}%DA_(0,0);

}(INTARY LINETAB[7],WA[5];
}'CHR}$CNTLK_13B,CHAR;
}'DECLARE PARAMETER CTRL'K'SIG1_174B,}"/* 1ST SIGNATURE, CTRL K */
}9CTRL'K'SIG2_003B,}"/* 2ND SIGNATURE, CTRL K */
}8CTRL'K'SIG3_360B,}#/* 3RD SIGNATURE, CTRL K */
}9MAIN'TABLE'BASE_5140B,}"/* CHIO MAIN TABLE */
}9LOC'DEV'BASE_6250B,}%/* CHIO LOC. DEVICE TBL */
}9REL'COMPENSATION_664B3, /* FOR THE MONITOR */
}9READ_0, WRITE_1,
}9NICP1_6376B+REL'COMPENSATION,
}9NICP2_6416B+REL'COMPENSATION;
}'DECLARE FIELD DTYPE(0:18,23),CLINE(0:12,23),CBITS(0:0,17);
}'ST}&ST1(2),PRO'NAM'ST1(6:),CHST(22),ST2;
}'ST}#JUDY_ 6"HP-COMM})";


}(INT}#I,OFTX1,N,PMT1,PM;
}'PTR}#PTR1,PT;
}'ST}$FMS(64:12),WS,SMS(64:12);
}'UINFL CCNTFL(0: 2,23);



}(ENTRY LSTNR();

* ATTACH INITIALIZER

}(M _ 4B7 RSH (CHIOCEL _ GET'INT'NO ('CHI'//SF'PUNT));
}'I _ ACQUIRE'PMT(-1//SF'PUNT);
}'NEW'PMT'PAGE(I//SF'PUNT);
}'SET'MAP'BYTE(-1,1,I//SF'PUNT);


}(ACQUIRE'ICT(CHIOCEL//SF'PUNT);*ACQUIRE CHIO INTERUPT CELL
}'SET'ICT(CHIOCEL,1B4,0,DA//SF'PUNT);
}'ACQUIRE'ICT(LNO _ GET'INT'NO ('QT'//SF'PUNT)//SF'PUNT);
}'SET'ICT (LNO,1B4,0,DA//SF'PUNT);
}'M _ M V' (4B7 RSH LNO);



}(FOR LNO _ BEGLNO,LNO+2 WHILE LNO <= INITLNO DO;
}+SET'LINE'FIELD (LNO,'BWS',10001B//SF'PUNT);
}'ENDFOR;
}'SET'LINE'FIELD(38,'BWS',2B4+2//SF'PUNT);
}'INITL();* SHORTEN STACK UPON RETURNING FROM HENRY


* CREATE CONSOLE PROCESS

}(CONV'FNAME(-1,-2,JUDY,6'PROC',PN);
}'DESTROY'PROC(LUNDK,UTS'KEY);
}'CREATE'MIBOB(PN,SIBPRCD,UTS'KEY//HR:ERCODE,ERMSNO);
}'SET'MIBOB'ACCESS(PN,357B,UTS'KEY//SF'PUNT);
HR:}$CR'PROC(PN,"",UTS'KEY//SF'PUNT);
}'ACTIVATE'PROC(PN,0,RES,UTS'KEY//SF'PUNT);

*
* ACQUIRE SYSTEM PRIVILEGES
*
}(MST'SPT'FIELD(-1,'SB',MRD'SPT'FIELD(-1,'SB'//ENDLOP:
}6ERCODE,ERMSNO) V' 2B7//ENDLOP:ERCODE,ERMSNO);
*
* GET OUR PRTI
*
}(LST_READ'PR'PARAM('PRT'//SF'PUNT);
*
* FINALLY, START THE LISTENING LOOP.
*
RESTART:FOR LNO_BEGLNO,LNO+2 WHILE LNO<=ENDLNO DO;
}+READ'LINE'TABLE(LNO,LINETAB//ENDLOP:ERCODE,ERMSNO);
}+IF LINETAB[0]$PROCNO=LST DO;}"/* HANDLE ONLY OUR LINES */
}.READ'STRING'BRK(LNO,-1,1,CHST:ST2,NCHRS//ENDLOP:ERCODE,ERMSNO);
}.IF NCHRS$CCNTFL # 0 DO;
RD'L1:}+READ'FROM'LINE(LNO,CHST,1:ST2//ENDLOP);
}1GET'CHAR(ST2,LNO,CHST:CHAR,ST2//RD'L1);
RD'L3:}+IF (CHAR A' 177B) = CNTLK DO;
}4SET'LINE'FIELD(LNO,'QIT',CHAR//ENDLOP:ERCODE,ERMSNO);
}4SCOPY(PRO'NAM'ST1,"EP"//ENDLOP);
}4CNS(LNO/2,PRO'NAM'ST1,0,10//ENDLOP);
}#
* CREATE, OPEN, INITIALIZE AND ACTIVATE}"PROCESS "PRO'NAM'ST"
*}#SEND LINE NO. AND MESSAGE 'ENTER'
}#
}4CONV'FNAME(-1,-2,PRO'NAM'ST1,6'PROC',PN);
HR3:}0CREATE'MIBOB(PN,SIBPRCD,UTS'KEY//HR2:ERCODE,ERMSNO);
}4SET'MIBOB'ACCESS(PN,357B,UTS'KEY//HR2:ERCODE,ERMSNO);
}4CR'PROC(PN,"ENTER",UTS'KEY//HR2:ERCODE,ERMSNO);
}4ACTIVATE'PROC(PN,LNO RSH 1,RES,UTS'KEY
}B//HR2:ERCODE,ERMSNO);
}1ELSE DO;
}4GOTO RD'L1 IF (CHAR A' 375B) # CTRL'K'SIG1;
}4GET'CHAR(ST2,LNO,CHST:CHAR,ST2//RD'L1);
}4GOTO RD'L1 IF (CHAR A' 373B) # CTRL'K'SIG2;
}4GET'CHAR(ST2,LNO,CHST:CHAR,ST2//RD'L1);
}4GOTO RD'L1 IF (CHAR A' 360B) # CTRL'K'SIG3;
}4ADDRESS_(LNO/2)*4+MAIN'TABLE'BASE+REL'COMPENSATION;
}4READ'WRITE'CM(ADDRESS,DATA,READ:DATA//ENDLOP);
}4DATA$DTYPE_2; /* SET DEVICE TYPE TO 2 (110 BPS) */
}4READ'WRITE'CM(ADDRESS,DATA,WRITE//ENDLOP);
}4FOR PLNO_0 TO 23 DO;
}7ADDRESS_(PLNO*2)+1+LOC'DEV'BASE+REL'COMPENSATION;
}7READ'WRITE'CM(ADDRESS,DATA,READ:DATA//ENDLOP);
}7GOTO RD'L2 IF DATA$CLINE = LNO;
}4ENDFOR;
}4GOTO ENDLOP;
RD'L2:}.ADD'MASK_4B7 RSH PLNO;
}4REMOVE'MASK_N' ADD'MASK;
}4READ'WRITE'CM(NICP2,DATA,READ:DATA//ENDLOP);
}4READ'WRITE'CM(NICP2,DATA V' ADD'MASK,WRITE//ENDLOP);
}4READ'WRITE'CM(NICP1,DATA,READ:DATA//ENDLOP);
}4READ'WRITE'CM(NICP1,DATA A' REMOVE'MASK,WRITE//ENDLOP);
}4IF CHAR A' 4B = 4B DO;
}7CHAR_213B;
}4ELSE DO;
}7CHAR_13B;
}4ENDIF;
}4GOTO RD'L3;
}1ENDIF;
}.ELSEIF LINETAB[0]$CBITS # 240401B DO;
}1ADDRESS_(LNO/2)*4+MAIN'TABLE'BASE+REL'COMPENSATION;
}1DATA_24040100B V' LINETAB[0]$DTYPE;
}1READ'WRITE'CM(ADDRESS,DATA,WRITE//ENDLOP);
}1READ'WRITE'CM(ADDRESS+1,213B,WRITE//ENDLOP);
}.ENDIF;
}+ENDIF;
ENDLOP: ENDFOR;

}'BLOCK(M//RESTART:ERCODE,ERMSNO);
}'GOTO RESTART;

HR2:}#DELETE'MIBOB(PN,UTS'KEY//ENDLOP:ERCODE,ERMSNO);
}'GOTO HR3;


}(ENTRY}%RUNTIME'FAILURE();

STOP:}#GOTO STOP;

}'END;

}'PROGRAM AUX'LSTNR'1; INCLUDE LISTCOM;

}'DECLARE INTEGER I,LNO,N,NCHRS;
}'DECLARE STRING STR1,STR2;
}'DECLARE FIELD CCNTFL(0:2,23);

}'FUNCTION READ'FROM'LINE(LNO,STR1,N), FRETURN;
}'FOR I_0 TO N DO;
}*READ'STRING'BRK(LNO,-1,0,STR1:STR2,NCHRS//CAN'T:ERCODE,ERMSNO);
}*(RETURN STR2) IF NCHRS$CCNTFL#0;
}'ENDFOR;

CAN'T: FRETURN;

}'END;

}'PROGRAM AUX'LSTNR'2; INCLUDE LISTCOM;

}'DECLARE INTEGER CHAR,LNO;
}'DECLARE STRING STR1,STR2;

}'FUNCTION GET'CHAR(STR2,LNO,STR1), FRETURN;
GET'1: IF CHAR_GCI(STR2//GET'10) =37B DO;
GET'2:}$CHAR_GCI(STR2//GET'20)-40B;
}'ENDIF;
}'RETURN (CHAR,STR2);

GET'10: READ'FROM'LINE(LNO,STR1,20:STR2//FRETURN) & GOTO GET'1;
GET'20: READ'FROM'LINE(LNO,STR1,20:STR2//FRETURN) & GOTO GET'2;

}'END;

}'PROGRAM CREATE'PROCESS; INCLUDE LISTCOM;


}(INT}"ATF'PAGE,ATF'PMT,ATP'PAGE,ATP'PMT;
}'INT}'N;
}'INT}$LST;
}'PTR}"ATF'PTR,ATP'PTR;
}'INT}$UUNO_-1,UDKA_-2;
}'ST}#UST_6"UTILITY})";
}'INTARY UFN[LUFN],PN;
}'INTARY PG;
}'INTARY MESAGE[30];
}'INT}$POFT,I,RING_1,SB,UOFT,PMT',FB;
}'INT}$UN,DK;

}(LBARY}"ERROR[5]_(ER1,ER2,ER3,ER2,ER5);

}(ST}%FMS(32: 12),SMS(32: 12),WS,MESSTR;

}(INT}$UEP_403012B,UG_403000B;
}'INT}$E_0,UNO_-1,DKA_-2,STRT_0,K;
*}"THIS MUST BE CHANGED IN THE NEAR FUTURE TO PICK UP THE
*}$GROUP OWNER.

}(ENTRY}"CR'PROC(PN,MESSTR,K),FRETURN;



}(ACQUIRE'PMT(-1:ATF'PMT//SF'PUNT);
}'ATF'PAGE_ GET'MAP'BYTE(//SF'PUNT);
}'SET'MAP'BYTE(-1,ATF'PAGE,ATF'PMT//SF'PUNT);
}'ATF'PTR_ATF'PAGE@PAGE'FL+URING;
*PN}$=PROCESS NAME IN FILE NAME ARRAY FORMAT

*UFN}#=UTILITY FILE NAME
*PNSTR =PROCESS NAME STRING
*MESSTR=MESSAGE STRING

*WORRY ABOUT CONVERTING KEY
*FILE MUST ALREADY BE CREATED
}(I_0; ERCODE_'NUT';ERMSNO_32;
}'MOPEN'FILE(-1,PN,1,K:POFT//ER: ERCODE,
}(ERMSNO);
}'I_I+1;*I=1
}'CONV'FNAME(-1,-2,UST,6'PIF ',UFN);
}'MOPEN'FILE(-1,UFN,1,K:UOFT//NC'PUNT:ERCODE,ERMSNO);
}'I_I+1;*I=2

}(MOVE'PAGE'PMT(UOFT,0,ATF'PMT//NC'PUNT:ERCODE,ERMSNO);

}(I_I+1;*I=3

}(NAMSET(WS,32,@(ATF'PTR.ATMAP),12);
}'SCOPY(FMS,WS//LF'PUNT);
}'CLEAR'PMT(ATF'PMT//SF'PUNT);
}'I_I+1;*I=4
}'INIT'SPT'MAP(POFT,RING,K//SF'PUNT);

}(ACQUIRE'PMT(-1:SB//NC'PUNT:ERCODE,ERMSNO);
}'I_1+1;
}'ATP'PAGE_GET'MAP'BYTE(//SF'PUNT);
}'SET'MAP'BYTE(-1,ATP'PAGE,SB//NC'PUNT:ERCODE,ERMSNO);
}'ATP'PTR_ATP'PAGE@PAGE'FL+URING;

}(FB_GCI(FMS//NC'PUNT);
}'FB_FB$BYTEP;
}'GOTO ER2 IF FB#1 ;*ADD 2ND CHECK LATER

}(MOVE'PAGE'PMT(UOFT,FB,SB//NC'PUNT:ERCODE,ERMSNO);
}'PG _ AR'DESC(1000B,ATP'PTR+3000B);

}(INIT'PROC'PAGE(POFT,PMT'_CB'PMT,3000B,1000B,PG//NC'PUNT:ERCODE,ERMSNO);
}'WS_ST'DESC(90,@MESAGE[0],8,0);
}'WCI(LENGTH(MESSTR),WS//LF'PUNT);
}'APPEND(WS,MESSTR//LF'PUNT);
}'INIT'PROC'PAGE(POFT,PMT'_CB'PMT,2018,30,MESAGE//NC'PUNT:
}(ERCODE,ERMSNO);
}'WCI(PMT',SMS//LF'PUNT);
}'CLEAR'PMT(SB//SF'PUNT);

}(FOR FB_GCI(FMS//DONE)REPEAT;
}+CD_FB$BYTEC;FB_FB$BYTEP;
}+IF CD=0 DO;
}/PMT'_0;
}+ELSE DO;
}/IF CD = 1 DO;
}3MOVE'PAGE'PMT(UOFT,FB,SB//NC'PUNT:ERCODE,ERMSNO);

}4COPY'PMT'PROC(POFT,SB:PMT'//NC'PUNT:ERCODE,ERMSNO);
}/ELSE DO;
}3CR'FILE'PAGE(POFT,SB:PMT'//NC'PUNT:ERCODE,ERMSNO);
}3IF CD =3 DO;
}7MOVE'PAGE'PMT(UOFT,FB,ATF'PMT//NC'PUNT:ERCODE, ERMSNO);
}7CR'FILE'PAGE(POFT,SB:PMT'//ERROR2:ERCODE,ERMSNO);
}7BCOPY(ATP'PTR,ATF'PTR,4000B);
}7CLEAR'PMT(ATF'PMT//SF'PUNT);
}3ENDIF;
}/ENDIF;
}+ENDIF;
}+WCI(PMT',SMS//LF'PUNT);
}+CLEAR'PMT(SB//SF'PUNT) IF PMT' # 0;
}'ENDRPT;
DONE:}"DELETE'PMT(SB//SF'PUNT);
}'DELETE'PMT(ATF'PMT//SF'PUNT);
}'I_4;
}'INIT'PROC'MAP(POFT,SMS//NC'PUNT:ERCODE,ERMSNO);
}'MSET'OFT'CL(POFT,0//SF'PUNT);
}'MSET'OFT'CL (UOFT,0//SF'PUNT);
}'RETURN;*CALLING PROCESS MUST ACTIVATE NEW PROCESS

ERROR2: CLEAR'PMT(ATF'PMT//SF'PUNT);

ER5:}$DELETE'PMT(SB//SF'PUNT);
}'GOTO ER2;
ER3:}#CLEAR'PMT(ATF'PMT//SF'PUNT);

ER2:}$MSET'OFT'CL(POFT,0//SF'PUNT);
ER1:}#MSET'OFT'CL(UOFT,0//SF'PUNT);
ER:}$FRETURN (ERCODE,ERMSNO);

}'END;

}'PROGRAM MISC'LSTNR; INCLUDE COMDECS, OFTDECS;


}(MACRO}%TFR_FRETURN(ERCODE,ERMSNO):ERCODE,ERMSNO;

}(INT}$K,TP,ERMSNO;
}'CHR}"ERCODE;
}'INTARY PN, SF[LUFN];

}(ST}%NAME'ST,WS;

}(INT}$STRT_0,UN,DK,LMIB_128,INDEX,NAMEL_5;
}'LN}%LUNDK;

}(INT DUM1,DUM2,LAST_6;
}'INT}'PM,MB,PT,UTS'RING_0;
}'UINFL}%PAGE'FL (0:6,12);

}(ENTRY}"CONV'FNAME(UN,DK,NAME'ST,TP,PN);
}'BSET(@PN[0],0,LUFN);
}'WS_ST'DESC(16,@PN[3],6,0);
}'SCOPY(WS,NAME'ST//LF'PUNT);
}'PN[STRT]_UN;
}'PN[STRT+1]_DK;
}'PN[STRT+7]_TP;
}'RETURN;

}(ENTRY}"DESTROY'PROC(LUNDK,K);
}'FOR INDEX_0,INDEX+1 REPEAT;

},BSET(@SF[0],0,LUFN);

},READ'MIBOB'INDEX(LUNDK,NAMEL,SF,INDEX,K//VALUE
},(GOTO ENDMIB IF ERCODE = 'MOB' ELSE GOTO LOOP):
},ERCODE, ERMSNO);

},IF SF[LAST]=6'DEST' DO;
}/BCOPY (@SF[3],@SF[2],5);
}/SF[0]_-1;
}/SF[2] _ SF[1];
}/DELETE'MIBOB(SF,K//SF'PUNT);
}+ENDIF;
LOOP:}"ENDFOR;
ENDMIB:RETURN;

}(ENTRY}%GET'MAP'BYTE(),FRETURN;

}(FOR MB _0,MB+1 WHILE MB < 28 DO;
}+RETURN(MB) IF READ'MAP'BYTE(-1,MB//TFR) = 0;
}'ENDFOR;
}'NC'PUNT;

}'END;

}'PROGRAM GT'PLACE; INCLUDE LISTCOM;
}'INT}$PM,UTS'RING_0;
}'PTR}$PT;

}(ENTRY}#GET'PLACE(),FRETURN;

}(ACQUIRE'PMT(-1:PM//TFR);
}'GET'MAP'BYTE(:MB//TFR);
}'PT _ MB@PAGE'FL+UTS'RING;
}'SET'MAP'BYTE(-1,MB,PM//TFR);
}'RETURN(PM,PT);

}'END;

}'COMMON STACK'ASG; INCLUDE MACHINE'DECS;
}'INT LSTACK _ 600;
}'INTARY STK[LSTACK];
}'PTR STKP _ @STK[0], STKL _ @STK[LSTACK-1];

}(MACRO}%RNTE(A,B) _ (A + 100B,0,0,0,B);

}(INTARY}$RNT[4:5] _ (RNTE(7,16),RNTE(8,17),RNTE(9,18),(-1,0,0,0,0));
}'PTR}'RNTP = G'[7] _ @RNT[0];

}'END;

}'PROGRAM MAINMAIN; INCLUDE LISTCOM, MACHINE'DECS, STACK'ASG;

}(ENTRY MAIN(),SP'ENTRY_2;

}(STACK'PTR _ STKP; STACK'LIM _STKL;
}'LSTNR();

}'END;

}'COMMON INTERCOM; DECLARE INTCEL;

}'END;

}'PROGRAM INITIALIZE; INCLUDE COMDECS; INCLUDE INTERCOM;


}(INT}$OFTX ,I,SPN,TAPE1,TAPE2,DLEN,PMT2,NNN,RSP;
}'INTARY PMTX[2],INBUF,FN[LUFN],TA[LUFN];
}'ST}%STB(16: 12), WS;
}'UINFL}"PAG'FL(0:6,12), UE ( 0:18,18);
}'PTRARY PTR'ARY[2];

}(UINFL}"FTYPE(1:0,3),FUSER(1:6,23),LHEADER(1:0,5),
}(FEOF(0:1,1),FRECORDN(0:2,12),WORDN(0:13,23),
}(FUSMIBAD(2),PG(0),LLK(8:9,11), HRCK(0:0,23);

}(INT}$SYSUSR_1,MIBAD,OFT1_1,ERMSNO,EOF,W2,MODE,WC,PGNO;

}(CHR}$ERCODE;

}(INT}$NOWDS,RNO,TU_0,USRR_400000B,HLEN;

}(PTR}$POINT,PTR1,PTR2;
}'INT}$FUSR,LHDR,DKA,PMT1,FL,PAGESIZE_2048,STFLG;
}'INTARY INBUF2,DUMARY1,DUMARY2;

}(ENTRY}"INITL();
}'INTCEL_ACQUIRE'ICT(-1//SF'PUNT);

}(FOR I_0,I+1 WHILE I<=1 DO;
}+ACQUIRE'PMT(-1:PMT1//SF'PUNT); PMTX[I]_PMT1;
}'ENDFOR;

*GET MAP WORDS

}(FOR I_0,I+1 WHILE I< 2 DO;
}+FOR SPN_ 0,SPN + 1 WHILE SPN <= 31 DO;
}/IF (NNN _ READ'MAP'BYTE(-1,SPN//SF'PUNT))= 0 DO;
}3PTR'ARY [I]_ SPN @ PAG'FL + USRR;
}3SET'MAP'BYTE (-1,SPN,PMTX[I]//SF'PUNT);
}3GOTO ENDLOOP;
}/ENDIF;
}+ENDFOR;
ENDLOOP:ENDFOR;


ENGH:}#INBUF_AR'DESC(4000B,PTR'ARY[0]);
}'INBUF2_AR'DESC(4000B,PTR'ARY[1]);
}'PTR1_PTR'ARY[0];
}'PTR2_PTR'ARY[1];
}'PMT1_PMTX[0]; PMT2_PMTX[1];

}(NEW'PMT'PAGE(PMT1//SF'PUNT);

* READ}"TRAILER, TAPE MARK , HEADER, TAPEMARK
*}(MORE CHECKING WILL BE DONE ON LABELS LATER.

* REWIND PATCH
}(SEND'COM(3,0,1,0);
}'GRSPO(:RSP,TAPE1,TAPE2,DLEN// SF'PUNT);

}(MODE_15B;*556 BPI,SET DEN, EVEN, OFF OFF
}'WC _80;
}'SEND'COM(4,TU,MODE,0);
BAK:}#GRSPO(:RSP,TAPE1,TAPE2,DLEN//SF'PUNT);
*}*SEND'COM(19,TU,0,0);
*}*GRSPO(:RSP,TAPE1,TAPE2,DLEN//SF'PUNT);
}(GOTO BAK IF RSP = 27;
}'NC'PUNT IF RSP # 31;

*READ TAPE
}(READ'TAPE(INBUF,WC:TAPE1,TAPE2,DLEN);

}(NC'PUNT IF DLEN # 80 ;
}'GOTO SHORT;
}'NC'PUNT IF PTR1.HRCK # 61353306B;

}(READ'TAPE (INBUF,WC:TAPE1,TAPE2,DLEN);
}'NC'PUNT IF TAPE2$UE}"# 1;
* THIS SHOULE}"BE TAPE MARK BEFORE HEADER LABEL.

}(READ'TAPE (INBUF,WC:TAPE1,TAPE2,DLEN);

*THIS SHOULD BE HEADER
}(NC'PUNT IF PTR1.HRCK # 62142331B;

*READ TAPE MARK
SHORT:}"READ'TAPE (INBUF,WC:TAPE1,TAPE2,DLEN);
}'NC'PUNT IF TAPE2$UE # 1;





*IF WE GET HERE WE HAVE READ ALL LABELS

}(WC_8192;* NO OF BYTES IN A PAGE
}'MODE_12B;
* WILL EVENTUALLY BE 16B
}(SEND'COM(4,TU,MODE,0);
}'GRSPO(:RSP,TAPE1,TAPE2,DLEN//SF'PUNT);
* LATER DO A SEND COM 19 AND CHECK FOR 31
*SET MODE TO BINARY
NEWRD:}"STFLG_0;W2_0;
NEWRDRD:READ'TAPE(INBUF,WC:TAPE1,TAPE2,DLEN);
}'GOTO DONE IF TAPE2$UE=1;
NEWF:}"RNO_PTR1.FRECORDN;
}'NOWDS_PTR1.WORDN-1;
}'FUSR_PTR1.FUSER;
}'LHDR_PTR1.LHEADER+ W2;
}'EOF _ PTR1.FEOF; GOTO HERE IF STFLG=1;
}'I_0;STFLG_1;
}'FOR POINT_PTR1+3,POINT+1 WHILE I< 5}"DO;
}+FN[I+3]_POINT.PG;
}+I_I+1;
}'ENDFOR;

*}&GOTO OTHER IF FUSR#SYSUSR;
*}*GO FIND OR CREATE NEW MIB
*}*READ DKA
*}*RIGHT NOW USE DEFAULT OPTION
}(DKA_-2;
}'NC'PUNT IF RNO#0;

}(FN[0]_-1;
}'FN[1]_DKA;

}(READ'MIBOB'NAME(FN,5,TA,0,OFT1//CR'ITM:ERCODE,ERMSNO);
}'GOTO OPEN;
}'DELETE'MIBOB(FN,OFT1//SF'PUNT);
*GO CREATE ITEM AND RETURN PROPER FILE NAME
CR'ITM: CR'INITL'ITM(PTR1,FN,OFT1//SF'PUNT);

OPEN:}"MOPEN'FILE(-1,FN,0,OFT1:OFTX//SF'PUNT);

HERE:}#POINT_PTR1 + LHDR;
}'PGNO_POINT.PG;


*PAGE IS NOT COMPLETE IF TRANSFER TAKES PLACE
*OTHERWISE WRITE OUT PAGE

}(CR'FILE'PAGE(OFTX,PGNO:PGNO//VALUE( GOTO ERROR IF ERCODE # 'FPE'
}+ELSE GOTO OK): ERCODE,ERMSNO);

OK:}%MOVE'PAGE'PMT(OFTX,PGNO,PMT2//SF'PUNT);
}'BCOPY(PTR2,PTR1+LHDR+1,NOWDS);
}'FL_0;
}'GOTO CLRPMT IF EOF=1 OR
}((NOWDS+LHDR+1)<PAGESIZE;
FILL:}"W2 _ 2048 - NOWDS;
}'READ'TAPE(INBUF,WC:TAPE1,TAPE2,DLEN);
}'IF TAPE2$UE=1 DO; FL_2; GOTO CLRPMT; ENDIF;
}'PTR1.WORDN _ PTR1.WORDN - W2;
}'GOTO NOW IF ( EOF _ PTR1.FEOF) = 1;
}'POINT_ PTR1.LHEADER + PTR1 + W2;
}'FL _ 1 IF POINT.PG # PGNO ;
*VALIDITY CHECK REST OF DATA?
NOW:}$HLEN_PTR1.LHEADER ;

}(DUMARY1_AR'DESC(W2,PTR2+NOWDS);
}'DUMARY2_AR'DESC(W2,PTR1+HLEN);

}(BCOPY(@DUMARY1[0],@DUMARY2[0],W2);
}'NOWDS_NOWDS+W2;
CLRPMT:CLEAR'PMT(PMT2//SF'PUNT);
}'GOTO DONE IF FL = 2;

}(IF FL=0 AND EOF=1 DO;
}+MSET'OFT'CL(OFTX,0//SF'PUNT);
}+GOTO NEWRD;
}'ENDIF;
}'GOTO NEWRDRD}"IF FL=0;

}(IF FL=1 DO;

},FL_0;
}+GOTO NEWF;

}(ENDIF;

DONE:}#DELETE'PMT(PMT1//SF'PUNT);
}'DELETE'PMT(PMT2//SF'PUNT);
}'SET'ICT'CL(INTCEL,0//SF'PUNT);
}'RETURN;
*READ TRAILER AND CONVERT TO LISTENER

ERROR:}"NC'PUNT;

}'END;

}'PROGRAM CREATE'ITEM; INCLUDE COMDECS,BFSDECS;

}(MACRO}%TFR _ FRETURN(ERCODE,ERMSNO):ERCODE,ERMSNO;

}(PTR PTR1;
}'INTARY FN;
}'UINFL FTYPE(1:0,3),AC (8:12,23),DUR(8:1,2),LLK(8:8,11);
}'INT FILETP,K,ENLLK,ERMSNO;
}'UINFL}"LOCK(0),LOCK2(1);
}'CHR}"ERCODE;
}'LN LIST;


}(ENTRY}"CR'INITL'ITM (PTR1,FN,K),FRETURN;

}(FILETP _ 0;
}'CREATE'MIBOB(FN,FILETP,K//TFR);
}'SET'MIBOB'ACCESS(FN,357B,K//SF'PUNT); *TEMP FIX UNTIL BO SETS ACCESS
}'ENLLK_PTR1.LLK*2+PTR1;

}(FOR PTR1_PTR1+1,PTR1+2 WHILE PTR1 <= ENLLK DO;
}+LIST$LOCK_PTR1.LOCK;
}+LIST$LOCK2_PTR1.LOCK2;
}+SET'LOCK'LIST (FN,LIST,K//TFR);
}'ENDFOR;
}'RETURN;

}'END;

}'PROGRAM MISSUBS; INCLUDE COMDECS;
}'ST JST1,JST2;
}'INT}"TEMP;


}(INTENT COMPARE(JST1,JST2);




}(FOR TEMP_GCI(JST1//ENDST1)WHILE 1 DO;
}+GOTO NOGD IF TEMP#GCI(JST2//NOGD);
}'ENDFOR;
*}9ERROR IF LOOP COMPLETES
}(NC'PUNT;
ENDST1:GCI(JST2//GOOD);
NOGD:}"RETURN 0;
GOOD:}"RETURN 1;

}'END;

}'PROGRAM RD'TAPE; INCLUDE COMDECS;

}(INT}'ERMSNO; CHR ERCODE;

}(INT}$RSP,PAR1,PAR2,DLEN,TU_0,MODE,WC;
}'INTARY INBUF;

}(ENTRY}"READ'TAPE(INBUF,WC);

}(SEND'COM(0,TU,WC,0);
*}&SEND'COM(19,TU,1,0);
*}&GRSPO(:RSP,PAR1,PAR2,DLEN//SF'PUNT);
*}&NC'PUNT IF RSP # 31;
}(RDT(INBUF:RSP,PAR1,PAR2,DLEN//SF'PUNT);

}(RETURN(PAR1,PAR2,DLEN) IF RSP=30;

}(NC'PUNT;

}'END;

}'COMMON M30PAR; INCLUDE INTERCOM;

}(DECLARE ARRAY COMTAB0[24]_(136,129,
}(130,139,132,141,142,135,184,177,178,187,
}(180,189,190,183,72,65,66,75,68,77,78,71);
}'DECLARE ARRAY COMTAB1[8]_(120,113,114,
}(123,116,125,126,119);

}(DECLARE ARRAY R1LEN[8]_(1,2,2,2,0,0,3,0);
}'DECLARE ARRAY R2LEN[8]_(0,0,0,0,0,0,1,0);
}'DECLARE ARRAY P1LEN[20]_(1,1,1,1,1,3,3,3,3,3,
}(0,0,0,0,0,0,0,0,1,1);
}'DECLARE ARRAY P2LEN[20]_(3,3,3,1,1,0,0,0,0,0,
}(0,0,0,0,0,0,0,0,3,1);
}'DECLARE ARRAY P3LEN[20]_(0,0,0,1,0,0,0,0,0,0,
}(0,0,0,0,0,0,0,0,1,0);

}(DECLARE READ_0, READB_1, WRITE_2,
}(CNTRL_3, SET'MODE_4, READ'BCARD_5,
}(READ'ECARD_6, PRINTL_7, MOUNT'C_8,
}(SENSE_9, RETRY_10, NO'RETRY_11, SKIP_12,
}(REPEAT_13, RESTART_14, TAPE'RESTART_15,
}(DATA'OK_16, DATA'BAD_17, HEADER'SEARCH_18,
}(SET'SPEED_19,CHIO'NULL_23,PFIN_29;

}(DECLARE CSL_300,DB_300B,M30R_38,M30W_39,FCPAR_10;

}(DECLARE LONG MIN5_(1,62341600B),MIN3'5_(1,27571700B),
}(MIN1_(0,26706600B),ALARM'CLOCK,
}(SEC10_(0,3641100B),LZ,LNCON _ (1,0);
}'DECLARE ARRAY FLGAR[1];

}(DECLARE CHIOBIT, BBITS, FLAG,TIMER'NO,M30Q'FN,
}(DPMTX,M30PMTX,Z,ERMSNO;
}'DECLARE CHARACTER E,ERCODE;

}(DECLARE FIELD BBT(0:0,0),ASLP(0:1,1),LTOP(0:2,2),PIP(0:3,3),
}(PRQ(0:4,4),TRQ(0:6,6),
}(CRQ(0:5,5),T7R(0:7,7),
}(T9R(0:8,8),OIP(0:9,9),
}(TBTS(0:7,8),DISP'FLD(0:3,6),IDLE'F(0:10,10);

}(DECLARE FIELD BIT0(0:0,0),CIU(0:11,11),PIU(0:12,12),
}(T7IU(0:13,13),T9IU(0:14,14),CRP(0:15,15),PRP(0:16,16),
}(T7RP(0:17,17),T9RP(0:18,18);
}'DECLARE FIELD ARRAY [4] REQB_(CRQ,PRQ,T7R,T9R),
}(DEVF_(CIU,PIU,T7IU,T9IU),
}(REQ'PEND_(CRP,PRP,T7RP,T9RP);




}(DECLARE ARRAY M30Q'NAME[8]_(0,1,2,3,4,5,6,7);

}(DECLARE ARRAY [4] ENN,TOPB;
}'DECLARE ARRAY [10:8] DB1,DB2,DB3,DB4;
}'DECLARE ARRAY ARRAY DBUF[4]_(DB1,DB2,DB3,DB4);

}(DECLARE FIELD FII(0:0,0),FOP(0:1,5),FN(0:6,23),
}(FER(1:0,0),FERC(1:1,5),FERDATA(1:6,23),
}(FSA(2),FWC(3),FDT1(4),FDT2(5),FDT3(6),FDT4(7);

}(MACRO EN_(DBUF[DEVNO])[ENO];
}'MACRO II_EN$FII;
}'MACRO OP_EN$FOP;
}'MACRO N_EN$FN;
}'MACRO ER_EN$FER;
}'MACRO ERC_EN$FERC
}(MACRO ERDATA_EN$FERDATA
}(MACRO SA_EN$FSA;
}'MACRO WC_EN$FWC;
}'MACRO DT1_EN$FDT1;
}'MACRO DT2_EN$FDT2;
}'MACRO DT3_EN$FDT3;
}'MACRO DT4_EN$FDT4;

}(DECLARE FIELD BP(0),RP(1),WP(2),EP(3);
}'MACRO}%EMPTY(S) _ LNGDES(S$RP, S$WP) <=0;
}'MACRO ERR(A,B)_FRETURN(A,B);
}'MACRO LF'PUNT_RUNTIME'FAILURE();
}'MACRO SF'PUNT_LF'PUNT:ERCODE,ERMSNO;
}'MACRO SET(FLB)_FLAG$(FLB)_-1;
}'MACRO CLEAR(FLB)_FLAG$(FLB)_0;
}'MACRO IFF(FLB)_ IF (FLAG$(FLB));

* MCALLS
}(MACRO UMC_UNKNOWN MONITOR;
}'MACRO IMC_INTEGER MONITOR;
}'MACRO LMC_LONG MONITOR;

}(UMC RSTB_182; UMC WST _ 183; *READ'STRING'BRK,WRITE'STRING
}'LMC RRTC_210;
}'IMC CVINT_165; IMC ACQICT_174; UMC RDICT_166; UMC SETICT_172;
}'UMC BLOCK_170; UMC RESNI_168; UMC SETPIW_123;
}'IMC READ'SPT'FIELD_97; UMC SET'SPT'FIELD_98; UMC SP'RETURN_116;
}'UMC SET'MAP'BYTE_102;
}'IMC ACQPMT_50; UMC CLRPMT_53;
}'IMC OPEN_19; UMC GET'FILE'PAGE_27;

}'END;

}'PROGRAM LONG'ARIT;
*
* LONG ARITHMETIC PACKAGE
*
}'DECLARE P,Q,I;
}'DECLARE LONG X,Y;
}'DECLARE FIELD W0(0),W1(1);


}(LONG FUNCTION FAD(X,Y);
}'.LDA X$W1; .ADD Y$W1; .CAB;
}'.LDA X$W0; .ADC Y$W0; RETURN;

}(LONG FUNCTION FSB(X,Y);
}'.LDA X$W1; .SUB Y$W1; .CAB;
}'.LDA X$W0; .SUC Y$W0; RETURN;

}(FUNCTION FGT(X,Y);
}'RETURN (1 IF FSB(Y,X)$W0<0 ELSE 0);

}'END;

}'PROGRAM MISCM30; INCLUDE M30PAR;

}(DECLARE INTEGER C,P1,P2,P3;


}(ENTRY SEND'COM(C,P1,P2,P3);
}'S'C(COMTAB0[C],P1,4-P1LEN[C],P2,4-P2LEN[C],P3,4-P3LEN[C]:Z,Z
}(//SF'PUNT);

}(RETURN;

}'END;

}'PROGRAM M30BAS;
}'INCLUDE M30PAR;INCLUDE INTERCOM;

}(DECLARE FIELD HCBTS(0:18,19),LCBTS(0:21,23),BCHR(0:0,0),
}(CHION(0:2,23);

}(DECLARE CMD,RPR1,RPR2,RLEN,T,TT,I;
}'DECLARE STRING PSTR(5),COMSTR(CSL+1),DATSTR,P1S,P2S,P3S,RP1S,RP2S;

}(DECLARE P1,P2,P3,LEN,NCHRS,TCHR;
}'DECLARE ARRAY BUF;

}(FUNCTION S'C(CMD,P1,P1L,P2,P2L,P3,P3L),FRETURN;
}'SETUP(P1S,4,@P1,6);
}'SETUP(P2S,4,@P2,6);
}'SETUP(P3S,4,@P3,6);
}'SETS(P1S,P1L,4); SETS(P2S,P2L,4);
}'SETS(P3S,P3L,4); SETS(COMSTR,0,0);
}'WCI(CMD,COMSTR//LF'PUNT);
SC1:}#WCI(GCI(P1S//SC2) V' DB,COMSTR//LF'PUNT) & GOTO SC1;
SC2:}#WCI(GCI(P2S//SC3) V' DB,COMSTR//LF'PUNT) & GOTO SC2;
SC3:}#WCI(GCI(P3S//SC4) V' DB,COMSTR//LF'PUNT) & GOTO SC3;
SC4:}#WST(M30W,7,COMSTR:COMSTR,NCHRS//SC6:E,Z);
}'GOTO SC4 IF NCHRS # 0;
}'RETURN(0,0);
SC6:}#ERR('SC0',1);



}(FUNCTION RDT(BUF),FRETURN;
}'SETUP(DATSTR,8192,@BUF[0],6);
}'T_301B; CLEAR(BBT);
RDT1:}"SETS(COMSTR,0,0);
}'RSTB(M30R,CSL,0,COMSTR:COMSTR,NCHRS//RDT0:E,Z);
RDT4:}"GOTO RDT7 IF NCHRS$CHION = CSL;
}'(T_GCD(COMSTR) & GOTO RDT7) IF NCHRS$BCHR;
RDT3:}"ALARM'CLOCK_FAD(RRTC('RTC'),LNCON);
}'CHIOBIT_2B5 V' (4B7 RSH INTCEL);
}'SETICT (INTCEL,2B7 V' 1B4,0,ALARM'CLOCK//SF'PUNT);
}'SET(BBT);
RDT013:BLOCK(CHIOBIT//SF'PUNT);
}'LZ_RRTC('RTC');
*})ERR('RD2',4) IF FGT(LZ,ALARM'CLOCK); TEMP FIX DURING DEBUG
}(CLEAR(ASLP);
}'TCHR _ NCHRS$CHION;
}'RSTB(M30R,CSL-(NCHRS$CHION),0,COMSTR:COMSTR,NCHRS//RDT0:E,Z);
}'GOTO RDT013 IF NCHRS$CHION = 0;
}'NCHRS$CHION _ NCHRS$CHION + TCHR;
}'GOTO RDT4;
RDT7:}"WCI(GCI(COMSTR//RDT2),DATSTR//RDT6) & GOTO RDT7;
RDT6:}"ERR('RD2',4);
RDT2:}"GOTO RDT1 IF T>=300B;
}'RLEN_(LENGTH(DATSTR)*3)/4;
RDT12: SETS(PSTR,0,0);
}'CMD_((T $ HCBTS LSH 3) V' T $ LCBTS)-24;
}'ERR('RD3',5) IF COMTAB1[CMD]#T;
}'GOTO RDT8 IF (T_R1LEN[CMD]+R2LEN[CMD])=0;
}'RPR1_RPR2_0;
RDT10: RSTB(M30R,T,0,PSTR:PSTR,NCHRS//RDT0:E,Z);
}'GOTO RDT10 IF LENGTH(PSTR)#T;
}'CLEAR(ASLP);
}'SETUP(RP1S,4,@RPR1,6);
}'SETUP(RP2S,4,@RPR2,6);
}'SETS(RP1S,4,4);
}'SETS(RP2S,4,4); SETS(PSTR,0,T);
}'WCD(GCD(PSTR//RDT9),RP2S//LF'PUNT) FOR I_1 TO R2LEN[CMD];
}'WCD(GCD(PSTR//RDT9),RP1S//LF'PUNT) FOR I_1 TO R1LEN[CMD];
RDT8:}"CMD _ CMD + 24;
}'(CLEAR(PIP) & GOTO RDT14) IF CMD=PFIN;
}'RETURN (CMD, RPR1,RPR2,RLEN);


}(ENTRY GRSPO(), FRETURN;
RDT14: CLEAR(BBT);
RDT13: SETS(COMSTR,0,0);
}'RSTB(M30R,CSL,0,COMSTR:COMSTR,NCHRS//RDT0:E,Z);
}'T_GCD(COMSTR//RDT11);
}'GOTO RDT12 IF NCHRS$BCHR ELSE ERR('RD2',4);
RDT11: ALARM'CLOCK_FAD(RRTC('RTC'),LNCON);
}'CHIOBIT_2B5 V' (4B7 RSH INTCEL);
}'SETICT(INTCEL,2B7 V' 1B4,0,ALARM'CLOCK//SF'PUNT);
}'BLOCK(CHIOBIT//SF'PUNT);
}'LZ_RRTC('RTC');
*})ERR('RD1',3) IF FGT(LZ,ALARM'CLOCK); TEMP REMOVAL FOR DEBUG REASONS
}(CLEAR(ASLP);
}'GOTO RDT13;
RDT0:}"ERR('RD1',3);
RDT9:}"ERR('RD3',5);




}(FUNCTION WDT(ARRAY BUF,LEN);
}'SETUP(DATSTR,8192,@BUF[0],6);
}'SETW(DATSTR,8192);
WDT1:}"SETS(COMSTR,0,0);
WDT2:}"WCI(GCI(DATSTR//WDT3),COMSTR//WDT4) & GOTO WDT2;
WDT4:}"WST(M30W,CSL,COMSTR:COMSTR,NCHRS//WDT0:E,Z);
}'GOTO WDT1;
WDT3:}"WST(M30W,CSL,COMSTR:COMSTR,NCHRS//WDT0:E,Z);
}'RETURN(0,0);
WDT0:}"ERR('WD0',6);

}(END;

}'PROGRAM}#OCTAL'PATCH;
}'INCLUDE COMDECS;
*
* OCTAL PATCH COMMAND
*
}(INT}'OP'PAGE'ADDR _ 544000B;
}'UINFL}%A'PAGE(0:6,12), A'WORD(0:13,23);
}'INTARY}$FN[LUFN]; INT FILE, ADDR, OLDP, T, BYTE;
}'CHR}'CH; ST LINE(80), FS;
}'CHR}'ERCODE;
}'INT}'ERMSNO;

}(ARBENT}$OCTAL'PATCH();
}'FILE _ -1; SETS(LINE,0,0);
}'SET'LINE'FIELD('EST',-2,1//SF'PUNT);
}'BYTE _ ACQUIRE'PMT(-1//SF'PUNT);
}'SET'MAP'BYTE(-1, OP'PAGE'ADDR$A'PAGE, BYTE//SF'PUNT);
LP:}$CH_GCI(LINE//READ);
}'IF CH='@' DO;* FILE NAME FOLLOWS
}'BSET(@FN[0],0,LFN);
}+FN[0] _ -1;
}+SETUP(FS, 16, @FN[3], 6);
WL1:}'WCI(CH, FS//WL1) WHILE (CH _ GCI(LINE//OPEN))#':';
}+SETUP(FS, 4, @FN[7], 6);
WL2:}'WCI(CH, FS//WL2) WHILE (CH _ GCI(LINE//OPEN))#':';
OPEN:}&T _ MOPEN'FILE(-1, FN, 0, 1//SF'PUNT);
}+MSET'OFT'CL(FILE,0//SF'PUNT) IF FILE#-1;
}+FILE _ T;
}+OLDP _ -1;
}'ENDIF;
}'IF CH=':' DO;* ADDRESS FOLLOWS
}'OCTAL'READ(LINE:ADDR,LINE//LF'PUNT);
}'ELSEIF CH=' ' DO;
}+OCTAL'READ(LINE:T,LINE//LF'PUNT);
}+IF ADDR$A'PAGE#OLDP DO;
}/CLEAR'PMT(BYTE//SF'PUNT);
}/MOVE'PAGE'PMT(BYTE, FILE//SF'PUNT);
}/OLDP _ ADDR$A'PAGE;
}+ENDIF;
}+OP'PAGE'ADDR[ADDR$A'WORD] _ T;
}+ADDR _ ADDR+1;
}'ELSEIF CH='*' DO;* ALL DONE
OUT:}#DELETE'PMT(BYTE//SF'PUNT);
}+MSET'OFT'CL(FILE,0//SF'PUNT) IF FILE#-1;
}+SET'LINE'FIELD('EST',-2,0//SF'PUNT);
}+RETURN;
}'ENDIF;
}'GOTO LP;
READ:}"LINE _ ERD'LINE(-1,LINE//SF'PUNT);
}'GOTO LP;

}'END;

}'PROGRAM}#OCTAL'READ;
}'INCLUDE COMDECS;
*
* READ OCTAL NUMBER FROM STRING
*

}(CHR}'CH; INT N, FLAG; ST S;

}(INTENT}$OCTAL'READ(S), FRETURN;
INIT:}"FLAG _ N _ 0;
LP:}$CH_GCI(S//EXIT1);
}'IF CH >= '0' AND CH <= '7' DO;
}+N _ N LSH 3 + CH - '0';
}+FLAG _ 1;
}+GOTO LP;
}'ENDIF;
}'GOTO LP IF FLAG = 0;
}'WCD(CH, S);
EXIT:}"RETURN (N,S);
EXIT1: RETURN (N,S) IF FLAG ELSE FRETURN;

}'END;

}'PROGRAM}#M1'RD'LINE;
}'INCLUDE COMDECS;
*
* M1-STYLE LINE COLLECTOR
*
}(INT}'N; CHR CH; ST NL;
}'CHR}'ERCODE;
}'INT}'ERMSNO;

*STENT}$ERD'LINE(N, NL) UCF(48);
*STENT}$EED'LINE(N, NL) UCF(49);
*})SEL'CIOS(N//TFR);
*})FR'CNINP IF CIOSP.CIOSIPT#1;
*})OUT'CH(NULCH);* FORCE OUTPUT
*})WS _ ST'DESC(CT _ LNGDES(NL$BP, NL$EP),
*},STKMAKE((CT+2)/3), 8, 0);
***** DO SOMETHING ABOUT HERALD
}(STENT}%ERD'LINE(N, NL), FRETURN;
LNKILL:SETS(NL,0,0);
GETCH: CH _ RD'CH();
}'IF CH='%' DO;
}+GCD(NL//GETCH);
}'ELSEIF CH='!' DO;
}+GOTO LNKILL;
}'ELSEIF CH='&M' V' 200B DO;
*}/OUT'CH('&J' V' 200B);
},GOTO EXIT;
}'ELSEIF CH<300B DO;* NOT CTLP(CH)
}'WCI(CH,NL//OVFLO);
}'ENDIF;
}'GOTO GETCH;

* LINE TERMINATION
EXIT:}#WCI(NLCH, NL//OVFLO);
*})CIOSP.CIOSOB$RP _ CIOSP.CIOSOB$WP _ CIOSOL$BP;
*})CIOSP.CIOSIB$RP _ CIOSP.CIOSIB$WP _ CIOSIL$BP;
}(RETURN NL;

* OVERFLOW (TEMPORARY)
OVFLO:}"GCD(NL);
}'GOTO EXIT;

}'END;

}'PROGRAM}$KLUDGE'RD'CH;
}'INCLUDE COMDECS;
*
*}"SPECIAL CHARACTER INPUT ROUTINE FOR LISTENER
*
}(ST}(CHS(2);
}'INT}'NC, CH;
}'INT}'S1CH _ 37B;
}'CHR}'ERCODE;
}'INT}'ERMSNO;

}(INTENT}$RD'CH();
LP:}$SETS(CHS, 0,0);
}'READ'STRING'BRK(-1,1,0,CHS:CHS,NC//SF'PUNT);
}'BLOCK(4B7 RSH GET'INT'NO('CHI'//SF'PUNT)//SF'PUNT) &
}(GOTO LP IF EMPTY(CHS);
}'CH _ GCI(CHS//LF'PUNT);
}'IF CH=S1CH DO;
}+CH _ 340B V' GCI(CHS//LF'PUNT);
}'ELSEIF CH<40B WHERE CH _ CH A' 177B DO;
}+CH _ 340B V' CH;
}'ELSE DO;
}+CH _ CH-40B;
}'ENDIF;
}'RETURN CH;