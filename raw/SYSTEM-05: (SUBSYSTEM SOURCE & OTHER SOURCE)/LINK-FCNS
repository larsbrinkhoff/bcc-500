}(COMMON SYSCALLS;

* MCALL DECLARATIONS

}(MACRO ARBMC_UNKNOWN MONITOR;
}(MACRO INTMC_INTEGER MONITOR;
}(MACRO STMC_STRING MONITOR;
}(MACRO LNMC_LONG MONITOR;
}(MACRO LNLNMC_LONGLONG MONITOR;

* CALLS TO MANIPULATE MIBS AND SIBS
}(INTMC CREATE'MIB_190;
}(ARBMC READ'MIBOB'INDEX_0;
}(ARBMC READ'MIBOB'NAME_1;
}(ARBMC SET'MIBOB'NAME_2;
}(ARBMC SET'MIBOB'ACCESS_3;
}(ARBMC SET'LOCK'LIST_4;
}(ARBMC DELETE'MIBOB_5;
}(INTMC CREATE'MIBOB_6;
}(ARBMC SET'MIB'ACCESS_10;
}(INTMC READ'MIB'ACCESS_11;
}(ARBMC SET'MIBOB'VALUE_12;
}(INTMC COPY'MIBOB_14;* UNIMPLEMENTED
}(ARBMC SET'NO'CHARGE_15;*** ???
}(INTMC READ'MIB'SPACE_16;
}(ARBMC SET'FILE'LOCK_18;*?* UNIMPLEMENTED
}(ARBMC SET'DURABILITY_28;*** ???

* OFT CALLS
}(INTMC MOPEN'FILE_19;
}(ARBMC MREAD'OFT_20;
}(ARBMC SET'OFT'AL_21;
}(INTMC MSET'OFT'CL_22;
}(ARBMC SET'FILE'LENGTH_23;* IMPROVE THIS FOR UTS
}(INTMC CR'FILE'PAGE_24;
}(INTMC DEL'FILE'PAGE_25;
}(INTMC NEXT'FILE'PAGE_26;
}(ARBMC MOVE'PAGE'PMT_27;

* PMT CALLS
}(INTMC ACQUIRE'PMT_50;
}(ARBMC NEW'PMT'PAGE_51;
}(ARBMC CLEAR'PMT_53;
}(ARBMC DELETE'PMT_54;
}(ARBMC SET'PMT'AL_55;
}(ARBMC SET'PMT'CL_56;
}(ARBMC SET'PMT'RO_57;
}(ARBMC READ'PMT_58;

* WORKING SET CALLS
}(ARBMC PUT'PAGE'DWS_65;
}(ARBMC PUT'PAGE'CWS_66;
}(INTMC DEL'PAGE'DWS_67;
}(INTMC DEL'PAGE'CWS_68;
}(INTMC READ'LWS_70;
}(ARBMC SET'LWS_71;

* SPT CALLS
}(INTMC MCREATE'SP_90;
}(ARBMC MDESTROY'SP_91;
}(ARBMC MREAD'SPT_95;
}(ARBMC READ'SPCS_96;
}(INTMC MRD'SPT'FIELD_97;
}(ARBMC MST'SPT'FIELD_98;
}(ARBMC READ'MAP_99;
}(ARBMC SET'MAP_100;
}(INTMC READ'MAP'BYTE_101;
}(ARBMC SET'MAP'BYTE_102;
}(INTMC READ'SPS'PARAM_106;

* SPCS CALLS
}(ARBMC SP'CALL_111;
}(ARBMC SP'JUMP_112;
}(ARBMC SP'TRAP_113;
}(ARBMC TRAP'RETURN_114;
}(ARBMC SP'BRANCH_115;
}(ARBMC SP'RETURN_116;
}(ARBMC JUMP'RETURN_117;
}(ARBMC MARK'CALL_118;
}(ARBMC DELETE'CALL_119;
}(ARBMC MODIFY'CALL_120;

* PROCESS CALLS
}(INTMC COPY'PMT'PROC_130;
}(INTMC ACTIVATE'PROC_132;
}(ARBMC TRANSFER'TERM_133;
}(ARBMC MAKE'DORMANT_134;
}(ARBMC INIT'PROC'PAGE_135;
}(ARBMC INIT'PROC'MAP_136;
}(ARBMC INIT'SPT_137;
}(INTMC READ'PROC'PARAM_211;

* IWS CALLS
}(ARBMC SET'PROC'INT_163;
}(ARBMC QUIT'BLOCK_164;
}(INTMC GET''INT'NO_165;
}(ARBMC READ'ICT_166;
}(ARBMC ALLOW'INTS_168;
}(ARBMC REFUSE'INTS_169;
}(ARBMC BLOCK_170;
}(ARBMC SET'ICT_172;
}(ARBMC SET'ICT'CL_173;
}(INTMC ACQUIRE'ICT_174;

* CHIO CALLS
}(ARBMC SET'LINE'FIELD_180;
}(ARBMC READ'LINE'TABLE_181;
}(ARBMC READ'STRING'BRK_182;
}(ARBMC WRITE'STRING_183;

* MISCELLANEOUS
}(ARBMC MON'LOCK_29;
}(ARBMC MON'UNLOCK_30;
}(LNMC READ'CLOCK_210;

* UCALL DECLARATIONS

}(MACRO ARBUC_UNKNOWN UTILITY;
}(MACRO INTUC_INTEGER UTILITY;
}(MACRO CHRUC_CHARACTER UTILITY;
}(MACRO STUC_STRING UTILITY;
}(MACRO LNUC_LONG UTILITY;

* MISCELLANEOUS UCALLS
}(ARBUC BREAK'POINT_0;*}-UCALL FOR DEBUGGING PROGRAMS
}(STUC ERRORMSG_1;*}0RETURN SYSTEM ERROR MESSAGE
}(STUC GET'PARAM_2;*}/STRIP PARAMETER FROM STRING
}(STUC GET'COM'LINE_3;*},GET CURRENT COMMAND LINE FROM UTS
}(INTUC ABRV'LKP_4;*}0LOOK UP ABBREVIATED NAME IN STARY
}(INTUC CON'ABRV'LKP_5;*},CONTINUE SAME IN NEW STARY

* FILE SYSTEM CALLS
}(ARBUC NAME'SEARCH_10;*},CONVERT FILE ST TO UTS NAME
}(ARBUC SPECIAL'SEARCH_11;*})VARIATION OF ABOVE
}(INTUC CONV'NAME_12;*}.CONVERT FROM UTS TO MON FILE NAME
}(ARBUC SPREAD'NAME_13;*},SPLIT FILE NAME STRING INTO COMP.
}(ARBUC READ'MIBOB'VALUE_14;*}'READ 'VALUE' OF MIB OBJECT
}(ARBUC DELETE'FILE_15;*},DELETE FILE AND CONTENTS
}(INTUC OPEN'FILE_16;*}.OPEN FILE W/WO LOCKING
}(ARBUC CLOSE'FILE_17;*}-CLOSE AND UNLOCK FILE
}(ARBUC READ'OFT_18;*}/READ OFT
}(INTUC READ'OFT'FIELD_19;*})READ OFT FIELD
}(ARBUC SET'OFT'CL_20;*}-SET OFT CONTROL LOCK
}(ARBUC CONV'KEY_21;*}/CONVERT DEFAULT ACCESS KEY

* EXTENDED SPS CALLS
}(INTUC CREATE'SSP_30;*}-CREATE SUBSIDIARY SUB-PROCESS
}(INTUC CREATE'PSP_31;*}-CREATE PARALLEL SUB-PROCESS
}(ARBUC ATTACH_32;*}1ATTACH PI FILE TO SUB-PROCESS
}(ARBUC DESTROY'SP_33;*}-DESTROY SUB-PROCESSES
}(ARBUC READ'SPT_34;*}/READ SPT
}(INTUC READ'SPT'FIELD_35;*})READ SPT FIELD
}(ARBUC SET'SPT'FIELD_36;*}*SET SPT FIELD
}(STUC READ'SPNAME_37;*},READ SUB-PROC NAME
}(ARBUC SET'SPNAME_38;*}-SET SUB-PROC NAME
}(INTUC SPNAME'SEARCH_39;*}+LOOK UP SP NAME

* CIOS MANIPULATION
}(INTUC CREATE'CIOS_40;*},CREATE CONTROL I/O STREAM
}(INTUC READ'CIOS'FIELD_41;*}(READ CIOS FIELD
}(ARBUC SET'CIOS'FIELD_42;*})SET (SOME) CIOS FIELDS
}(ARBUC SET'CIOS'INPUT_43;*})SET UP FOR INPUT
}(ARBUC SET'CIOS'OUTPUT_44;*}(SET UP FOR OUTPUT

* CIOS INPUT/OUTPUT
}(ARBUC PRINT'STRING_45;*}+WRITE STRING ON CIOS
}(ARBUC PRINT'CHAR_46;*}-WRITE (= BUFFER) CHAR ON CIOS
}(ARBUC START'OUTPUT_47;*}+DUMP OUTPUT BUFFER
}(STUC READ'LINE_48;*}.READ NEXT INPUT LINE
*STUC}&EDIT'LINE _ 49;*}.EDIT CURRENT LINE
}(CHRUC READ'CHAR_50;*}.READ NEXT CHARACTER
}(ARBUC BLOCK'OB'EMPTY_51;*})WAIT UNTIL OUT BUFFER IS EMPTY

* USER, ACCOUNT, AND GROUP PROFILES
}(STUC READ'UP'ITEM_60;*}+READ ITEM FROM USER PROFILE
}(STUC READ'UP'NAMES_61;*}*READ NAMES OF UP ITEMS
}(ARBUC SET'UP'ITEM_62;*},SET (CREATE) VALUE OF UP ITEM
}(ARBUC SET'UP'ACCESS_63;*}*SET ACCESS TO UP ITEM
}(LNUC FIND'MIB_64;*}/CONVERT USER NAME/NUMBER TO MIB ADDR
}(ARBUC CREATE'UP'ENTRY_65;*}(CREATE USER/UP ENTRY
}(ARBUC DELETE'UP'ENTRY_66;*}(DELETE USER/UP ENTRY

* PROCESSES, AND PROCESS PROFILE
}(ARBUC CREATE'PROCESS_70;*})CREATE/INITIALIZE PROCESS
}(STUC READ'PP'ITEM_71;*}+READ ITEM FROM PROCESS PROFILE
}(STUC READ'PP'NAMES_72;*}*READ NAMES OF PP ITEMS

}(ARBUC SET'PP'ITEM_73;*},SET (CREATE) VALUE OF PP ITEM

}(END;

}(COMMON DECDECS;
*
* SHORT DECLARATION MACROS FOR SPL
*

}(MACRO INT_DECLARE INTEGER;
}(MACRO OCT_DECLARE OCTAL;
}(MACRO PTR_DECLARE POINTER;
}(MACRO CHR_DECLARE CHARACTER;
}(MACRO ST_DECLARE STRING;
}(MACRO LN_DECLARE LONG;
}(MACRO LNLN_DECLARE LONGLONG;
}(MACRO LB_DECLARE LABEL;

}(MACRO OCTFL_DECLARE OCTAL FIELD;
}(MACRO INTFL_DECLARE INTEGER SIGNED FIELD;
}(MACRO PTRFL_DECLARE POINTER FIELD;
}(MACRO CHRFL_DECLARE CHARACTER FIELD;
}(MACRO STFL_DECLARE STRING FIELD;
}(MACRO LNFL_DECLARE LONG FIELD;
}(MACRO ARYFL_DECLARE ARRAY FIELD;
}(MACRO FNFL_DECLARE FUNCTION FIELD;

}(MACRO INTARY_DECLARE INTEGER ARRAY;
}(MACRO OCTARY_DECLARE OCTAL ARRAY;
}(MACRO PTRARY_DECLARE POINTER ARRAY;
}(MACRO CHRARY_DECLARE CHARACTER ARRAY;
}(MACRO STARY_DECLARE STRING ARRAY;
}(MACRO LNARY_DECLARE LONG ARRAY;
}(MACRO LBARY_DECLARE LABEL ARRAY;
}(MACRO FLARY_DECLARE FIELD ARRAY;
}(MACRO FNARY_DECLARE FUNCTION ARRAY;

}(MACRO INTARY1_DECLARE INTEGER ARRAYONE;
}(MACRO PTRARY1_DECLARE POINTER ARRAYONE;

}(MACRO INTFN_DECLARE INTEGER FUNCTION;

}(MACRO ARBENT_UNKNOWN ENTRY;
}(MACRO INTENT_INTEGER ENTRY;
}(MACRO OCTENT_POINTER ENTRY;
}(MACRO PTRENT_POINTER ENTRY;
}(MACRO CHRENT_CHARACTER ENTRY;
}(MACRO STENT_STRING ENTRY;
}(MACRO LNENT_LONG ENTRY;
}(MACRO LBENT_LABEL ENTRY;
}(MACRO ARYENT_ARRAY ENTRY;

}(MACRO ARBEXT_DECLARE UNKNOWN EXTERNAL;
}(MACRO INTEXT_DECLARE INTEGER EXTERNAL;
}(MACRO OCTEXT_DECLARE OCTAL EXTERNAL;
}(MACRO PTREXT_DECLARE POINTER EXTERNAL;
}(MACRO CHREXT_DECLARE CHARACTER EXTERNAL;
}(MACRO STEXT_DECLARE STRING EXTERNAL;
}(MACRO LNEXT_DECLARE LONG EXTERNAL;
}(MACRO LBEXT_DECLARE LABEL EXTERNAL;
}(MACRO ARYEXT_DECLARE ARRAY EXTERNAL;

}(MACRO C'(X)_;* KLUDGE FOR INTERNAL COMMENTS

}(MACRO LTABLE(F)_F$FLDWDSP+1;
}(INTFL FLDWDSP(0:13,23);

* LENGTHS OF NAMES
}(INT LMN_4,LTY_1,LFN_LMN+LTY;
}(INT NBY_4,LNCH_24/NBY,NMNCH_LMN*NBY,
}(NTYCH_LTY*NBY,NFNCH_LFN*NBY,NCMCH_90;

}(END;

}(COMMON SYS'COMMON; INCLUDE SYSCALLS;

*
* MCALLS, UCALLS, & GLOBAL CELLS
*

}(DECLARE INTEGER QUIT'FLAG;* GLOBAL QUIT FLAG
}(DECLARE INTEGER QUIT'FCN'FLAG;* GLOBAL QUIT FUNCTION FLAG
}(DECLARE INTEGER ERMSNO;* SYSTEM ERROR NUMBER
}(DECLARE CHARACTER ERCODE;* SYSTEM ERROR CODE

}(END;

}(COMMON MACHINE'DECS; INCLUDE DECDECS;
*
* DECLARATIONS FOR MACHINE-DEPENDENT PROGRAMMING
*

* MAXIMUM NUMBER OF ACTIVE TERMINALS PERMITTED ON SYSTEM

}'DECLARE PARAMETER MAX'PRT_32;
}'DECLARE PARAMETER MAX'TERMS_40;

* SYSTEM OBJECT LOCK DECLARATIONS
}'DECLARE PARAMETER LINKING_0;

* LOW-G DEFINITIONS
}(PTR STACK'PTR= G' [2],STACK'LIM= G' [3],
}(RTRAP'PARAM= G' [5],RTRAP'LOC= G' [4];

* FIELDS IN BLL DESCRIPTOR
}(PTRFL BRDPC(0:6,23),BRDLR(1:6,23);

* STATE DEFINTIONS
}(INT PSTLOC_0,ASTLOC_1,BSTLOC_2,CSTLOC_3,DSTLOC_4,
}(ESTLOC_5,XSTLOC_6,LSTLOC_7,GSTLOC_8,SSTLOC_9,
}(LSTATE_10;

* FIELDS FOR TRAP DEFINITIONS
}(PTRFL ADDR(0:6,23); OCTFL SP'TNO(-2),SP'TPAR(-1),
}(BLL'CLASS(0:3,5),UTSE'CLASS(0:0,1),
}(UTSE'SPTNO(0:1,5),UTSE'RTNO(0:2,5);

}(END;

}(COMMON COMDECS; INCLUDE DECDECS,SYS'COMMON;
*
* COMMON DECLARATIONS FOR CODING
*

* GENERALLY USEFUL MACROS

}(MACRO NAMSET(S,L,A,B)_SETUP(S,L,A,B) & S$WP_S$EP;
}(MACRO EMPTY(S)_LNGDES(S$RP,S$WP)<=0;*** WP=RP OR WP=BP?
}(MACRO REPEAT_ WHILE 1 DO;
}(MACRO ENDRPT_ ENDFOR;
}(MACRO FDISP(F)_RUNTIME'FAILURE() IF F$FLDSTB#0 OR
}(F$FLDSIZE#24 ELSE F$FLDWDSP;
}(OCTFL FLDSTB(0:8,12),FLDSIZE(0:3,7);

* ERROR MACROS
}(MACRO NC'PUNT_RUNTIME'FAILURE();* FOR NORMAL CALLS (EXPRESSIONS)
}(MACRO LF'PUNT_ VALUE NC'PUNT;* FOR LIBRARY FUNCTIONS
}(MACRO SF'PUNT_LF'PUNT:ERCODE,ERMSNO;* FOR SYSTEM CALLS

* QUIT ACTION MACROS
}(MACRO QUIT'PUNT(L)_ VALUE GOTO L IF ERCODE='QIT' ELSE
}(RUNTIME'FAILURE():ERCODE,ERMSNO;
}(MACRO QUIT'PUNTX(L,X)_ VALUE GOTO L IF ERCODE='QIT' ELSE
}(RUNTIME'FAILURE():X,ERCODE,ERMSNO;

* PARAMETRIC CHARACTER DEFINITIONS
}(CHR SCHERALD_'>' C'(/* SUB-COMMAND HERALD */),
}(BELCH_303B C'(/* BELL */),NULCH_300B C'(/* NULL */),
}(NLCH_307B C'(/* NEW LINE */),
}(LFCH_310B C'(/* LINE FEED */),
}(MBCH_200B C'(/* ZERO MULTIPLE BLANKS */),
}(SQTCH_'&'' C'(/* SINGLE QUOTE */),
}(DQTCH_'"' C'(/* DOUBLE QUOTE */),
}(SEPCH_'-' C'(/* SEPARATOR */);

* STRING POINTER FIELDS
}(OCTFL BP(0) C'(/* BEGINNING */),RP(1) C'(/* READER */),
}(WP(2) C'(/* WRITER */),EP(3) C'(/* END */);
* CHARACTER FIELDS
}(CHRFL CH0(0:0,7),CH1(0:8,15),CH2(0:16,23);
* BEAD LENGTH FIELD
}(PTRFL LENGF(-1:6,23);

* FIELDS IN UTILITY FILE NAME
}(LNFL UFNUN(0) C'(/* USER NUMBER/DISK ADDRESS */);
}(OCTFL UFNEN(2) C'(/* OBJECT ENTRY-NUMBER */),
}(UFNFN(3) C'(/* FILE NAME */),UFNMN(3) C'(/* MAIN NAME */),
}(UFNTY(3+LMN) C'(/* TYPE WORD */);

* FIELDS FOR UNO/DKA
}(OCTFL UNDKUN(0),
}(UNDKDK(1);

}(INT LUFN_LTABLE(UFNTY);* LENGTH OF UTILITY FILE:NAME

}(INT CB'PMT_1;* PMT ADDRESS OF CONTEXT BLOCK

* DECLARATIONS OF COMMON FUNCTIONS

* SPL RUNTIME FUNCTIONS
*ARBEXT}$SCOPY, APPEND, CNS, RUNTIME'FAILURE;
}(ARYEXT LBARY'KLUDGE;*, AR'DESC;
}(PTREXT SBASE; INTEXT ARRAYUB,ARRAYLB;* STEXT ST'DESC;
}(LNEXT LONG'ADD,LONG'SUB; INTEXT LONG'LE,LONG'LT;

* STORAGE ALLOCATOR
}(PTREXT STKMAKE;*, MAKE, SETZONE;
*ARBEXT}$STORINIT, SELZONE, EXTZONE, FREE, FREEZONE;

}(END;

}(COMMON UQNDECS; INCLUDE DECDECS;

* UNIQUE NAME FIELDS
}(OCTFL UQNTY(0:0,1),UQNPMB(0:0,0),UQNLFB(0:1,1),
}(UQNOWN(0:2,17),UQNHFN(0:18,23);
}(OCTFL UQNLFN(1:0,12),UQNLPN(1:13,23),
}(UQNSFN(1:0,15),UQNSPN(1:16,23);

}(END;

}(COMMON BFSDECS; INCLUDE UQNDECS;

* OBJECT TYPE-CODES
}(INT SIBSFCD_0,SIBLFCD_1,SIBPRCD_2,SIBAKCD_3,
}(SIBRSCD_4,SIBOWCD_5,SIBFRCD_6,
}(SIBSCCD_14,SIBLKCD_15;

* ACCESS KEY FIELDS
}(OCTFL ACK0(0),ACK1(1:0,7),ACKUN(1:8,23);
}(INT NORM'FIL'AC_0357B;* P(NO) F(RW) O(OW) - NORMAL ACCESS

}(END;

}(COMMON SIBDECS; INCLUDE BFSDECS;
*
* DECLARATIONS FOR SIB
*

* FIELDS IN SIB NAME (SIBN)
}(OCTFL SIBNOT(0:1,4),
}(SIBNLN(0:10,23),
}(SIBNAA(1:1,4),SIBNEN(1:10,23),
}(SIBNMN(2),SIBNFN(2);
}(OCTFL SIBNTY(SIBNMN$FLDWDSP+LMN),
}(SIBNLL(SIBNTY$FLDWDSP+1:4,11),
}(SIBNAC(SIBNLL$FLDWDSP:12,23);
}(OCTFL SIBNPA(SIBNAC$FLDWDSP:12,15),
}(SIBNFA(SIBNAC$FLDWDSP:16,19),
}(SIBNOA(SIBNAC$FLDWDSP:20,23);

}(INT LSIBN_LTABLE(SIBNOA);* LENGTH OF SIBN TABLE

* FIELDS IN SIB VALUE (SIBV)
}(OCTFL SIBVOT(0:1,4),
}(SIBVLN(0:10,23),
}(SIBVAA(1:1,4),SIBVEN(1:10,23);
}(LNFL SIBFLUN(2);
}(OCTFL SIBFLLEN(4),
}(SIBFLWD(5),
}(SIBFLRD(6);

}(LNFL SIBLKUN(2);
}(OCTFL SIBLKEN(4),
}(SIBLKMN(5),
}(SIBLKTY(5+LMN);

}(INT LSIBFL_LTABLE(SIBFLRD),LSIBLK_LTABLE(SIBLKTY),
}(LSIBV_(LSIBFL IF LSIBFL>LSIBLK ELSE LSIBLK);
}(INT MLSIB_(LSIBV IF LSIBV>LSIBN ELSE LSIBN);

}(END;

}(COMMON SPTDECS; INCLUDE DECDECS;

* FIELDS IN SPCS
}(OCTFL SPCSNIS(0:0,0),SPCSNIC(0:1,1),
}(SPCSCSP(0:2,5),SPCSPR(0:6,23),
}(SPCS940M(1:0,0),SPCSR0SP(1:2,5),SPCSLR(1:6,23),
}(SPCSR1SP(2:2,5),SPCSGR(2:6,23);
}(LNFL SPCSIT(3);
}(INT LSPCS_LTABLE(SPCSIT)+1;

}(INT NSPT_8;

}(END;

}(PROGRAM LABEL'KLUDGE; INCLUDE DECDECS;
*
* CONVERT SOURCE RELATIVE LABEL TO ABSOLUTE
*
}(LBARY A;

}(ARYENT LBARY'KLUDGE(A); RETURN A;

}(END;

}(PROGRAM LONG'COMPARE; INCLUDE DECDECS;
*
* COMPARE LONG VALUES
*
}(PTR P,Q; INT N;
}(DECLARE INTEGER TEST;

}(INTENT LONG'COMPARE(INTEGER @P,INTEGER @Q,N);

}(FOR N_N-1 BY -1 TO 0 DO;
},TEST_P[N];
},RETURN 1 IF TEST#Q[N];
}(ENDFOR;
}(RETURN 0;

}(END;

}'PROGRAM COMPARE'STRING;

*}&THIS FUNCTION COMPARES TWO STRING AND RETURNS -1 IF THEY ARE
* IDENTICAL AND 0 IF THEY AREN'T.}"THIS FUNCTION FAILS IF THE TWO STRINGS
* DON'T HAVE THE SAME CHARACTER SIZES.


}'DECLARE INTEGER
}*CHAR1,},/* A CHARACTER READ FROM THE STRING FIRST */
}*CHAR2,},/* A CHARACTER READ FROM THE STRING}'*/
}</*}#SECOND}?*/
}*COUNT,},/* JUST A COUNTER FOR A FOR LOOP}**/
}*LENGTH'FIRST;}%/* THE LENGTH OF THE STRING FIRST})*/

}'DECLARE FIELD
}*CHAR'SIZE (0:2,3); /* THE SIZE OF CHARACTERS IN THE STRING}"*/

}'DECLARE STRING
}*FIRST,
}*SECOND;


}'FUNCTION COMPARE'STRING(FIRST, SECOND), FRETURN;

}'FRETURN IF FIRST$CHAR'SIZE # SECOND$CHAR'SIZE;
}'LENGTH'FIRST _ LENGTH(FIRST);

}'IF LENGTH'FIRST # LENGTH(SECOND) DO;
}*RETURN 0;
}'ELSE DO;
}*FOR COUNT _ 1 TO LENGTH'FIRST DO;
}-CHAR1 _ GCI(FIRST);
}-CHAR2 _ GCI(SECOND);
}-RETURN 0 IF CHAR1 # CHAR2;
}*ENDFOR;
}*RETURN -1;
}'ENDIF;



}'END;

}(PROGRAM SCOPY; INCLUDE COMDECS;
}(PTR P; ST S,D; STFL A(0);

}(ARBENT SCOPY(STRING @P,S), FRETURN;
}(D_P.A; P.RP_D$WP_D$RP_D$BP; GOTO L;

}(ARBENT APPEND(STRING @P,S), FRETURN;
}(D_P.A;

L:
}(REPEAT; WCI(GCI(S// VALUE P.WP_D$WP & RETURN),D// FRETURN); ENDRPT;

}(END;

}(PROGRAM ST'DESC; INCLUDE COMDECS;
}(INT N,S,O; PTR P; ST X;
}(STENT ST'DESC(N,P,S,O);

}(P_MAKE(S*(N+24/S-1)/24) IF P=0;

}(IF S=8 DO;
},.LDA 44B6;
}(ELSEIF S=6 DO;
},.LDA 40B6;
}(ELSEIF S=12 DO;
},.LDA 50B6;
}(ELSEIF S=24 DO;
},.LDA 54B6;
}(ELSE DO;
},RUNTIME'FAILURE();
}(ENDIF;

}(.IOR P; .XMA O; .LSHA 18; .IOR O; .LDX-1; .ASP; .CXA;
}(.STA X$BP; .STA X$RP; .STA X$WP; .LDX N; .ASP; .STX X$EP;
}(RETURN X;

}(END;

}(PROGRAM CNS; INCLUDE COMDECS;
}(INT N,F,R,T,I,D; PTR P; ST S,B(25); STFL A(0);

}(ARBENT CNS(N,STRING @P,F,R), FRETURN;

}(S_P.A;
}(FRETURN IF R<2 OR R>36;
}(T_(-N IF F>=0 AND N<0 ELSE N);
}(B$RP_B$WP_B$EP; I_0;
LP:}%.LDA T; .LSHD-23; .DIV R; .STA T; .STB D;
}(WCD(D+('0' IF D<10 ELSE 'A'-10),B);
}(I_I+1; GOTO LP IF T#0;
}(WCD('-',B) & I_I+1 IF F>=0 AND N<0;
}(F_F A' 77B;
}(IF F=0 DO;
},F_I;
}(ELSEIF F<=I DO;
},B$RP_INCDES(B$EP,-I);
}(ELSE DO;
},WCI(' ',S// FRETURN) FOR I_I+1 TO F;
}(ENDIF;
}(WCI(D,S// FRETURN)
}(FOR D_GCI(B// VALUE P.WP_S$WP & RETURN) WHILE 1;

}(END;

}(PROGRAM CSN; INCLUDE COMDECS;
}(PTR P; INT R,F,D,N,FLB,FLP,PW; ST S; STFL A(0);

}(INTENT CSN(STRING @P,R), FRETURN;

}(FLB_FLP_0;

AGN:}$S_P.A; FRETURN IF R<2 OR R>36;

}(IF D_GCI(S// FRETURN)='-' OR D='+' DO;
},F_(1 IF D='-' ELSE 0); D_GCI(S// FRETURN);
}(ELSE DO;
},F_0;
}(ENDIF;

}(D_D-'0' IF D>='0' AND D<='9' ELSE
}(D_D-('A'-10) IF D>='A' AND D<='Z' ELSE FRETURN;
}(FRETURN IF D>=R; N_D;

}(FOR D_GCI(S//Y) REPEAT;
},D_D-'0' IF D>='0' AND D<='9' ELSE
},D_D-('A'-10) IF D>='A' AND D<='Z' ELSE GOTO X;
},GOTO X IF D>=R; N_N*R+D;
}(ENDRPT;

X:}&IF R<=10 AND (D_D+'A'-10='B' OR D='D') DO;
},IF FLB DO;
}0S$RP_INCDES(S$RP,1) IF FLP;
},ELSE DO;
}0FLB_-1;
}0PW_GCI(S//Z); PW_PW-'0' & FLP_-1 IF PW>='0' AND PW<='9'
}0ELSE S$RP_INCDES(S$RP,-1);
Z:}.R_8 & GOTO AGN IF D='B' AND R#8;
}0R_10 & GOTO AGN IF D='D' AND R#10;
},ENDIF;
}(ELSE DO;
},S$RP_INCDES(S$RP,-1);
}(ENDIF;
Y:}&N_N*R FOR D_1 TO PW IF FLP;
}(P.RP_S$RP; RETURN (-N IF F ELSE N);

}(END;

}(PROGRAM SBASE; INCLUDE COMDECS;
*
* FIND BASE ADDRESS OF WORD-ORIGINED STRING DESCRIPTOR
*
}(ST S;

}(PTRENT SBASE(S);
}(.LDA S$BP; .LDX 1; .ASP; .CXA;
}(.CMZ 3B6; .BNE L; .ETR 777777B; RETURN;
L:}&RUNTIME'FAILURE();

}(END;

}(PROGRAM ALENGTH; INCLUDE COMDECS;
*
* COMPUTE ARRAY BOUNDS
*
}(PTR A; OCTFL ABW(0);
}(INTENT ARRAYUB(A);
}(.LDA A.ABW; .CMZ 2B6; .BNE R' [2]; .ETR 17777B;
}(.ETR 377777B; RETURN;

}(INTENT ARRAYLB(A);
}(.LDA A.ABW; .ETR 1B7; .ASHA-21; RETURN;

}(END;

}(PROGRAM LONG'ARITH; INCLUDE COMDECS;
*
* LONG ARITHMETIC/RELATIONALS
*
}(LN X,Y; OCTFL W0(0),W1(1);

}(LNENT LONG'ADD(X,Y);* ADD
}(.LDA X$W1,ADD Y$W1,CAB;
}(.LDA X$W0,ADC Y$W0; RETURN;

}(LNENT LONG'SUB(X,Y);* SUBTRACT
}(.LDA X$W1,SUB Y$W1,CAB;
}(.LDA X$W0,SUC Y$W0; RETURN;

}(INTENT LONG'LE(X,Y);* LESS THAN OR EQUALS
}(RETURN (1 IF LONG'SUB(X,Y)$W0<=0 ELSE 0);

}(INTENT LONG'LT(X,Y);* LESS THAN
}(RETURN (1 IF LONG'SUB(X,Y)$W0<0 ELSE 0);

}(END;

}(COMMON ALLOC'DECS;

*
* SPL STORAGE ALLOCATOR
*

* THE BASIC STRUCTURE OF A STORAGE BLOCK IS AS IN THE OLD ALLOCATOR,
* I.E. THE WORD BEFORE THE 0'TH WORD OF A BLOCK CONTAINS THE LENGTH
* OF THE BLOCK (NUMBER OF INFORMATION WORDS +1), A FLAG IN BIT 0
* TO SAY THAT THE BLOCK IS FREE, AND A FLAG IN BIT 1 TO SAY THAT
* THE NEXT LOWER BLOCK IS FREE.
}(DECLARE FIELD HIDDEN(-1),HSIZE(-1:6,23),HFREE(-1:0,0),
}(HFTAG(-1:1,1),HZTAG(-1:2,2);
* FREE STORAGE COMES IN ZONES.}"A ZONE CONSISTS OF A ZONE HEADER
* AND A CHAIN OF EXTENSIONS.}"THE ZONE HEADER CONTAINS: THE BLOCK
* SIZE FOR THE ZONE (0 MEANS ALL SIZES ARE ALLOWABLE), THE OVERFLOW
* ROUTINE, THE EXTENSION LIST, AND THE FREE LIST ROVER.
}(DECLARE FIELD FEXT(0),FLIST(2),FUNCTION FIELD FOVX(1);
}(DECLARE PARAMETER FZHS_3;
* THE FEXT WORD IN EACH EXTENSION POINTS TO THE NEXT ONE.}"THIS CHAIN,
* IS TERMINATED BY A -1.}"THE FIRST TWO WORDS
* OF A FREE BLOCK ARE USED TO HOLD THE ADDRESS OF THE NEXT FREE
* BLOCK AND THE PREVIOUS FREE BLOCK.}"THIS LIST IS CIRCULAR.
}(DECLARE FIELD NBLK(0),PBLK(1);
* FOR FIXED-SIZE ZONES, THE ENTIRE FREE LIST AND THE HIDDEN WORDS
* ARE SET UP AT THE TIME AN EXTENSION IS CREATED.}"FOR VARIABLE-SIZED
* ZONES, AN EXTENSION IS SET UP AS A SINGLE FREE BLOCK WHICH IS
* SUBDIVIDED AS THE NEED ARISES.}"A FIRST-FIT STRATEGY WITH A "ROVER"
* IS USED FOR THE LATTER.}"BLOCKS BELOW A MINIMUM SIZE WILL NOT BE CREATED.
}(DECLARE PARAMETER MINSIZ_3;

}(DECLARE INFINITY'ZONE,CURRENT'ZONE;* ZONE VARIABLES FOR ALLOCATOR

}(END;

}(PROGRAM STKMAKE; INCLUDE ALLOC'DECS;
}(FIXED;
*
* ALLOCATE LOCAL (STACKED) STORAGE
*
}(DECLARE SP= G' [2],SL= G' [3],BLK,SIZE;

}(FUNCTION STKMAKE(SIZE);

}(RUNTIME'FAILURE() IF SP+SIZE>=SL;
}(SP_(BLK_SP+1)+SIZE;
}(BLK.HIDDEN_SIZE+1;
}(BSET(BLK,0,SIZE);
}(RETURN BLK;

}(END;

}(PROGRAM MAKE; INCLUDE ALLOC'DECS;
*
* ASSIGN BLOCK OF SIZE (A) IN ZONE (B)
*
}(DECLARE BLK,ROVER,RSIZE,EBLK,ROVEC;

}(FUNCTION MAKE(SIZE,ZONE);

}(ZONE_CURRENT'ZONE IF ZONE=0;
}(SIZE_SIZE+1;
}(SIZE_MINSIZ IF (SIZE<MINSIZ);
}(GOTO MAKEOV IF ZONE.FLIST<0;
* VARIABLE-SIZED ZONE
}(ROVEC_ROVER_ZONE.FLIST;
MAKE1:}"RSIZE_ROVER.HSIZE;
}(IF RSIZE<SIZE+MINSIZ AND RSIZE#SIZE DO;
},GOTO MAKE1 IF (ROVER_ROVER.NBLK)#ROVEC
},ELSE GOTO MAKEOV;
}(ENDIF;
}(EBLK_(BLK_ROVER)+ROVER.HSIZE;
}(EBLK.HFTAG_0;
}(IF ROVER.HSIZE=SIZE DO;
* EXACT FIT
},BLK.HFREE_0;
},ZONE.FLIST_RFB(ROVER,ZONE);
}(ELSE DO;
* SPLIT THE BLOCK
},BLK_EBLK-SIZE;
},BLK.HIDDEN_1@HFTAG+SIZE;
},BLK[-2]_-RSIZE IF (RSIZE_ROVER.HSIZE_ROVER.HSIZE-SIZE)>MINSIZ;
}(ENDIF;
* COMMON EXIT
}(BSET(BLK,0,SIZE-1);
}(RETURN BLK;

* OVERFLOW
MAKEOV: BLK_(ZONE.FOVX)(SIZE-1,ZONE); RETURN BLK;

}(END;

}(PROGRAM RFB; INCLUDE ALLOC'DECS;
}(FUNCTION RFB(RBLK,ZONE);
* SUBROUTINE TO REMOVE A BLOCK FROM THE FREELIST
}(IF RBLK.NBLK=RBLK DO;
},RETURN ZONE.FLIST_-1;
}(ELSE DO;
},ZONE.FLIST_RBLK.NBLK IF ZONE.FLIST=RBLK;
},RBLK.NBLK.PBLK_RBLK.PBLK;
},RETURN RBLK.PBLK.NBLK_RBLK.NBLK;
}(ENDIF;

}(END;

}(COMMON USERDECS; INCLUDE COMDECS;
*
* DECLARATIONS FOR USER PROGRAMS
*
}(ST OL(NCMCH);* OUTPUT BUFFER FOR USER CONSOLE OUTPUT
}(LB TRAP'LABEL;* GO HERE AFTER TRAP
}(PTR INITIAL'SP_3000B, NORMAL'SL_3777B;

}(INT WAKEUP'TIMER, THIS'SUB'PROCESS;
* OUTPUT MACROS
}(MACRO IOUT()_SETS(OL,0,0);
}(MACRO PTCH(C)_WCI(C,OL);
}(MACRO PTST(S)_APPEND(OL,S//LF'PUNT);
}(MACRO PTNO(N,F,R)_CNS(N,OL,F,R//LF'PUNT);
}(MACRO PTDN(N)_PTNO(N,4B7,10);
}(MACRO PTON(N)_PTNO(N,4B7,8);
}(MACRO PTNL()_WCI(NLCH,OL);
}(MACRO PTIS(S)_SCOPY(OL,S//LF'PUNT);

}(END;

}(COMMON TRAP'DECS; INCLUDE MACHINE'DECS;

* TRAP VARIABLES
}(INT TRAP'FLAG;* FLAG INDICATING WHETHER A TRAP IS BEING PROCESSED
}(PTR INSTR'LOC;* PTR TO INSTR FOLLOWING ONE CAUSING ABE TRAP
}(INT SAVEL;* SAVE L-REG WHILE DOING EAC IN ABE'TRAP
}(INT GSAVER; INTARY GSTATE[LSTATE],SP'GSTATE[LSTATE];* GLOBAL TRAP STATES
}(INT SP'LEV;* SUBPROCESS LEVEL ON ENTRY

}(END;

}(PROGRAM USER'ENTRIES; INCLUDE USERDECS,TRAP'DECS;
*
* ENTRY POINTS
*
}(FIXED;

}(MACRO SAVE'STATE(X)_.STX X[XSTLOC],EAX X[0],STORS,MIN TRAP'FLAG;

* COME HERE AFTER TRAP MESSAGE
T'L:}$JUMP'RETURN(
}(READ'SPS'PARAM('CSL'//SF'PUNT)-SP'LEV-1//T'R:ERCODE,ERMSNO);
T'R:}$SP'RETURN(//SF'PUNT);

* INITIAL AND 'CONTINUE' SUBPROCESS ENTRIES
}(ARBENT XXXXXX(), SP'ENTRY _2;
}(ARBENT XXXXXY(), SP'ENTRY _3;

}(.LDA INITIAL'SP,XLA;
}(TRAP'LABEL_T'L; TRAP'FLAG_QUIT'FCN'FLAG_QUIT'FLAG_0;
}(STACK'PTR_INITIAL'SP; STACK'LIM_NORMAL'SL;
}(SP'LEV_READ'SPS'PARAM('CSL'//SF'PUNT);
}(SET'SPT'FIELD(-1,'TM',READ'SPT'FIELD(-1,'TCM'//SF'PUNT)
}-//SF'PUNT);
}(RUN'USER(); RUNTIME'FAILURE();

* SP'TRAPS COME HERE
}(ARBENT XXXSPT(), SP'ENTRY _0; SAVE'STATE(SP'GSTATE); STRAP();


* RING TRAPS
}(ARBENT XXXABE(), TRAP'ENTRY _1; SAVE'STATE(GSTATE); ABE'TRAP();
}(ARBENT XXXFLO(), TRAP'ENTRY _2; SAVE'STATE(GSTATE); RTRAP(2);
}(ARBENT XXXFLU(), TRAP'ENTRY _3; SAVE'STATE(GSTATE); RTRAP(3);
}(ARBENT XXXRO(), TRAP'ENTRY _4; SAVE'STATE(GSTATE); RTRAP(4);
}(ARBENT XXXIAT(), TRAP'ENTRY _5; SAVE'STATE(GSTATE); RTRAP(5);
}(ARBENT XXXUFN(), TRAP'ENTRY _6; SAVE'STATE(GSTATE); RTRAP(6);
}(ARBENT XXXFXO(), TRAP'ENTRY _7; SAVE'STATE(GSTATE); RTRAP(7);
}(ARBENT XXXDIZ(), TRAP'ENTRY _8; SAVE'STATE(GSTATE); RTRAP(8);

* STACK OVERFLOW - WATCH OUT
}(ARBENT XXXSOV(), TRAP'ENTRY _9; STKTRAP();

}(END;

}(PROGRAM PUNT; INCLUDE USERDECS,TRAP'DECS;
}(INCLUDE SPTDECS;
*
* MAIN TRAP/PUNT PROCESSING ROUTINE
*
}(INT N,P,Q,SR;
}(INT LSPCS_5;
}(LB R= L' [0];
}(INTARY SPCA[LSPCS],STATE[LSTATE];
}(PTR SA;* POINTER TO STATE[0]
}(MACRO IS'TSB'INSTR(X)_((X) A' 07740000B=04600000B);
}(OCTFL UTNO(0:0,5),SPCSLR(1:6,23);
}(LB FIELD LBW0(0);

}(MACRO SAVE'STATE(X)_BCOPY(SA_@STATE[0],@X[0],LSTATE) &
}((TRAP'PUNT() IF TRAP'FLAG#1);
}(MACRO SPT'PUNT_SPTPUNT:ERCODE,ERMSNO;

*
* ENTRY FOR RING TRAPS
*
}(ARBENT RTRAP(N);
}(SAVE'STATE(GSTATE);
RTPUNT: RPUNTMSG(N,RTRAP'LOC); GOTO PUNTCOM;

*
* SPECIAL ENTRY FOR 'ABE' TRAP -
* CHECK IF REFERENCE IS FOLLOWED BY TSB OPCODE
*
}(ARBENT ABE'TRAP();
}(SAVE'STATE(GSTATE);
}(INSTR'LOC_RTRAP'LOC+1;
}(IF IS'TSB'INSTR($INSTR'LOC) DO;
},.LDX SA[XSTLOC],LDA SA[LSTLOC],XLA,STA SAVEL,EAC$INSTR'LOC;
},.LDA SAVEL,XLA,STX Q;
},R$BRDPC_Q;
},SA[PSTLOC]_@ABE'EXIT;
},R$BRDLR_SA[LSTLOC];
},SA[LSTLOC]_@R;
},TRAP'FLAG_0;
},.LDX SA,LOADS;
ABE'EXIT:}#RETURN;
}(ENDIF;
}(N_1; GOTO RTPUNT;

*
* ENTRY FOR SP TRAPS
*
}(ARBENT STRAP();
}(SAVE'STATE(SP'GSTATE); ALLOW'INTS() IF (N_@R.SP'TNO)#23; Q_@R.SP'TPAR;
}(READ'SPCS(0,SPCA//SPT'PUNT); R$BRDLR_SPCA[0]$SPCSLR;
}((@R)[-1]_P_(@R)[1];* SO UWSTK LABELS WILL WORK
}(P_SPCA[0]$SPCSPR;
}(GOTO SPTPUNT IF N#23;

* QUIT
QUIT:}#QUIT'FLAG_1;
}(TRAP'FLAG_0;
*!!!}$QUIT'FCN() IF QUIT'FCN'FLAG;
}(SA[LSTLOC]_@R-2;
}(SET'SPT'FIELD(-1,'TM',READ'SPT'FIELD(-1,'TM'//SF'PUNT) V' 1
}(//SF'PUNT);
}(SA[PSTLOC]_@QUITX; .LDX SA,LOADS;
QUITX:}"SP'RETURN(//SPT'PUNT);


* FREE STORAGE OVERFLOW
}(ARBENT OFLOTRAP(ERCODE,ERMSNO);
}(R_R$BRDLR.LBW0; N_24; GOTO RTF;

* UNEXPECTED RUNTIME FAILURE
}(ARBENT RUNTIME'FAILURE(); N_25;
RTF:}$P_R$BRDPC; Q_0;

SPTPUNT:SPUNTMSG(N,P,Q);
PUNTCOM:TRAP'FLAG_0;
}(GOTO TRAP'LABEL;

* TRAP DURING STATE-SAVING
}(ARBENT TRAP'PUNT();
}(SPUNTMSG(26,R$BRDPC,0); GOTO PUNTCOM;

}(END;

}(PROGRAM STKOV'TRAP; INCLUDE USERDECS;
}(INCLUDE TRAP'DECS;
*
* STACK OVERFLOW TRAP PROCESSING
*
}(FIXED;
}(INT R= L' [0];

}(ARBENT STKTRAP();
}((@R).BRDLR_(@R).BRDLR.BRDLR WHILE STACK'LIM-(@R).BRDLR<100B;
}(RPUNTMSG(9,RTRAP'LOC);
}(TRAP'FLAG_0; GOTO TRAP'LABEL;

}(END;

}(PROGRAM UTRAP'MSG; INCLUDE USERDECS,MACHINE'DECS;
*
* PRINT USER TRAP MESSAGE
*?*}"THIS ROUTINE SHOULD FRETURN, RATHER THAN PUNTING (COULD CAUSE
*?*}'PUNT LOOP AND STACK OVERFLOW)
*
}(ST MSG(60),CM; INT N,P,Q,T;
}(CHRARY RN[10]_(6'RT0?',6'ABE',6'FLO',6'FLU',6'ROIA',
}(6'IAT',6'UFN',6'FXO',6'DIZ',6'SOV');
}(CHRARY SN[27]_(6'MACC',6'PRO',6'PNIM',6'PNIC',6'PI',
}(6'TI',6'BLL',6'ILIM',6'PNOD',6'DWSO',6'CWSO',
}(6'NEP',6'DMRD',6'NILE',6'SPCO',6'PMTO',6'DKSE',
}(6'?17?',6'?18?',6'?19?',6'?20?',6'?21?',6'UTSE',
}(6'QUIT',6'FSOV',6'PUNT',6'TRAP');

}(ARBENT RPUNTMSG(N,P); N_-(N+1);
}(ARBENT SPUNTMSG(N,P,Q);


}(SETS(MSG,0,0); WCI(NLCH,MSG);
}(APPEND(MSG,"USER TRAP '"//LF'PUNT);

COM:
}(IF N=22 DO;* 'UTSE' ERROR
}(APPEND(MSG,"UTSE - "//LF'PUNT);
},N_(Q$UTSE'SPTNO IF T_Q$UTSE'CLASS>1 ELSE
},6 IF T=1 ELSE -(Q$UTSE'RTNO+1));
}(ENDIF;

}(IF N=6 DO;* BLL ERROR
}(PUNT'WWD(MSG,6'BLL-'); WCI(Q$BLL'CLASS V' '0',MSG);
}(ELSE DO;
},PUNT'WWD(MSG,SN[N] IF N>=0 ELSE RN[-(N+1)]);
}(ENDIF;
}(APPEND(MSG,"' AT P: "//LF'PUNT);
}(CNS(P,MSG,4B7,8//LF'PUNT); WCI('B',MSG);

}(WCI(NLCH,MSG);
QT'P:}#PRINT'STRING(-1,MSG,0//QUIT'PUNTX(QT'P,MSG));
}(RETURN;

}(END;

}(PROGRAM PUNT'WWD; INCLUDE COMDECS;
*
* APPEND 4 CHARACTER NAME TO STRING
*
}(PTR P; CHR M,C; ST S; STFL A(0); CHRFL CH60(0:0,5);

}(ARBENT PUNT'WWD(STRING @P,M); S_P.A;

}((WCI(C,S) IF C#' ') & M_M LSH 6
}(FOR C_M$CH60 WHILE M#6'}$';
}(P.WP_S$WP; RETURN;

}(END;

}(PROGRAM VARIOUS; INCLUDE USERDECS;

*
* CLEAR CIOS NPUT/OUTPUT &
* TYPE NEWLINE
*

}(ARBENT CLEAR'CIOS();
LP:}%QUIT'FLAG_0;
}(SET'CIOS'FIELD(-1,'OCC',0//SF'PUNT);
}(SET'CIOS'FIELD(-1,'ICC',0//SF'PUNT);
}(IOUT();
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNT(LP));
}(RETURN;

*
* REMOVE QUIT CALL FROM SPCS AND UNWIND STACK
* BY NON-LOCAL GOTO
*

}(ARBENT ZAP(LABEL ZLAB);
}(DELETE'CALL(//SF'PUNT);
}(GOTO ZLAB;
}(END;

}(COMMON MYCALLS; INCLUDE USERDECS;
}(DECLARE STRING ARRAY ENTRIES[8]_("LINK-TO","WHERE-IS","BROADCAST",
}("WHO-IS-ON","LINE","BREAK-LINKS","ALLOW-LINKS","REFUSE-LINKS");
}(END;

}(PROGRAM OUTPUT'FNS; INCLUDE MYCALLS;
}(DECLARE CHARACTER C;
}(DECLARE STRING S1,S2;
}(DECLARE LABEL QL;

}(ENTRY PRINT2(S1,S2,QL);
}(PRINT'STRING(-1,S1,QUIT'FLAG//QUIT'PUNTX(QL,S1));
}(PRINT'STRING(-1,S2,QUIT'FLAG//QUIT'PUNTX(QL,S2));
}(RETURN;

}(ENTRY END'LINE(S1,QL);
}(PRINT'STRING(-1,S1,QUIT'FLAG//QUIT'PUNTX(QL,S1));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(QL,C));
}(RETURN;

}(END;

}(PROGRAM GET'TABLE; INCLUDE MYCALLS;
}(DECLARE INTEGER I,PMTI,OFTI,LNO,KEY,USRR_0;
}(DECLARE INTEGER ARRAY FN[LUFN];
}(DECLARE POINTER PTR2;
}(DECLARE STRING NAME_6"#1:X298-ACTUSR:BIN"; /* SECURITY PURPOSES */
}(DECLARE INTEGER FIELD PAG'FL(0:6,12);

}(ENTRY GET'TABLE(), FRETURN;
}(KEY_READ'PROC'PARAM('IKY'//SF'PUNT);
}(NAME'SEARCH(NAME,FN,1,'',KEY//ERROR:ERCODE,ERMSNO);
}(MOPEN'FILE(-1,FN,0,KEY:OFTI//ERROR:ERCODE,ERMSNO);
}(ACQUIRE'PMT(-1:PMTI//SF'PUNT);
}(FOR I_1,I+1 WHILE READ'MAP'BYTE(-1,I//SF'PUNT)#0 DO;
}(ENDFOR;
}(SET'MAP'BYTE(-1,I,PMTI//SF'PUNT);
}(MOVE'PAGE'PMT(OFTI,0,PMTI//SF'PUNT);
}(LNO_READ'PROC'PARAM('TNO'//SF'PUNT);
}(PTR2_I@PAG'FL+USRR;
}(RETURN (OFTI,PMTI,PTR2,LNO,KEY);

ERROR:}"FRETURN (ERCODE,ERMSNO);

}(END;

}(PROGRAM FIND; INCLUDE MYCALLS,MACHINE'DECS;
}(DECLARE INTEGER FIELD UPUN(0:0,15);
}(DECLARE FIELD LINE'FIELD(0:0,11),MIB'FIELD(0:12,23);
}(DECLARE FIELD PROC(3:11,23);
}(DECLARE STRING NAME,IN(72),OUT(72);
}(DECLARE POINTER P,Q;
}(DECLARE INTEGER I,J,K,KEY,TEST,UNO,LNO,USE'COUNT;
}(DECLARE ARRAY TABLE[7];

}(GOTO EXIT;}5/* HORRIBLE SPL KLUDGE */

}(POINTER ENTRY FIND(NAME,Q,KEY,K), FRETURN;
}(SETS(IN,0,0);
}(IN_READ'UP'ITEM('UP',-1,0,NAME,"#",IN,KEY// VALUE
}-(FRETURN (ERCODE,ERMSNO) IF ERCODE#'ENF' ELSE
}-GOTO ILLEGAL):ERCODE,ERMSNO);
}(UNO_SBASE(IN).UPUN;
}(IF K=-1 DO;
}+FOR I_0 TO MAX'PRT-1 DO;
}.IF Q.MIB'FIELD=UNO DO;
}1READ'LINE'TABLE((LNO_Q.LINE'FIELD) LSH 1,TABLE//EXIT);
}1RETURN(LNO,UNO) IF TABLE[0]$PROC=I;
}.ENDIF;
}.Q_Q+4;
}+ENDFOR;
ILLEGAL:}#PRINT2(NAME," NOT ACTIVE.",EXIT);
EXIT:}&END'LINE("",EXIT);
}+RETURN (-1,UNO);
}(ELSE DO;
}+USE'COUNT_0;
}+P_Q;
}+FOR I_0 TO MAX'PRT-1 DO;
}.USE'COUNT_USE'COUNT+1 IF P.MIB'FIELD=UNO;
}.P_P+4;
}+ENDFOR;
}+IF USE'COUNT>0 DO;
}.FOR LNO_0 TO MAX'TERMS-1 DO;
}1P_Q;
}1FOR I_0 TO MAX'PRT-1 DO;
}4IF P.MIB'FIELD=UNO AND P.LINE'FIELD=LNO DO;
}7READ'LINE'TABLE(LNO LSH 1,TABLE//EXIT);
}7IF TABLE[0]$PROC=I DO;
}:PRINT'LINE'NO(NAME,LNO,K:K);
}:GOTO EXIT IF (USE'COUNT_USE'COUNT-1)=0;
}7ENDIF;
}4ENDIF;
}4P_P+4;
}1ENDFOR;
}.ENDFOR;
}.P_Q;
}.FOR I_0 TO MAX'PRT-1 DO;
}1IF P.MIB'FIELD=UNO DO;
}4READ'LINE'TABLE((LNO_P.LINE'FIELD) LSH 1,TABLE//EXIT);
}4IF TABLE[0]$PROC#I DO;
}7PRINT'DETACHED(NAME,I,K:K);
}7GOTO EXIT IF (USE'COUNT_USE'COUNT-1)=0;
}4ENDIF;
}1ENDIF;
}1P_P+4;
}.ENDFOR;
}.GOTO EXIT;
}+ENDIF;
}+GOTO ILLEGAL;
}(ENDIF;



}(END;

}(PROGRAM AUX'PRNT'FCNS;
}(INCLUDE MYCALLS,MACHINE'DECS;

}(DECLARE STRING NAME,IN(72),OUT(72);
}(DECLARE INTEGER LNO,PRNO,K;

}(GOTO DONE;}5/* HORRIBLE SPL KLUDGE */

}(FUNCTION PRINT'LINE'NO(NAME,LNO,K);
}(IF K<1 DO;
}+PRINT2(NAME," IS ON LINE",DONE);
}+K_1;
}(ENDIF;
}(SETS(OUT,0,0);
}(CNS(LNO,OUT,3,10//LF'PUNT);
}(PRINT'STRING(-1,OUT,QUIT'FLAG//QUIT'PUNTX(DONE,OUT));
DONE:}#RETURN K;

}(FUNCTION PRINT'DETACHED(NAME,PRNO,K);
}(K_1;
}(SETS(OUT,0,0);
}(SCOPY(OUT,"DETACHED, PROCESS #"//LF'PUNT);
}(CNS(PRNO,OUT,0,10//LF'PUNT);
}(PRINT'STRING(-1,OUT,QUIT'FLAG//QUIT'PUNTX(DONE,IN));
}(GOTO DONE;


}(END;

}(PROGRAM SLEEP;

*}#THIS FUNCTION WILL BLOCK FOR T CLOCK TIMES.

}'INCLUDE USERDECS;


}(DECLARE INTEGER
}+STATUS'BITS,
}+REAL'TIME'INT _ 2,
}+JUST'WAKEUP _ 0;

}(DECLARE LONG
}+X,Y,
}+TIME'TO'WAKEUP,
}+DELAY'TIME,
}+LZERO _ (0,0);

}(DECLARE FIELD
}+HIGH'WORD(0),
}+LOW'WORD(1),
}+SOURCE(0:0,2),
}+ACTION(0:3,5),
}+BLK(0:11,11);

}(MACRO SETUP'SAB(S,A,B) _ S@SOURCE V' A@ACTION V' B@BLK;



}(FUNCTION SLEEP(DELAY'TIME);

}(TIME'TO'WAKEUP _ LONG'ADD(LONG(READ'CLOCK('RTC')),DELAY'TIME);
}(SET'ICT(WAKEUP'TIMER,SETUP'SAB(REAL'TIME'INT,JUST'WAKEUP,1),
}+THIS'SUB'PROCESS,TIME'TO'WAKEUP//NC'PUNT);
}(BLOCK(4B7 RSH WAKEUP'TIMER//NC'PUNT);

}(RETURN;



}(END;

}(PROGRAM LINK'UTILITIES; INCLUDE MYCALLS,MACHINE'DECS;

}(DECLARE LONG PARAMETER WAIT'TIME_(0,1*1000*100); /* 1 SECOND */
}(DECLARE INTEGER ARRAY TABLE[7];
}(DECLARE LABEL ARRAY COM[8]_(LINK,WHER,BRCAST,WHO,MY'LINE,
}(BREAK,ALLOW,REFUSE);
}(DECLARE INTEGER FIELD LOK(3:8,8),LF(0:6,7),LQNK(2:11,23),
}(UPUN(0:0,15);
}(DECLARE FIELD PROC(3:11,23),LINE'FIELD(0:0,11),MIB'FIELD(0:12,23);
}(DECLARE INTEGER RUMMY,I,J,K,UNO,LNO,CUNO,CLNO,KEY,PMTI,OFTI,BITS,
}8PRIVILEDGE;
}(DECLARE LONG DUMMY;
}(DECLARE STRING NAME,CMND,IN(72),LINE(80),CALLER(72),
}7SEND'PARAM(100),SEND'TO,MESSAGE(90),CSLIST(10),ACCESS;
}(DECLARE POINTER P,PTR2;

}(MACRO FR_ERROR:ERCODE,ERMSNO;
}(MACRO ER_UNLOK:ERCODE,ERMSNO;

}(UNKNOWN ENTRY MAIN();
}(GET'COM'LINE(IN:IN//SF'PUNT);
}(CUNO_READ'PROC'PARAM('UNO'//SF'PUNT);
}(GOTO HOP;
}(ENTRY TEST();
BACK:}#SETS(IN,0,0);
}(IN_READ'LINE(-1,IN,"IN?",QUIT'FLAG//QUIT'PUNTX(BACK,IN));
}(CUNO_5;
HOP:}$BITS_READ'SPT'FIELD(-1,'SB'//SF'PUNT);
}(SET'SPT'FIELD(-1,'SB',BITS V' 2B7//SF'PUNT);
}(SETS(LINE,0,0);
}(SETS(CALLER,0,0);
}(CMND_GET'PARAM(IN);
}(NAME_GET'PARAM(IN);
}(K_ABRV'LKP(CMND,ENTRIES//FR);
}(GET'TABLE(:OFTI,PMTI,PTR2,CLNO,KEY//FR);
}(GOTO COM[K];

RET:}$RETURN;
UNLOK:}"MON'UNLOCK(LINKING//EXIT:DUMMY);
EXIT:}#DELETE'PMT(PMTI//SF'PUNT);
}(MSET'OFT'CL(OFTI,0//EXIT1);
EXIT1:}"END'LINE("",RET);
}(SET'SPT'FIELD(-1,'SB',BITS//SF'PUNT);
}(RETURN;

ERROR:}"IN_ERRORMSG(ERMSNO,IN//ERROR2:ERCODE,ERMSNO);
}(PRINT'STRING(-1,IN,QUIT'FLAG//QUIT'PUNTX(EXIT,IN));
}(GOTO EXIT;
ERROR2: PRINT'STRING(-1,"ERROR2",QUIT'FLAG//QUIT'PUNTX(EXIT,IN));
}(GOTO EXIT;

*}"LINK-TO
*}%TEST FOR PROMPT.

LINK:}#IF LENGTH(NAME)=0 DO;
},NAME_READ'LINE(-1,IN,"LINE NUMBER OR USER NAME: ",
},QUIT'FLAG//QUIT'PUNTX(EXIT,IN));
},IF NAME="LINE NUMBER" OR NAME="USER NAME" DO;
}0PRINT2("WHICH ",NAME,EXIT);
}0NAME_READ'LINE(-1,IN,"? ",QUIT'FLAG//
}0QUIT'PUNTX(EXIT,IN));
},ENDIF;
}(ENDIF;
*}#DETERMINE IF ARGUMENT IS LINE NUMBER OR NAME
}(LNO_CSN(NAME,10//BY'NAME);
}(NAME$RP_NAME$BP;
}(READ'LINE'TABLE(2*LNO,TABLE//ER);
}(IF (I_TABLE[0]$PROC)>1 DO; * LINE MUST NOT BELONG TO LISTENER */
}+P_PTR2+4*I;
}+GOTO CHECK IF P.LINE'FIELD=LNO;
}(ENDIF;
}(PRINT2("LINE ",NAME,UNLOK);
}(END'LINE(" IS NOT ACTIVE.",UNLOK);
}(GOTO EXIT;

BY'NAME:FIND(NAME,PTR2,KEY,-1:LNO,UNO//ER);
}(GOTO EXIT IF LNO<0;

CHECK:}"LNO _ LNO*2;}#/* CONVERT TO LOGICAL TTY LINE NUMBER */
}(GOTO SELF IF LNO=CLNO;
LINK1:}"MON'LOCK(LINKING:RUMMY//LINK1X:DUMMY);
}(READ'LINE'TABLE(LNO,TABLE//ER);
}(GOTO REFUSED IF TABLE[0]$LOK#0;
}(GOTO BUSY IF TABLE[0]$LF#0;
}(READ'LINE'TABLE(CLNO,TABLE//ER);
}(GOTO FUNNY IF TABLE[0]$LF#0;
}(CALLER_READ'UP'ITEM('UP',-1,CUNO,IN,"N",CALLER,KEY//ER);
}(SCOPY(LINE,"&G&G&G&G&G** LINK FROM "//LF'PUNT);
}(APPEND(LINE,CALLER//LF'PUNT);
}(APPEND(LINE,", LINE "//LF'PUNT);
}(CNS(CLNO RSH 1,LINE,0,10//LF'PUNT);
}(APPEND(LINE," **"//LF'PUNT);
}(SET'LINE'FIELD(LNO,'LQN',CLNO+1//ER);
}(SET'LINE'FIELD(CLNO,'LQN',LNO+1//ER);
}(SET'LINE'FIELD(CLNO,'LF',1//ER);
}(SET'LINE'FIELD(LNO,'LF',1//ER);
}(WRITE'TTY(LNO,LINE//UNLOK);
}(GOTO UNLOK;
LINK1X: SLEEP(WAIT'TIME) & GOTO LINK1;

REFUSED:PRINT2(NAME," REFUSING LINKS.",UNLOK);
}(GOTO UNLOK;
BUSY:}#PRINT2(NAME," IS LINKED WITH OTHER PARTY.",UNLOK);
}(GOTO UNLOK;
FUNNY:}"PRINT'STRING(-1,"SINGLE LINKS ONLY - DOUBLE LINK REQUEST REFUSED"
}(,QUIT'FLAG//QUIT'PUNTX(UNLOK,IN));
}(GOTO UNLOK;
SELF:}#PRINT'STRING(-1,"LINK TO SELF DISALLOWED",QUIT'FLAG//
}(QUIT'PUNTX(UNLOK,IN));
}(GOTO EXIT;

*}"WHERE-IS

WHER:}#IF LENGTH(NAME)=0 DO;
},NAME_READ'LINE(-1,IN,"USER NAME: ",QUIT'FLAG//
},QUIT'PUNTX(EXIT,IN));
}(ENDIF;
}(FIND(NAME,PTR2,KEY,0:I,J//FR);
}(GOTO EXIT;

*}"WHO-IS-ON

WHO:}$END'LINE("LINE}"NAME",EXIT);
}(FOR LNO_0 TO MAX'TERMS-1 DO;
}+READ'LINE'TABLE(LNO LSH 1,TABLE//ER);
}+IF (I_TABLE[0]$PROC)>1 DO;
}.P_PTR2+4*I;
}.IF P.LINE'FIELD=LNO AND P.MIB'FIELD>1 DO;
}1SETS(LINE);
}1CNS(LNO,LINE,3,10//LF'PUNT);
}1APPEND(LINE,"*}""//LF'PUNT) IF CLNO RSH 1=LNO
}6ELSE APPEND(LINE,"}#"//LF'PUNT);
}1LINE_READ'UP'ITEM('UP',-1,P.MIB'FIELD,NAME,"N",LINE,
}6KEY//FR);
}1END'LINE(LINE,EXIT);
}.ENDIF;
}+ENDIF;
}(ENDFOR;
}(FOR I _ 0 TO MAX'PRT-1 DO;
}+IF PTR2.MIB'FIELD>1 DO;
}.READ'LINE'TABLE((LNO_PTR2.LINE'FIELD) LSH 1,TABLE//EXIT);
}.IF TABLE[0]$PROC # I DO;
}1SCOPY(LINE," DET}""//LF'PUNT);
}1LINE _ READ'UP'ITEM('UP',-1,PTR2.MIB'FIELD,NAME,"N",LINE,KEY//FR);
}1APPEND(LINE," (PROCESS #"//LF'PUNT);
}1CNS(I,LINE,0,10//LF'PUNT);
}1APPEND(LINE,")"//LF'PUNT);
}1END'LINE(LINE,EXIT);
}.ENDIF;
}+ENDIF;
}+PTR2 _ PTR2+4;
}(ENDFOR;
}(GOTO EXIT;

*}"LINE}"(RETURN USER'S OWN LINE NUMBER)
MY'LINE:APPEND(LINE,"YOU ARE ON LINE"//LF'PUNT);
}(CNS(CLNO RSH 1,LINE,3,10//LF'PUNT);
}(PRINT'STRING(-1,LINE,QUIT'FLAG//QUIT'PUNTX(EXIT,LINE));
}(GOTO EXIT;

*}"BREAK-LINKS

BREAK:}"READ'LINE'TABLE(CLNO,TABLE//FR);
}(GOTO EXIT IF TABLE[0]$LF=0;
}(LNO_TABLE[0]$LQNK;
}(SET'LINE'FIELD(LNO,'LF',0//FR);
}(SET'LINE'FIELD(CLNO,'LF',0//FR);
}(GOTO EXIT;

*}"ALLOW-LINKS

ALLOW:}"SET'LINE'FIELD(CLNO,'LOK',0//FR);
}(GOTO EXIT;

*}"REFUSE LINKS

REFUSE: SET'LINE'FIELD(CLNO,'LOK',1//FR);
}(GOTO EXIT;


*}"BROADCAST

}'/* THIS FUNCTION SENDS TO THE SPECIFIED ACTIVE USERS A ONE}%*/
}'/* LINE MESSAGE, ONLY IF IT HAS SYSTEM PRIVILEDGES.},*/

}'/* DETERMINE IF THE USER HAS SYSTEM PRIVILIDGES BY LOOKING AT}"*/
}'/* HIS COMMAND SEARCH LIST, MAKING SURE ITS A 2, NOT 3 OR 4.}#*/
BRCAST:READ'UP'ITEM('UP',-1,CUNO,CALLER,"CSL",CSLIST,0:CSLIST//DETRMIN
}4:ERCODE,ERMSNO);
}'ACCESS _ GET'PARAM(CSLIST);
}'ACCESS _ GET'PARAM(CSLIST);
DETRMIN:PRIVILEDGE_1 IF (CUNO=1 OR COMPARE'STRING(ACCESS,"2"//LF'PUNT))
}5ELSE PRIVILEDGE_0;

}'IF NOT PRIVILEDGE DO;
}+END'LINE("SORRY, YOU CAN'T DO THAT!",EXIT);
}+GOTO EXIT;
}'ENDIF;
}'IF LENGTH(NAME)=0 DO;
}+SCOPY(SEND'PARAM,"*"//LF'PUNT); /* EMPTY MEANS SEND TO ALL */
}'ELSE DO;
}+SETR(IN,LENGTH(CMND)+1);
}+SCOPY(SEND'PARAM,IN//LF'PUNT);
}'ENDIF;

PROMPT:LINE _ READ'LINE(-1,LINE,"MESSAGE: ",QUIT'FLAG//
}+QUIT'PUNTX(EXIT,LINE));
}'/* CHECK TO BE SURE IT'S A VALID LENGTH OF CHARACTERS}**/
}'IF LENGTH(LINE) > 65 DO;
}+END'LINE("** LENGTH > 65 CHARACTERS. RETYPE. **", EXIT);
}+GOTO PROMPT;
}'ENDIF;
}'RETURN IF LENGTH(LINE) = 0;

}'/* CONSTRUCT MESSAGE */
}'SCOPY(MESSAGE,"** SYSTEM: "//LF'PUNT);
}'APPEND(MESSAGE,LINE//LF'PUNT);
}'APPEND(MESSAGE," **"//LF'PUNT);

BEGIN'SEND:SEND'TO _ GET'PARAM(SEND'PARAM);

}'IF COMPARE'STRING(SEND'TO,"*"//LF'PUNT) DO;
}+SETS(SEND'PARAM);}%/* REPLACE WITH ACTUAL LINE NUMBERS}"*/
}+P_PTR2;
}+FOR I_0 TO MAX'PRT-1 DO;
}.IF P.MIB'FIELD>1 DO;
}1READ'LINE'TABLE((LNO_P.LINE'FIELD) LSH 1,TABLE//ER);
}1CNS(LNO,SEND'PARAM,3,10//LF'PUNT) IF TABLE[0]$PROC=I;
}.ENDIF;
}.P_P+4;
}+ENDFOR;
}+GOTO BEGIN'SEND;
}'ENDIF;

}'WHILE LENGTH(SEND'TO) DO;
}+LNO _ CSN(SEND'TO,10//NAME'TRY);
}+GOTO XXX;

NAME'TRY:}"FIND(SEND'TO, PTR2, KEY, -1:LNO, UNO//ER);
XXX:}'READ'LINE'TABLE(LNO LSH 1,TABLE//ER);
}+GOTO MORE IF TABLE[0]$PROC<2;
}+LNO _ LNO*2;}&/* CONVERT TO LOGICAL TTY LINE NUMBER}$*/
}+GOTO MORE IF LNO=CLNO; /* DON'T WANT TO SEND TO YOURSELF!}"*/

}+/* RECEIVER VALIDITY ESTABLISHED. COMMENCE SENDING.}(*/
}+WRITE'TTY(LNO, MESSAGE//LF'PUNT);

MORE:}&SEND'TO _ GET'PARAM(SEND'PARAM);

}'ENDFOR;
}'GOTO EXIT;


}'END;

PROGRAM WRITE'TTY;

}'/* WRITES A STRING TO A PARTICULAR TERMINAL SPECIFIED BY}'*/
}'/* LINE'NUMBER.}P*/

}'INCLUDE SYS'COMMON;

}'DECLARE INTEGER
}+LINE'NUMBER,}(/* TTY LNO STRING WILL BE WRITTEN ON}#*/
}+CHAR,}//* TEMPORARY CHARACTER STORAGE})*/
}+I,}2/* COUNTER}=*/
}+NCHRS,}./* NO. OF CHARACTERS YET TO BE OUTPUT}"*/
}+BELL _ 207B,}(/* ASCII BELL CHARACTER}0*/
}+CR _ 215B,}*/* ASCII CARRIAGE RETURN}/*/
}+LF _ 212B;}*/* ASCII LINE FEED}5*/

}'DECLARE STRING
}+ST,
}+TEMP'ST(300);

FUNCTION WRITE'TTY(LINE'NUMBER, ST), FRETURN;

}'LINE'NUMBER _ LINE'NUMBER+1;}$/* SET IT TO OUTPUT BUFFER}%*/
}'SETS(TEMP'ST);

}'SCOPY(TEMP'ST,"&215&212&212"//FAILED);
}'FOR I_1 TO 6 DO;
}+WCI(BELL, TEMP'ST//FAILED);
}'ENDFOR;

}'WHILE LENGTH (ST) # 0 DO;
}+CHAR _ GCI(ST)+40B;})/* ADD OFFSET TO CONVERT FROM}"*/
}+WCI(CHAR, TEMP'ST//FAILED); /* 940 TO ASCII}0*/
}'ENDFOR;

}'WCI(CR, TEMP'ST//FAILED);
}'WCI(LF, TEMP'ST//FAILED);
}'WCI(LF, TEMP'ST//FAILED);

}'WHILE LENGTH(TEMP'ST) DO;
}+WRITE'STRING(LINE'NUMBER,-1,TEMP'ST:TEMP'ST,NCHRS//FAILED
}/:ERCODE, ERMSNO);
}'ENDFOR;

}'RETURN;

FAILED:FRETURN;

END;

}(PROGRAM RUN'USER; INCLUDE USERDECS, COMDECS;
}(DECLARE INTEGER I;
}(ENTRY RUN'USER();
BEGIN:
}(WAKEUP'TIMER_ACQUIRE'ICT(-1//NC'PUNT);
}(THIS'SUB'PROCESS_READ'SPS'PARAM('CSP'//SF'PUNT);
}(MAIN();
}(SP'RETURN(//SF'PUNT);
}(END;