DECLARE PARAMETER ORG_13631047B,ORR_13631062B,ENN_11227044B,
}"REP_14422460B,IFN_12223056B,IFZ_12223072B,XIF_16024446B,
}"DEF_11022446B,ABS_10221063B,EQU_11230465B,ASC_10231443B,
}"DEC_11022443B,OCT_13621464B,BSS_10431463B,UNL_15227054B,
}"LST_13031464B,SKP_14625460B,SPC_14630043B,SUP_14632460B,
}"UNS_15227063B,HED_12022444B;
DECLARE PARAMETER BOC_42B;
DECLARE INTEGER NOOP,II, FIELD WP(2), BP(0);
DECLARE OC,BC,I,J,K,H,SMB;
DECLARE INTEGER A,B,LL,TT,N,Z,EFN,SN;
DECLARE ARRAY TBCD[127],TOPCD[127],OPCD[9],SYMT1[2011],
}/SYMT2[2011];
DECLARE STRING CHR, LABL(6);
DECLARE STRING ARRAY OPND[9]_
"}j",
"}j",
"}j",
"}j",
"}j",
"}j",
"}j",
"}j";
DECLARE STRING FNAME(20), SNAME(20), STMT(80), TSTMT(80),
}'CHAR(6), HEADER(80);
}'
DECLARE INTEGER FIELD E4(0:0,5), E5(0:0,7),E6(0:8,23);
DECLARE INTEGER LC,OLDLC,TORR,TNZ, CH, TLC, LISTO,
}'NREP,BCD,FNO,LFN,BFN,RIP,BNCD,JIP,VW,LAB,HEDFLAG;
DECLARE INTEGER LINECT, PAGENO;
GROT:}"GOTO BEGIN;
}'FUNCTION FIRSTBLOCK();
}'DECLARE FIELD B815(0:8,15), B1623(0:16,23);
}'DECLARE FIXED INTEGER NULL _ 0;
}'DECLARE FIXED INTEGER SAVEWP, BLKCNT, COUNT, CHECKSUM, XLC;
}'DECLARE FIXED STRING STR(300);

}'SETS(STR, 0, 0);
}'WCI(NULL, STR) FOR COUNT _ 1 TO 100;* WRITE LEADER
}'SOUT(STR, BFN);

* INITIALIZE FOR BLOCK
}'SETW(STR, 2);
}'BLKCNT _ CHECKSUM _ 0;
}'RETURN;

}'FUNCTION NEXTBLOCK();

}'RETURN IF BLKCNT = 0;

* CLOSE UP CURRENT BLOCK
}'SAVEWP _ LENGTH(STR);
}'SETW(STR, 0);
}'WCI(BLKCNT, STR); WCI(NULL, STR);

* WRITE CHECKSUM
}'SETW(STR, SAVEWP);
}'WCI(CHECKSUM$B815, STR); WCI(CHECKSUM$B1623, STR);

* WRITE INTERBLOCK NULLS
}'WCI(NULL, STR) FOR COUNT _ 1 TO 8;
}'SOUT(STR, BFN);

* INITIALIZE FOR NEXT BLOCK
}'BLKCNT _ CHECKSUM _ 0;
}'SETS(STR, 0, 2);
}'RETURN;

}'FUNCTION BRITE(BNCD, BFN, ILC);

}'IF BLKCNT > 126 AND ILC = 1 DO;
* START NEW BLOCK
}*NEXTBLOCK();
}*XLC _ LC - 1;}"* SINCE LC ALREADY INCREMENTED
}*WCI(XLC$B815, STR); WCI(XLC$B1623, STR);
}*WCI(BNCD$B815, STR); WCI(BNCD$B1623, STR);
}*CHECKSUM _ XLC + BNCD;
}*BLKCNT _ BLKCNT + 1;
}'ELSEIF ILC = 1 DO; * 1 WORD GENERATED
}*WCI(BNCD$B815, STR); WCI(BNCD$B1623, STR);
}*CHECKSUM _ CHECKSUM + BNCD;
}*BLKCNT _ BLKCNT + 1;
}'ELSEIF ILC = 0 DO; * ORG OR ORR
}*NEXTBLOCK();
}*WCI(LC$B815, STR); WCI(LC$B1623, STR);
}*CHECKSUM _ LC;
}'ELSEIF ILC > 1 DO;
* START NEW BLOCK (NON-CONTIGUOUS LOADING)
}*NEXTBLOCK();
}*WCI(LC$B815, STR); WCI(LC$B1623, STR);
}*CHECKSUM _ LC;
}'ELSEIF ILC = -1 DO; * END
}*NEXTBLOCK();
}*SETS(STR, 0, 0);
}*WCI(NULL, STR) FOR COUNT _ 1 TO 100;*}"WRITE TRAILER
}*SOUT(STR, BFN);
}'ENDIF;
}'RETURN;

FUNCTION NEWLINE(INTEGER NMBR, FILENO);
* OUTPUT A CRLF & CHECK TO SEE IF 57 LINES ON THE PAGE: IF SO, NEW PAGE
}'DECLARE INTEGER NEWCT;
}'IF NMBR<57 DO; * IS AN SPC OPERATION
}+IF HEDFLAG DO;
}/FOR NEWCT_1 TO NMBR DO;
}3CRLF(1,FILENO);
}3LINECT_LINECT+1;
}3IF LINECT>57 DO;
}7COUT(154B,FILENO);
}7SETR(HEADER,0);
}7SOUT("PAGE ",FILENO);
}7IOUT(PAGENO,FILENO);
}7SOUT(" - ",FILENO);
}7SOUT(HEADER,FILENO);
}7CRLF(3,FILENO);
}7PAGENO_PAGENO+1;
}7LINECT_3;
}7NEWCT_NMBR;
}3ENDIF;
}/ENDFOR;
}+ELSE DO;
}/CRLF(NMBR,FILENO);
}+ENDIF;
}'ELSE DO;}%* THIS CASE IS FOR SKPS
}+COUT(154B,FILENO);
}+LINECT_0;
}+IF HEDFLAG DO;
}/SETR(HEADER,0);
}/SOUT("PAGE ",FILENO);
}/IOUT(PAGENO,FILENO);
}/SOUT(" - ",FILENO);
}/SOUT(HEADER,FILENO);
}/CRLF(3,FILENO);
}/PAGENO_PAGENO+1;
}/LINECT_3;
}+ENDIF;
}'ENDIF;
RETURN;

FUNCTION WRITE(STRING STMT, INTEGER TLC);
* WRITE A LINE TO THE LISTING FILE
}'DECLARE INTEGER NBLANK;
}'SETR(STMT,0);
}'NBLANK_LEN10(SN);
}'WSPACE(4 - NBLANK); IOUT (SN,LFN);
}'SOUT("}"",LFN);
}'NBLANK_LEN8(TLC);
}'WSPACE(5 - NBLANK); IOUT(TLC,LFN,8);
}'BNCD _ BNCD$E6; * REDUCE BNCD TO 16 BITS;
}'NBLANK_LEN8(BNCD);
}'SOUT(" ",LFN);
}'WSPACE(6 - NBLANK); IOUT(BNCD,LFN,8);
}'SOUT("}"",LFN);
}'SOUT(STMT,LFN);
}'NEWLINE(1,LFN);
RETURN;

FUNCTION COMW(STRING STMT, INTEGER TLC);
* WRITE A COMMENT TO THE LISTING FILE
}'SETR(STMT,0);
}'NBLANK_LEN10(SN);
}'WSPACE(4 - NBLANK); IOUT(SN,LFN);
}'SOUT("}0", LFN);
}'SOUT(STMT,LFN);
}'NEWLINE(1,LFN);
RETURN;

FUNCTION LEN10(INTEGER PVAR);
* DETERMINE THE LENGTH OF A DECIMAL NUMBER
}'RETURN 4 IF PVAR>999;
}'RETURN 3 IF PVAR>99;
}'RETURN 2 IF PVAR>9;
}'RETURN 1;

FUNCTION LEN8(INTEGER PVAR); 
* DETERMINE THE LENGTH OF AN OCTAL NUMBER
}'RETURN 6 IF PVAR>77777B;
}'RETURN 5 IF PVAR>7777B;
}'RETURN 4 IF PVAR>777B;
}'RETURN 3 IF PVAR>77B;
}'RETURN 2 IF PVAR>7B;
}'RETURN 1;

FUNCTION WSPACE(INTEGER NSPACE);
* WRITE OUT "NSPACE" ZEROES FOR PADDING
}'DECLARE INTEGER IVY;
}'FOR IVY_1 TO NSPACE DO;
}/SOUT("0",LFN);
}'ENDFOR;
RETURN;

FUNCTION READ (INTEGER FNO);

}'SETS(STMT,0,0);
RED:}#CH_CIN(FNO);
}'RETURN STMT IF CH=155B;
}'WCI(CH,STMT) IF CH#152B;
}'GOTO RED;


FUNCTION FLINE (INTEGER FNO);
}'A_0; B_0; LL_0; TT_0;
}'N_0; Z_0; SMB_0;
}'STMT_READ(FNO);
BERG:}"CH_GCI(STMT:FORD);
}'GOTO BERG IF CH#41B;
}'FOR I_1 TO 3 DO;
}*CH_GCI(STMT:FORD);
}*SMB_(SMB LSH 8) + CH;
}'ENDFOR;
}'IF SMB#14626442B DO;
}*PUTERR("ASMB IS NOT CORRECT");
}*RETURN;
}'ENDIF;
MORG:}"CH_GCI(STMT:DORK);
}'IF CH = 41B DO; A_1;
}'ELSEIF CH = 42B DO; B_1;
}'ELSEIF CH = 54B DO; LL_1;
}'ELSEIF CH = 64B DO; TT_1;
}'ELSEIF CH = 56B DO; N_1;
}'ELSEIF CH = 72B DO; Z_1;
}'ENDIF;
}'GOTO MORG;
DORK:}"RETURN;
FORD:}"PUTERR ("ASMB IS LACKING BADLY");
}'RETURN;


FUNCTION INSYM(STRING SYMB, INTEGER TLN);
}'DECLARE FIXED INTEGER LAL,LA2,LBL;
}'LAL_0; LA2_0; LBL_0;
}'SETR(SYMB,0);
}'FOR I _ 1 TO 4 DO;
}*CH_GCI(SYMB:MUGG);
}*LBL_(LBL LSH 4) + CH;
}*LAL_(LAL LSH 6) + CH;
}'ENDFOR;
}'CH_GCI(SYMB:MUGG);
}'LBL_(LBL LSH 4) + CH;
}'LA2_CH LSH 16;
MUGG:}"LBL_LBL MOD 2011;
}'IF SYMT1[LBL] = 0 DO;
}*SYMT1[LBL] _ LAL;
}*SYMT2[LBL] _ LA2 OR TLN;
}'ELSEIF SYMT1[LBL] = LAL AND SYMT2[LBL]$E5 = LA2$E5 DO;
}*PUTERR("REPEAT OF SAME SYMBOL");
}'ELSE DO;
}*LBL _ LBL + 127;
}*GOTO MUGG;
}'ENDIF;
}'RETURN;



FUNCTION OUTSYM(STRING SYMB);
}'SETR(SYMB,0);
}'LBL _ 0; LAL _ 0; LA2_0;
}'FOR I _ 1 TO 4 DO;
}*CH _ GCI(SYMB:HIT);
}*LBL _ (LBL LSH 4) + CH;
}*LAL _ (LAL LSH 6) + CH;
}'ENDFOR;
}'CH _ GCI(SYMB:HIT);
}'LBL _ (LBL LSH 4) + CH;
}'LA2 _ CH LSH 16;
HIT:}#LBL_LBL MOD 2011;
}'IF SYMT1[LBL] = LAL AND SYMT2[LBL]$E5=LA2$E5 DO;
}*RETURN SYMT2[LBL]$E6;
}'ELSEIF SYMT1[LBL] = 0 DO;
}*RETURN -1;
}'ELSE DO;
}*LBL _ LBL + 127;
}*GOTO HIT;
}'ENDIF;





FUNCTION HCODE (INTEGER OCD);
}'K_OCD;
LNA:}#K_K MOD 127;
}'IF TOPCD[K] = OCD DO;
}*RETURN TBCD[K];
}'ELSEIF TOPCD[K] = -1 DO;
}*RETURN -1;
}'ELSE DO;
}*K _ K + 23;
}*GOTO LNA;
}'ENDIF;



FUNCTION PARSE (STRING STMT);
}'DECLARE FIXED ARRAY ALPH[256]_1,0,0,0,0,0,0,0,0,0,0,0,
}*1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}*2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
}*0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}*0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
}*0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}*0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}*0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
})0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}*0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}*0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;
**PARSE OUT LABEL AS STRING OF LENGTH LESS THAN 6
}'SETR(STMT,0);
}'SETS(LABL,0,0);
}'FOR I_0 TO 7 DO;
}*OPCD[I]_0;
}*SETS(OPND[I],0,0);
}'ENDFOR;
}'CHR_GCI(STMT:AOK);
}'I_0;
}'IF ALPH[CHR] = 2 DO;
LBLP:}%WCI(CHR,LABL);
}*CHR_GCI(STMT:NOK);
}*I_I+1;
}*GOTO LBLP IF ALPH[CHR]#1 AND I<5;
}*IF I = 5 AND ALPH[CHR] # 1 DO;
}/PUTERR("LABEL IS TOO LONG");
AZAG:}*CHR_GCI(STMT:NOK);
}/GOTO AZAG IF ALPH[CHR]#1;
}*ENDIF;
}'ENDIF;
}'CH_CHR;
}'CH_GCI(STMT:AOK) IF CH = 135B;
ELMB:}"CH_GCI(STMT:AOK);
}'GOTO ELMB IF CH = 0;
**PARSE OUT OPCODE
}'IF ALPH[CH] = 2 DO;
}*J _ 1;
NXOC:}%OPCD[0]_ J;
}*FOR I _ 1 TO 3 DO;
}/OPCD[J] _ (OPCD[J] LSH 8) + CH;
}/CH_GCI(STMT:AOK);
}*ENDFOR;
}*IF CH = 14B DO;
}/CH_GCI(STMT:NOK);
}/J_J+1;
}/GOTO NXOC;
}*ENDIF;
}'ELSE DO;
}*PUTERR("ILLEGAL CODE");
}*RETURN -1;
}'ENDIF;
*PARSE OUT THE OPERAND FIELD;
}'I_0;
}'CHR_GCI(STMT:NOPD) IF CH =135B;
ELIB:}"CHR_GCI(STMT:NOPD);
}'GOTO ELIB IF CHR = 0;
}'I_1;
ONLP:}"WCI(CHR,OPND[I]);
}'CHR_GCI(STMT:NOPD);
}'GOTO ONLP IF ALPH[CHR] # 1;
}'IF CHR = 14B DO;
}/I_I+1;
}/CHR_GCI(STMT:ILPD);
}/GOTO ONLP;
}'ENDIF;
NOPD:}"RETURN I;
ILPD:}"PUTERR("AN OPERAND SHOULD FOLLOW THE COMMA ");
}'RETURN 0;
NOK:}#PUTERR("THIS STATEMENT IS VOIDED.");
}'RETURN -1;
AOK:}#RETURN 0;

FUNCTION PUTERR(STRING SMSG);
}'IOUT(SN,EFN);
}'SOUT("}#",EFN);
}'SOUT(SMSG,EFN);
}'CRLF(1,EFN);
}'RETURN;

FUNCTION HSET();
}'DECLARE STRING ARRAY T[73]_"ADA","ADB","ALF","ALR","ALS",
}/"AND","ARS","ASL","ASR","BLF","BLR","BLS","BRS",
}/"CCA","CCB","CCE","CLA","CLB","CLC","CLE","CLF",
}/"CLO","CMA","CMB","CME","CPA","CPB","ELA","ELB",
}/"ERA","ERB","HLT","INA","INB","IOR","ISZ","JMP",
}/"JSB","LDA","LDB","LIA","LIB","LSL","LSR","MIA",
}/"MIB","NOP","OTA","OTB","RAL","RAR","RBL","RBR",
}/"RRL","RRR","RSS","SEZ","SFC","SFS","SLA","SLB",
}/"SOC","SOS","SSA","SSB","STA","STB","STC","STF",
}/"STO","SZA","SZB","XOR";
}'DECLARE FIXED INTEGER ARRAY BAD[73]_40000B,44000B,1727B,
}/1424B,1020B,10000B,1121B,100020B,101020B,5727B,
}/5424B,5020B,5121B,3400B,7400B,2300B,2400B,6400B,
}/106700B,40B,103100B,103101B,3000B,7000B,2200B,
}/50000B,54000B,1626B,5626B,1525B,5525B,102000B,
}/2004B,6004B,30000B,34000B,24000B,14000B,60000B,
}/64000B,102500B,106500B,100040B,101040B,102400B,
}/106400B,0B,102600B,106600B,1222B,1323B,
}/5222B,5323B,100100B,101100B,2001B,2040B,102200B,
}/102300B,10B,4010B,102201B,102301B,2020B,
}/6020B,70000B,74000B,102700B,102100B,102101B,
}/2002B,6002B,20000B;
}'FOR I_0 TO 127 DO;
}/TOPCD[I]_-1;
}/TBCD[I]_0;
}'ENDFOR;
}'FOR I_0 TO 72 DO;
}/H_0;
}/FOR J_1 TO 3 DO;
}1K_GCI(T[I]);
}1H_(H LSH 8) + K;
}/ENDFOR;
}/K_H;
COLN:}*K_K MOD 127;
}/IF TOPCD[K] = -1 DO;
}1TOPCD[K]_H;
}1TBCD[K]_BAD[I];
}/ELSE DO;
}1K_K + 23;
}1GOTO COLN;
}/ENDIF;
}'ENDFOR;
}'RETURN;

*REGISTER REFERENCE INSTRUCTIONS

FUNCTION RRI(INTEGER RBCODE);
}'DECLARE FIXED INTEGER IX,FCLE,FSLA,FSLB,FAB,FAS,CAB,CAS;
}'DECLARE FIXED INTEGER BHASH;
}'DECLARE FIXED INTEGER CCE_2300B,CLE_40B,CME_2200B,NOP_0,
}/RSS_2001B,SEZ_2040B,SLA_10B,SLB_4010B;
}'DECLARE FIXED INTEGER FIST;
}'DECLARE FIXED FIELD B11(0:12,12),B10(0:13,13);
}'DECLARE FIXED FIELD F12(0:12,12),F13(0:13,13),F1618(0:16,18);
}'DECLARE FIXED FIELD F23(0:23,23);

}'FCLE_0;
}'RBCODE_0;
}'FSLA_0;
}'FSLB_0;
}'FAS_2;
}'CAS_2;
}'FAB_2;
}'CAB_2;

}'FOR IX_1 TO OPCD[0] DO;
}*BHASH_HCODE(OPCD[IX]);
}*IF BHASH=-1 DO;
}-PUTERR("ILLEGAL OPCODE");
}-RETURN 0;
}*ENDIF;
}*RETURN 0 IF BHASH=NOP;
}*IF BHASH=CLE DO;
}-FCLE_1; *SET CLE FLAG
}*ELSEIF BHASH=SLA DO;
}-FSLA_1;
}-FAB_0 IF FAB=2;
}-IF FAB=1 DO;
}0PUTERR("A AND B REG. INST. MIXED");
}0RETURN 0;
}-ENDIF;
}*ELSEIF BHASH=SLB DO;
}-FSLB_1;
}-FAB_1 IF FAB=2;
}-IF FAB=0 DO;
}0PUTERR("A AND B REG. INST MIXED");
}0RETURN 0;
}-ENDIF;
}*ELSEIF BHASH=SEZ
}0OR BHASH=CME
}0OR BHASH=CCE
}0OR BHASH=RSS DO;
}-FAS _ 1 IF FAS=2;
}-IF FAS=0 DO;
}0PUTERR("ALTER-SKIP AND SHIFT-ROTATE MIXED");
}0RETURN 0;
}-ENDIF;
}-RBCODE_RBCODE OR BHASH;
}*ELSE DO; *PROCESS ANY OTHER INST.
}-CAB_BHASH$B11; *A OR B REG.
}-CAS_BHASH$B10; *ALTER-SKIP OR SHIFT-ROTATE
}-FAB_CAB IF FAB=2;
}-IF FAB#CAB DO;
}0PUTERR("A AND B TYPE INST MIXED");
}0RETURN 0;
}-ENDIF;
}-FAS_CAS IF FAS=2;
}-IF FAS#CAS DO;
}0PUTERR("ALTER-SKIP AND SHIFT-ROTATE MIXED");
}0RETURN 0;
}-ENDIF;

}-IF CAS=1 DO; *PROCESS ALTER-SKIP
}0RBCODE_RBCODE OR BHASH;
}-ELSE DO; *PROCESS SHIFT ROTATE
}0IF IX=1 DO; *1ST COL. INST.
}3BHASH_BHASH AND 177750B;
}0ELSE DO; *PROCESS 4TH COL. INST.
}3BHASH_BHASH AND 176077B;
}0ENDIF;
}0RBCODE_RBCODE OR BHASH;
}-ENDIF;
}*ENDIF;
}'ENDFOR;

}'IF FCLE DO; *CLE OCCURED
}*IF FAS=1 DO; *USE ALTER-SKIP CLE
}-RBCODE_RBCODE OR 2100B;
}*ELSE DO; *USE SHIFT-ROTATE CLE
}-RBCODE_RBCODE OR 40B;
}*ENDIF;
}'ENDIF;
}'IF FSLA DO; *SLA OCCURED
}*IF FAB=1 DO;
}-PUTERR("A AND B REG. INST. MIXED");
}-RETURN 0;
}*ELSEIF FAS=1 DO; *USE ALTER-SKIP SLA
}-RBCODE_RBCODE OR 2010B;
}*ELSE DO; *USE SHIFT-ROTATE SLA
}-RBCODE_RBCODE OR 10B;
}*ENDIF;
}'ENDIF;

}'IF FSLB DO; *SLB OCCURED
}*IF FAB=0 DO;
}-PUTERR("A AND B REG INST. MIXED");
}*ELSEIF FAS=1 DO; *USE ALTER-SKIP SLB
}-RBCODE_RBCODE OR 6010B;
}*ELSE DO; *USE SHIFT-ROTATE SLB
}-RBCODE_RBCODE OR 4010B;
}*ENDIF;
}'ENDIF;

}'RETURN RBCODE;



*I/O INSTRUCTION OPERANDS

FUNCTION I0 (INTEGER IBCODE);
}'DECLARE FIXED INTEGER MAXOP;
}'DECLARE FIXED FIELD F15X23(0:15,23),F15(0:15,15),
}/F16(0:16,16);
}'DECLARE FIXED FIELD F18X23(0:18,23);
}'SETR(OPND[2],0);
}'IF IBCODE$F15X23=0 OR IBCODE$F15=1 DO;
}*CH_GCI(OPND[2]:FC);
}*IBCODE_IBCODE OR 1000B IF CH=43B;
}'ELSEIF IBCODE$F16=1 AND IBCODE$F23=1 DO;
}*CH_GCI(OPND[2]:FC);
}*IBCODE_IBCODE OR 1000B IF CH=43B;
}'ENDIF;
FC:}$IF IBCODE$F23#1 DO;
}'RETURN IBCODE IF LENGTH(OPND[1])=0;
}*MAXOP_VALUE(OPND[1]);
}*GOTO I1 IF MAXOP=-1;
}*PUTERR("SELECT CODE >77B") IF MAXOP>77B;
}*IBCODE_IBCODE OR MAXOP$F18X23;
}'ENDIF;
}'RETURN IBCODE;
I1:}$PUTERR("OPERAND IS ILL-FIT FOR THE TASK");
}'RETURN -1;



*MEMORY REFERENCE INSTRUCTION

FUNCTION MRI(INTEGER MBCODE);
}'DECLARE FIXED FIELD F8X13(0:8,13),F14X23(0:14,23);
}'DECLARE FIXED INTEGER BCOPND;
}'SETR(OPND[2],0);
}'CH_GCI(OPND[2]:MFC);
}'MBCODE_(MBCODE OR 100000B) IF CH=51B; *INDIRECTION(I)=51B
MFC:}#BCOPND_VALUE(OPND[1]);
}'RETURN -1 IF BCOPND =-1;
}'MBCODE_(MBCODE OR BCOPND$F14X23);
}'IF BCOPND$F8X13 > 0 DO;
}*IF LC$F8X13 # BCOPND$F8X13 DO;
}-PUTERR("PAGE FAULT");
}*ELSE DO;
}-MBCODE$F13_1B;
}*ENDIF;
}'ENDIF;
}'RETURN MBCODE;



*MAIN ROUTINE FOR PRODUCING BINARY CODE FOR OPCODE/OPERAND STATEMENT

FUNCTION OPCODE(INTEGER BCODE);
}'DECLARE FIXED FIELD F8X11(0:8,11),F9X11(0:9,11),
}3F8(0:8,8),F20X23(0:20,23);
}'IF BCODE$F8X11=0 DO;
}*BCODE_RRI(BCODE); *REGISTER REFERENCE INSTRUCTION
}'ELSEIF BCODE$F9X11=0 DO;
}*IF BCODE$F13=0 DO; *EXTND. ARITH. REG. REF. INSTR.
}-BCODE$F20X23_VALUE(OPND[1])$F20X23; *NUMBER OF SHIFTS
}*ELSE DO;}"*I/O INSTRUCTION
}-BCODE_I0(BCODE);
}*ENDIF;
}'ELSE DO;
}*BCODE_MRI(BCODE);
}'ENDIF;
}'RETURN BCODE;





*}&THIS IS A FUNCTION WHEREBY OPRN IS ASSUMED TO BE AN
*}&ALGEBRAIC EXPRESSION WHOSE TERMS ARE LABELS, CONSTANTS
*}&(POSSIBLY PREFIXED}"WITH A (-) SIGN AND AFFIXED WITH
*}&AN OCTAL DESIGNATOR (B) OR A DECIMAL DESIGNATOR (D) ),
*}&AND LOCATION COUNTER INDICATOR (*).

*}&THE PROGRAM READS THE FIRST CHARACTER FROM OPRN (AS PASSED
*}&FROM THE MAIN PROGRAM), AND LOOKS AT WHAT IT IS.
*}.IF IT IS A CHARACTER THEN WE KNOW THAT IT IS
*}.A}"LABEL.}"WE READ THE REST OF THE CHARACTERS UNTIL
*}.IT EITHER FAILS OR THERE IS A (+) OR (-), IN WHICH
*}.WE JUST REMEMBER THAT WE'LL HAVE TO DO AN ALGEBRAIC
*}.LATER ON.}"THE NEXT THING TO DO THEN IS TO GET THE
*}.VALUE OF THE LABEL BY CALLING A HASH FUNCTION WHICH
*}.WHICH GOES INTO THE SYMBOL TABLE AND RETURNS TO US
*}.THE LOCATION}"COUNTER VALUE OF THE LABEL.
*
*}.IF IT'S A NUMBER, THEN WE KNOW}"THIS TERM IS A
*}.CONSTANT.}"WE GO INTO THE LOOP WHERE THE REST OF THE
*}.IS READ, AND DEPENDING WHETHER IT'S AN OCTAL
*}.(CONSTAINS A 'B' AT THE END OF THE NUMBER), OR A
*}.DECIMAL (SUFFIXED WITH A 'D' OR JUST A PLAIN NUMBER
*}.CAN BE TAKEN AS A DECIMAL), WE CONVERT THE NUMBER TO
*}.BINARY.}"IF THERE WAS AN ARITHMETIC OPERATOR FOLLOWING
*}.THIS NUMBER, WE HAVE TO REMEMBER WHAT TYPE IT WAS, AND
*}.THEN GO READ THE NEXT TERM.}"WHEN THE VALUE OF THE
*}.SECOND TERM IS DETERMINED, THEN WE DO THE ALGEBRAIC
*}.OPERATION.
*
*}.IF IT'S AN ASTERISK, WE KNOW WE HAVE TO STICK THE
*}.VALUE OF THE LOCATION COUNTER INTO THIS TERM.}"WE
*}.THEN PROCEED TO READ THE REST OF THE EXPRESSION.
*
*}.IF IT'S A (-) SIGN, WE HAVE TO REMEMBER THIS SO THAT
*}.BEFORE PERFORMING ANY ARITHMETIC OEPRATION WITH THE
*}.SECOND TERM (IF THERE IS ANY), OR RETURNING THE VALUE
*}.(IF THIS IS THE ONLY TERM), THIS NUMBER MUST BE
*}.CONVERTED TO IT'S TWO'S COMPLEMENT.
*
*}.AND WE REPEAT THIS PROCESS UNTIL WE'VE EXHAUSTED ALL
*}.THE DATA IN 'OPRN'.
*
*TABLE ARRAY IS ARRANGED AS FOLLOWS:
*
*}&0 = FILLERS
*}&1 = BLANK
*}&2 = NON-ALPHAMERIC CHARACTERS
*}&3 = ALPHA CHARACTERS ONLY
*}&4 = CARRIAGE RETURN
*}&5 = ;
*}&6 = (
*}&7 = )
*}&8 = +
*}&9 = ,
*}%10 = -
*}%11 = *
*}%12 = MULTIPLE BLANKS
*}%13 = B (USED FOR CHECKING BINARY NUMBERS)
*}%14 = D (USED FOR CHECKING DECIMAL NUMBERS)
*}%15 = NUMERIC
*}%16 = END-OF-FILE
FUNCTION VALUE(STRING OPRN);
DECLARE ARRAY TABLE(156)_1,2,2,2,2,2,2,2,6,7,11,8,9,10,3,2,
}915,15,15,15,15,15,15,15,15,15,
}92,5,2,2,2,2,2,3,13,3,14,
}93,3,3,3,3,3,3,3,3,3,3,
}93,3,3,3,3,3,3,3,3,3,3,
}92,2,2,2,2,0,0,0,0,0,0,
}90,0,0,0,0,0,0,0,0,0,0,
}90,0,0,0,0,0,0,0,0,0,0,
}90,0,0,0,0,0,0,0,0,0,0,
}90,0,0,0,0,0,1,0,16,0,0,
}90,0,0,0,0,0,0,0,0,0,0,4;
DECLARE INTEGER PAU,IN,KHAR,TEMP,TEM,KHR,JJ,MM,NN,NS,TOC,
}0BALUE,VAL,DCONV;
DECLARE FIXED STRING SYM(5),LINE(80),CON(80),STRNG(10);
DECLARE FIXED INTEGER ARRAY TAB[3],SS[3];
DECLARE FIXED STRING SBIN(6),BIN;

}'SETR(OPRN,0); NS_0;
}(PAU_0;}#JJ_0;}#MM_0;}#NN_0;

START:}"KHAR_GCI(OPRN:FAIL);
}(TEMP_TABLE[KHAR];
}(SETS(SYM,0,0);

MORE:}#IF TEMP=3 OR TEMP=13 OR TEMP=14 DO;}$*SYMBOL IS FOUND
},WCI(KHAR,SYM);
},KHAR_GCI(OPRN:SYMFAIL);
},TEM_TABLE[KHAR];
},GOTO MORE IF TEM#8 AND TEM#10;
}4BALUE_OUTSYM(SYM);
}4GOTO STACK;

SYMFAIL:}$BALUE_OUTSYM(SYM);
}/IF NS=1 DO;
}2BALUE_NOT BALUE;
}2BALUE_BALUE +1;
}2NS_0;
}/ENDIF;
},GOTO FOP;

CONST:}"ELSEIF TEMP=15 DO;}6*FIRST KHAR IS NUMERIC
}0SETS(CON,0,0);
CONWR:}*WCI(KHAR,CON);
}0KHAR_GCI(OPRN:DNEXT);
}0TEM_TABLE[KHAR];
}0GOTO CONWR IF TEM=15;},*IF NUMERIC
}/
}0IF TEM=13 DO;}4*BINARY NUMBER
OCTL:}/TOC_0;}#BIN_0;
REED:}/SETS(SBIN,0,0);
}4KHR_GCI(CON:BACK1);}**READ THE NUMBER
}4WCI(KHR,SBIN);
}4TOC_CSN(SBIN);
}4BIN_(BIN LSH 3)+TOC;
}4GOTO REED;

BACK1:}.BALUE_BIN;
}4IF NS=1 DO;}1*1ST TERM IS MINUS
}7BALUE_NOT BIN;
}7BALUE_BALUE+1;
}7NS_0;
}4ELSE DO;
}7BALUE_BIN;
}4ENDIF;
}4KHAR_GCI(OPRN:BFAIL);
}4TEM_TABLE[KHAR];

}4GOTO STACK IF MM=0;
}7MM_0;
}7GOTO FOP;

}0ELSE DO;
DNEXT:}.DCONV_CSN(CON);
}4IF NS=1 DO;}1*FIRST NO. IS A MINUS
}7BALUE_NOT DCONV;
}7BALUE_BALUE+1;
}7NS_0;
}4ELSE DO;
}7BALUE_DCONV;
}4ENDIF;
}0IF TEM=14 DO;
}4KHAR_GCI(OPRN:DFAIL);
}4TEM_TABLE[KHAR];
}0ENDIF;

BACK2:}*GOTO STACK IF NN=0;
}3NN_0;
}3GOTO FOP;
}0ENDIF;

STAR:}#ELSEIF TEMP=11 DO;}6*ASTERISK IS FOUND
}+JJ_JJ+1;
}+TAB[JJ]_LC;
}+KHAR_GCI(OPRN:SFAIL);
}+TEM_TABLE[KHAR];
}+IF TEM=8 DO;}9*PLUS
}/SS[JJ]_0;
}+ELSEIF TEM=10 DO;}2*MINUS
}/SS[JJ]_1;
}+ENDIF;
}+GOTO START;

SINE:}#ELSE DO;
}+GOTO START IF TEMP=8;}0
}0NS_1;
}0GOTO START;
}(ENDIF;

STACK:}"JJ_JJ+1;
}(IF TEM=8 DO;}:*PLUS
}-SS[JJ]_0;
}(ELSE DO;
}-SS[JJ]_1;
}(ENDIF;
}(TAB[JJ]_BALUE;}:*KEEP VALUE IF TAB MATRIX

ENTER:}"IF JJ=2 DO;}=*TWO DIFFERENT VALUES
}+IF SS[JJ-1]=0 DO;
}/TAB[3]_TAB[JJ-1]+TAB[JJ];
}+ELSE DO;}=*NEED TO BE SUBTRACTED
}/TAB[3]_TAB[JJ-1]-TAB[JJ];
}+ENDIF;

}+TAB[1]_TAB[3];
}+JJ_1;
}+SS[JJ]_SS[JJ+1];
}(ENDIF;

}(IF PAU=1 DO;}<*LAST NUMBER
FAIL:}&VAL_TAB[1];
}+GOTO ENUFF;
}(ELSE DO;
}+GOTO START;}9*GO READ THE NEXT TERM
}(ENDIF;

FOP:}$IF JJ=0 DO;
}+VAL_BALUE;
}+GOTO ENUFF;
ROP:}$ELSE DO;
}+JJ_JJ+1;
}+TAB[JJ]_BALUE;
}+PAU_1;
}+GOTO ENTER;
}(ENDIF;
}(GOTO ENUFF;

SFAIL:}"JJ_JJ-1;
}(GOTO FOP IF JJ#0;
}+VAL_TAB[1];
}+GOTO ENUFF;

BFAIL: MM_1;
}(GOTO FOP;

DFAIL:}"NN_1;
}(GOTO FOP;
ENUFF:}"RETURN(VAL);
}'
* BEGIN MAIN PROGRAM

BEGIN: SOUT("HP-2100 CROSS ASSEMBLER"); CRLF(1);
VERSION: SOUT("9/10/76"); CRLF(1);
FNM:}#SOUT("SOURCE FILE:}#");
}'SETS(SNAME,0,0);
}'INNAME(SNAME:FSFN);
}'FNO_INFILE(SNAME:FSFN);
}'CRLF(1);
ENM:}#SOUT("ERROR FILE:}#");
}'SETS(FNAME,0,0);
}'OUTNAME(FNAME:FEFN);
}'EFN_OUTFILE(FNAME,3B6:FEFN);
}'CRLF(1);
}'GOTO PASS1;
FSFN:}"SOUT("INCORRECT NAME. TRY AGAIN. ");
}'CRLF(1);
}'GOTO FNM;
FEFN:}"SOUT("INCORRECT NAME. TRY AGAIN. ");
}'CRLF(1);
}'GOTO ENM;

PASS1: LC_0;
}'HEDFLAG_0;
}'OLDLC_0;
}'TORR_0;
}'SN_0;
}'TNZ_1;
}'FLINE(FNO);
RDNL:}"STMT_READ(FNO);
}'SN_SN +1;
}'CH _GCI(STMT:RDNL);
}'GOTO RDNL IF CH = 12B;
}'NOOP_PARSE(STMT);
}'GOTO RDNL IF NOOP = -1;
}'IF TNZ =0 DO;
}/TNZ_ 1 IF OPCD[1] = XIF;
}/GOTO RDNL;
}'ENDIF;
}'IF OPCD[1] = EQU DO;
}/TLC_VALUE(OPND[1]);
}'ELSE DO;
}/TLC_LC;
}'ENDIF;
}'IF LABL.BP # LABL.WP DO;
}/SETR(LABL,0);
}/INSYM(LABL,TLC);
}'ENDIF;
}'IF OPCD[1] = IFN DO;
}/TNZ_0 IF N=0;
}'ELSEIF OPCD[1]=IFZ DO;
}/TNZ_0 IF Z=0;
}'ELSEIF OPCD[1]=XIF DO;
}/GOTO RDNL;
}'ELSEIF OPCD[1]=ORG DO;
}/OLDLC_LC IF TORR=0;
}/TORR_1;
}/LC_VALUE(OPND[1]);
}'ELSEIF OPCD[1]=ORR DO;
}/LC_OLDLC IF TORR=1;
}/TORR_0;
}'ELSEIF OPCD[1]=ENN DO;
}/GOTO PRE2;
}'ELSEIF OPCD[1] = REP DO;
}/TSTMT _ READ(FNO);
}/LC _ LC + VALUE(OPND[1]);
}'ELSEIF OPCD[1] = BSS DO;
}/LC_LC + VALUE(OPND[1]);
}'ELSEIF OPCD[1] = ASC DO;
}/LC_LC + VALUE(OPND[1]);
}'ELSEIF OPCD[1] = DEC DO;
}/LC_LC + NOOP;
}'ELSEIF OPCD[1] = OCT DO;
}/LC_LC + NOOP;
}'ELSEIF OPCD[1] = HED DO;
}/SETR(STMT,0);
}/FOR IVY_GCI(STMT:RDNL) WHILE
}5IVY#44B DO;
}/ENDFOR;
}/HEDFLAG_1;
}/SETS(HEADER,0,0);
}/FOR IVY_GCI(STMT:RDNL) WHILE 1 DO;
}3IF IVY=135B DO;}"* BLANK COUNT CHARACTER
}7GCI(STMT:RDNL);
}3ELSEIF IVY =' ' DO;
}3ELSE DO;
}7WCI(IVY,HEADER);
}7FOR IVY_WCI(GCI(STMT:RDNL),HEADER) WHILE 1 DO;
}7ENDFOR;
}3ENDIF;
}/ENDFOR;
}'ELSEIF OPCD[1] = EQU
}/OR OPCD[1] = UNL
}/OR OPCD[1] = LST
}/OR OPCD[1] = SKP
}/OR OPCD[1] = SPC
}/OR OPCD[1] = SUP
}/OR OPCD[1] = UNS DO;
}3GOTO RDNL;
}'ELSE DO;
}/LC _ LC + 1;
}'ENDIF;
}'GOTO RDNL;
PRE2:}"CLOSE(FNO);
FNMA:}"FNO_INFILE(SNAME:F2TM);
}'CRLF(1);
}'GOTO LUM;
F2TM:}"SOUT("FAILURE OF REOPENING THE SOURCE FILE");
}'CRLF(1);
}'SOUT("SOURCE FILE AGAIN:}#");
}'SETS(SNAME,0,0);
}'INNAME(SNAME:F2TM);
}'GOTO FNMA;
LUM:}#IF LL = 1 OR TT = 1 DO;
LNM:}+SOUT("LISTING FILE:}#");
}/SETS(FNAME,0,0);
}/OUTNAME(FNAME:FLFN);
}/LFN_OUTFILE(FNAME,3B6:FLFN);
}/CRLF(1);
}/GOTO BNM;
FLFN:}*SOUT("NAME INCORRECT. TRY AGAIN.");
}/CRLF(1);
}/GOTO LNM;
}'ENDIF;
BNM:}#IF B=1 DO;
}/SOUT("BINARY FILE:}#");
}/SETS(FNAME,0,0);
}/OUTNAME(FNAME:FBFN);
}/BFN_OUTFILE(FNAME,2B6:FBFN);
}/CRLF(2);
}/FIRSTBLOCK();
}/GOTO PASS2;
FBFN:}*SOUT("NAME INCORRECT. TRY AGAIN.");
}/CRLF(1);
}/GOTO BNM;
}'ENDIF;
PASS2: HSET();
}'LC_0;
}'OLDLC_0;
}'TORR_0;
}'SN_0;
}'TNZ_1;
}'LISTO_1 IF LL;
}'STMT_READ(FNO);
}'TLC_0;
}'LINECT_0;
}'PAGENO_1;
}'IF LISTO DO;
}*IF HEDFLAG DO;
}/SOUT("**RUNOFF",LFN);
}/CRLF(5,LFN);
}/SETR(HEADER,0);
}/SOUT("PAGE ",LFN);
}/IOUT(PAGENO,LFN);
}/SOUT(" - ",LFN);
}/SOUT(HEADER,LFN);
}/CRLF(3,LFN);
}/PAGENO_PAGENO+1;
}/LINECT_3;
}*ENDIF;
}*SOUT(" SN}%LC}#BNCD}:SOURCE",LFN);
}*NEWLINE(2,LFN);
}'ENDIF;
WRSM:}"WRITE(STMT,TLC) IF LISTO;
}'TLC_0;
RDSM:}"STMT_READ(FNO);
}'SN_SN+1;
}'BNCD_0;
}'CH_GCI(STMT:RDSM);
}'IF CH=12B DO;
}/TLC_0;
}/COMW(STMT,TLC) IF LISTO;
}/GOTO RDSM;
}'ENDIF;
}'NOOP_PARSE(STMT);
}'GOTO WRSM IF NOOP = -1;
}'IF TNZ=0 DO;
}/TLC_0;
}/TNZ_1 IF OPCD[1] = XIF;
}/GOTO WRSM;
}'ENDIF;
PSUDO: IF OPCD[1] = IFN DO;
}/TNZ_0 IF N=0;
}/TLC_0;
}/GOTO WRSM;
}'ELSEIF OPCD[1] = IFZ DO;
}/TNZ_0 IF Z=0;
}/TLC_0;
}/GOTO WRSM;
}'ELSEIF OPCD[1] = XIF DO;
}/TLC_0;
}/GOTO WRSM;
}'ELSEIF OPCD[1] =ORG DO;
}/OLDLC_LC IF TORR=0;
}/TORR_1;
}/LC_VALUE(OPND[1]);
}/BRITE(0,BFN,0) IF B;
}/TLC_LC;
}/GOTO WRSM;
}'ELSEIF OPCD[1] = ORR DO;
}/LC_OLDLC IF TORR;
}/BRITE(0,BFN,0) IF B;
}/TORR_0;
}/TLC_LC;
}/GOTO WRSM;
}'ELSEIF OPCD[1] = ENN DO;
}/BRITE(0,BFN,-1) IF B;
}/WRITE(STMT,0) IF LISTO;
}/GOTO POST2;
}'ENDIF;
PSD2:}"IF OPCD[1] = EQU DO;
}/TLC_VALUE(OPND[1]);
}/GOTO WRSM;
}'ELSEIF OPCD[1] = REP DO;
}/WRITE(STMT,LC) IF LISTO;
}/NREP_VALUE(OPND[1]);
}/TSTMT_READ(FNO);
}/NOOP_PARSE(TSTMT);
}/BCD_HCODE(OPCD[1]);
}/IF BCD#-1 DO;
}1BNCD_OPCODE(BCD);
}1IF B=1 DO;
}3FOR RIP_1 TO NREP DO;
}5WRITE(TSTMT,LC) IF LISTO;
}5LC_LC+1;
}5BRITE(BNCD,BFN,1);
}3ENDFOR;
}1ELSE DO;
}3LC_LC+NREP;
}1ENDIF;
}/ELSE DO;
}1PUTERR("SHOULD HAVE PROPER OPCODE.");
}1WRITE(TSTMT,LC) IF LISTO;
}1LC_LC+NREP;
}/ENDIF;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = BSS DO;
}/WRITE(STMT,LC) IF LISTO;
}/NREP_VALUE(OPND[1]);
}/LC_LC+NREP;
}/BRITE(0,BFN,NREP) IF B;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = ASC DO;
}/SETR(STMT,0);
}/SETS(OPND[2],0,0); * GET THE OPERAND CORRECTLY
}/CH _ ' ';
}/WHILE CH # 14B DO; * LOOK FOR THE COMMA
}2CH _ GCI(STMT);
}/ENDFOR;
}/WHILE 1 DO;* REWRITE THE OPERAND CORRECTLY THIS TIME
}2CH _ GCI(STMT:FASC0);
}2WCI(CH,OPND[2]);
}/ENDFOR;
FASC0:})NREP_VALUE(OPND[1]);
}/SETR(OPND[2],0);
}1FOR RIP_1 TO NREP DO;
}3BNCD_0;
}3FOR JIP_ 1 TO 2 DO;
}5CH_GCI(OPND[2]:FASC);
}5BNCD_(BNCD LSH 8) + CH + 40B;
}3ENDFOR;
FASC:}.WRITE(STMT,LC) IF LISTO;
*}2/* DON'T PRINT OUT STMT FOR EXTENDED LINES */
}3SETS(STMT,0,0) IF RIP=1;
}3LC_LC+1;
}3BRITE(BNCD,BFN,1) IF B;
}1ENDFOR;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = OCT OR OPCD[1]=DEC DO;
}1FOR RIP_1 TO NOOP DO;
}3WCI(BOC,OPND[RIP]) IF OPCD[1]=OCT;
}3BNCD_VALUE(OPND[RIP]);
}3WRITE(STMT,LC) IF LISTO;
*}2/* DON'T PRINT THE STMT FOR EXTENDED LINES */
}3SETS(STMT,0,0) IF RIP=1;
}3LC_LC+1;
}3BRITE(BNCD,BFN,1) IF B;
}1ENDFOR;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = ABS DO;
}/BNCD_VALUE(OPND[1]);
}/WRITE(STMT,LC) IF LISTO;
}/LC_LC+1;
}/BRITE(BNCD,BFN,1) IF B;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = DEF DO;
}/BNCD_VALUE(OPND[1]);
}/IF NOOP=2 DO;
}1SETR(OPND[2],0);
}1CH_GCI(OPND[2]:FDEF);
}1BNCD_(BNCD OR 100000B) IF CH=51B;
}/ENDIF;
FDEF:}*WRITE(STMT,LC) IF LISTO;
}/LC_LC+1;
}/BRITE(BNCD,BFN,1) IF B;
}/GOTO RDSM;
}'ENDIF;
PSD3:}"IF OPCD[1] =UNL DO;
}/LISTO_0;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = LST DO;
}/LISTO_1 IF LL;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = HED DO;
}/IF LISTO DO;
}2NEWLINE(1,LFN);
}/ENDIF;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = SPC DO;
}/NREP_VALUE(OPND[1]);
}/NEWLINE(NREP,LFN) IF LISTO;
}/GOTO RDSM;
}'ELSEIF OPCD[1] = SKP DO;
}/NEWLINE(100,LFN) IF LISTO;
}/GOTO RDSM;
}'ENDIF;
REGU:}"LAB _HCODE(OPCD[1]);
}'IF LAB # -1 DO;
}/BNCD_OPCODE(LAB);
}/WRITE(STMT,LC) IF LISTO;
}/LC_LC+1;
}/BRITE(BNCD,BFN,1) IF B;
}'ELSE DO;
}/PUTERR("THIS CODE IS ILLEGAL");
}/WRITE(STMT,0) IF LISTO;
}/LC_LC+1;
}'ENDIF;
}&GOTO RDSM;
POST2: IF TT=1 DO;
}'NEWLINE(3,LFN);
}'SOUT("SYMBOL TABLE:}"",LFN);
}'NEWLINE(2,LFN);
})FOR I_0 TO 2010 DO;
}+IF SYMT1[I] # 0 DO;
}/LAB_SYMT1[I];
}/SETS(CHAR,0,0);
}/FOR RIP _1 TO 4 DO;
}1CH_LAB$E4;
}1WCI(CH,CHAR) IF CH#0;
}1LAB_LAB LSH 6;
}/ENDFOR;
}/CH_SYMT2[I]$E5;
}/WCI(CH,CHAR) IF CH # 0;
}/VW_SYMT2[I]$E6;
}/SOUT(CHAR,LFN);
}/SOUT("}#",LFN);
}/IOUT(VW,LFN,8);
}/NEWLINE(1,LFN);
}+ENDIF;
})ENDFOR;
}'ENDIF;
IF LISTO DO;
}'COUT(137B,LFN) IF LFN#1;
ENDIF;
IF EFN#1 DO;
}'COUT(137B,EFN);
ENDIF;
FOR IVY_1 TO 3 DO;
}'COUT(137B,BFN);
ENDFOR;
CLOSALL ();
END;
