* ASSEMBLING & LOADING INSTRUCTIONS FOR SYSDDT:
* SOURCE PACKAGES: SAVDR, SYSDDT, SDEX, AND ITPSIM.
* SAVDR CONTAINS THE ITP CODE FOR SAVING AND RESTORING THE SYSTEM.}"IT
*}%ALSO CONTAINS THE NECESSARY APU CODE WHICH MUST RUN IN CONJUNCTION
*}%WITH THIS.}"THE APU CODE IS PACKAGED IN A SEPARATE PROGRAM APPENDED
*}%TO SAVDR.}"THIS CODE IS CALLED CPBND AND IS ASSEMBLED WITH APUAS.
* SAVDR ITSELF, TOGETHER WITH THE REST ARE ASSEMBLED WITH NARP.

* LET SAVDR ASSEMBLE TO B1.}"USE APUAS TO ASSEMBLE CPBND TO B2.
* ASSEMBLE SYSDDT TO B3.}"CONTINUE NARP TO ASSEMBLE BOTH SDEX AND ITPSIM
*}%TO B4 AND B5 RESPECTIVELY.

* TO LOAD, JUST :T B1 AND THEN B2.}":F AT THIS POINT SHOULD BE NEAR BUT
*}%NOT QUITE AT 10000.}"THEN DO 10000:T B3, FOLLOWED BY :T OF B4 AND
*}%B5.}"THERE SHOULD BE ONE UNDEFINED SYMBOL AT THIS POINT: SY.
* SET SY TO THE VALUE OF :F.}"THIS COMPLETES THE LOADING OF SYSDDT.

* HOWEVER, THE PRESENT CODE DOES NOT INCLUDE IPL.}"IPL CORE IMAGE
*}%IS FOUND ON A FILE CALLED IPL:9BIN.}"IT CONSISTS OF 4200B WORDS
*}%OF CODE INTENDED TO BE PLACED AT 300B AND 1000B WORDS INTENDED TO
*}%SIT AT 37000B.}"THIS MUST BE DONE BY HAND.

SYSDDT IDENT
}'NOLIST EXT



U:}%MACRO D
}'NOLIST ALL; LIST SLCT,GO; NOLIST GO;
}'REM .....D(1) IS AN UNDEFINED OPCODE

}'NOP; LIST ALL; ENDM;

ILLOP: MACRO D
NT:}$NARG
}'RPT (I:=1,NT:);
D(I:)}#MACRO; U: D(I:); ENDM;
}'ENDR;
}'ENDM;

}'ILLOP: ADC,SUC,DIV,COPY,RCH,BAC,ABC,STE,LDE,XEE,AXC;
}'ILLOP: SKS,SKD,NOD;
}'ILLOP: BPT1,BPT2,BTT3,BPT4;
}'ILLOP: REO,OTO,AIR,IET,IDT;
}'ILLOP: ALCW,DISW,ASCW,TOPW,CATW,CETW,CZTW,CITW;
}'ILLOP: EOD,MIW,WIM,EOM,BETW,BRTW;
}'ILLOP: BIO,BRS,CIO,CTRL,DBI,DBO,DWI,DWO,EXS;
}'ILLOP: FAD,FDV,FMD,FSB,GCD,GCI,ISC,IST,LAS;
}'ILLOP: LDP,OST,SAS,SBRM,SBRR,SIC,SKSE,SKSG;
}'ILLOP: STI,STP,TCI,TCO,WCD,WCH,WCI,WIO;

}'FRGT}#ILLOP:,U:,I:;


HLT}$OPD 0,1
BRU}$OPD 1B5,2
ETR}$OPD 2B5,2
MRG}$OPD 3B5,2
EOR}$OPD 4B5,2
NOP}$OPD 5B5
EXU}$OPD 6B5,2
STA}$OPD 7B5,2
STB}$OPD 10B5,2
STX}$OPD 11B5,2
BRX}$OPD 12B5,2
BRM}$OPD 13B5,2
UPOT}#OPD 14B5,1
UPIN}#OPD 15B5,1
XSA:}#EQU 16B5
CSA:}#EQU 16B5+4B2
SKE}$OPD 17B5,2
BRR}$OPD 20B5,2
SKB}$OPD 21B5,2
SKN}$OPD 22B5,2
SUB}$OPD 23B5,2
ADD}$OPD 24B5,2
SKR}$OPD 25B5,2
MIN}$OPD 26B5,2
XMA}$OPD 27B5,2
ADM}$OPD 30B5,2
LCY}$OPD 31B5,2,1
LSH}$OPD 31B5+4B2,2,1
RSH}$OPD 31B5+1B3,2,1
LRSH}#OPD 31B5+14B2,2,1
RCY}$OPD 31B5+2B3,2,1
SKM}$OPD 32B5,2
LDX}$OPD 33B5,2
SKA}$OPD 34B5,2
SKG}$OPD 35B5,2
LDB}$OPD 36B5,2
LDA}$OPD 37B5,2
EAX}$OPD 40B5,2
RQS}$OPD 41B5,2,1
UPR}$OPD 41B5+4B2,2,1
PRO}$OPD 41B5+1B3,2,1
CLRMAP OPD 41B5+14B2,1

DRCH}#LMACRO D
D(0)}#OPD 16B5+D(1)*4B2,1
}'ENDM
CLAB}#DRCH 2
CLA}$DRCH 3
CLB}$DRCH 4
CLX}$DRCH 5
CAB}$DRCH 6
CBA}$DRCH 7
XAB}$DRCH 10B
CBX}$DRCH 11B
CXB}$DRCH 12B
XXB}$DRCH 13B
CXA}$DRCH 14B
CAX}$DRCH 15B
XXA}$DRCH 16B
CNA}$DRCH 17B

DSK}$MACRO D
X.&D(1)A OPD XSA:+D(2),1
C.&D(1)A OPD CSA:+D(2),1
}'ENDM
XSA}$OPD XSA:,2
CSA}$OPD CSA:,2
}'DSK MD,74B
}'DSK IO,75B
}'DSK RL,76B
}'DSK BD,77B


*}"OPD'S TO CALL ITP MAG TAPE ROUTINES

MSAVCH OPD 10040300B,1
MRESCH OPD 10040301B,1
MCONVA OPD 10040302B,1
MFIND}"OPD 10040312B,1
MWIN}#OPD 10040313B,1
MSETWC OPD 10040314B,1
MWOUT}"OPD 10040315B,1
MPRINT OPD 10040316B,1


*}(THE FOLLOWING IS A LIST OF OPCODES USED BY SYS DDT.
* IT USES TWO INTERRUPTS, ONE FOR INPUT AND ONE FOR OUTPUT.}"IT DOES
* NOT USE MULTIPLY OR DIVIDE.}"IT DOES USE POPS.
* 
* LDA},STA}-LDB
* STB},LDX}-STX
* EAX},XMA}-ADD
* ADM},MIN}-SUB
* ETR},MRG}-EOR
* CLA},CLB
* CAB},CBA}-XAB
* CLX}-CXA
* CAX},XXA
* CNA}-BRU
* BRX},BRM}-BRR
* SKE},SKG}-SKM
* SKA},SKB}-SKN
* SKR},RSH}-LRSH
* RCY},LSH}-LCY
* NOP},EXU



* DEFINE I/O DEVICES (BY BIT NUMBER IN STATUS WORD)

DEV}$MACRO D
XX}%EQU 23-D(2)
D(1).&IOCW EQU 10B+XX
D(1).&INTW EQU 42B+XX
D(1).&BIT EQU 2^XX
D(1).&DEV EQU 4B7+2^XX
}'ENDM

}'DEV TI,22}/TELETYPE INPUT
}'DEV TO,21}/TELETYPE OUTPUT
}'DEV MX,19}/MULTIPLEXOR
}'DEV BP,18}/AUTOMATIC BREAKPOINT

FLGDEV EQU 4B7}"FLAG REGISTER
SSRDEV EQU 6}#SWITCH REGISTER
ILRDEV EQU 10B}"LIGHT REGISTER
ZMDEV}"EQU 11B}1ZAP PROCESSORS
R30DEV EQU 2B7+303B},M30 INPUT
W30DEV EQU 103B}0M30 OUTPUT

IOCNI}"EQU 4B7}"DON'T INCREMENT POINTER
IOCEC}"EQU 2B7}"CHECK FOR END OF BUFFER
IOCOUT EQU 1B7}"OUTPUT IF SET
IOCINT EQU 4B6}"INTERRUPT IF SET

$SCHBIT EQU 1B7}"SCHEDULE MODE BIT IN MODE REGISTER

BPTRW}"EQU 0}#FIRST POINTER CELL (RESET TO IOCNI+1)
EPTRW}"EQU 42B}"LAST POINTER CELL +1
BXFER}"EQU 42B}"FIRST TRANSFER CELL (RESET TO BRM TPANIC)
EXFER}"EQU 200B}"LAST TRANSFER CELL +1
LIGHTS EQU 10004B}"DEFAULT LIGHTS CELL


*}&THE FOLLOWING MACROS ARE TO RETURN FROM 
*}&SUBROUTINES

R1}%MACRO;}"BRU R1;}"ENDM
R2}%MACRO;}"BRU R2;}"ENDM
RPOP}#MACRO;}"SKR PDP;}"ENDM

*}&DEFINES A LOCATION CONTAINING ZERO FOR EACH ARGUMENT.

VARD}#MACRO D
LIM}$NARG;}"RPT (I=1,LIM)
D(I)}#ZRO;}"ENDR;}"ENDM

*}&HOLDS UNTIL THE ARGUMENT IS NOT EQUAL TO THE A REGISTER.

HOLD}#MACRO H;}"SKE H();}"BRU *+2;}"BRU *-2;}"ENDM

*}&SAVE THE GIVEN REGISTERS BY PUTTING THEM INTO CELLS DETERMINED
*}&BY CONCATENATING THE REGISTER NAME BEHIND THE THE FIRST 
*}&ARGUMENT OF THE MACRO.

SAVE}#MACRO SAV
LSAVE}"NARG;}"RPT (I=2,LSAVE);}"ST.&SAV(I) SAV(1).&SAV(I);}"ENDR;}"ENDM

*}&SIMILIAR TO SAVE.

RST}$MACRO RESTOR
LRST}#NARG;}"RPT (I=2,LRST);}"LD.&RESTOR(I) RESTOR(1).&RESTOR(I);}"ENDR
}'ENDM

*}&WHEN A ROUTINE REQUIRES THE ADDRESS OR QUANTITY ADDRESSED BY
*}&THE NEXT WORD AFTER THE CALL, GET WILL GET THE QUANTITY.
*}&THE FIRST ARGUMENT IS THE REGISTER THE QUANTITY IS TO BE 
*}&PLACED IN, THE SECOND ARGUMENT IS THE RETURN LINK FOR THE 
*}&SUBROUTINE.

GET}$MACRO G;}"MIN G(2);}"XMA G(2);}"ETR ADB;}"XMA G(2)
}'EAX* G(2);}"LD.&G(1) 0,2;}"ENDM


*}"SKIP TO THE NEXT SYMBOL.
*}"(NEEDS 1 MORE BRX)
*}"ASSUMES (B) = 7700B

NEXT}#MACRO;}"SKB* L;}"BRX *-1;}"BRX *+1;}"ENDM


* PARAMETERS
NILEV}"EQU 16}"MAXIMUM NUMBER OF LEVELS OF INDIRECTION
NPD}$EQU 20}"LENGTH OF PUSHDOWN LIST


* POPS USED BY DDT

C}&OPD 101B5
TCF}$OPD 102B5
TMF}$OPD 103B5


* INSTRUCTION MACROS

MUL}$MACRO T;}"BRM MX;}"NOP T(1);}"ENDM
DIV}$MACRO T;}"BRM DIVX;}"NOP T(1);}"ENDM
EIR}$MACRO;}"BRM EIRR;}"ENDM
DIR}$MACRO;}"BRM DIRR;}"ENDM
CIN}$MACRO;}"BRM CIN;}"BRU *-1;}"ENDM
COUT}#MACRO;}"BRM COUT;}"ENDM


}'FREEZE


* DDT ENTRY POINTS

$ENTRY BRU START
$CENTRY BRU DENT

* LIMITS OF SYMBOL TABLE
$SO}$DATA SY
EDDT}#DATA 36777B
}'DATA 0}"LIGHTS CELL
HELLO}"TEXT 'SDDT'}"ENTRY MESSAGE
}'BSS 2

* TRANSFER VECTOR FOR USER ITP PROGRAMS
}'BRU TI
}'BRU TO
}'BRU TCR
}'BRU APTENT
}'BRU TM
}'BRU RUNIT


* BEGINNING OF CELLS TO ZERO ON ENTRY
ZBEG}#EQU *

}'VARD NUMB,REDBIN,QUOT TEMPORARIES FOR PRINT NUMBER ROUTINE
}'VARD DV1SGN,DV2SGN,DVDEND,DVSOR}"TEMPS FOR DIV
UMI}$ZRO

LL}%ZRO 0 LOWER SEARCH LIMIT
MASK}#DATA -1 SEARCH MASK
PRAD}#DATA 8 PRINTOUT RADIX
$SYMTAB DATA -6 PREDEFINED LENGTH OF SYMBOL TABLE
UL}%DATA 377777B UPPER SEARCH LIMIT--REQUIRES INITIALIZATION


$AMD}#ZRO 0 ADDRESS PRINT ROUTINE
APTRAD ZRO 0 PRINTOUT RADIX FOR APT
$ARG}#ZRO 0}#VALUE PRECEDING ','
$ARI}#ZRO 0}#-1 IF NO ',', 0 IF ','
BB}%BSS 40}"BACKSPACE BUFFER
BBE}$EQU *
BBEP}#ZRO 0}#CURRENT END OF BB
BBP}$ZRO 0}#CURRENT POSITION IN BB
BCEAX}"ZRO 0 EAX 5,2 OR 7,2 FOR BCI
BLKGO}"ZRO 0}#BLOCK SCAN SUBROUTINE
BLKLL}"ZRO 0}#LOWER LIMIT OF BLOCK
BLKUL}"ZRO 0}#UPPER LIMIT OF BLOCK
$BMD}#ZRO 0}#BREAKPOINT REGISTER PRINT SUBROUTINE
$CC}$ZRO 0}#CHARACTER COUNT IN SYMBOL
COLMAX ZRO 0}#MAXIMUM COLUMN +1
COLUMN ZRO 0}#POSITION IN PRINT LINE
CONW}#ZRO
CPOST}"ZRO 0}"TEMP. FOR CPOS IN EVF
CPTRT}"ZRO 0}#TEMP. FOR CHAR. POINTER
CSIZET ZRO 0}#TEMP. FOR 4-CSIZE
DLWFLG ZRO 0}#-1 FOR %W, 0 FOR OTHER SEARCHES
DP}%ZRO
$DRUM}"ZRO 0}#<0 TO GO TO DRUM IF PAGE NOT IN CORE
$DRUMP ZRO 0}#PAGE READ FROM DRUM IF #0
$ENDX}"ZRO 0 PRINTOUT MODE CHARACTER FOR BREAK REGISTERS
EQI}$ZRO
ERX}$ZRO
EXF}$ZRO 0}#PRINTOUT MODE CHARACTER FOR MEMORY
EXMD}#ZRO 0}#PRINTOUT ROUTINE CORRESPONDING TO EXF
FDEX}#ZRO
FIELD}"ZRO
FILNAM ZRO 0}#TAPE FILE NAME
GLVAL}"ZRO 0}#L/G SWITCH (200B OR 0)
IDDREL ZRO 0}#-1 IF *: OR *&, 0 IF : OR &
IDDSW}"ZRO 0}#-1 IF : TYPED, 0 IF &
IDDTAG ZRO 0}#TAG NUMBER (0-16B) FROM : OR &
$ITPFLG ZRO 0}#<0 IF ITP MODE
$ITPMODE ZRO 0}"<0 IF PERMANENT ITP MODE
$ITPREL ZRO 0}#RELOCATION FOR ITP ADDRESSES
L}&ZRO
LET}$ZRO
LETN}#ZRO 0 B OR D AFTER NUMBER FLAG
$LRO}#ZRO 0}#VALUE OF '.'
LWT}$ZRO
MA}%ZRO 0}#LAST ADDRESS PRINT ROUTINE
MD}%ZRO 0}#LAST PRINTOUT ROUTINE
MULCAN ZRO 0 MULTIPLICAND FOR MUL
MULSGN ZRO 0}#RESULT SIGN FOR MUL
MSGAD}"ZRO 0 TEMP FOR TYPE MESSAGE ROUTINE
NDEC}#ZRO 0 NUMBER AS DECIMAL
NMASK}"ZRO 0}#COMPLEMENT OF MASK
NOCT}#ZRO 0 NUMBER AS OCTAL
NRAD}#ZRO 0 RADIX FROM B OR D
NUM}$ZRO
PAF}$ZRO 0 SUPPRESS ADDRESS PRINT IF <0
PDC}$ZRO 0 PUSHDOWN COUNTER
PDL}$BSS NPD+1 PUSHDOWN LIST
PDLE}#EQU *-1
PRCC}#ZRO
PRPF}#ZRO 0 PROCEED/TRACE PRINT FLAG
RAD}$ZRO 0}#LAST PRINTOUT RADIX
RADIX}"ZRO
RMD}$ZRO 0 WORD PRINT ROUTINE
ROP}$ZRO
$RUBGO ZRO 0}#GO HERE ON RUBOUT IF >0
$RUBOUT ZRO 0 >=0 IF RUBOUT
SIGN}#ZRO
$SVAL}"ZRO
$SVF}#ZRO 0 < FLAG
$SYL}#ZRO
SYMLOC ZRO 0}#POINTER TO BEGINNING OF SYMBOL
SYMPTR ZRO 0}#POINTER TO CURRENT END OF SYMBOL
T}&ZRO
}'VARD TCFA}/SAVE (A) FOR TCF
}'VARD TMFA,TMFB,TMFX}%SAVE REGISTERS FOR TMF
TLOC}#ZRO
TT}%ZRO
TTBA}#ZRO 0}#SAVE (A) FOR TTB
TYC}$ZRO 0 CHARACTER TYPED IN
TYX}$ZRO
UB}%ZRO 0}#ABSOLUTE ADDRESS OF END OF BLOCK + INDEX BIT
UV}%ZRO 0}#VIRTUAL ADDRESS OF END OF BLOCK
WDCNT}"ZRO 0}#NUMBER OF INSTANCES FOUND BY SEARCH
WDW}$ZRO
$WORD}"ZRO
XMD}$ZRO 0 TEXT PRINT MODE SWITCH
XMULT}"ZRO 0 SAVE CELL FOR MULT
$PDP}#ZRO PDL PUSH DOWN POINTER
* STORAGE FOR I/O ROUTINES
PCPOS}"BSS 1}#PRINTER LINE CHARACTER INDEX
PCBUF}"BSS 132/3}"PRINTER LINE BUFFER
PFLAG}"BSS 1}#>=0 IF LISTING ON PRINTER
PCHAR}"BSS 1}#EBCDIC CHARACTER
IBF}$BSS 1}#TELETYPE INPUT CHARACTER
INBUFL EQU 15}"LENGTH OF TTY INPUT BUFFER
INBUFE BES INBUFL
}'VARD IRIDX,IWIDX}0INPUT BUFFER POINTERS
}'VARD TIIA,TIIB,TIIX}-REGISTERS FOR TI INTERRUPT
}'VARD CINPB,CINPX}0REGISTERS FOR CINP
}'VARD COUTA,COUTB,COUTC,COUTX,COUTZ}$REGISTERS FOR COUT
*
ZEND}#EQU *


* STORAGE
ADISP}"BSS 1}#ADDRESS DISPLACEMENT FROM DINSA AND DIWA
ATAG}#BSS 1}#ADDRESS TAG FROM DINSA AND DIWA
AFMT}#BSS 1}#ADDRESS FORMAT IN DINSA AND DIWA
ACHAR}"BSS 1}#: OR & FOR PTA
IWORD}"BSS 1}#INSTRUCTION TO PRINT FOR PI
PWORD}"BSS 1}#WORD TO PRINT FOR PAPW, PFPW
PSAVAL BSS 1}#ADDRESS TO PRINT FOR PSA
PSATRY BSS 1}#CURRENT DISCREPANCY IN PSA
PSAPTR BSS 1}#ADDRESS OF LAST SYMBOL IN PI AND PSA
PSAIDX BSS 1}#INDEX OF BEST SYMBOL IN PSA
IADESC BSS 1}#INDIRECT DESCRIPTOR FOR PDE
PDFT}#BSS 1}#INITIAL BIT NUMBER FOR FIELD DESCRIPTOR IN PDF
EFASRC BSS 1}#'SOURCE' FOR EFA
EFIR}#BSS 1}#SIMULATED CONTENTS OF IR IN EFA
EFAIC}"BSS 1}#INDIRECTION COUNTER IN EFA
EFAIW}"BSS 1}#INDIRECT WORD IN EFA
FTMASK BSS 1}#FORMATTED OUTPUT MASK (%N)
FTKEY}"BSS 1}#FORMATTED OUTPUT CONTROL (%M)
PFTT}#BSS 1}#HOLDS FTKEY BEING CYCLED IN PFT
PFTW}#BSS 1}#HOLDS WORD BEING PRINTED IN PFT
$UMAP}"BSS 128}"SIMULATED PHYSICAL MAP
$UA}$BSS 1}#TRANSLATED USER ADDRESS FROM ULOAD
UAP}$BSS 1}#TEMP. FOR VIRTUAL PAGE NUMBER IN ULOAD
UAV}$BSS 1}#TEMP. FOR VIRTUAL ADDRESS IN ULOAD
PRSP1}"BSS 1}#FIRST CPTR IN PRS
PRSP2}"BSS 1}#SECOND CPTR IN PRS
PRSCI}"BSS 1}#SAVE (CSIZE,CPOS) IN PRS



ADB}$DATA 777777B
CRC}$DATA 155B
LFC}$DATA 152B
LMSK}#DATA 7777B4 


* THINGS TO BE PLACED IN LOW CORE ADDRESSES

LOW}$EQU *
}'DATA 100B;}"BRU* 0}&QSPL CALL POP
}'DATA 101B;}"BRU CALL}$'C' POP
}'DATA 102B;}"BRU TCFP}$'TCF' POP
}'DATA 103B;}"BRU TMFP}$'TMF' POP
}'DATA TIIOCW;}"DATA IOCNI+IOCINT+IBF}#TELETYPE INPUT IOCW
}'DATA TIINTW;}"ZRO TII}#TELETYPE INPUT INTERRUPT
}'DATA 3;}"BRU CENTRY}'TRAP
}'DATA 4;}"BRU CENTRY
}'DATA 6;}"BRU ENTRY
ELOW}#EQU *
LLOW}#DATA LOW-ELOW
TWO}$ZRO =2
BRMPAN BRM TPANIC}.USED TO FILL IN TRANSFER VECTORS
* PANIC SAVE CELLS
PANPC}"EQU 200B
PANA}#EQU 201B
PANB}#EQU 202B
PANX}#EQU 203B
PANIO}"EQU 204B
PANZ}#EQU 205B


*}"OPCODE TABLE, ORDERED BY NUMERIC VALUE

OP}%MACRO D
}'RPT (XX=1,8)
}'TEXT 'D(XX)'
}'DATA 4,[*-OPCODE-2]/3*1B5
}'ENDR
}'ENDM
$OPCODE EQU *
}'OP HLT,LDA,LDB,LDX,LDD,EAX,LNX,XMA
}'OP ETR,IOR,EOR,STD,STF,STA,STB,STX
}'OP ADD,SUB,ADC,SUC,ADM,ADX,MIN,MDC
}'OP MUL,DIV,ICP,CPZ,CMZ,ISD,DSD,EXU
}'OP ASHD,ASHA,LSHD,LSHA,CYD,CYA,TSB,LAX
}'OP BRU,BLT,BEQ,BLE,BGT,BNE,BGE,BLL
}'OP BLLN,BRX,BSX,SRS,EAC,65B5,66B5,67B5
}'OP FLX,FLD,FCP,FAD,FSB,FMP,FDV,OPR

OPP}$MACRO D
YY}%NARG
}'RPT (XX=1,YY)
ZZ}%NCHR D(XX)
}'IF 'D(XX$ZZ)'=':'
$D(XX$1,ZZ-1)OP EQU *+2
ZZ}%EQU ZZ-1
}'ENDF
}'IF ZZ<5
}'TEXT 'D(XX$1,ZZ)'; DATA 4
}'ELSE
}'TEXT 'D(XX$1,4)'; DATA 'D(XX$5)}#'+4
}'ENDF
}'DATA 77734000B+[*-OPRVAL-2]/3
}'ENDR
}'ENDM
OPRVAL EQU *
}'OPP CAB,XAB,CBA,CBX,XXB,CXB,CAX,XXA
}'OPP CXA,CNA,CNX,ZOA,ZAB,ZOB,CGA,XGA
}'OPP CLA,XLA,CSA,XSA,CTA,CCA,NOP,MVB
}'OPP MVC,MVS,CPS,CLS,ASP,LLT,COB,OPR37
}'OPP OPR40,LOADS,STORS,LSC,FIX,FLOAT,FNA,BRK:
}'OPP CIN:,COUT:,OPR52,OPR53,OPR54,SLOK,RLOK,ALD
}'OPP AST,AAX,PRO:,OPR63,UNPRO:,ATTN,USCL:,CMAP
}'OPP CMAPS,CAT,CAC,RUN
$MAXOPR EQU [*-OPRVAL]/3-1

OPX}$MACRO D
}'TEXT 'D(1$1,4)'; DATA 'D(1$5)}#'+4
}'DATA D(2)
}'ENDM
OPXVAL EQU *
UCVAL}"OPX UCALL,77740000B
}'OPX UCALN,77737400B
MCVAL}"OPX MCALL,77737000B
}'OPX MCALN,77736400B
UC0VAL OPX UCAL0,77736000B
$UCALOP EQU UCVAL+2
$MCALOP EQU MCVAL+2
UC0OP}"EQU UC0VAL+2

OPTAB}"DATA OPCODE-*
P}&EQU OPCODE
P1}%EQU P+1
P2}%EQU P+2


*}"ITP OPCODES

OPI}$LMACRO D
YY}%NARG
}'RPT (XX=1,YY)
ZZ}%NCHR D(XX)
}'IF ZZ>4;
ZZ}%EQU 4
}'ENDF
}'TEXT 'D(XX$1,ZZ)'
}'DATA 4
}'IF 'D(0$1)'
}'DATA [*-IOPCODE-2]/3*1B5
}'ELSE
}'D(XX) 0
}'ENDF
}'ENDR
}'ENDM

IOPCODE EQU *
}'OPI HLT,BRU,ETR,MRG,EOR,NOP,EXU,STA
}'OPI STB,STX,BRX,BRM,UPOT,UPIN,XSA,SKE
}'OPI BRR,SKB,SKN,SUB,ADD,SKR,MIN,XMA
}'OPI ADM,LCY,SKM,LDX,SKA,SKG,LDB,LDA
}'OPI EAX,RQS
*}"APU OPCODES
X}&OPI})CSS,LDF,STF,ADF,MGF,GOTO
X}&OPI CALL,ETF,SKNE,SNEL,MDC,SKLE,SCAL,SKEL
X}&OPI SKL,SKGE,SKP,SKNA,SKNB,BSR,BSL,BSX
X}&OPI BVR,SKUM,SKI,BRPX,MUL,BRQ,LLO,LDI
MAXIOP EQU [*-IOPCODE-3]/3

IOPR}#EQU *
}'OPI LCY,LSH,RSH,LRSH,RCY
}'OPI RQS,UPR,PRO,CLRMAP
}'OPI CLAB,CLA,CLB,CLX,CAB,CBA,XAB
}'OPI CBX,CXB,XXB,CXA,CAX,XXA,CNA
}'OPI XMDA,XIOA,XRLA,XBDA
}'OPI CMDA,CIOA,CRLA,CBDA
EIOPR}"EQU *

IOPTAB DATA IOPCODE-*


*}&SET UP VARIABLE BLOCK

START}"LDA =40000B;}"XBDA
START1 CLA;}"LDX =ZBEG-ZEND;}"STA ZEND,2;}"BRX *-1
}'STA LIGHTS;}"LDA =377777B;}"STA UL
}'EAX 8;}"STX PRAD;}"EAX PWI;}"STX XMD
}'EAX PAA;}"STX AMD;}"EAX PI;}"STX RMD
}'EAX APT;}"STX BMD;}"LDA EAX7X;}"STA BCEAX
}'LDA =-1;}"STA MASK;}"LDA =35B6;}"STA ENDX
}'LDX SYMSIZ;}"STX SYMTAB
}'LDA SO; SUB SYMSIZ; MRG =2B7; STA T
START3 LDA ISE,2; STA* T; BRX START3; LDA =-1; STA PFLAG
}'BRM SETUP; C SYSIN; BRU DENT1

*}&RESET SEQUENCE

DENT}#LDX SO; CXA; SUB -1,2; ADD =10B; SKG EDDT; BRU *+2; BRU DENT1
}'LDA -1,2; SKG SYMSIZ; STA SYMTAB
DENT1}"BRM EOMSET;}"BRM CIOBUF;}"CLA;}"STA ITPMODE;}"STA ITPREL
}'LDA =-1;}"STA TYC;}"STA RUBOUT;}"C TYSET
}'LDA =1; C STECON; C RELALL
}'CMDA; ETR =SCHBIT; STA SCHEDF
}'LDA =PDL;}"STA PDP;}"LDA HELLO;}"C PWD
RSR}$C TYSET; C TCR; CLA; STA LWT; C RETFIX
RSC}$LDA =-1;}"STA ROP;}"LDA =17B;}"STA EXF;}"STA PAF
}'LDA ITPMODE; STA ITPFLG; LDA RMD; C MS
}'LDA MD; STA EXMD; BRU RSBB
RST}$C TTB
RSBB}#LDA =BB; STA BBP; STA BBEP
RSW}$LDA =-1;}"STA SVF;}"CLA;}"STA DLWFLG
RSL}$CLAB;}"STA ARG;}"LDA =-1;}"STA ARI;}"STA SYL
RSA}$CLA;}"BRU *+2
RSQ}$MIN SYL;}"STA WORD;}"LDA =-1;}"STA FDEX
RSF}$LDA =-1;}"STA SIGN;}"CLA;}"STA FIELD
RSS}$LDA =-1;}"STA LET;}"STA LETN;}"CLA;}"STA NDEC;}"STA NOCT
}'STA NUM;}"STA CC;}"STA RUBGO;}"LDA PRAD;}"STA RADIX
}'LDA SO;}"SUB SYMTAB;}"STA SYMLOC;}"SUB =1;}"STA SYMPTR
}'LDX SO; LDA SYMTAB; STA -1,2
R}&LDA =PDL;}"STA PDP;}"C BTI;}"C RR
RB}%SKE =7; BRU RA; C BTI; C RRD; BRU RB
RA}%C /RXT;}"C /0;}"BRU RSR


*}&DISPATCHER ROUTINE, TAKES AN INCOMING CHARACTER AND
*}&READS THE DISPATCHER TABLE TO DETERMINE THE ROUTINE WHICH
*}&WILL ANALYSE THE CHARACTER PROPERLY.}"PUTS THE ENTRY IN THE 
*}&PREPARATION TABLE (RXT) INTO THE X REGISTER.

RRD}$C RXX; XXA; MRG =4B4; XXA; BRU RRE
RR}%LDX =DTAB+1-ENDTAB
RRE}$ETR =177B; SKG =132B; SKG =100B; BRU *+2; SUB =40B
}'STA TYC; LCY 15
}'SKA =1B7;}"EAX* ENDTAB-1,2;}"ETR =77B5;}"STA T
RD}%LDA ENDTAB,2;}"ETR =@7B7;}"SKG T;}"BRX RD
RE}%LDA ENDTAB,2;}"LRSH 21;}"STX DP;}"CAX;}"R1
*
RXE}$SKN SYL;}"BRU RXC
RXL}$LDA LWT;}"STA WORD
RXC}$C EVW;}"STA LWT
RXX}$LDX DP;}"LDX ENDTAB,2;}"R1
RXZ}$C EVL;}"BRU RXX-1
RXD}$SKN SYL;}"BRU RXC;}"BRU RXL
RXB}$CLA;}"SKN SYL;}"SKE CC;}"BRU RXC;}"BRU RXX
RXT}$BRU RXX NO EVAL
}'BRU RXB EVAL SYMBOL
}'BRU RXD EVAL (LWT, MUST BE DEFINED)
}'BRU RXZ EVAL, DO NOT COMBINE
}'BRU RXE EVAL (LWT)
}'HLT *}#UNUSED
}'HLT *}#UNUSED
}'HLT *}#COLLECT ANOTHER CHARACTER

*}&DISPATCHER TABLE
*}&MACRO TO CONSTRUCT DISPATCHER TABLE

D}&MACRO D
NA}%NARG
NC}%NCHR D(1);}"IF NC=1
LT}%EQU 'D(1)';}"ELSF NC=3
LT}%EQU 'D(1$2)';}"ELSF NC=2
LT}%EQU 7B;}"ENDF
}'IF NA>2;}"($LT) D(2),D(3)
}'ELSE;}"($LT) D(2);}"ENDF;}"ENDM

*}&DISPATCHER TABLE.}"AN ORDERED TABLE OF INPUT CHARACTERS AND
*}&POINTERS TO THE ROUTINES INDICATED.}"THE TAG BITS AND INDIRECT 
*}&BIT HAVE SPECIAL MEANING, SEE THE RR AND BTI ROUTINES

DTAB}#ZRO DTAB1-ENDTAB;}"D ' ',_SPC;}"D !,BEE,3;}"D '"',BCI;}"D #,RT,2
}'D $,ERS; D %,PCT+1-ENDTAB,7; D &,_ADESC; D '',BCP,2; D '(',ORA,2
}'D *,STAR+1-ENDTAB,7;}"D +,_PLS;}"D ',',_SEP,3;}"D -,_MNS
}'D .,_LETTER;}"D /,ERW;}"D 9,_DIGIT;}"D :,HERE;}"D ';',DOL+1-ENDTAB,7
}'D <,_SSV,2;}"D =,EQ,2;}"D >,GTP,2;}"D ?,TR;}"D @,ERF;}"D A,_LETTER
}'D B,_LETTB;}"D C,_LETTER;}"D D,_LETTD;}"D F,_LETTER
}'D G,_LETG;}"D K,_LETTER;}"D L,_LETL;}"D Z,_LETTER
}'D [,ERC;}"D \,EMD;}"D ],ERI;}"D ^,ORP,4;}"D _,EM,2
DTAB1}"51B ILL;}"52B ORN,4;}"54B ILL;}"55B CLOS,4 CARRIAGE RETURN
}'77B ILL
STAR}#ZRO STAR1-ENDTAB; D ' ',_ASTAR; D '"',ILL; D #,SCPU,1
}'D %,ILL; D &,_AADESC; D -,ILL
}'D .,QQPP,3; D 9,ILL; D :,_AAINST; D >,ILL; D ?,TR
}'D B,ILL; D C,QQC,3; D D,QQD
}'D E,ILL; D F,QQF,1; D G,QQG,2; D H,QQH; D O,ILL; D P,QQP,2
}'D R,ILL; D S,QQS,2; D U,ILL; D V,QQV,1
STAR1}"D 77B,ILL

PCT}$ZRO PCT1-ENDTAB;}"D ' ',ILL;}"D !,BEP,3
}'D '"',ILL; D #,DXZNG; D $,STEC,1
}'D %,SDRUM,1; D '(',EEAP; D ')',EEFP; D *,SCHMD,2
}'D +,DXPLS,1; D ',',ILL; D -,DXMNS,1; D .,DXPP,3; D /,IERW
}'D 9,ILL; D :,DXLNG; D ';',ILL
}'D =,WARN,1; D >,MAXP,1; D ?,TR
}'D @,PEC,1;}"D A,DXA,1;}"D B,PJSB,2
}'D C,DXC,1;}"D D,DXD,1;}"D E,ILL;}"D F,DXF,1
}'D G,DXG,1;}"D I,DXI,1;}"D J,PJB,2
}'D K,ILL;}"D L,DXL,1;}"D M,PEM,3;}"D N,PEN,1;}"D O,ILL
}'D P,DXP,3;}"D Q,DXQ,1;}"D R,PER,2;}"D S,DXS,1
}'D T,ILL;}"D U,DXU,1;}"D V,ILL
}'D W,PEW,2;}"D X,DXX,1;}"D Y,ILL;}"D Z,PEZ,2
}'D [,IERC;}"D \,SITP,2;}"D ],ILL;}"D ^,STKTR,2;}"D _,PMAP,2
PCT1}#77B ILL
DOL}$ZRO DOL1-ENDTAB;}"D ' ',_ORQ,4;}"D !,BER,3;}"D '"',SERH,2
}'D #,NWDS,2;}"D $,SERN,2;}"D %,_OPMRG;}"D &,_OPEOR
}'D '',PRS,3; D '(',EAPW,2; D ')',EFPW,2; D *,_OPMUL
}'D +,_OPASP; D ',',ILL; D -,_OPCLS; D .,DLPP,3; D /,_OPDIV
}'D 0,ILL; D 1,DLL1,1; D 2,DLL2,1; D 3,DL3; D 4,DL4; D 9,ILL
}'D :,_OPMOD; D <,MPCOPY,3; D =,LITES,1; D >,PMCOPY,3; D ?,TR
}'D @,SERF,2;}"D A,DLA,1;}"D B,DLB,1
}'D C,ILL;}"D D,DLD,2;}"D E,DLE,4
}'D F,DLF,1;}"D G,DLG,2;}"D J,ILL;}"D K,DLK
}'D L,DLL,1;}"D M,DLM,1;}"D N,DLN,2;}"D O,DLO,2;}"D P,DLP,2
}'D Q,DLQ,2;}"D R,DLR,2;}"D S,DLS,2;}"D T,ILL;}"D U,ITPEXU,2
}'D V,DLV,2;}"D W,DLW,2;}"D X,DLX,1;}"D Y,ILL;}"D Z,DLZ,3
}'D [,SERC,2;}"D \,PAFF;}"D ],SERS,2;}"D ^,DOPOT,3
DOL1}#77B ILL
ENDTAB BSS 0;}"FRGT LT

*}&PUSHDOWN OPERATIONS

CALL}#XMA 0; STA* PDP; LDA =PDLE; SKG PDP; BRU C1
}'LDA* PDP; XMA 0; MIN PDP; BRU* 0
C1}%LDA =PDL; STA PDP
}'LDA ='STKO'; C PWD; TCF ='V'; BRU RSR
$R1}$SKR PDP;}"BRR* PDP
$R2}$SKR PDP;}"MIN* PDP;}"BRR* PDP

*}&MULTIPLY SIMULATION

NEGMUL ZRO; CNA; XAB; EOR =-1; XAB; BRR NEGMUL

MULL}#ZRO; STX XMULT; CLB; SKG =-1; BRM NEGMUL
}'STA MULCAN; GET A*,MULL; SKG =-1; BRM NEGMUL
}'SKG MULCAN; BRU *+2; XMA MULCAN; SKE =4B7; BRU NOT4B7
}'LDA MULCAN; SKB =-1; CNA; CLB; BRU OUT
NOT4B7 STB MULSGN; CAB; CLA; LDX =-23; SKB =1
ADDD}#ADD MULCAN
ZERO}#LRSH 1;}"SKB =1;}"BRX ADDD;}"BRX ZERO
}'SKN MULSGN; BRU OUT; XAB; CNA; XAB
}'CNA; SKB =-1; SUB =1
OUT}$LDX XMULT;}"BRR MULL

*}&DIVIDE SIMULATION

DIVV}#ZRO; STX XMULT; STA DV1SGN
}'RSH 1; SKG =-1; BRU DNEG1
DN1RET STA DVDEND; GET A*,DIVV; STA DV2SGN
}'SKG =-1; CNA; STA DVSOR; LDA DVDEND; LDX =-24
LOOPD}"LSH 1; SUB DVSOR; SKG =-1; BRU ZERQ
}'XAB; MRG =1; XAB
ZRET}#BRX LOOPD; SKN DV2SGN; BRU NEGNUM
}'CNA; XAB; CNA; XAB
NEGNUM XAB; SKN DV1SGN; BRU *+2; CNA
}'LDX XMULT; BRR DIVV
DNEG1}"XAB; CNA; XAB; CNA
}'SKB =-1; SUB =1; BRU DN1RET
ZERQ}#ADD DVSOR; BRU ZRET

*}&CLOSE REGISTER

CLO}$LDA ROP; SKN SYL; SKG =-1; R1
}'LDA LRO; C USTORE; BRU ILM; LDA WORD; STA* UA; R1

*}&ASSORTED NO-EVAL CHARACTERS

ILLB}#BRU ILL
ILM}$EQU *
ILL}$TCF =37B
ILX}$SKN PFLAG; C TCR
}'C TYSET; SKE =-1; TCF ='?'
TR}%SKN ROP;}"BRU RST;}"BRU RSR
ILU}$LDA ='(U) ';}"C PWD;}"BRU ILX
STV}$STA NUM
STQ}$LDA =-1;}"STA LET
STH}$LDA =1;}"STA CC;}"MIN SYL;}"LDA SYL;}"SKG =0;}"STA WORD;}"BRU R

*}&PRINT AS NUMBER,INST,DESC,BCI,FORMATTED

DLO}$NOP =8
DLD}$NOP =10
}'LDB* 0,2; STB RAD
}'SKN ROP; BRU PQ; SKN SYL; BRU EQQ
}'STB PRAD; BRU RSR
DLV}$NOP PAA; SKN SYL; BRU PRCV
DLR}$NOP PSA; SKN SYL; BRU RADS
}'LDB 0,2; STB MA
}'SKN ROP; BRU PQ; STB AMD; BRU RSR
RADS}#SKG =377B; SKG =1; BRU ILL; STA PRAD; BRU RSR
EFPW}#NOP PFPW
EAPW}#NOP PAPW
EM}%NOP PI
}'LDA EXF; SKE ='/'; BRU EQV
}'LDA 0,2; STA EXMD; BRU EQV
EQQ}$EAX EQ
EQ}%NOP APT
BCP}$NOP* XMD
RT}%NOP PDE
GTP}$NOP PFT
EQV}$LDA 0,2; C MS
PQ}%C TTB; LDA WORD; LDX =-1; C _MD; BRU RST


*}"EXTRACT ADDRESS

AX}%LDB =6B7; SKM =6B7; ETR =@6B7
}'ETR =60777777B; SKN ITPFLG; R1; ETR =60037777B; R1


*}"SET PRINTOUT MODE

MS}%STA MD; LDA PRAD; STA RAD
}'LDA AMD; STA MA; R1

*}&MODE SWITCHES AND SWITCHERS

SERN}#LDB CC; SKB =-1; BRU OPEOR; EAX SERNN; BRU SERNN

SERS}#NOP PI;}"NOP =77B6
SERC}#NOP APT;}"NOP =35B6
SERH}#NOP* XMD;}"NOP =2B6
SERNN}"NOP PDE;}"NOP =3B6
SERF}#NOP PFT;}"NOP =36B6
}'LDB 0,2; SKN SYL; BRU *+2; CLA
}'SKE =0; BRU SEB; STB RMD; BRU RSR
SEB}$STB BMD; LDA* 1,2; STA ENDX; BRU RSR

*}&INTERNAL REGISTERS

DLL}$NOP* PCPTR; SKN ARI; BRU SETL
DXL}$NOP* LRPTR
DXG}$NOP* GRPTR
DLL1}#NOP LL
DLL2}#NOP UL;}"ETR ADB
DLA}$NOP* ARPTR
DLB}$NOP* BRPTR
DLX}$NOP* XRPTR
DXC}$NOP* CRPTR
DXD}$NOP* DRPTR
DXS}$NOP* SRPTR
DLM}$NOP MASK
DLQ}$NOP LWT
DXA}$NOP ATTNF
DXX}$NOP UEMODE
DXF}$NOP HFLAGS
DXQ}$NOP ICOUNT
MAXP}#NOP MMSP
WARN}#NOP WARNF
LITES}"NOP LIGHTS
INTERN LDX 0,2; STX T; LDB CC; SKB =-1; BRU INTS
}'LDA* T; BRU STV
INTS}#STA* T; BRU TR

DLF}$LDB CC; SKB =-1; BRU ILL; LDA SYMLOC; BRU STV

SCHMD}"LDB CC; SKB =-1; BRU SCHM1
}'CMDA; ETR =SCHBIT; SKE =0; LDA =1; BRU STV
SCHM1}"SKE =0; LDA =SCHBIT; STA SCHEDF
}'CMDA; ETR =@SCHBIT; MRG SCHEDF; XMDA; BRU TR

DXI}$LDB CC; SKB =-1; BRU DXI1; LDA AUTOBP; BRU STV
DXI1}#C SETABP; BRU TR

DXU}$LDB CC; SKB =-1; BRU DXU1; LDA PROCNO; BRU STV
DXU1}#C SETPRN; BRU TR

*}&COMMA, SETS LIMITS

SEP}$SKN ARI;}"BRU ILL;}"STA ARG;}"CLA;}"STA ARI;}"BRU RSA
SETL}#STA UL; LDA ARG; STA LL; BRU RSR

STEC}#LDB CC; SKB =-1; BRU STECON
}'LDA STEP; SKE =0; LDA =1; BRU STV

SDRUM}"NOP DRUM; BRU INTERN

SCPU}#NOP CPUNO; LDB CC; SKB =-1; BRU SETCPU
}'SKN BOTH; BRU INTERN; LDX =TWO; BRU INTERN

*}&CR, LF, (, OR ^

CLOS}#C CLO;}"BRU RSC
ORN}$C CLO;}"MIN LRO
OPR}$C OPV;}"BRU RST
OPV}$LDA LRO;}"C AX;}"STA LRO;}"STA WORD
}'LDX =-1;}"SKN PAF;}"C _AMD
}'SKN PAF; TCF EXF; CLA; STA SYL
}'LDA EXMD; C MS
}'LDA LRO;}"CLB;}"STB ROP;}"BRU ERT 
ORA}$C CLO;}"LDA WORD;}"STA LRO;}"BRU ORR
ORP}$C CLO;}"SKR LRO;}"NOP
ORR}$C TCR;}"BRU OPR
ORQ}$C CLO;}"LDA LRO;}"ADD =1;}"C AX;}"STA LRO;}"CAX
}'C ERE;}"BRU RSW

ERT}$SKN EXF; BRU ERL
ERE}$C ULOAD; BRU ILL; STA LWT; R1
ERL}$C TTB; C ULOAD; BRU ILL; STA LWT; BRU _MD

*}&FILL, EXAMINE

IERC}#NOP EQ
IERW}#NOP RMD; LDA =-1; STA ITPFLG; BRU ER
EEAP}#NOP EAPW
EEFP}#NOP EFPW; LDA ='/'; STA TYC; BRU ER
EMD}$NOP RMD;}"LDA =4B7;}"ADM TYC
ERW}$NOP RMD
ERI}$NOP EM
ERC}$NOP EQ
ERB}$NOP BCP
ERS}$NOP RT
ERF}$NOP GTP
ER}%LDA* 0,2; C MS; SKN SYL; BRU ERO
}'LDA LWT; C AX; BRU ERY
ERO}$LDA TYC; STA EXF; LDA MD; STA EXMD
}'C EVL; C AX; STA LRO
}'CLB; STB ROP; SKN ARI; BRU ERQ
ERY}$C ERT;}"BRU RST
ERQ}$SKN EXF;}"BRU *+2;}"BRU ERY
*}"BLOCK EXAMINE
}'LDA ARG; C AX; STA ARI
}'XMA LRO; STA ARG; LDA =-1; STA ROP
EBL}$CLA; STA PAF; C TCR
}'C OPV; LDA =-1; STA PAF
EBR}$LDA ARG; SKG LRO; BRU EBX; MIN LRO
}'LDA LRO; SUB ARI; SKA =3; BRU EBT; BRU EBL
EBT}$LDA LRO; SUB ARI; ETR =3; LDB =2B7; LSH 4
}'SKG COLUMN; BRU EBP; TCF =0; BRU EBT
EBP}$C OPV; BRU EBR
EBX}$C TCR; BRU RSR





*}&SET TEXT MODE

EAX7X}"EAX 7,2
EAX5X}"EAX 5,2
DL3}$NOP PWI
DL4}$NOP PWD;}"LDA 0,2;}"STA XMD;}"LDA -2,2;}"STA BCEAX;}"BRU TR

*}"SET ADDRESS TAG, OR COMPUTE EFFECTIVE ADDRESS

ASTAR}"SKN ITPFLG; BRU ILL; LDA =4B4; ADM WORD
}'LDX =SPC; BRU SPC
AAINST LDA =-1; BRU *+2
AADESC CLA; LDB =-1; SKN LET; BRU IDDE; BRU ILL
AINST}"LDA =-1; BRU *+2
ADESC}"CLA; CLB
IDDE}#STB IDDREL; STA IDDSW; SKN LET; BRU IDD1
}'LDA LWT; SKN SYL; C EVW
}'LDX LRO; SKN IDDSW; BRU IDD2
}'C EFA; BRU ILM; BRU IDDR
IDD2}#C EFD; BRU ILM
IDDR}#ETR ADB; BRU RSQ
* SET TAG.}"PICK UP TAG VALUE AND MASK
IDD1}#LDA* SYMLOC; LDX =-NNAT
IDD3}#SKE EAMTAG,2; BRU IDD4; CXA; ADD =NNAT; STA IDDTAG
}'SKN IDDSW; ADD =NNAT; CAX
}'LDA AMVAL,2; ADD FIELD; STA WORD
}'SKN IDDREL; BRU IDD6; LDA AMBA,2
}'SKE =0; BRU *+2; BRU ILL
}'LDA* AMBA,2; CNA; ADM WORD; BRU RSF
IDD6}#LDX IDDTAG; LDA AMFMT,2; SKN IDDSW; ADD =NNAF; CAX
}'CLA; LDB =-1; EXU AMRSH,2; STB FDEX; BRU RSF
IDD4}#BRX IDD3; BRU ILL

*}&SUPPRESS ADDRESS PRINT

PAFF}#LDA =-1;}"STA PAF;}"BRU TR



*}&SYMBOL SEARCH

SCH}$C LS
SCO}$CXB; LDX SYMPTR; CLA; STA 1,2
}'LDA* SYMPTR; SKA =7700B; MIN SYMPTR
}'CBX; LDA* SYMLOC; LDB =7700B
SC1}$SKE* L; BRU SC2; LDB SYMLOC
SC5}$SKA =7700B; BRU SC6; BRX SCX
SCX}$LDA* L; R1
SC6}$XXB; EAX 1,2; LDA 0,2; XXB; BRX *+1
}'SKE* L; BRU SC7; BRU SC5
SC7}$LDB =7700B
SC2}$SKB* L; BRU SC4; EOR* L; SKA =@77B; BRU SC4; BRX SCX
SC4}$LDA* SYMLOC
SC3}$NEXT; BRX SC1; R2

*}&SYMBOL DEFINE

SDF}$C SCH;}"BRU SDV
}'LDA SYMPTR; SUB SYMLOC; ADD =2; ADM L
}'CNA; ADM SYMTAB; LDX =-1
SDV}$LDA SVAL; STA* L; R1


*}&SYMBOL DEF (<, :)

HERE}#LDA LRO; SKN SVF; LDA SVAL; STA SVAL
}'SKN LET; SKN SIGN; BRU AINST; C SDF; BRU TR
SSV}$STA SVAL;}"MIN SVF;}"BRU RSL 


*}&LETTERS OR DIGITS

LETTB}"LDA NOCT;}"LDB =8;}"BRU *+3
LETTD}"LDA NDEC;}"LDB =10;}"STA NUM;}"STB NRAD;}"SKN LET;}"BRU LN
}'SKN LETN;}"BRU LETTER;}"LDA CC;}"SKG =0;}"BRU LETTER
}'MIN LETN;}"BRU LN
LETTER MIN LET
LN}%LDA CC; ETR =3; CAX
}'LDA TYC; CLB; BRU CHT,2
CHT}$BRU LN1; LCY 6; LCY 6; ADM* SYMPTR; BRU LN2
LN1}$MIN SYMPTR; LCY 18; STA* SYMPTR
LN2}$MIN CC; MIN SYL; BRU R
DIGIT}"SKN LET; BRU LETTER; SKN LETN; BRU DSCALE
}'LDA RADIX;}"MUL NUM;}"LSH 23;}"ADD TYC
}'SUB =20B; STA NUM; LDA TYC; RCY 3; LDA NOCT; LCY 3; STA NOCT
}'LDA NDEC;}"MUL =5;}"LSH 24;}"ADD TYC;}"SUB =20B;}"STA NDEC
}'BRU LN 
DSCALE LDA =17B; SUB TYC; CAX; LDA NUM; BRU SCALE2
SCALE1 MUL NRAD; LSH 23
SCALE2 BRX SCALE1; STA NUM; BRU LN

* ADDRESSING LETTERS (G, L)

LETG}#CLA; BRU *+2
LETL}#LDA =200B; STA GLVAL; SKN LET; BRU LN
}'LDA CC; SKG =0; BRU LETTER
}'C EVF; SKN ARI; BRU GL1
}'ETR =177B; MRG GLVAL; BRU GL2
GL1}$ETR =37B; MRG GLVAL; SKA =200B; EOR =240B
GL2}$STA FIELD; CLA; STA SIGN; BRU RSS


*}&EVALUATE FIELD

EVF}$SKN LET;}"BRU EVS
EVV}$LDA FIELD;}"LDX SIGN;}"EXU EVTAB+1,2
EVVR}#STA FIELD;}"R1
EVS}$LDA* SYMLOC; SKE ='.}#'; BRU EVSE
}'LDA LRO; BRU EVVN
EVSE}#C SCH;}"BRU EVVN;}"BRU EVO
EVVN}#STA NUM;}"BRU EVV
EVO}$LDA FDEX;}"SKE =-1;}"BRU ILU;}"C LP;}"C SCO;}"BRU EVVN
}'BRU ILU
EVTAB}"LDA NUM; ADD NUM; SUB NUM; BRU EVMUL; BRU EVDIV
}'ETR NUM; MRG NUM; EOR NUM; BRU EVMOD; BRU EVASP; BRU EVCLS
EVMUL}"MUL NUM;}"LCY 23;}"BRU EVVR
EVDIV}"RSH 23;}"DIV NUM;}"BRU EVVR
EVMOD}"RSH 23; DIV NUM; CBA; BRU EVVR
EASP1}"CNA; STA NUM; LDA FIELD
EVASP}"C ECPC; ADD NUM; C ECCP; BRU EVVR
EVCLS}"LDA NUM; LDB =6B7; SKM =4B7; BRU EASP1
}'C ECPC; XMA FIELD; C ECPC; SUB FIELD; BRU EVVR

ECPC}#STA CPTRT; LRSH 20; ETR =3; CNA; ADD =4; STA CSIZET
}'CLA; LSH 2; STA CPOST
}'CLA; LSH 18; MUL CSIZET
}'LSH 23; ADD CPOST; R1

ECCP}#RSH 23; DIV CSIZET; ETR =777777B; STA CPOST
}'LSH 42; MRG CPOST; EOR CPTRT
}'ETR =@74B6; EOR CPTRT; R1


*}&EVALUATE EXP

EVL}$C EVF;}"ETR FDEX;}"ADD WORD;}"STA WORD;}"R1


*}&EVALUATE WORD

EVW}$C EVL;}"SKN ARI;}"BRU *+2;}"R1
}'SKN ITPFLG; BRU EVW1; CLB; LCY 21; BRU EVW0
EVW1}#LCY 8; ETR =37400B
EVW0}#MRG ARG; STA WORD; R1


*}&ARITHMETIC OPS

OPT}$EQU *
SPC}$EQU *
PLS}$BRU SSAOP
MNS}$BRU SSAOP
OPMUL}"BRU SSAOP
OPDIV}"BRU SSAOP
OPETR}"BRU SSAOP
OPMRG}"BRU SSAOP
OPEOR}"BRU SSAOP
OPMOD}"BRU SSAOP
OPASP}"BRU SSAOP
OPCLS}"BRU SSAOP
SSAOP}"STX TYC;}"C EVF;}"LDA TYC;}"SUB =OPT;}"STA SIGN;}"MIN SYL
}'BRU RSS


*}&PRINT SIGNED NUMBER

PS8}$LDB =8; BRU APS
PS10}#LDB =10; BRU APS
PSN}$LDB RAD
APS}$SKG =-1; SKG =777B5-1; BRU APTENT
}'TCF =15B; CNA; BRU APTENT


*}&PRINT NUMBER

AP8}$LDB =8; BRU APTENT
AP10}#LDB =10; BRU APTENT
APT}$LDB RAD
APTENT STB APTRAD; STA NUMB; CLAB
NOLOOP STA REDBIN;}"LDA NUMB
NOTEQ}"STA QUOT;}"LRSH 23;}"DIV APTRAD;}"SKE REDBIN;}"BRU NOTEQ;}"CBA
}'ADD =20B;}"COUT
}'LDA QUOT;}"SKE NUMB;}"BRU NOLOOP;}"R1 


*}&INPUT ROUTINE


CIN}$ZRO; SAVE CINP,B,X; C SHOW
CINP1}"SKN RUBOUT; BRU BELL
}'LDA IRIDX; SKE IWIDX; BRU *+2; BRU CINP0
}'LDX IRIDX; BRX *+2; LDX =-INBUFL
}'LDA INBUFE,2;}"STX IRIDX;}"MIN CIN
CINP0}"RST CINP,B,X; BRR CIN


*}&INTERRUPT ROUTINE TO INPUT A CHARACTER (ITP ONLY)

TII}$ZRO;}"STA TIIA
}'CLA;}"XIOA;}"STA CONW
}'SAVE TII,B,X
}'LDA IBF;}"ADD =140B;}"ETR =177B
*}&RUBOUT?
}'SKE =137B; BRU *+2; BRU TII1; SKE =153B; BRU TII3
TII1}#MIN RUBOUT
}'LDA RUBGO; SKG =0; BRU TII2; STA TII; BRU TII2
*}&NO RUBOUT
TII3}#LDX IWIDX; BRX *+2; LDX =-INBUFL; XXA; SKE IRIDX
}'BRU *+2;}"BRU TII2;}"XXA;}"STA INBUFE,2;}"STX IWIDX
*}&FINISHED?
TII2}#RST TII,B,X
}'LDA CONW;}"XIOA
}'LDA TIIA;}"BRU* TII


* BREAK ON RUBOUT

BELL}#LDA =-1; STA RUBOUT; STA RUBGO
}'C TYSET; BRM CIOBUF; TCF =147B; BRU RSR


*}&OUTPUT ROUTINE

COUT}#ZRO; STA COUTC; SKA =100B; BRU COUT2
}'LDA COLUMN; SKE COLMAX; BRU COUT2
}'LDA =155B; BRM COUTN; LDA =152B; BRM COUTN
COUT2}"LDA COUTC; BRM COUTN; BRR COUT

COUTN}"ZRO; SAVE COUT,A,B,X; LDB 0; STB COUTZ
}'ETR =177B; SKA =100B; BRU *+2; MIN COLUMN
}'SKE =152B; BRU *+3; CLB; STB COLUMN
COUT3}"SKN RUBOUT; BRU BELL; C SHOW
}'LDA =FLGDEV; UPIN; SKB =TOBIT; BRU *+2; BRU COUT3
}'LDA COUTA; ADD =240B; CAB; LDA =TODEV; UPOT
COUT0}"LDA COUTZ; STA 0; RST COUT,A,B,X;}"BRR COUTN

* SET UP FOR TELETYPE OUTPUT

TYSET}"LDA =72; STA COLMAX; R1


DIRR}#ZRO; XMA DIRT; CLA; XIOA
}'XMA DIRT;}"BRR DIRR


EIRR}#ZRO;}"XMA DIRT;}"XIOA;}"XMA DIRT
}'BRR EIRR

DIRT}#ZRO


*}&ENABLE INTERRUPT STRUCTURE

EOMSET ZRO;}"CLA;}"XIOA;}"MRG =TIBIT;}"XIOA
}'BRR EOMSET


*}"CLEAR INPUT AND OUTPUT BUFFERS

CIOBUF ZRO; LDX =-INBUFL; STX IRIDX; STX IWIDX; BRR CIOBUF


*}&PRINT CHARACTER

TCFP}#SAVE TCF,A;}"LDA* 0;}"COUT
}'RST TCF,A;}"BRR 0

TO}%COUT; R1


*}&PRINT MESSAGE

TMFP}#SAVE TMF,A,B,X; EAX* 0; CXA; ETR =37777B; STA MSGAD
TMFP1}"LDX =-3; LDB* MSGAD
TMFP2}"CLA; LCY 8; SKE ='$'; BRU TMFP4
}'LDA =155B; COUT; LDA =152B
TMFP4}"SKE ='/'; BRU TMFP3; RST TMF,A,B,X; BRR 0
TMFP3}"COUT; BRX TMFP2; MIN MSGAD; BRU TMFP1

TM}%XXA; TMF /0; XXA; R1


*}&PRINT BCI WORD

PWN}$CAB;}"CLA;}"LCY 6;}"COUT
}'CBA
PWD}$SKE =0;}"BRU PWN;}"R1
$PWI}#CAB;}"CLA
PWC}$LCY 8;}"C PCI;}"CLA;}"SKB =-1;}"BRU PWC;}"R1
PCI}$SKA =1B2;}"TCF =6;}"ETR =77B;}"COUT
}'R1





*}&PRINT SYMBOL

PSY1}#C PWD; EAX 1,2
PSY}$LDA 0,2; SKA =7700B; BRU PSY1; ETR LMSK; BRU PWD


*}&INPUT CHARACTER

TI}%CIN; SKG =137B; BRU TI2
}'SKE CRC; BRU TI1; COUT; LDA LFC
TIO}$COUT
}'EOR =7;}"R1
TI2}$COUT; R1
TI1}$SKE LFC;}"R1;}"COUT;}"LDA CRC;}"COUT
}'BRU TIO

* BUFFERED VERSION OF TI

BTI}$LDA BBEP; SKG BBP; BRU BTI1
}'LDA* BBP; MIN BBP; R1
BTI1}#LDA =BB; STA BBP; STA BBEP
BTI2}#LDA =BBE-1; SKG BBEP; BRU BTI; C ITI
BTI2A}"C RR; SKE =7; BRU BTI3; C ITI; C RRD
BTI3}#LDX DP; LDA ENDTAB,2; SKA =4B4; BRU BTI2; BRU BTI

ITI}$C TI; SKE =141B; BRU ITI0
}'LDA BBEP; SKE BBP; BRU ITI1; TCF =147B; BRU ITI
ITI1}#TCF ='^'; SKR BBEP; RPOP
}'LDA BBEP; SKG =BB; BRU BTI2
}'CAX; LDA -1,2; BRU BTI2A
ITI0}#STA* BBEP; MIN BBEP; R1


*}&TYPE CR, TAB, 'OK'

$TCR}#TCF CRC;}"TCF LFC;}"R1
$TTB}#STA TTBA;}"LDA COLMAX;}"SUB COLUMN;}"SKG =12;}"C TCR
}'LDA TTBA;}"TCF =0;}"TCF =0;}"TCF =0;}"R1
$TOK}#LDA ='--OK';}"C PWD;}"C TI;}"SKE =16B;}"BRU ILL;}"R1
$PFULL TCF =0;}"LDA ='FULL';}"BRU PWD


*}&SETUP SYMBOL TABLE SCAN

LS}%LDA SO; MRG =2B7; SUB SYMTAB; STA L
}'LDX SYMTAB; R1

LP}%SKN ITPFLG; BRU LP1
}'LDA LIPO; SUB IOPTAB; STA L
}'LDX IOPTAB; R1
LP1}$LDA LPO; SUB OPTAB; STA L
}'LDX OPTAB; R1
LPO}$ZRO P,2
LIPO}#ZRO IOPCODE,2


*}&GO TO

DLG}$ETR ADB; STA* PCPTR; C CJB; C TCR
}'MIN SIMIN; MIN CPUIN; LDB =-1; C DOIT; BRU RETURN



*}&PROCEED

PRCS}#STA PRPF; LDA =1; SKN SYL; LDA WORD; STA PRCC; BRU TCR

PRCV}#LDA =-1;}"BRU DLP+1
DLPP}#C BEE
DLP1}#LDA =-1; STA SYL
$DLP}#LDA ERRHLT; STA ERCNT
}'CLA; SKN BOTH; BRU DLPA; C SCSET
}'LDA =PGO; STA* CPWPT0; STA* CPWPT1; C TCR
MLOOP}"C WSHOW; SKN RUBOUT; BRU *+2; BRU MLOOP
}'LDA =-1; C SCSET; BRU BELL
DLPA}#C PRCS; BRU PRC3
PRC2}#SKN PRPF;}"BRU PRC1;}"C PCO;}"C TCR
PRC1}#LDB* PCPTR; C DOIT; CXA; SKE =1; BRU RETURN
PRC3}#SKR PRCC; BRU PRC2; BRU BREAK

RUNIT}"CLA; C STECON; BRU DLP1


*}"EXECUTE ITP INSTRUCTION

ITPEXU STA WORD; C TCR
}'LDA =ITPRGO; STA RUBGO
ITPDO}"LDX WORD; STX *+1; HLT *
}'BRM SETUP; TCF ='$'; BRU RSR
ITPRGO BRM SETUP; BRU BELL

*}"EXECUTE UPOT

DOPOT}"SKN ARI; BRU *+2; BRU ILL; C TCR
}'CAB; LDA POTWD; STA WORD; LDA ARG; BRU ITPDO
POTWD}"UPOT


*}"DDT ERROR - PRINT ADDRESS

TPANIC ZRO; STA PANA; BRU PANIC1
PANIC}"STA PANA; LDA 2; STA TPANIC
PANIC1 CLA; XIOA; STA PANIO; STB PANB; STX PANX
}'LDA TPANIC; STA PANPC; LDA 0; STA PANZ
}'BRM SETUP; C TYSET; C TCR; LDA ='?>> '; C PWD
}'LDA TPANIC; C AP8; C TTB
}'LDX TPANIC; LDA 0,2; C AP8; BRU RSR


*}&BCI INPUT

BCI}$NOP BCP;}"SKN SYL;}"BRU ERB;}"LDX =-24
BCI3}#C TI;}"SKE =144B;}"BRU BCI3A
BCIX}#TCF =2; BRU STQ
BCI3A}"EXU BCEAX;}"CAB;}"CLA;}"RCY 25,2;}"ADM NUM;}"BRX BCI3
BCI2}#C TI;}"SKE =144B;}"BRU BCI3B;}"BRU BCIX
BCI3B}"SKN ROP; BRU *+2; BRU BCI2
}'CAB;}"CLA;}"CLX;}"EXU BCEAX;}"RCY 1,2;}"XMA NUM;}"STA T
}'LDA LRO; C USTORE; BRU ILM
}'LDA T; STA* UA; MIN LRO
}'LDX =-24;}"EXU BCEAX;}"BRX BCI3 


*}&ZERO MEMORY

DLZ}$SKG =0;}"BRU ILL;}"CAB;}"SKN ARI;}"LDB ARG
}'XAB; LDX =DLZ1; C BLOCK; BRU RSR
DLZ1}#CLA; SKN SVF; LDA SVAL
}'STA* UB; BRX *-1; R1


*}"SET UP FOR BLOCK OPERATION

BLOCKN LDA LL; LDB UL
BLOCK}"STA BLKLL; STB BLKUL; STX BLKGO; CLX; STX WDCNT
}'LDB =77B6; SKM BLKUL; BRU ILL; C TCR
}'SKA =17B6; BRU ILL; SKG BLKUL; BRU *+2; BRU ILL
* MAPPED ADDRESSING.}"DO BY PAGES
BLK1}#MRG =3777B; SKG BLKUL; BRU *+2; LDA BLKUL
}'ADD =1; STA UV; LDA BLKLL; C ULOAD; BRU BLK2
}'LDA BLKLL; SUB UV; CAX; CNA
}'ADD UA; MRG =2B7; STA UB; C _BLKGO
BLK2}#SKN RUBOUT; BRU BELL
}'LDA UV; STA BLKLL; SKG BLKUL; BRU BLK1; R1


*}&SET UP LOW CORE

SETUP}"ZRO; DIR
}'LDX =BPTRW-EPTRW; LDA =IOCNI+1; STA EPTRW,2; BRX *-1
}'LDX LLOW; LDA ELOW+1,2; STA* ELOW,2; BRX *+1; BRX *-3
}'BRM CIOBUF;}"BRM EOMSET
}'LDA =PDL;}"STA PDP;}"BRR SETUP


*}&WORD SEARCH

PEW}$LDB =-1;}"STB DLWFLG
DLW}$SKN SYL; BRU *+2; BRU ILL; LDX =WDN
WDS}$STA WDW; LDA MASK; EOR =-1; STA NMASK
}'C BLOCKN; LDA WDCNT; C APT; BRU RSR
WDN}$LDB MASK; LDA WDW; SKM* UB; BRU WDC
WDP}$C OPNI; SKN SVF; BRU WDD; SKN DLWFLG
WDCR}#C TCR
WDC}$BRX* BLKGO; R1
WDD}$SKN DLWFLG;}"C TTB;}"LDA* UB;}"ETR NMASK;}"ADD SVAL;}"STA* UB
}'SKN DLWFLG;}"C OPN1;}"BRU WDCR
NWDS}#SKN SYL; BRU *+2; BRU RPWR
}'LDX =-1; STX SVF; LDX =NWDN; BRU WDS
NWDN}#LDB MASK; LDA WDW; SKM* UB; BRU WDP
}'BRX *-2; R1


*}&EFFECTIVE ADDRESS SEARCH

DLE}$ETR ADB; STA WDW; LDX =EAE; C BLOCKN; BRU RSR
EAE}$STX EAET; LDA* UB; C EFA; BRU EAN
}'SKE WDW; BRU EAN; LDX EAET; C OPNI; C TCR
EAN}$SKN RUBOUT; BRU BELL; LDX EAET; BRX EAE; R1

*}&PRINT REGISTER IN BLOCK OPERATION

OPNI}#MIN WDCNT; SKN DLWFLG; BRU *+2; R1
OPN}$CXA;}"ADD UV;}"ETR ADB;}"STA LRO;}"STX OPNT
}'CLX;}"STX ROP;}"LDX =-1;}"C _AMD
}'TCF ='/';}"C TTB;}"LDX OPNT;}"LDA* UB
OPN1}#STA LWT;}"C _RMD;}"LDX OPNT;}"R1
}'VARD OPNT,EAET


*}&TRACE

DLS}$LDA =-1;}"BRU *+2
DLN}$CLA;}"C PRCS;}"LDB* PCPTR;}"BRU TRC3
TRC1}#LDA =1; C DOINST; BRU RETURN
}'SKN PRPF;}"BRU TRC2;}"C PCO;}"C TCR
TRC2}#LDB =-1
TRC3}#SKR PRCC; BRU TRC1; BRU BREAK


*}&KILL SYMBOL OR TABLE

DLK}$SKN LET; BRU KILS; C TOK
}'LDA SYMSIZ; STA SYMTAB; BRU RSR
KILS}#C SCH;}"BRU *+2;}"BRU RSR;}"STX T
}'LDA T; ADD SYMSIZ; SKG SYMTAB; BRU ILL
}'LDA SYMLOC; ADD =2B7; STA T
}'SUB SYMPTR; ADD SYMLOC; SUB =2; STA TT; BRU *+3
KILS1}"LDA* T; STA* TT; BRX KILS1
}'LDA T; SUB TT; ADM SYMTAB; BRU RSR

***************************
* NEW ROUTINES FOR SYSDDT *
***************************


*}"SYSDDT INITIALIZATION

SYSIN}"EQU *
* BREAKPOINTS
}'C BPCLR; C QBPCLR
* FORMATTED I/O
}'LDA =-1; STA FTMASK; LDA =1; STA FTKEY
* CPU DRIVER
}'C CJB; LDA =-1; STA HFLAGS; STA UEMODE; STA BSCNT
}'CLA; STA SIMIN; STA CPUIN
}'STA ATTNF; C SETCPU
}'LDA =1; STA WARNF; C SETPRN
* CONTEXT BLOCK AND MAP
}'LDA* CBAPTR; C RNSET; NOP; C ZAPM
}'R1


*}"DECOMPOSE ADDRESS.}"(A) = INSTRUCTION OR IAW
*}"RESULT:}"TAG-SUBTAG IN ATAG, DISPLACEMENT IN ADISP AND A,
*}"FORMAT IN AFMT

DINSA}"STA ADISP; LRSH 21; STA ATAG
}'LCY 10; ETR =7; CLX; BRU DIA
DIWA}#STA ADISP; LRSH 19; ETR =7; STA ATAG
}'LCY 5; ETR =17B; LDX =NNAF
DIA}$XMA ATAG; SKE =7; BRU *+2; ADD ATAG; STA ATAG; XXA
}'LDB AMFMT,2; STB AFMT; ADD AFMT; CAX
}'LDA ADISP; EXU AMLSH,2; EXU AMRSH,2; STA ADISP; R1
*}"FORMAT TABLE, INDEXED BY TAG-SUBTAG
AMFMT}"DATA 0,0,0,1,2,2,2
}'RPT 2; DATA 3,3,4,4,4,4,5,5; ENDR
NNAF}#EQU 6
*}"LEFT SHIFT TABLE, INDEXED BY FORMAT (+NNAF IF IAW)
AMLSH}"LSH 10; LSH 10; LSH 10; LSH 13; LSH 12; LSH 13
}'LSH 6; LSH 10; LSH 10; LSH 10; LSH 9; LSH 10
*}"RIGHT SHIFT TABLE
AMRSH}"LRSH 10; LRSH 10; LRSH 10; LRSH 13; RSH 12; RSH 13
}'LRSH 6; LRSH 10; LRSH 10; LRSH 10; RSH 9; RSH 10


*}"PRINT ADDRESS.}"(A) = INSTRUCTION WORD

PTD}$C DIWA; LDB ='&'+4B7; BRU PTAE
PTA}$SKN ITPFLG; BRU PTAN; LDB =4B7+' '; STB ACHAR
}'CAX; STA ADISP; CLB; STB AFMT; BRU PTAS
PTAN}#C DINSA; LDB =':'
PTAE}#STB ACHAR; LDX ATAG; LDA AMTAG,2; C PWD
}'LDA ATAG; SKA =@1; BRU PTAA
}'LDA ADISP; SKN ACHAR; ADD* GRPTR; CAX
PTAS}#CLB; LDA MA; ETR =37777B; SKE =PAA; LDB =4000B
}'CXA; C CSA; BRU PTAA
}'SKN ACHAR; BRU PTAS1; TCF ACHAR; BRU PSAE
PTAS1}"TCF ='*'; BRU PSAE
PTAA}#TCF ACHAR; LDX AFMT; LDA ADISP; BRU PTAT,2
*}"DISPATCH ON ADDRESS FORMAT
PTAT}#BRU PAA}"D,I,X
}'BRU PTBX BX
}'BRU PTPD PD,IPD,BXD
}'BRU APT}"LR,ILR
}'BRU PSN}"SR,ISR
}'BRU PSN}"IM,IMX
*}"BX FORMAT
PTBX}#C PTSA; TCF =','; LDA ADISP; RSH 8
}'SKA =40B; EOR =240B; BRU PTSA
*}"PD FORMAT
PTPD}#C PTSA; TCF =','; LDA ADISP
}'LSH 10; RSH 18; BRU PSN
*}"PRINT SHORT ADDRESS IN (A)16-23
PTSA}#ETR =377B; SKE =0; BRU PTSA1; TCF ='X'; R1
PTSA1}"SKA =200B; BRU PTSA2; C APT; TCF ='G'; R1
PTSA2}"EOR =200B; C APT; TCF ='L'; R1


*}"PRINT INSTRUCTION

PI}%SKG =4B4-1; SKG =-4B4-1; BRU PX1; BRU PSN
PX1}$STA IWORD; C PVS; BRU PSY
}'LDA IWORD; SKN ITPFLG; BRU PI5
}'ETR =177B5; SKG =MAXIOP*1B5; BRU PX2
}'RSH 15; C AP8; LDA ='B5}"'; C PWD; BRU PX6
* ITP INSTRUCTION
PX2}$LDX =IOPR-EIOPR
PX3}$LDB =17737400B; LDA EIOPR+2,2; SKA =377B; LDB =-1
}'SKM IWORD; BRX PX4; CNA; ADM IWORD
}'CXA; ADD =EIOPR
PX5}$CAX; C PSY
PX6}$LDA IWORD; SKA =4B4; TCF ='*'
}'ETR =@1774B4; SKE =0; BRU PTA; R1
PX4}$BRX *+1; BRX PX3; LDA IWORD; ETR =77B5
}'MUL =1400B; ADD =IOPCODE; BRU PX5
*}"NOT ITP.}"CHECK FOR POP
PI5}$SKA =4B4; BRU PI1
*}"NOT POP.}"CHECK FOR IMMEDIATE OPR
}'SKG =77734000B+MAXOPR; SKG =77734000B-1; BRU PI7
}'ETR =3777B; STA T; ADD T; ADD T
}'ADD =OPRVAL; CAX; BRU PSY
*}"NOT NORMAL OPR.}"CHECK FOR SYSCALL
PI7}$LDB =77776000B; SKM =77736000B; BRU PI6
}'SKE UC0OP; BRU PI8; EAX UC0VAL; BRU PSY
PI8}$CNA; STA PSAVAL; ETR =1400B; MUL =3B5
}'ADD =OPXVAL; CAX; C PSY
}'LDA PSAVAL; ETR =377B; CNA
}'SKE =0; BRU PSN; R1
*}"NOT OPR.}"GET NAME FROM OPCODE TABLE
PI6}$RSH 15; ETR =77B; STA T
}'ADD T; ADD T; ADD =OPCODE; CAX
PI2}$C PSY
PI2A}#TCF =' '; LDA IWORD; BRU PTA
*}"POP.}"SEARCH SYMBOL TABLE
PI1}$LDA IWORD; ETR =774B4; C PVS; BRU PI2
*}"MISSING.}"PRINT IN OCTAL
}'RSH 15; C AP8; LDA ='4B4 '; C PWD; BRU PI2A
*}"TABLE OF ADDRESS TAG NAMES
AMTAG}"TEXT 'D}#I}#X}#B}#P}#IP}"BD}"'
}'TEXT 'L}#IL}"R}#R}#IR}"IR}"QX}"Q}#'
EAMTAG EQU *
NNAT}#EQU EAMTAG-AMTAG
}'TEXT 'X L X ILX R X R X IRX IRX QXX Q '
* TABLE OF ADDRESS TAG VALUES
AMV}$MACRO D
}'RPT (XX=0,6); DATA XX*D(1); ENDR
}'RPT (XX=0,7); DATA 7*D(1)+XX*D(2); ENDR
}'ENDM
AMVAL}"EQU *
}'AMV 1B7,4B3}-INSTRUCTION WORD
}'AMV 2B6,4B4}-INDIRECT WORD
* TABLE OF BASE ADDRESSES
AMBA}#RPT (XX=0,1)
}'IF XX; DATA 0,0
}'ELSE; ZRO* GRPTR; ZRO* GRPTR; ENDF
}'DATA 0,0,0,0,0
}'ZRO* LRPTR; ZRO* LRPTR
}'RPT 4; ZRO LRO; ENDR
}'DATA 0,0
}'ENDR
*}"SEARCH SYMBOL TABLE FOR VALUE (A)
PVS}$CAB; C LS; CBA; LDB =7700B
PI3}$STX PSAPTR; NEXT; SKE* L; BRU PI4
}'LDX PSAPTR; EAX* L; R1
PI4}$BRX PI3; R2


*}"PRINT ACTUAL, FORMAL PARAMETER WORD

PAPW}#C PEPW; LRSH 19; ETR =3; CAX; LDA TAPW,2
PXPW}#C PWD; TCF =' '; LDA PWORD; BRU PTA
TAPW}#TEXT 'ARR VAR ELT CON '

PFPW}#C PEPW; CAB; SKA =4B6; TMF TEPAM
}'LDA ='ARR '; SKB =2B6; LDA ='VAR '; BRU PXPW

PEPW}#STA PWORD; SKA =4B4; TMF TEPEM
}'LRSH 15; ETR =17B; CAX
}'LDA TEPW,2; C PWD; TCF =' '; LDA PWORD; R1
TEPW}#TEXT 'JUMPINT LONGREALDBLECPLXLGLGSTR '
}'TEXT 'LAB PTR 12B513B514B515B5UNK 17B5'
TEPEM}"ASC 'LAST /'
TEPAM}"ASC 'ADDR /'


*}"PRINT ABSOLUTE ADDRESS

PAA1}#SKN ITPFLG; BRU APT; STA PSAVAL; ETR =37777B; C APT
}'LDA PSAVAL; LRSH 22; CAX; LDA PAAT,2; BRU PWD
PAAT}#TEXT '}$,2}",4}",6}"'
PAA}$LDB =6B7; SKM =6B7; BRU PAA1
}'EOR =6B7; TCF ='Z'; TCF =' '; BRU APT


*}"PRINT SYMBOLIC ADDRESS

PSA}$LDB =4000B; C CSA; BRU PAA
PSAE}#STA PSAVAL; C PSY
}'LDA PSAVAL; SKG =0; R1; TCF ='+'; BRU APT

CSA}$STA PSAVAL; STB PSATRY; STB PSAIDX
}'C LS; CXA; SUB SYMSZ1; CAX; LDA PSAVAL; LDB =7700B
PSA1}#STX PSAPTR; NEXT; SUB* L
}'SKG PSATRY; SKG =-1; BRU PSA3
}'STA PSATRY; LDA PSAPTR; MRG =4B7 (X0!); STA PSAIDX
PSA3}#LDA PSAVAL; BRX PSA1; SKN PSAIDX; R1
}'LDX PSAIDX; EAX* L; LDA PSATRY; R2


*}"PRINT INDIRECT ADDRESS DESCRIPTOR.}"(A) = DESCRIPTOR

PDE}$STA IADESC; LRSH 22; CAX; BRU PDET,2
*}"DISPATCH ON IAW TYPE
PDET}#BRU PDN}"NORMAL
}'BRU PDF}"FIELD
}'BRU PDS}"STRING
}'BRU PDA}"ARRAY
*}"NORMAL IAW.}"CHECK TRAP BIT
PDN}$SKB =4B6; BRU PDN1
PDN2}#LDA IADESC; BRU PTD
PDN1}#LDA ='TRAP'; C PWD; TCF =' '; BRU PDN2
*}"FIELD IAW.}"(WORD:BA,BA+BL-1) SIGNED
PDF}$TCF ='('; LDA IADESC; LSH 13; RSH 13; C PSN
}'LDA IADESC; ETR =7774B3; SKE =6B6; BRU PDF1
PDF2}#TCF =')'; LDA IADESC; SKA =1B7; TCF ='S'; R1
*}"BA # 0 OR BL # 24
PDF1}#TCF =':'; LDA IADESC; RSH 11; ETR =37B; STA PDFT
}'LDB =10; C APS; LDA IADESC; RSH 16; ETR =37B
}'ADD PDFT; SUB =1; TCF =','
}'LDB =10; C APS; BRU PDF2
*}"STRING IAW.}"<ADDR:CPOS/CSIZE>
PDS}$TCF ='<'; LDA IADESC; ETR =777777B; C _MA; TCF =':'
}'LDA IADESC; RSH 18; ETR =3; C APT; TCF ='/'
}'LDA IADESC; RSH 20; ETR =3; CNA; ADD =4; C APT
}'TCF ='>'; R1
*}"ARRAY IAW.}"[SIZE:MULT]1T
PDA}$TCF ='['; LDA IADESC; ETR =12377777B
}'SKA =2B6; ETR =10017777B; SKA =1B7; SUB =1B7+1
}'ADD =1; C APT; TCF =':'
}'LDA IADESC; SKA =2B6; BRU PDA1
}'RSH 17; ETR =3; TCF ='0'
PDA2}#ADD =1; C APT; TCF =']'; LDA IADESC
}'SKA =1B7; TCF ='1'; SKA =4B6; TCF ='T'; R1
PDA1}#RSH 13; ETR =77B; BRU PDA2



*}"COMPUTE EFFECTIVE ADDRESS.}"(A) = INSTRUCTION WORD, (X) = SOURCE
*}"RETURN NOSKIP IF ANY ERROR CONDITION
*}"RETURN WITH SKIP IF SUCCESSFUL, (A) = ADDRESS

EFD}$STX EFASRC; LDX* XRPTR; STX EFIR
}'LDX =NILEV-1; STX EFAIC; BRU EFIE
EFA}$STX EFASRC; C DINSA
}'LDX* XRPTR; STX EFIR; LDX =NILEV-1; STX EFAIC
EFA1}#LDX ATAG; EXU EFAT,2
EFR}$ETR =777777B; R2
*}"DISPATCH ON INSTRUCTION TAG
EFAT}#ADD* GRPTR D
}'BRU EFMI}#I
}'ADD EFIR}#X
}'BRU EFMBX}"BX
}'BRU EFMPD}"PD
}'BRU EFMIPD IPD
}'BRU EFMBXD BXD
}'ADD* LRPTR LR
}'BRU EFMILR ILR
}'ADD EFASRC SR
}'ADD EFASRC SR
}'BRU EFMISR ISR
}'BRU EFMISR ISR
}'BRU EFMIMX IMX
}'BRU EFMIM}"IM
*}"IMMEDIATE MODES
EFMIM}"R1
EFMIMX R1
*}"I,ILR, AND ISR MODES
EFMI}#ADD* GRPTR; BRU EFI
EFMILR ADD* LRPTR; BRU EFI
EFMISR ADD EFASRC; BRU EFI
*}"PD AND IPD
EFMIPD C EFMPD; R1; BRU EFI1
EFMPD}"LSH 10; RSH 18; XMA ADISP; C EFSP; R1
}'ADD ADISP; BRU EFR
*}"BX
EFMBX}"RSH 8; SKA =40B; EOR =240B; C EFSA; R1
}'XMA ADISP; C EFSP; R1; STA EFIR
}'LDA ADISP; BRU EFI
*}"BXD
EFMBXD SKA =77B; BRU EFMBD1; LSH 10; RSH 18; BRU EFMBD2
EFMBD1 C EFMPD; R1
EFMBD2 XMA EFIR; BRU EFI

*}"SHORT-ADDRESS ROUTINE (FOR BX MODE)
EFSA}#SKA =177B; BRU EFSC; LDA EFIR; R2
*}"SHORT-CONTENTS ROUTINE (FOR PD, BXD MODES)
EFSP}#SKA =177B; BRU EFSP1; LDA EFIR; R2
EFSP1}"C EFSC; R1; BRU ULOAD
EFSC}#SKA =200B; BRU EFSC1; ADD* GRPTR; BRU EFSC2
EFSC1}"ETR =177B; ADD* LRPTR
* DO RING CHECK
EFSC2}"ETR ADB; SKG EFASRC; R2
}'LDB =4B5; SKM =0; LDB =6B5
}'SKM EFASRC; R1; R2

*}"INDIRECTION.}"RESET SOURCE FIRST AFTER RING CHECK
EFI}$ETR =777777B
EFI1}#SKG EFASRC; BRU EFI3; LDB =6B5; SKM EFASRC; BRU EFI4
*}"OK.}"FETCH INDIRECT WORD
EFI3}#STA EFASRC; C ULOAD; R1
EFIE}#STA EFAIW; LRSH 22; CAX; LSH 22; BRU EFIT,2
EFI4}#SKM =2B5; R1; BRU EFI3
*}"DISPATCH ON IAW TYPE
EFIT}#BRU EFIN NORMAL
}'BRU EFIF FIELD
}'BRU EFR}"STRING
}'BRU EFIA ARRAY
*}"FIELD INDIRECTION
EFIF}#LSH 13; RSH 13; ADD EFIR; BRU EFR
*}"NORMAL INDIRECTION
EFIN}#C DIWA; SKR EFAIC; BRU EFA1; R1
*}"ARRAY INDIRECTION - DOES NOT CHECK TRAP BIT
EFIA}#SKA =2B6; ETR =17777B; ETR =377777B
}'SKG EFIR; R1; LDA EFIR; LDB EFAIW
}'SKB =1B7; SUB =1; SKG =-1; R1; STA EFIR
}'LDA EFAIW; ETR =374B4; SKB =2B6; LSH 4
}'LRSH 17; ADD =1; MUL EFIR; STA EFIR
}'MIN EFASRC; LDA EFASRC; C ULOAD; R1; BRU EFIN


*}"PRINT QUANTITY IN FORMAT.}"(A) = WORD

PFT}$ETR FTMASK; CAB; LDA FTKEY
PFT1}#STA PFTT; CLA; SKE PFTT; BRU PFT2; R1
PFT2}#LCY 1; SKN PFTT; BRU PFT3; STB PFTW; TCF =' '
}'C APT; LDA PFTT; ADD PFTT; LDB PFTW; BRU PFT1
PFT3}#STA PFTW; LDA PFTT; ADM PFTT; LDA PFTW; BRU PFT2


*}"SET FORMAT MASK

PEM}$NOP FTKEY; SKN ARI; BRU *+2; BRU INTERN; STA FTKEY
}'LDA ARG; STA FTMASK; BRU RSR
PEN}$NOP FTMASK; BRU INTERN


*}"PRINT STRING

PRS}$SKN SYL; BRU PR1; LDA LRO
PR1}$SKN ARI; BRU PR2; C AX; STA PRSP2
}'C ULOAD; BRU ILL; STA PRSP1
}'LDA PRSP2; ADD =1; C ULOAD; BRU ILL; BRU PR3
PR2}$LDB ARG; STB PRSP1
PR3}$STA PRSP2; LDB =6B7; SKM =4B7; BRU ILL
}'LDB =74B6; SKM PRSP1; BRU ILL; C TTB
}'LRSH 20; ETR =3; CAX; LDA SIPTAB,2; C PWD
PR0}$LDA PRSP1; SKE PRSP2; BRU PR0A; TCF ='"'; BRU TR
PR0A}#LRSH 18; ETR =17B; CAX; STA PRSCI
}'LDA SIITAB,2; ADM PRSP1; RSH 18; ADM PRSCI
}'LDA PRSP1; ETR =777777B; C ULOAD; BRU ILL
}'LDX PRSCI; BRU SISTAB,2
PR8X}#ETR =377B; SKG =77B; BRU PR6X
}'SKG ='Z'+100B; SKG ='A'+77B; BRU *+2; BRU PR5
}'LDX =-3; LRSH 9
PR7}$TCF ='&'
PR6}$CLA; LSH 3; MRG ='0'; C TO; BRX PR6; BRU PR0
PR5}$TCF ='&'
PR6X}#ETR =77B; C TO; BRU PR0
PR12X}"LDX =-4; LRSH 12; BRU PR7
PR24X}"TCF ='&'; C AP8; BRU PR0
* PREFIX TABLE
SIPTAB TEXT '6"}""}#12" 24" '
* INCREMENT TABLE
SIITAB DATA 1B6,1B6,1B6,-3B6+1,1B6,1B6,-2B6+1,0
}'DATA 1B6,-1B6+1,0,0,1,0,0,0
* EXTRACTION TABLE
SISTAB LRSH 6; LRSH 6; LRSH 6; BRU PR6X
}'LRSH 8; LRSH 8; BRU PR8X; BRU ILL
}'LRSH 12; BRU PR12X; BRU ILL; BRU ILL
}'BRU PR24X; BRU ILL; BRU ILL; BRU ILL


* LOAD FROM USER ADDRESS (A).}"RETURN NOSKIP
* IF NOT IN MAP.}"IF (A)0-1 = 6B7, DO NOT MAP
* ALSO LEAVE POINTER IN UA

$UUSTORE C UULOAD; R1; BRU UST1
$USTORE C ULOAD; R1; SKN UA; R2
UST1}#LDA UA; C CDIRTY; LDA* UA; R2
$ULOAD LDB =6B7; SKM =6B7; BRU UL1; ETR =40777777B
UL2}$STA UA; SKN PFLAG; SKN UA; BRU ULR
}'ETR =777777B; MCONVA
ULR}$STA UA; LDA* UA; R2
UL1}$SKN ITPFLG; BRU UL3; SKA =4B7; BRU UL2-1
}'ADD ITPREL; SKA =4B7; BRU UL2-1; ETR =37777B; BRU UL2
$UULOAD EQU *
UL3}$ETR =777777B; STA UAV; RSH 11; ETR =177B; CAX; STA UAP
}'CLA; LCY 11; MRG UMAP,2
}'EOR =4B7; SKA =4B7; BRU UL2
}'CXA; C RME; BRU UL4; CAX; LDA UAV; RSH 11; XXA
}'CLB; LSH 11; STA UMAP,2; LDA UAV; BRU UL3
* PAGE IS NOT IN CORE.}"TRY DRUM
UL4}$SKN DRUM; R1
}'LDA UAP; C GME; R1; C RPAGE; R1
}'LDA UAV; BRU UL3


* SET UP FOR NEW CONTEXT BLOCK

PEC}$NOP CTXBLK; LDB CC; SKB =-1; BRU ILL; BRU INTERN

PER}$SKN SYL; BRU *+2; BRU PER1; C RNSET; BRU ILL
PER1}#C RMAP; BRU ZAP0


* RESET PSEUDO MAP TO STANDARD STATE

PEZ}$SKN SYL; BRU ZAPIT
ZAPM}#LDA =127*4000B
ZAP1}#RSH 11; CAX; LSH 11; STA UMAP,2
}'SUB =4000B; SKE =-4000B; BRU ZAP1
ZAP0}#CLA; STA ITPMODE; STA ITPREL; R1


* TURN ON ITP MODE

SITP}#SKN SYL; BRU *+2; CLA; STA ITPREL
}'LDA =-1; STA ITPMODE; R1



* ROUTINE TO SEARCH CENTRAL MEMORY FOR PARITY ERRORS

* FIRST CLEAR EXISTING INDICATOR
XNUTS}"LDA =4; UPIN
* NOW INITIALIZE FOR ONE PASS THROUGH C.M.
}'LDA =4B7; STA PTR
ML0}$LDA _PTR; STA CONTENTS}"* MIGHT GET A PARITY ERROR HERE
}'LDA =4; UPIN; SKB =10000B; BRU PERROR
ML1}$MIN PTR; LDA PTR; SKG =4B7+377777B; BRU ML0; BRU DENT
* GOT A PARITY ERROR.}"TYPE IT OUT AND CONTINUE
PERROR LDA PTR; ETR =377777B; C AP8; LDA ='/'; BRM COUT; BRM TAB
}'LDA CONTENTS; C PS8; LDA =155B; BRM COUT
}'LDA =152B; BRM COUT; BRU ML1

PTR}$BSS 1
CONTENTS BSS 1

TAB}$ZRO; LDX =-3; CLA; BRM COUT; BRX *-1; BRR TAB

* INITIAL SYMBOL TABLE

DSYM}#LMACRO N
YY}%NCHR N(1)
ZZ}%EQU [YY+1]/4*4
}'IF YY>2
}'TEXT 'N(1$1,ZZ)'
}'ENDF
XX}%EQU YY-ZZ
}'IF XX=2
}'DATA 'N(1$ZZ+1,YY)}"'+6
}'ELSF XX=1
}'DATA 'N(1$YY)}#'+6
}'ELSE
}'DATA 6
}'ENDF
}'DATA N(2)
}'IF 'N(0$1,1)'#' '
$N(0)}"EQU *-1-IS
}'ENDF
}'ENDM

IS}%EQU *
}'DSYM Z,6B7
}'DSYM X,4B5
}'DSYM POP,4B4
}'DSYM IPL,100310B
}'DSYM AMC,1
}'DSYM UTP,2
}'DSYM CHIO,3
}'DSYM CPU,4

IS1}$EQU *
O:V}$DSYM O.,0
OS:V}#DSYM OS.,0
M:V}$DSYM M.,0
Q:V}$DSYM Q.,0
Z:V}$DSYM Z.,0
SK:V}#DSYM SK.,0
R:V}$DSYM R.,0

}'DSYM LIGHTS,LIGHTS
}'DSYM SWR.MASKS,WRMASK
}'DSYM REL,60160000B
}'DSYM ERR.HALT,ERRHLT
}'DSYM NUTS,1B5+XNUTS
}'DSYM SA,SAVAREA
}'DSYM S1,1B5+XSD1
}'DSYM S2,1B5+XSD2
}'DSYM R1,1B5+XRD1
}'DSYM R2,1B5+XRD2
}'DSYM R3,1B5+XRD3
}'DSYM RUN,1B5+XRUN
}'DSYM DB,DRUMBANDS
}'DSYM SW,SWITCHES
}'DSYM CT,COPYTAB
}'DSYM CPT1,CPT1
}'DSYM SY0,40040000B
}'DSYM SY1,42340000B
}'DSYM SY2,44641400B
}'DSYM SY3,47140000B
}'DSYM SY4,51440000B
}'DSYM SY5,53740000B
}'DSYM C1,56240000B
}'DSYM C2,56340000B
}'DSYM C3,56440000B
}'DSYM C4,56540000B
}'DSYM SY6,40041400B
}'DSYM SY7,42341400B
}'DSYM SY8,44641400B
}'DSYM SY9,47141400B
}'DSYM SY10,51441400B
}'DSYM SY11,53741400B
}'DSYM C5,56241400B
}'DSYM C6,56341400B
}'DSYM C7,56441400B
}'DSYM C8,56541400B
ISE}$EQU *

SYMSIZ DATA IS-ISE
SYMSZ1 DATA IS-IS1


* LINKS FROM SIMULATOR

$MX}$EQU MULL
$DIVX}"EQU DIVV
CIN}$EXT
COUT}#EXT
RUBOUT EXT


* LINKS FROM SDEX
AP10}#EXT
AP8}$EXT
APT}$EXT
BELL}#EXT
ILL}$EXT
MS}%EXT
PI}%EXT
PSA}$EXT
PSY}$EXT
PWD}$EXT
RSR}$EXT
TR}%EXT
STV}$EXT
INTERN EXT

}'END
