* PROGRAM TO TYPE FILES ON XEROX HYTYPER TERMINAL


}'IDENT HYTYPE;



* DECLARATIONS, ETC.

}'DECLARE MACRO ENDWHILE_ENDFOR;

}'DECLARE PARAMETER CR_155B, LF_152B, BELL_147B, SET_1, RESET_-1;
}'DECLARE PARAMETER EOF_137B, MBL_135B, CTRL_154B, BKSP_150B;
}'DECLARE PARAMETER UNDX_100B;
}'DECLARE PARAMETER TTIN_0, TTOUT_1;
}'DECLARE PARAMETER MAXLINE_66, NORMAX_61;

}'DECLARE INTEGER TCHAR, PFILE, PFLAG, NFLAG, TFLAG, LINECT, CHRCT;
}'DECLARE INTEGER I, CHAR, SFLAG, PAGECT;

}'DECLARE STRING RHEADER_"**RUNOFF &M&J&L";
}'DECLARE STRING TSTRING(12), USTRING(12), FNAME(20);



* COROUTINE LINKAGES BETWEEN MAIN PGM & GNC FUNCTION

}'FUNCTION GNC(FILENO);
}'GOTO GNCLINK;

}'FUNCTION MAIN();
}'GOTO MAINLINK;

GNCLINK: RETURN FROM XMAIN;
MAINLINK: RETURN FROM XGNC;



* MAIN ENTRY POINT.

START: INITIALIZE();


* INITIALIZE COROUTINE LINKAGE.

}'XMAIN_INITGNC-1;


* OPEN FILE TO BE PRINTED.

OPENF: SOUT("&M&JFILE:}"");
}'TCHAR_INNAME(FNAME:OPENF);
}'PFILE_INFILE(FNAME:OPENF);


* GET PAUSE AND MODE PARAMETERS.

ASK1:}"ASK('P',TCHAR:ASK2:PFLAG,TCHAR);
}'ASK('N',TCHAR:ASK2:NFLAG,TCHAR);
}'GOTO ASK2 IF (TCHAR#'.' AND TCHAR#CR);


* MISCELLANEOUS INITIALIZATION


}'TFLAG_SET IF PFLAG=RESET;
}'CRLF(1);
}'PAGECT_0;
}'LINECT_MAXLINE+1;
}'BRS(12,3,,-1) IF PFLAG=SET;}%* TURN OFF ECHOES
}'SETS(TSTRING,0,0);


* SELECT PRINT MODE AND BEGIN.

}'GOTO NORMAL IF NFLAG=SET ELSE GOTO ABSOLUTE;


* NORMAL MODE.

NORMAL:BCOPY(USTRING,RHEADER,4);
}'FOR I_0 TO 11 DO;
}*I_20 IF (CHAR_GNC(PFILE:ENDFILE))#GCI(USTRING);
}*WCI(CHAR,TSTRING);
}'ENDFOR;
}'(SFLAG_SET & GOTO ABS1) IF I<20; * I.E., IF RUNOFF HEADER PRESENT
}'EJECT(SET);}-* TELLS EJECT ROUTINE TO CONSIDER HEADERS
}'TNC(GCI(TSTRING:CAL1)) WHILE 1;
CAL1:}"WHILE 1 DO;
}*WHILE LINECT<=NORMAX DO;
}-TNC(CHAR) WHILE (CHAR_GNC(PFILE:ENDFILE))#LF;
}-LINECT_(LINECT+1) MOD MAXLINE;
}-TNC(LF);
}*ENDWHILE;
}*EJECT(SET);
}'ENDWHILE;


* ABSOLUTE MODE.

ABSOLUTE: SFLAG_RESET;
ABS1:}"NFLAG_RESET;
}'EJECT(SET);
}'WHILE 1 DO;
}*TNC(CHAR) WHILE (CHAR_GNC(PFILE:ENDFILE))#LF;
}*LINECT_(LINECT+1) MOD MAXLINE;
}*TNC(LF);
}'ENDWHILE;


* END OF FILE ENCOUNTERED -- CLEAN UP AND QUIT.

ENDFILE: EJECT(RESET);})* TELLS EJECT TO IGNORE HEADERS
}'BRS(12,0,,-1);}2* TURN ECHOES BACK ON
}'CLOSALL();
}'SOUT("MORE PRINTING?}"");
}'WHILE 1 DO;
}*IF (CHAR_CIN(TTIN))='Y' DO;
}-SOUT("ES&M&J") & GOTO START;
}*ELSEIF CHAR='N' DO;
}-SOUT("O&M&J") & EXIT();
}*ELSE DO;
}-SOUT("}#???&M&J");
}-COUT(BELL);
}*ENDIF;
}'ENDWHILE;


* PARAMETER ERROR -- GO BACK & ASK FOR NEW VALUES EXPLICITLY.

ASK2:}"SOUT("}"???");
}'BRS(11);}0* CLEAR TTY INPUT BUFFER
}'TCHAR_'.';}.* FORCE ASK FN TO ASK EXPLICITLY
}'GOTO ASK1;


* FUNCTION TO RETRIEVE PARAMETERS FROM TERMINAL.
* THE PARAMETERS ARE:}"1) PAUSE/NOPAUSE,}"2) NORMAL/ABSOLUTE.
* THESE MAY BE INPUT FOLLOWING THE FILE NAME WITH P/N AND N/A.
* LEAVING THEM OUT CAUSE THE FUNCTION TO ASK EXPLICITLY FOR THEIR VALUES.
* IF THE FUNCTION GETS CONFUSED, IT STARTS OVER WITH EXPLICIT QUESTIONS.

}'DECLARE INTEGER MSG, ACHR, ANS;

}'FUNCTION ASK(MSG,ACHR);
}'GOTO PMSG IF MSG='P' ELSE GOTO NMSG;

PMSG:}"IF ACHR=',' DO;})* SEE IF PARAMS FOLLOW FILE NAME
}*IF (MSG_CIN(TTIN))='P' DO;}"* 1ST PARAM MUST BE P OR N
}-ANS_SET;
}*ELSEIF MSG='N' DO;
}-ANS_RESET;
}*ELSE DO;
}-RETURN;}+* I.E., FAIL RETURN -- PARAM NOT RIGHT
}*ENDIF;
}*ACHR_CIN(TTIN);}&* GET NEW TERMINATOR
}*SRETURN ANS,ACHR;
}'ELSEIF (ACHR='.' OR ACHR=CR) DO;}"* NO PARAMS -- ASK FOR THEM
}*SOUT("&M&JPAUSE BEFORE EACH PAGE?}"");
}*IF (MSG_CIN(TTIN))='Y' DO;
}-SOUT("ES");
}-ANS_SET;
}-ACHR_'.';
}*ELSEIF MSG='N' DO;
}-SOUT("O");
}-ANS_RESET;
}-ACHR_'.';
}*ELSE DO;
}-RETURN;}+* FAIL -- ANSWER NOT YES OR NO
}*ENDIF;
}*SRETURN ANS,ACHR;
}'ELSE DO;
}*RETURN;}.* FAIL -- LINE SYNTAX WRONG
}'ENDIF;

NMSG:}"IF ACHR=',' DO;})* SEE IF THERE IS ANOTHER PARAM
}*IF (MSG_CIN(TTIN))='N' DO;}#* 2ND PARAM MUST BE N OR A
}-ANS_SET;
}*ELSEIF MSG='A' DO;
}-ANS_RESET;
}*ELSE DO;
}-RETURN;}+* FAIL
}*ENDIF;
}*ACHR_CIN(TTIN);}&* GET TERMINATOR
}*SRETURN ANS,ACHR;
}'ELSEIF (ACHR='.' OR ACHR=CR) DO;}"* ASK FOR PARAM
}*SOUT("&M&JNORMAL PRINTING?}"");
}*IF (MSG_CIN(TTIN))='Y' DO;
}-SOUT("ES");
}-ANS_SET;
}-ACHR_'.';
}*ELSEIF MSG='N' DO;
}-SOUT("O");
}-ANS_RESET;
}-ACHR_'.';
}*ELSE DO;}-* FAIL
}-RETURN;
}*ENDIF;
}*SRETURN ANS,ACHR;
}'ELSE DO;
}*RETURN;}.* FAIL
}'ENDIF;


* FUNCTION TO HANDLE PAGE EJECTS.}"THIS FN IS COMPLICATED BY THE
*}&FACT THAT IT MUST WORK CORRECTLY IN SEVERAL DIFFERENT MODES.
* IT KEEPS TRACK OF THESE BY MEANS OF PFLAG (PAUSE BEFORE STARTING
*}&NEW PAGE), NFLAG (NORMAL MODE/ABSOLUTE MODE), AND SFLAG
*}&(SKIP OVER TOP MARGIN BEFORE RESUMING PRINTING).

}'DECLARE INTEGER ECHR;

}'FUNCTION EJECT(EFLAG);

* FIRST, SKIP TO TOP OF NEXT PAGE

}'CRLF(1) FOR I_LINECT TO MAXLINE IF TFLAG=SET;
}'PAGECT_PAGECT+1;
}'LINECT_1;
}'CHRCT_1;

* HANDLE MODES

}'IF NFLAG=SET DO;}(* NORMAL MODE


* PROCESS PAUSE

}*IF PFLAG=SET DO;
}-WHILE 1 DO;
}0(TFLAG_SET & GOTO EJ1) IF (ECHR_CIN(TTIN))='P';
}0(TFLAG_RESET & GOTO EJ1) IF ECHR='S';
}0COUT(BELL,TTOUT);
}-ENDWHILE;
}*ENDIF;

EJ1:}&IF TFLAG=SET DO;
}-CRLF(3);
}-HEADER() IF EFLAG=SET;
}-CRLF(3);
}*ENDIF;
}*LINECT_8;

}'ELSE DO;}0* ABSOLUTE MODE

* THIS CASE SKIPS FIRST, THEN PAUSES

}*IF SFLAG=SET DO;
}-CRLF(5) IF TFLAG=SET;
}-LINECT_6;
}*ENDIF;
* PROCESS PAUSE

}*IF PFLAG=SET DO;
}-WHILE 1 DO;
}0(TFLAG_SET & GOTO EJ2) IF (ECHR_CIN(TTIN))='P';
}0(TFLAG_RESET & GOTO EJ2) IF ECHR='S';
}0COUT(BELL,TTOUT);
}-ENDWHILE;
EJ2:}&ENDIF;

}'ENDIF;
}'RETURN;



* CODE BODY FOR COROUTINE TO GET NEXT CHARACTER FROM PRINT FILE.
* THIS CODE HANDLES MULTIPLE BLANKS.}"IT SKIP RETURNS IN ALL CASES
*}&EXCEPT WHEN THE END OF FILE IS REACHED.

}'DECLARE INTEGER BCOUNT, GCHR, J;

INITGNC: WHILE 1 DO;
}*MAIN() IF (GCHR_CIN(FILENO))=EOF;
}*IF GCHR=MBL DO;
}-BCOUNT_CIN(FILENO);
}-FOR J_1 TO BCOUNT DO;
}0XGNC_XGNC+1;
}0MAIN(' ');
}-ENDFOR;
}*ELSE DO;
}-XGNC_XGNC+1;
}-MAIN(GCHR);
}*ENDIF;
}'ENDWHILE;


* FUNCTION TO PRINT HEADER LINE.}"DISPLAYS PAGE NUMBER, DATE-TIME,
*}&AND FILE NAME.

}'DECLARE INTEGER K, X, Y;

}'DECLARE FIELD YR(0:0,7), MO(0:8,15), DAY(0:16,23);
}'DECLARE FIELD HR(0:0,7), MIN(0:8,15), SEC(0:16,23);

}'DECLARE STRING XSTRING(10), YSTRING(5);

}'DECLARE STRING ARRAY MONTHS[12]_"JANUARY ","FEBRUARY ","MARCH ",
}/"APRIL ","MAY ","JUNE ","JULY ","AUGUST ",
}/"SEPTEMBER ","OCTOBER ","NOVEMBER ","DECEMBER ";


}'FUNCTION HEADER();
}'SOUT("PAGE ");
}'IOUT(PAGECT);
}'COUT(' ') FOR K_1 TO 16;
}'BRS(39::X,Y);
}'BCOPY(XSTRING,MONTHS[X$MO-1],4);
}'SOUT(XSTRING);
}'IOUT(X$DAY);
}'SOUT(", 19");
}'IOUT(X$YR);
}'SOUT("}"");
}'SETS(YSTRING,0,0);
}'CNS(Y$HR,YSTRING);
}'COUT('0') IF LENGTH(YSTRING)=1;
}'SOUT(YSTRING);
}'COUT(':');
}'SETS(YSTRING,0,0);
}'CNS(Y$MIN,YSTRING);
}'COUT('0') IF LENGTH(YSTRING)=1;
}'SOUT(YSTRING);
}'COUT(':');
}'SETS(YSTRING,0,0);
}'CNS(Y$SEC,YSTRING);
}'COUT('0') IF LENGTH(YSTRING)=1;
}'SOUT(YSTRING);
}'COUT(' ') FOR K_1 TO 8;
}'BCOPY(XSTRING,FNAME,4);
}'SOUT(XSTRING);
}'SOUT(":9SYM");
}'CRLF(1);
}'RETURN;


* FUNCTION TO HANDLE OUTPUT CHARACTERS.}"DOES A SIMPLE COUT PROVIDED
*}&THAT TFLAG IS SET.}"OTHERWISE IGNORES OUTPUT CHARACTERS.

}'DECLARE INTEGER TCHR;

}'FUNCTION TNC(TCHR);
}'(EJECT() & RETURN) IF (TCHR=CTRL AND CHRCT=1);
}'IF TCHR=CR DO;
}*CHRCT_1;
}'ELSEIF TCHR#LF DO;
}*CHRCT_CHRCT+1;
}'ENDIF;
}'IF TFLAG=SET DO;
}*IF TCHR='_' DO;
}-COUT('<');
}-COUT(BKSP);
}-COUT('-');
}*ELSEIF TCHR=UNDX DO;
}-COUT('_');
}*ELSE DO;
}-COUT(TCHR);
}*ENDIF;
}'ENDIF;
}'RETURN;


}'END;
