}(COMMON SYSCALLS;

* MCALL DECLARATIONS

})MACRO ARBMC_UNKNOWN MONITOR;
}(MACRO INTMC_INTEGER MONITOR;
}(MACRO STMC_STRING MONITOR;
}(MACRO LNMC_LONG MONITOR;
}(MACRO LNLNMC_LONGLONG MONITOR;

* CALLS TO MANIPULATE MIBS AND SIBS
})INTMC CREATE'MIB_190;
}(ARBMC READ'MIBOB'INDEX_0;
}(ARBMC READ'MIBOB'NAME_1;
}(ARBMC SET'MIBOB'NAME_2;
}(ARBMC SET'MIBOB'ACCESS_3;
}(ARBMC SET'LOCK'LIST_4;
}(ARBMC DELETE'MIBOB_5;
}(INTMC CREATE'MIBOB_6;
}(ARBMC SET'MIB'ACCESS_10;
}(INTMC READ'MIB'ACCESS_11;
}(ARBMC SET'MIBOB'VALUE_12;
}(INTMC COPY'MIBOB_14;* UNIMPLEMENTED
}(ARBMC SET'NO'CHARGE_15;*** ???
}(INTMC READ'MIB'SPACE_16;
}(ARBMC SET'FILE'LOCK_18;*?* UNIMPLEMENTED
}(ARBMC SET'DURABILITY_28;*** ???

* OFT CALLS
})INTMC MOPEN'FILE_19;
}(ARBMC MREAD'OFT_20;
}(ARBMC SET'OFT'AL_21;
}(INTMC MSET'OFT'CL_22;
}(ARBMC SET'FILE'LENGTH_23;* IMPROVE THIS FOR UTS
}(INTMC CR'FILE'PAGE_24;
}(INTMC DEL'FILE'PAGE_25;
}(INTMC NEXT'FILE'PAGE_26;
}(ARBMC MOVE'PAGE'PMT_27;

* PMT CALLS
})INTMC ACQUIRE'PMT_50;
}(ARBMC NEW'PMT'PAGE_51;
}(ARBMC CLEAR'PMT_53;
}(ARBMC DELETE'PMT_54;
}(ARBMC SET'PMT'AL_55;
}(ARBMC SET'PMT'CL_56;
}(ARBMC SET'PMT'RO_57;
}(ARBMC READ'PMT_58;

* WORKING SET CALLS
})ARBMC PUT'PAGE'DWS_65;
}(ARBMC PUT'PAGE'CWS_66;
}(INTMC DEL'PAGE'DWS_67;
}(INTMC DEL'PAGE'CWS_68;
}(INTMC READ'LWS_70;
}(ARBMC SET'LWS_71;

* SPT CALLS
})INTMC MCREATE'SP_90;
}(ARBMC MDESTROY'SP_91;
}(ARBMC MREAD'SPT_95;
}(ARBMC READ'SPCS_96;
}(INTMC MRD'SPT'FIELD_97;
}(ARBMC MST'SPT'FIELD_98;
}(ARBMC READ'MAP_99;
}(ARBMC SET'MAP_100;
}(INTMC READ'MAP'BYTE_101;
}(ARBMC SET'MAP'BYTE_102;
}(INTMC READ'SPS'PARAM_106;

* SPCS CALLS
})ARBMC SP'CALL_111;
}(ARBMC SP'JUMP_112;
}(ARBMC SP'TRAP_113;
}(ARBMC TRAP'RETURN_114;
}(ARBMC SP'BRANCH_115;
}(ARBMC SP'RETURN_116;
}(ARBMC JUMP'RETURN_117;
}(ARBMC MARK'CALL_118;
}(ARBMC DELETE'CALL_119;
}(ARBMC MODIFY'CALL_120;

* PROCESS CALLS
}(INTMC COPY'PMT'PROC_130;
}(INTMC}#ATTACH'PROC_131;
}(INTMC ACTIVATE'PROC_132;
}(ARBMC TRANSFER'TERM_133;
}(ARBMC MAKE'DORMANT_134;
}(ARBMC INIT'PROC'PAGE_135;
}(ARBMC INIT'PROC'MAP_136;
}(ARBMC INIT'SPT_137;
}(INTMC READ'PROC'PARAM_211;
}(INTMC SET'PROC'PARAM_212;

* IWS CALLS
})ARBMC SET'PROC'INT_163;
}(ARBMC QUIT'BLOCK_164;
}(INTMC GET'INT'NO_165;
}(ARBMC READ'ICT_166;
}(ARBMC ALLOW'INTS_168;
}(ARBMC REFUSE'INTS_169;
}(ARBMC BLOCK_170;
}(ARBMC SET'ICT_172;
}(ARBMC SET'ICT'CL_173;
}(INTMC ACQUIRE'ICT_174;

* CHIO CALLS
})ARBMC SET'LINE'FIELD_180;
}(ARBMC READ'LINE'TABLE_181;
}(ARBMC READ'STRING'BRK_182;
}(ARBMC WRITE'STRING_183;

* MISCELLANEOUS
})ARBMC MON'LOCK_29;*}+LOCK SYSTEM OBJECT
})ARBMC MON'UNLOCK_30;*})UNLOCK SYSTEM OBJECT
})LNMC READ'CLOCK_210;
}(ARBMC READ'WRITE'CM_255;}$* ABSOLUTE MEMORY READ/WRITE

* UCALL DECLARATIONS

})MACRO ARBUC_UNKNOWN UTILITY;
}(MACRO INTUC_INTEGER UTILITY;
}(MACRO CHRUC_CHARACTER UTILITY;
}(MACRO STUC_STRING UTILITY;
}(MACRO LNUC_LONG UTILITY;

* MISCELLANEOUS UCALLS
})ARBUC BREAK'POINT_0;*}-UCALL FOR DEBUGGING PROGRAMS
}(STUC ERRORMSG_1;*}0RETURN SYSTEM ERROR MESSAGE
}(STUC GET'PARAM_2;*}/STRIP PARAMETER FROM STRING
}(STUC GET'COM'LINE_3;*},GET CURRENT COMMAND LINE FROM UTS
}(INTUC ABRV'LKP_4;*}0LOOK UP ABBREVIATED NAME IN STARY
}(INTUC CON'ABRV'LKP_5;*},CONTINUE SAME IN NEW STARY
}'ARBUC SET'COM'LINE _ 7;*}+SET THE SAVED COMMAND LINE
}'ARBUC SET'SAVED'USER _ 8;*})SET THE SAVED USER NO IN UTS
}(STUC SYSTEM'VERSION _ 9;*}&READ OUT THE CURRENT SYSTEM VERSION

* FILE SYSTEM CALLS
})ARBUC NAME'SEARCH_10;*},CONVERT FILE ST TO UTS NAME
}(ARBUC SPECIAL'SEARCH_11;*})VARIATION OF ABOVE
}(INTUC CONV'NAME_12;*}.CONVERT FROM UTS TO MON FILE NAME
}(ARBUC SPREAD'NAME_13;*},SPLIT FILE NAME STRING INTO COMP.
}(ARBUC READ'MIBOB'VALUE_14;*}'READ 'VALUE' OF MIB OBJECT
}(ARBUC DELETE'FILE_15;*},DELETE FILE AND CONTENTS
}(INTUC OPEN'FILE_16;*}.OPEN FILE W/WO LOCKING
}(ARBUC CLOSE'FILE_17;*}-CLOSE AND UNLOCK FILE
}(ARBUC READ'OFT_18;*}/READ OFT
}(INTUC READ'OFT'FIELD_19;*})READ OFT FIELD
}(ARBUC SET'OFT'CL_20;*}-SET OFT CONTROL LOCK
}(ARBUC CONV'KEY_21;*}/CONVERT DEFAULT ACCESS KEY

* EXTENDED SPS CALLS
})INTUC CREATE'SSP_30;*}-CREATE SUBSIDIARY SUB-PROCESS
}(INTUC CREATE'PSP_31;*}-CREATE PARALLEL SUB-PROCESS
}(ARBUC ATTACH_32;*}1ATTACH PI FILE TO SUB-PROCESS
}(ARBUC DESTROY'SP_33;*}-DESTROY SUB-PROCESSES
}(ARBUC READ'SPT_34;*}/READ SPT
}(INTUC READ'SPT'FIELD_35;*})READ SPT FIELD
}(ARBUC SET'SPT'FIELD_36;*}*SET SPT FIELD
}(STUC READ'SPNAME_37;*},READ SUB-PROC NAME
}(ARBUC SET'SPNAME_38;*}-SET SUB-PROC NAME
}(INTUC SPNAME'SEARCH_39;*}+LOOK UP SP NAME

* CIOS MANIPULATION
})INTUC CREATE'CIOS_40;*},CREATE CONTROL I/O STREAM
}(INTUC READ'CIOS'FIELD_41;*}(READ CIOS FIELD
}(ARBUC SET'CIOS'FIELD_42;*})SET (SOME) CIOS FIELDS
}(ARBUC SET'CIOS'INPUT_43;*})SET UP FOR INPUT
}(ARBUC SET'CIOS'OUTPUT_44;*}(SET UP FOR OUTPUT

* CIOS INPUT/OUTPUT
})ARBUC PRINT'STRING_45;*}+WRITE STRING ON CIOS
}(ARBUC PRINT'CHAR_46;*}-WRITE (= BUFFER) CHAR ON CIOS
}(ARBUC START'OUTPUT_47;*}+DUMP OUTPUT BUFFER
}(STUC READ'LINE_48;*}.READ NEXT INPUT LINE
*STUC}&EDIT'LINE _ 49;*}.EDIT CURRENT LINE
})CHRUC READ'CHAR_50;*}.READ NEXT CHARACTER
}(ARBUC BLOCK'OB'EMPTY_51;*})WAIT UNTIL OUT BUFFER IS EMPTY

* USER, ACCOUNT, AND GROUP PROFILES
})STUC READ'UP'ITEM_60;*}+READ ITEM FROM USER PROFILE
}(STUC READ'UP'NAMES_61;*}*READ NAMES OF UP ITEMS
}(ARBUC SET'UP'ITEM_62;*},SET (CREATE) VALUE OF UP ITEM
}(ARBUC SET'UP'ACCESS_63;*}*SET ACCESS TO UP ITEM
}(LNUC FIND'MIB_64;*}/CONVERT USER NAME/NUMBER TO MIB ADDR
}(ARBUC CREATE'UP'ENTRY_65;*}(CREATE USER/UP ENTRY
}(ARBUC DELETE'UP'ENTRY_66;*}(DELETE USER/UP ENTRY

* PROCESSES, AND PROCESS PROFILE
}(ARBUC CREATE'PROCESS_70;*}(CREATE/INITIALIZE PROCESS
}(STUC READ'PP'ITEM_71;*}+READ ITEM FROM PROCESS PROFILE
}(STUC READ'PP'NAMES_72;*}*READ NAMES OF PP ITEMS
}(ARBUC SET'PP'ITEM_73;*}+SET (CREATE) VALUE OF PP ITEM
}(ARBUC DESTRY'THIS'PROC_74;*}&DESTROY PROCESS
}'INTUC ANY'TIME'NUM_81;
}'STUC DATE'TIME_82;
}'END;

}(COMMON DECDECS;
*
* SHORT DECLARATION MACROS FOR SPL
*

})MACRO INT_DECLARE INTEGER;
}(MACRO OCT_DECLARE OCTAL;
}(MACRO PTR_DECLARE POINTER;
}(MACRO CHR_DECLARE CHARACTER;
}(MACRO ST_DECLARE STRING;
}(MACRO LN_DECLARE LONG;
}(MACRO LNLN_DECLARE LONGLONG;
}(MACRO LB_DECLARE LABEL;

})MACRO OCTFL_DECLARE OCTAL FIELD;
}(MACRO INTFL_DECLARE INTEGER SIGNED FIELD;
}(MACRO PTRFL_DECLARE POINTER FIELD;
}(MACRO CHRFL_DECLARE CHARACTER FIELD;
}(MACRO STFL_DECLARE STRING FIELD;
}(MACRO LNFL_DECLARE LONG FIELD;
}(MACRO ARYFL_DECLARE ARRAY FIELD;
}(MACRO FNFL_DECLARE FUNCTION FIELD;

})MACRO INTARY_DECLARE INTEGER ARRAY;
}(MACRO OCTARY_DECLARE OCTAL ARRAY;
}(MACRO PTRARY_DECLARE POINTER ARRAY;
}(MACRO CHRARY_DECLARE CHARACTER ARRAY;
}(MACRO STARY_DECLARE STRING ARRAY;
}(MACRO LNARY_DECLARE LONG ARRAY;
}(MACRO LBARY_DECLARE LABEL ARRAY;
}(MACRO FLARY_DECLARE FIELD ARRAY;
}(MACRO FNARY_DECLARE FUNCTION ARRAY;

})MACRO INTARY1_DECLARE INTEGER ARRAYONE;
}(MACRO PTRARY1_DECLARE POINTER ARRAYONE;

})MACRO INTFN_DECLARE INTEGER FUNCTION;

})MACRO ARBENT_UNKNOWN ENTRY;
}(MACRO INTENT_INTEGER ENTRY;
}(MACRO OCTENT_POINTER ENTRY;
}(MACRO PTRENT_POINTER ENTRY;
}(MACRO CHRENT_CHARACTER ENTRY;
}(MACRO STENT_STRING ENTRY;
}(MACRO LNENT_LONG ENTRY;
}(MACRO LBENT_LABEL ENTRY;
}(MACRO ARYENT_ARRAY ENTRY;

})MACRO ARBEXT_DECLARE UNKNOWN EXTERNAL;
}(MACRO INTEXT_DECLARE INTEGER EXTERNAL;
}(MACRO OCTEXT_DECLARE OCTAL EXTERNAL;
}(MACRO PTREXT_DECLARE POINTER EXTERNAL;
}(MACRO CHREXT_DECLARE CHARACTER EXTERNAL;
}(MACRO STEXT_DECLARE STRING EXTERNAL;
}(MACRO LNEXT_DECLARE LONG EXTERNAL;
}(MACRO LBEXT_DECLARE LABEL EXTERNAL;
}(MACRO ARYEXT_DECLARE ARRAY EXTERNAL;

})MACRO C'(X)_;* KLUDGE FOR INTERNAL COMMENTS

})MACRO LTABLE(F)_F$FLDWDSP+1;
}(INTFL FLDWDSP(0:13,23);

* LENGTHS OF NAMES
})INT LMN_4,LTY_1,LFN_LMN+LTY;
}(INT NBY_4,LNCH_24/NBY,NMNCH_LMN*NBY,
})NTYCH_LTY*NBY,NFNCH_LFN*NBY,NCMCH_90;
}'END;

}(COMMON SYS'COMMON; INCLUDE SYSCALLS;

*
* MCALLS, UCALLS, & GLOBAL CELLS
*

})DECLARE INTEGER TRAP'FLAG;
}(DECLARE INTEGER QUIT'FLAG;* GLOBAL QUIT FLAG
}(DECLARE INTEGER ERMSNO;* SYSTEM ERROR NUMBER
}(DECLARE CHARACTER ERCODE;* SYSTEM ERROR CODE
}'END;

}(COMMON MACHINE'DECS; INCLUDE DECDECS;
*
* DECLARATIONS FOR MACHINE-DEPENDENT PROGRAMMING
*

* MAXIMUM NUMBER OF PERMISSABLE TERMINALS
})INT MAX'TERMS_200;
* PARAMETERS FOR BASING ITEMS IN ACTIVE-USER FILE

}(DECLARE PARAMETER TIME'BASE_2043;}"*/ LAST TIME ACCT FILE BACKED UP /*
}(DECLARE PARAMETER ACCT'LOCK_2045;
}(DECLARE PARAMETER ENTER'LOCK_2047;
* LOW-G DEFINITIONS
})PTR STACK'PTR= G' [2],STACK'LIM= G' [3],
})RTRAP'PARAM= G' [5],RTRAP'LOC= G' [4];

* FIELDS IN BLL DESCRIPTOR
})PTRFL BRDPC(0:6,23),BRDLR(1:6,23);

* STATE DEFINTIONS
})INT PSTLOC_0,ASTLOC_1,BSTLOC_2,CSTLOC_3,DSTLOC_4,
})XSTLOC_6,LSTLOC_7,GSTLOC_8,ESTLOC_5,SSTLOC_9,
})LSTATE_10;

* FIELDS FOR TRAP DEFINITIONS
})PTRFL ADDR(0:6,23); OCTFL SP'TNO(-2),SP'TPAR(-1),
}(BLL'CLASS(0:3,5),UTSE'CLASS(0:0,1),
})UTSE'SPTNO(0:1,5),UTSE'RTNO(0:2,5);
}'END;

}(COMMON COMDECS; INCLUDE DECDECS,SYS'COMMON;

*
* COMMON DECLARATIONS FOR CODING
*

* GENERALLY USEFUL MACROS

})MACRO NAMSET(S,L,A,B)_SETUP(S,L,A,B) & S$WP_S$EP;
}(MACRO EMPTY(S)_LNGDES(S$RP,S$WP)<=0;*** WP=RP OR WP=BP?
}(MACRO REPEAT_ WHILE 1 DO;
}(MACRO ENDRPT_ ENDFOR;
}(MACRO FDISP(F)_RUNTIME'FAILURE() IF F$FLDSTB#0 OR
})F$FLDSIZE#24 ELSE F$FLDWDSP;
}(OCTFL FLDSTB(0:8,12),FLDSIZE(0:3,7);

* ERROR MACROS
})MACRO NC'PUNT_RUNTIME'FAILURE();* FOR NORMAL CALLS (EXPRESSIONS)
}(MACRO LF'PUNT_ VALUE NC'PUNT;* FOR LIBRARY FUNCTIONS
}(MACRO SF'PUNT_LF'PUNT:ERCODE,ERMSNO;* FOR SYSTEM CALLS

* QUIT ACTION MACROS
})MACRO QUIT'PUNT(L)_ VALUE GOTO L IF ERCODE='QIT' ELSE
})RUNTIME'FAILURE():ERCODE,ERMSNO;
}(MACRO QUIT'PUNTX(L,X)_ VALUE GOTO L IF ERCODE='QIT' ELSE
})RUNTIME'FAILURE():X,ERCODE,ERMSNO;

* PARAMETRIC CHARACTER DEFINITIONS
})CHR SCHERALD_'>' C'(/* SUB-COMMAND HERALD */),
})BELCH_303B C'(/* BELL */),NULCH_300B C'(/* NULL */),
})NLCH_307B C'(/* NEW LINE */),
})LFCH_310B C'(/* LINE FEED */),
})MBCH_200B C'(/* ZERO MULTIPLE BLANKS */),
})SQTCH_'&'' C'(/* SINGLE QUOTE */),
})DQTCH_'"' C'(/* DOUBLE QUOTE */),
})SEPCH_'-' C'(/* SEPARATOR */);

* STRING POINTER FIELDS
})OCTFL BP(0) C'(/* BEGINNING */),RP(1) C'(/* READER */),
})WP(2) C'(/* WRITER */),EP(3) C'(/* END */);
* CHARACTER FIELDS
})CHRFL CH0(0:0,7),CH1(0:8,15),CH2(0:16,23);
* BEAD LENGTH FIELD
})PTRFL LENGF(-1:6,23);

* FIELDS IN UTILITY FILE NAME
})LNFL UFNUN(0) C'(/* USER NUMBER/DISK ADDRESS */);
}(OCTFL UFNEN(2) C'(/* OBJECT ENTRY-NUMBER */),
})UFNFN(3) C'(/* FILE NAME */),UFNMN(3) C'(/* MAIN NAME */),
})UFNTY(3+LMN) C'(/* TYPE WORD */);

* FIELDS FOR UNO/DKA
})OCTFL UNDKUN(0),
})UNDKDK(1);

})INT LUFN_LTABLE(UFNTY);* LENGTH OF UTILITY FILE:NAME

})INT CB'PMT_1;* PMT ADDRESS OF CONTEXT BLOCK

* DECLARATIONS OF COMMON FUNCTIONS

* SPL RUNTIME FUNCTIONS
*ARBEXT}$SCOPY, APPEND, CNS, RUNTIME'FAILURE;
})PTREXT SBASE; INTEXT ARRAYUB,ARRAYLB;* STEXT ST'DESC;
}(LNEXT LONG'ADD,LONG'SUB; INTEXT LONG'LE,LONG'LT;

* STORAGE ALLOCATOR
})PTREXT STKMAKE;*, MAKE, SETZONE;
*ARBEXT}$STORINIT, SELZONE, EXTZONE, FREE, FREEZONE;
}'END;

}(COMMON UQNDECS; INCLUDE DECDECS;

* UNIQUE NAME FIELDS
})OCTFL UQNTY(0:0,1),UQNPMB(0:0,0),UQNLFB(0:1,1),
})UQNOWN(0:2,17),UQNHFN(0:18,23);
}(OCTFL UQNLFN(1:0,12),UQNLPN(1:13,23),
})UQNSFN(1:0,15),UQNSPN(1:16,23);
}'END;

}(COMMON BFSDECS; INCLUDE UQNDECS;

* OBJECT TYPE-CODES
})INT SIBSFCD_0,SIBLFCD_1,SIBPRCD_2,SIBAKCD_3,
})SIBRSCD_4,SIBOWCD_5,SIBFRCD_6,
})SIBSCCD_14,SIBLKCD_15;

* ACCESS KEY FIELDS
})OCTFL ACK0(0),ACK1(1:0,7),ACKUN(1:8,23);
}(INT NORM'FIL'AC_0357B;* P(NO) F(RW) O(OW) - NORMAL ACCESS
}'END;

}(COMMON SIBDECS; INCLUDE BFSDECS;
*
* DECLARATIONS FOR SIB
*

* FIELDS IN SIB NAME (SIBN)
})OCTFL SIBNOT(0:1,4),
})SIBNLN(0:10,23),
})SIBNAA(1:1,4),SIBNEN(1:10,23),
})SIBNMN(2),SIBNFN(2);
}(OCTFL SIBNTY(SIBNMN$FLDWDSP+LMN),
})SIBNLL(SIBNTY$FLDWDSP+1:4,11),
})SIBNAC(SIBNLL$FLDWDSP:12,23);
}(OCTFL SIBNPA(SIBNAC$FLDWDSP:12,15),
})SIBNFA(SIBNAC$FLDWDSP:16,19),
})SIBNOA(SIBNAC$FLDWDSP:20,23);

})INT LSIBN_LTABLE(SIBNOA);* LENGTH OF SIBN TABLE

* FIELDS IN SIB VALUE (SIBV)
})OCTFL SIBVOT(0:1,4),
})SIBVLN(0:10,23),
})SIBVAA(1:1,4),SIBVEN(1:10,23);
}(LNFL SIBFLUN(2);
}(OCTFL SIBFLLEN(4),
})SIBFLWD(5),
})SIBFLRD(6);

})LNFL SIBLKUN(2);
}(OCTFL SIBLKEN(4),
})SIBLKMN(5),
})SIBLKTY(5+LMN);

})INT LSIBFL_LTABLE(SIBFLRD),LSIBLK_LTABLE(SIBLKTY),
})LSIBV_(LSIBFL IF LSIBFL>LSIBLK ELSE LSIBLK);
}(INT MLSIB_(LSIBV IF LSIBV>LSIBN ELSE LSIBN);
}'END;

}(COMMON SPTDECS; INCLUDE DECDECS;

* FIELDS IN SPCS
})OCTFL SPCSNIS(0:0,0),SPCSNIC(0:1,1),
})SPCSCSP(0:2,5),SPCSPR(0:6,23),
})SPCS940M(1:0,0),SPCSR0SP(1:2,5),SPCSLR(1:6,23),
})SPCSR1SP(2:2,5),SPCSGR(2:6,23);
}(LNFL SPCSIT(3);
}(INT LSPCS_LTABLE(SPCSIT)+1;

})INT NSPT_8;
}'END;

}(COMMON ICTDECS; INCLUDE DECDECS;
}(OCTFL ICTSRC(0:0,2),ICTACT(0:3,5),ICTSPEC(0:6,10),
})ICTBLK(0:11,11),ICTCL(0:15,23);
}(LNFL ICTTM(1);
}(INT NICT_24,LICT_LTABLE(ICTTM)+1;
}(MACRO ICT'SAB(S,A,B)_S@ICTSRC V' A@ICTACT V' B@ICTBLK;
}(INT ICTNULCD_ICT'SAB(0,0,0),
})ICTBLKCD_ICT'SAB(1,0,1),
})ICTTRPCD_ICT'SAB(1,2,1),
})ICTRTICD_ICT'SAB(2,1,1),
})ICTRTICD_ICT'SAB(2,1,1);
}'END;

}(PROGRAM LONG'COMPARE; INCLUDE DECDECS;
*
* COMPARE LONG VALUES
*
})PTR P,Q; INT N,M;

})INTENT LONG'COMPARE(INTEGER @P,INTEGER @Q,N);

})FOR N_N-1 TO 0 DO;
},M_P[N];
},RETURN 1 IF M#Q[N];
}(ENDFOR;
}(RETURN 0;
}(END;

}(PROGRAM SCOPY; INCLUDE COMDECS;
}(PTR P; ST S,D; STFL A(0);

})ARBENT SCOPY(STRING @P,S), FRETURN;
}(D_P.A; P.RP_D$WP_D$RP_D$BP; GOTO L;

})ARBENT APPEND(STRING @P,S), FRETURN;
}(D_P.A;

****}&CHECK STRING CHARACTER SIZES FOR COMPATABILITY
L:
}(REPEAT; WCI(GCI(S// VALUE P.WP_D$WP & RETURN),D// FRETURN); ENDRPT;
}(END;

}(PROGRAM ST'DESC; INCLUDE COMDECS;
}(INT N,S,O; PTR P; ST X;
}(STENT ST'DESC(N,P,S,O);

})P_MAKE(S*(N+24/S-1)/24) IF P=0;

})IF S=8 DO;
},.LDA 44B6;
}(ELSEIF S=6 DO;
},.LDA 40B6;
}(ELSEIF S=12 DO;
},.LDA 50B6;
}(ELSEIF S=24 DO;
},.LDA 54B6;
}(ELSE DO;
},RUNTIME'FAILURE();
}(ENDIF;

}).IOR P; .XMA O; .LSHA 18; .IOR O; .LDX-1; .ASP; .CXA;
}(.STA X$BP; .STA X$RP; .STA X$WP; .LDX N; .ASP; .STX X$EP;
}(RETURN X;
}(END;

}(PROGRAM CNS; INCLUDE COMDECS;
}(INT N,F,R,T,I,D; PTR P; ST S,B(25); STFL A(0);

})ARBENT CNS(N,STRING @P,F,R), FRETURN;

})S_P.A;
}(FRETURN IF R<2 OR R>36;
}(T_(-N IF F>=0 AND N<0 ELSE N);
}(B$RP_B$WP_B$EP; I_0;
LP:}%.LDA T; .LSHD-23; .DIV R; .STA T; .STB D;
}(WCD(D+('0' IF D<10 ELSE 'A'-10),B);
}(I_I+1; GOTO LP IF T#0;
}(WCD('-',B) & I_I+1 IF F>=0 AND N<0;
}(F_F A' 77B;
}(IF F=0 DO;
},F_I;
}(ELSEIF F<=I DO;
},B$RP_INCDES(B$EP,-I);
}(ELSE DO;
},WCI(' ',S// FRETURN) FOR I_I+1 TO F;
}(ENDIF;
}(WCI(D,S// FRETURN)
})FOR D_GCI(B// VALUE P.WP_S$WP & RETURN) WHILE 1;
}(END;

}(PROGRAM CSN; INCLUDE COMDECS;
}(PTR P; INT R,F,D,N,FLB,FLP,PW; ST S; STFL A(0);

})INTENT CSN(STRING @P,R), FRETURN;

})FLB_FLP_0;

AGN:}%S_P.A; FRETURN IF R<2 OR R>36;

})IF D_GCI(S// FRETURN)='-' OR D='+' DO;
},F_(1 IF D='-' ELSE 0); D_GCI(S// FRETURN);
}(ELSE DO;
},F_0;
}(ENDIF;

})D_D-'0' IF D>='0' AND D<='9' ELSE
})D_D-('A'-10) IF D>='A' AND D<='Z' ELSE FRETURN;
}(FRETURN IF D>=R; N_D;

})FOR D_GCI(S//Y) REPEAT;
},D_D-'0' IF D>='0' AND D<='9' ELSE
}-D_D-('A'-10) IF D>='A' AND D<='Z' ELSE GOTO X;
},GOTO X IF D>=R; N_N*R+D;
}(ENDRPT;

X:}'IF R<=10 AND (D_D+'A'-10='B' OR D='D') DO;
},IF FLB DO;
}0S$RP_INCDES(S$RP,1) IF FLP;
},ELSE DO;
}0FLB_-1;
}0PW_GCI(S//Z); PW_PW-'0' & FLP_-1 IF PW>='0' AND PW<='9'
}0ELSE S$RP_INCDES(S$RP,-1);
Z:}.R_8 & GOTO AGN IF D='B' AND R#8;
}0R_10 & GOTO AGN IF D='D' AND R#10;
},ENDIF;
}(ELSE DO;
},S$RP_INCDES(S$RP,-1);
}(ENDIF;
Y:}&N_N*R FOR D_1 TO PW IF FLP;
}(P.RP_S$RP; RETURN (-N IF F ELSE N);
}(END;

}(PROGRAM SBASE; INCLUDE COMDECS;
*
* FIND BASE ADDRESS OF WORD-ORIGINED STRING DESCRIPTOR
*
})ST S;

})PTRENT SBASE(S);
}(.LDA S$BP; .LDX 1; .ASP; .CXA;
}(.CMZ 3B6; .BNE L; .ETR 777777B; RETURN;
L:}&RUNTIME'FAILURE();
}(END;

}(PROGRAM ALENGTH; INCLUDE COMDECS;
*
* COMPUTE ARRAY BOUNDS
*
})PTR A; OCTFL ABW(0);
}(INTENT ARRAYUB(A);
}(.LDA A.ABW; .CMZ 2B6; .BNE R' [2]; .ETR 17777B;
}(.ETR 377777B; RETURN;

})INTENT ARRAYLB(A);
}(.LDA A.ABW; .ETR 1B7; .ASHA-21; RETURN;
}(END;

}(PROGRAM LONG'ARITH; INCLUDE COMDECS;
*
* LONG ARITHMETIC/RELATIONALS
*
})LN X,Y; OCTFL W0(0),W1(1);

})LNENT LONG'ADD(X,Y);* ADD
}(.LDA X$W1,ADD Y$W1,CAB;
}(.LDA X$W0,ADC Y$W0; RETURN;

})LNENT LONG'SUB(X,Y);* SUBTRACT
}(.LDA X$W1,SUB Y$W1,CAB;
}(.LDA X$W0,SUC Y$W0; RETURN;

})INTENT LONG'LE(X,Y);* LESS THAN OR EQUALS
}(RETURN (1 IF LONG'SUB(X,Y)$W0<=0 ELSE 0);

})INTENT LONG'LT(X,Y);* LESS THAN
}(RETURN (1 IF LONG'SUB(X,Y)$W0<0 ELSE 0);

}(INTENT LONG'EQ(X,Y);* EQUAL TO
}(RETURN (1 IF (X$W0=Y$W0 AND X$W1=Y$W1) ELSE 0);

}(END;

}(COMMON ALLOC'DECS;

*
* SPL STORAGE ALLOCATOR
*

* THE BASIC STRUCTURE OF A STORAGE BLOCK IS AS IN THE OLD ALLOCATOR,
* I.E. THE WORD BEFORE THE 0'TH WORD OF A BLOCK CONTAINS THE LENGTH
* OF THE BLOCK (NUMBER OF INFORMATION WORDS +1), A FLAG IN BIT 0
* TO SAY THAT THE BLOCK IS FREE, AND A FLAG IN BIT 1 TO SAY THAT
* THE NEXT LOWER BLOCK IS FREE.
})DECLARE FIELD HIDDEN(-1),HSIZE(-1:6,23),HFREE(-1:0,0),
})HFTAG(-1:1,1),HZTAG(-1:2,2);
* FREE STORAGE COMES IN ZONES.}"A ZONE CONSISTS OF A ZONE HEADER
* AND A CHAIN OF EXTENSIONS.}"THE ZONE HEADER CONTAINS: THE BLOCK
* SIZE FOR THE ZONE (0 MEANS ALL SIZES ARE ALLOWABLE), THE OVERFLOW
* ROUTINE, THE EXTENSION LIST, AND THE FREE LIST ROVER.
})DECLARE FIELD FEXT(0),FLIST(2),FUEXT(3),FUNCTION FIELD FOVX(1);
}(DECLARE PARAMETER FZHS_4;
* THE FEXT WORD IN EACH EXTENSION POINTS TO THE NEXT ONE.}"THIS CHAIN,
* IS TERMINATED BY A -1.}"THE FIRST TWO WORDS
* OF A FREE BLOCK ARE USED TO HOLD THE ADDRESS OF THE NEXT FREE
* BLOCK AND THE PREVIOUS FREE BLOCK.}"THIS LIST IS CIRCULAR.
})DECLARE FIELD NBLK(0),PBLK(1);
* FOR FIXED-SIZE ZONES, THE ENTIRE FREE LIST AND THE HIDDEN WORDS
* ARE SET UP AT THE TIME AN EXTENSION IS CREATED.}"FOR VARIABLE-SIZED
* ZONES, AN EXTENSION IS SET UP AS A SINGLE FREE BLOCK WHICH IS
* SUBDIVIDED AS THE NEED ARISES.}"A FIRST-FIT STRATEGY WITH A "ROVER"
* IS USED FOR THE LATTER.}"BLOCKS BELOW A MINIMUM SIZE WILL NOT BE CREATED.
})DECLARE PARAMETER MINSIZ_3;

})DECLARE INFINITY'ZONE,CURRENT'ZONE;* ZONE VARIABLES FOR ALLOCATOR
}(END;

}(PROGRAM STKMAKE; INCLUDE ALLOC'DECS;
}(FIXED;
*
* ALLOCATE LOCAL (STACKED) STORAGE
*
})DECLARE SP= G' [2],SL= G' [3],BLK,SIZE;

})FUNCTION STKMAKE(SIZE);

})RUNTIME'FAILURE() IF SP+SIZE>=SL;
}(SP_(BLK_SP+1)+SIZE;
}(BLK.HIDDEN_SIZE+1;
}(BSET(BLK,0,SIZE);
}(RETURN BLK;
}(END;

}(PROGRAM MAKE; INCLUDE ALLOC'DECS;
*
* ASSIGN BLOCK OF SIZE (A) IN ZONE (B)
*
})DECLARE BLK,ROVER,RSIZE,EBLK,ROVEC;

})FUNCTION MAKE(SIZE,ZONE);

})ZONE_CURRENT'ZONE IF ZONE=0;
}(SIZE_SIZE+1;
}(GOTO MAKEOV IF ZONE.FLIST<0;
* VARIABLE-SIZED ZONE
})ROVEC_ROVER_ZONE.FLIST;
MAKE1:}"RSIZE_ROVER.HSIZE;
}(IF RSIZE<SIZE+MINSIZ AND RSIZE#SIZE DO;
},GOTO MAKE1 IF (ROVER_ROVER.NBLK)#ROVEC
}-ELSE GOTO MAKEOV;
}(ENDIF;
}(EBLK_(BLK_ROVER)+ROVER.HSIZE;
}(EBLK.HFTAG_0;
}(IF ROVER.HSIZE=SIZE DO;
* EXACT FIT
}-BLK.HFREE_0;
},ZONE.FLIST_RFB(ROVER,ZONE);
}(ELSE DO;
* SPLIT THE BLOCK
}-BLK_EBLK-SIZE;
},BLK.HIDDEN_1@HFTAG+SIZE;
},BLK[-2]_-(ROVER.HSIZE_ROVER.HSIZE-SIZE);
}(ENDIF;
* COMMON EXIT
})BSET(BLK,0,SIZE-1);
}(RETURN BLK;

* OVERFLOW
MAKEOV:}"BLK_(ZONE.FOVX)(SIZE-1,ZONE); RETURN BLK;
}(END;

}(PROGRAM RFB; INCLUDE ALLOC'DECS;
}(FUNCTION RFB(RBLK,ZONE);
}(IF RBLK.NBLK=RBLK DO;
},RETURN ZONE.FLIST_-1;
}(ELSE DO;
},RBLK.NBLK.PBLK_RBLK.PBLK;
},RETURN RBLK.PBLK.NBLK_RBLK.NBLK;
}(ENDIF;
}'END;

}(COMMON USERDECS; INCLUDE COMDECS;
*
* DECLARATIONS FOR USER PROGRAMS
*
})ST OL(NCMCH);* OUTPUT BUFFER FOR USER CONSOLE OUTPUT
}(LB TRAP'LABEL;* GO HERE AFTER TRAP
}'DECLARE STACK'SIZE_3000;
}'DECLARE ARRAY LARGE'STACK[STACK'SIZE];
}'DECLARE INITIAL'SP_@LARGE'STACK[0],NORMAL'SL_@LARGE'STACK[STACK'SIZE-1];
}'DECLARE INTEGER WAKEUP'TIMER,}%/* ICT ENTRY NUMBER FOR BLOCKING */
}7THIS'SUB'PROCESS, /* CURRENT SUBPROCESS NUMBER */
}7PFS'SP'NUMBER,}$/* SP NO FOR ACCT FILE BACKUP */
}7KEY,
}7LNO,
}7OFTI,
}7PMTI,
}7THIS'PRTI,
}7THAT'PRTI;
}'DECLARE POINTER PTR2, PTR3;
}'DECLARE PARAMETER
}7LINKING_0,}(/*LOCK 0 RESERVED FOR LINKING*/
}7ACCTING_1,}(/*LOCK 1 FOR ACCOUNT FILE*/
}7PRT'BASE_3300B,
}7MAX'PRT_32;
}'DECLARE SIGNED FIELD LINE'FIELD(0:0,11);
}'DECLARE FIELD
}7MIB'FIELD(0:12,23),
}7PRDET(9:3,3);

* OUTPUT MACROS
})MACRO IOUT()_SETS(OL,0,0);
}(MACRO PTCH(C)_WCI(C,OL);
}(MACRO PTST(S)_APPEND(OL,S//LF'PUNT);
}(MACRO PTNO(N,F,R)_CNS(N,OL,F,R//LF'PUNT);
}(MACRO PTDN(N)_PTNO(N,4B7,10);
}(MACRO PTON(N)_PTNO(N,4B7,8);
}(MACRO PTNL()_WCI(NLCH,OL);
}(MACRO PTIS(S)_SCOPY(OL,S//LF'PUNT);
}'END;

}(COMMON TRAP'DECS; INCLUDE MACHINE'DECS;
}(INCLUDE MACHINE'DECS;

* TRAP VARIABLES
})PTR INSTR'LOC;* PTR TO INSTR FOLLOWING ONE CAUSING ABE TRAP
}(INT SAVEL;* SAVE L-REG WHILE DOING EAC IN ABE'TRAP
}(INT GSAVER; INTARY GSTATE[LSTATE],SP'GSTATE[LSTATE];* GLOBAL TRAP STATES
}(INT SP'LEV;* SUBPROCESS LEVEL ON ENTRY
}(END;

}(PROGRAM USER'ENTRIES; INCLUDE USERDECS,TRAP'DECS;
*
* ENTRY POINTS
*
})FIXED;

})MACRO SAVE'STATE(X)_.STX X[XSTLOC],EAX X[0],STORS,MIN TRAP'FLAG;

* COME HERE AFTER TRAP MESSAGE
T'L:}%JUMP'RETURN(
}(READ'SPS'PARAM('CSL'//SF'PUNT)-SP'LEV-1//T'R:ERCODE,ERMSNO);
T'R:}$SP'RETURN(//SF'PUNT);

* INITIAL AND 'CONTINUE' SUBPROCESS ENTRIES
})ARBENT XXXXXX(), SP'ENTRY _2;
}(ARBENT XXXXXY(), SP'ENTRY _3;

}).LDA INITIAL'SP,XLA;
}(TRAP'LABEL_T'L; TRAP'FLAG_QUIT'FLAG_0;
}(STACK'PTR_INITIAL'SP; STACK'LIM_NORMAL'SL;
}(SET'SPT'FIELD(-1,'SB',READ'SPT'FIELD(-1,'SB'//SF'PUNT) V' 1B6
})//SF'PUNT);
}(SP'LEV_READ'SPS'PARAM('CSL'//SF'PUNT);
}(SET'SPT'FIELD(-1,'TM',READ'SPT'FIELD(-1,'TCM'//SF'PUNT)
})//SF'PUNT);
}(RUN'USER(); RUNTIME'FAILURE();

* SP'TRAPS COME HERE
})ARBENT XXXSPT(), SP'ENTRY _0; SAVE'STATE(SP'GSTATE); STRAP();


* RING TRAPS
})ARBENT XXXABE(), TRAP'ENTRY _1; SAVE'STATE(GSTATE); ABE'TRAP();
}(ARBENT XXXFLO(), TRAP'ENTRY _2; SAVE'STATE(GSTATE); RTRAP(2);
}(ARBENT XXXFLU(), TRAP'ENTRY _3; SAVE'STATE(GSTATE); RTRAP(3);
}(ARBENT XXXRO(), TRAP'ENTRY _4; SAVE'STATE(GSTATE); RTRAP(4);
}(ARBENT XXXIAT(), TRAP'ENTRY _5; SAVE'STATE(GSTATE); RTRAP(5);
}(ARBENT XXXUFN(), TRAP'ENTRY _6; SAVE'STATE(GSTATE); RTRAP(6);
}(ARBENT XXXFXO(), TRAP'ENTRY _7; SAVE'STATE(GSTATE); RTRAP(7);
}(ARBENT XXXDIZ(), TRAP'ENTRY _8; SAVE'STATE(GSTATE); RTRAP(8);

* STACK OVERFLOW - WATCH OUT
})ARBENT XXXSOV(), TRAP'ENTRY _9; STKTRAP();
}(END;

}(PROGRAM PUNT; INCLUDE USERDECS,TRAP'DECS;
}(INCLUDE SPTDECS;
}(INCLUDE ICTDECS;
*
* MAIN TRAP/PUNT PROCESSING ROUTINE
*
})INT N,P,Q,SR;
}(INT LSPCS_5;
}(INT I;
}(LN NULL'UNDK_(0,0);
}(LB R= L' [0];
}(INTARY SPCA[LSPCS],STATE[LSTATE];
}(PTR SA;* POINTER TO STATE[0]
}(MACRO IS'TSB'INSTR(X)_((X) A' 07740000B=04600000B);
}(OCTFL UTNO(0:0,5),SPCSLR(1:6,23);
}(LB FIELD LBW0(0);

})MACRO SAVE'STATE(X)_BCOPY(SA_@STATE[0],@X[0],LSTATE) &
})(TRAP'PUNT() IF TRAP'FLAG#1);
}(MACRO SPT'PUNT_SPTPUNT:ERCODE,ERMSNO;

*
* ENTRY FOR RING TRAPS
*
})ARBENT RTRAP(N);
}(SAVE'STATE(GSTATE);
RTPUNT: RPUNTMSG(N,RTRAP'LOC); GOTO PUNTCOM;

*
* SPECIAL ENTRY FOR 'ABE' TRAP -
* CHECK IF REFERENCE IS FOLLOWED BY TSB OPCODE
*
})ARBENT ABE'TRAP();
}(SAVE'STATE(GSTATE);
}(INSTR'LOC_RTRAP'LOC+1;
}(IF IS'TSB'INSTR($INSTR'LOC) DO;
},.LDX SA[XSTLOC],LDA SA[LSTLOC],XLA,STA SAVEL,EAC$INSTR'LOC;
},.LDA SAVEL,XLA,STX Q;
},R$BRDPC_Q;
},SA[PSTLOC]_@ABE'EXIT;
},R$BRDLR_SA[LSTLOC];
},SA[LSTLOC]_@R;
},TRAP'FLAG_0;
},.LDX SA,LOADS;
ABE'EXIT:}#RETURN;
}(ENDIF;
}(N_1; GOTO RTPUNT;

*
* ENTRY FOR SP TRAPS
*
})ARBENT STRAP();
}(SAVE'STATE(SP'GSTATE); N_@R.SP'TNO; Q_@R.SP'TPAR;
}(READ'SPCS(0,SPCA//SPT'PUNT); R$BRDLR_SPCA[0]$SPCSLR;
}(P_SPCA[0]$SPCSPR;
}(GOTO SPTPUNT IF N#23;

* QUIT
QUIT:}$QUIT'FLAG_1; REFUSE'INTS(2000,100//SF'PUNT);
}(SA[LSTLOC]_@R;
}(SA[PSTLOC]_@QUITX; .LDX SA,LOADS;
***}'ARM TRAP
})I_ACQUIRE'ICT(GET'INT'NO('QT'//SF'PUNT)//SF'PUNT);
}(SET'SPT'FIELD(-1,'TM',READ'SPT'FIELD(-1,'TM'//SF'PUNT) V' 1//SF'PUNT);
QUITX:}"SP'RETURN(//SPT'PUNT);


* FREE STORAGE OVERFLOW
})ARBENT OFLOTRAP(ERCODE,ERMSNO);
}(R_R$BRDLR.LBW0; N_24; GOTO RTF;

* UNEXPECTED RUNTIME FAILURE
})ARBENT RUNTIME'FAILURE(); N_25;
RTF:}$P_R$BRDPC; Q_0;

SPTPUNT: ALLOW'INTS();
}(SPUNTMSG(N,P,Q);
PUNTCOM:TRAP'FLAG_0;
}(GOTO TRAP'LABEL;

* TRAP DURING STATE-SAVING
})ARBENT TRAP'PUNT();
}(SPUNTMSG(26,R$BRDPC,0); GOTO PUNTCOM;
}(END;

}(PROGRAM STKOV'TRAP; INCLUDE USERDECS;
*
* STACK OVERFLOW TRAP PROCESSING
*
})FIXED;

})ARBENT STKTRAP();
STKWAIT:GOTO TRAP'LABEL;
}(END;

}(PROGRAM UTRAP'MSG; INCLUDE USERDECS,MACHINE'DECS;
*
* PRINT USER TRAP MESSAGE
*?*}"THIS ROUTINE SHOULD FRETURN, RATHER THAN PUNTING (COULD CAUSE
*?*}'PUNT LOOP AND STACK OVERFLOW)
*
})ST MSG(60),CM; INT N,P,Q,T;
}(CHRARY RN[10]_(6'RT0?',6'ABE',6'FLO',6'FLU',6'ROIA',
})6'IAT',6'UFN',6'FXO',6'DIZ',6'SOV');
}(CHRARY SN[27]_(6'MACC',6'PRO',6'PNIM',6'PNIC',6'PI',
})6'TI',6'BLL',6'ILIM',6'PNOD',6'DWSO',6'CWSO',
})6'NEP',6'DMRD',6'NILE',6'SPCO',6'PMTO',6'DKSE',
})6'?17?',6'?18?',6'?19?',6'?20?',6'?21?',6'UTSE',
})6'QUIT',6'FSOV',6'PUNT',6'TRAP');

})ARBENT RPUNTMSG(N,P); N_-(N+1);
}(ARBENT SPUNTMSG(N,P,Q);


})SETS(MSG,0,0); WCI(NLCH,MSG);
}(APPEND(MSG,"USER TRAP '"//LF'PUNT);

COM:
}(IF N=22 DO;* 'UTSE' ERROR
}(APPEND(MSG,"UTSE - "//LF'PUNT);
},N_(Q$UTSE'SPTNO IF T_Q$UTSE'CLASS>1 ELSE
}-6 IF T=1 ELSE -(Q$UTSE'RTNO+1));
}(ENDIF;

})IF N=6 DO;* BLL ERROR
}(PUNT'WWD(MSG,6'BLL-'); WCI(Q$BLL'CLASS V' '0',MSG);
}(ELSE DO;
},PUNT'WWD(MSG,SN[N] IF N>=0 ELSE RN[-(N+1)]);
}(ENDIF;
}(APPEND(MSG,"' AT P: "//LF'PUNT);
}(CNS(P,MSG,4B7,8//LF'PUNT); WCI('B',MSG);

})WCI(NLCH,MSG);
QT'P:}#PRINT'STRING(-1,MSG,0//QUIT'PUNTX(QT'P,MSG));
}(RETURN;
}(END;

}(PROGRAM PUNT'WWD; INCLUDE COMDECS;
*
* APPEND 4 CHARACTER NAME TO STRING
*
})PTR P; CHR M,C; ST S; STFL A(0); CHRFL CH60(0:0,5);

})ARBENT PUNT'WWD(STRING @P,M); S_P.A;

})(WCI(C,S) IF C#' ') & M_M LSH 6
})FOR C_M$CH60 WHILE M#6'}$';
}(P.WP_S$WP; RETURN;
}(END;

}(PROGRAM VARIOUS; INCLUDE USERDECS;

*
* CLEAR CIOS NPUT/OUTPUT &
* TYPE NEWLINE
*

})ARBENT CLEAR'CIOS();
LP:}%QUIT'FLAG_0;
}(SET'CIOS'FIELD(-1,'OCC',0//SF'PUNT);
}(SET'CIOS'FIELD(-1,'ICC',0//SF'PUNT);
}(IOUT();
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNT(LP));
}(RETURN;

*
* REMOVE QUIT CALL FROM SPCS AND UNWIND STACK
* BY NON-LOCAL GOTO
*

})ARBENT ZAP(LABEL ZLAB);
}(DELETE'CALL(//SF'PUNT);
}(GOTO ZLAB;
}'END;

}(COMMON ENTCOM;
}(INCLUDE COMDECS, USERDECS;


}(INT UK;
}(DECLARE STRING ARRAY ENTRIES[3]_("ENTER","LOGOUT","TLOGOUT");
}(DECLARE STRING NOTICE(480);
}(DECLARE STRING HEADER(240);
}(DECLARE STRING MAIL(480);
}(END;

}(PROGRAM MISSUBS; INCLUDE COMDECS;
}(ST JST1,JST2,NAME'ST,WS;
}(INT TEMP,UN,DK,TP,STRT_0,INDEX,NAMEL_5,ERMSNO,LAST_6;
}(INTARY PN,SF[LUFN]; LN LUNDK; CHR ERCODE;
}'OCTFL UNO(0);


})INTENT COMPARE(JST1,JST2);




})FOR TEMP_GCI(JST1//ENDST1) WHILE 1 DO;
},GOTO NOGD IF TEMP#GCI(JST2//NOGD);
}(ENDFOR;
*}/ERROR IF LOOP COMPLETES
})NC'PUNT;
ENDST1: GCI(JST2//GOOD);
NOGD:}#RETURN 0;
GOOD:}#RETURN 1;

})ENTRY CONV'FNAME(UN,NAME'ST,TP,PN);
}(BSET(@PN[0],0,LUFN);
}(WS_ST'DESC(16,@PN[3],6,0);
}(SCOPY(WS,NAME'ST//LF'PUNT);
}(PN[STRT]_UN;
}(PN[STRT+7]_TP;
}(RETURN;

})ENTRY DESTROY'PROC(LUNDK,TP);
}(FOR INDEX_0,INDEX+1 REPEAT;
},BSET(@SF[0],0,LUFN);
},READ'MIBOB'INDEX(LUNDK,NAMEL,SF,INDEX,TP// VALUE
}-(GOTO ENDMIB IF ERCODE='MOB' ELSE GOTO LOOP):
}-ERCODE,ERMSNO);
},IF SF[LAST]=6'DEST' DO;
}0BCOPY(@SF[3],@SF[2],5);
}0SF[2]_SF[1];
}0SF[1]_0;
}0SF[0]_LUNDK$UNO;
}0DELETE'MIBOB(SF,TP//LOOP:ERCODE,ERMSNO);
},ENDIF;
LOOP:}#ENDFOR;
ENDMIB: RETURN;
}(END;

}(PROGRAM RUN'USER;

}(INCLUDE ENTCOM;

}(DECLARE LABEL ARRAY COM[3]_(IN,OUT,TOUT);
}(DECLARE STRING S(72),CMND;
}(DECLARE INTEGER K;

}(ENTRY RUN'USER();

}(WAKEUP'TIMER_ACQUIRE'ICT(-1//NC'PUNT);
}(THIS'SUB'PROCESS_READ'SPS'PARAM('CSP'//SF'PUNT);
}(GET'TABLE(//SF'PUNT);
}(GET'COM'LINE(S:S//SF'PUNT);
}(CMND_GET'PARAM(S);
}(K_ABRV'LKP(CMND,ENTRIES//SF'PUNT);
}(GOTO COM[K];
IN:}%CHECK'TABLE(//BYE);
}(SET'PROC'PARAM('EPR',1//SF'PUNT);
}(ENTER'USER();
BYE:}$DESTRY'THIS'PROC();
}(SP'RETURN(//SF'PUNT);

OUT:}$LOGOUT'USER(GET'PARAM(S));
}(SP'RETURN(//SF'PUNT);

TOUT:}#TLOGOUT'USER(GET'PARAM(S));
}(SP'RETURN(//SF'PUNT);

}(END;

}(PROGRAM EPLNO;

}(/* PROGRAM TO LOGIN THE USER INTO THE BCC 500 SYSTEM */

}(INCLUDE ENTCOM, SIBDECS;

}(ST}&USRNAME(72),PASSWORD(72),ACCOUNT(72),MESSAGE,
}0V,ST3(72),LINE,ST4(72),PRONAME,
}0FILENAME,ST5(72),VERSION(72),MAINST(20:6);
}(INT}%CNT,ERMSNO,RE'ATTACHING,
}0DET'PROC'COUNT,I,
}0USNO,INDX,UK,FND,PRO,RES_0,PNO,TEMP;
}(INTARY}"FN[LUFN],SA[LUFN],FILE[LUFN];
}(OCTFL}#UNO(0);
}(OCTFL}#ENO(0:14,23);
}(OCTFL}#UPUN(0:0,15);
}(CHR}%ERCODE,NAME'CH;
}(CHR}%ESC_302B;
}(LN}&UNDK;
}(PTR}%PTR0,PTR1;


}(ENTRY ENTER'USER();


}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
}(PRINT'STRING(-1,HEADER,QUIT'FLAG//QUIT'PUNTX(EXIT2,HEADER));
}(UK_READ'SPT'FIELD(-1,'UAK'//SF'PUNT);
}(UNDK$UNO_-1;
}(CNT_0;
}(ACCT'STR('K',"","","",0//EXIT2);}"/* LOG TERMINAL GOING ACTIVE */
START:}"SYSTEM'VERSION(VERSION:VERSION);
}(PRINT'STRING(-1,"VERSION ",QUIT'FLAG//QUIT'PUNTX(EXIT2,VERSION));
}(PRINT'STRING(-1,VERSION,QUIT'FLAG//QUIT'PUNTX(EXIT2,VERSION));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
}(PRINT'DATE'TIME();
RESTRT: SET'CIOS'FIELD(-1,'BWS','ALL'//SF'PUNT);
}(MESSAGE_"";
RE'ENTER:PRINT'STRING(-1,"ENTER}"",QUIT'FLAG//QUIT'PUNTX(EXIT2,ST4));
GET'NAME:READ'WORD(USRNAME:USRNAME, NAME'CH//EXIT2:ERCODE, ERMSNO);
}(CHECK(USRNAME,1);}"/* SET PARAMETER TO 1 TO DELETE ANY BLANKS */
}(IF NAME'CH = NLCH DO;
},GOTO PROMPT;
}(ELSEIF NAME'CH = ' ' DO;
},GOTO PASS;
}(ELSEIF NAME'CH=ESC OR NAME'CH='?' DO;
},PRINT'STRING(-1,"&/ENTER (YOUR USER NAME) ",QUIT'FLAG
}2//QUIT'PUNTX(EXIT2,ST4));
},GOTO GET'NAME;
}(ELSE DO; * ACCOMMODATES '&Q'
},PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
},GOTO RE'ENTER;
}(ENDIF;

*}'PRINT PASSWORD MESSAGE
PROMPT: MESSAGE_"PASSWORD ";
PASS:}#V_ST3;
}(PRINT'STRING(-1,MESSAGE,QUIT'FLAG//QUIT'PUNTX(EXIT2,ST4));
}(SET'CIOS'FIELD(-1,'EST',0//SF'PUNT);
}(READ'WORD(PASSWORD:PASSWORD,NAME'CH//EXIT2:ERCODE,ERMSNO);
}(CHECK(PASSWORD,1);}"/* SET PARAMETER TO 1 TO DELETE ANY BLANKS */
}(GOTO PASS1 IF NAME'CH = NLCH;
}(IF NAME'CH = ' ' DO;
},PRINT'CHAR(-1,' ',QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
},GOTO PASS1;
}(ELSEIF NAME'CH = ESC OR NAME'CH = '?' DO;
},PRINT'STRING(-1,"?&/(YOUR PASSWORD) ",QUIT'FLAG//
}2QUIT'PUNTX(EXIT2,ST4));
},GOTO PASS;
}(ELSE DO; * ACCOMMODATES '&Q'
},PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
},GOTO PROMPT;
}(ENDIF;

*}'RESET ECHO
PASS1:}"SET'CIOS'FIELD(-1,'EST',1//SF'PUNT);
}(READ'UP'ITEM('UP',-1,0,USRNAME,"P",V,UK:V//NAME'ERR:ERCODE,ERMSNO);
}(GOTO PASW'ERR IF COMPARE(V,PASSWORD)=0;
}(V_ST3;
}(SETS(ACCOUNT);
}(READ'UP'ITEM('UP',-1,0,USRNAME,"ACCOUNT",V,UK:V//RUN:ERCODE,ERMSNO);
}(IF NAME'CH = NLCH DO;
},MESSAGE _ "&MACCOUNT}"";
}(ELSE DO;
},MESSAGE _ "";
}(ENDIF;
ACCT:}#READ'LINE(-1,ACCOUNT,MESSAGE,QUIT'FLAG:ACCOUNT//QUIT'PUNTX(EXIT2,ST4));
}(CHECK(ACCOUNT,0);}"/*SET PARAMETER TO 0 TO KEEP AS IS */
}(IF LENGTH(ACCOUNT)=0 DO;
}+PRINT'STRING(-1,"PLEASE TYPE YOUR NAME OR ACCOUNT&/",QUIT'FLAG
}1//QUIT'PUNTX(EXIT2,ST4));
}+GOTO ACCT;
}(ELSEIF LENGTH(ACCOUNT)>25 DO;
}+PRINT'STRING(-1,"LINE TOO LONG, RETYPE&/",QUIT'FLAG
}1//QUIT'PUNTX(EXIT2,ST4));
}+GOTO ACCT;
}(ENDIF;

*}'READ USER NUMBER
RUN:}$V_ST3;
}(READ'UP'ITEM('UP',-1,0,USRNAME,"#",V,UK:V//SF'PUNT);
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));

LOGGED'IN: UNDK$UNO_USNO_SBASE(V).UPUN;
}(DESTROY'PROC(UNDK,UK);
}(DET'PROC'COUNT_0;
}(FOR I_1 TO MAX'PRT-1 DO;
}+PTR0_PTR3+12*I;
}+PTR1_PTR2+4*I;
}+IF PTR0.PRDET=1 AND PTR1.MIB'FIELD=USNO DO;
}.DET'PROC'COUNT_DET'PROC'COUNT+1;
}.THAT'PRTI_I;
}+ENDIF;
}(ENDFOR;
}(GOTO ATT IF DET'PROC'COUNT>0;

LOOK:}#RE'ATTACHING _ PNO _ 0;
}(FOR INDX_0,INDX+1 REPEAT;
}+READ'MIBOB'INDEX(UNDK,5,FN,INDX,UK//
}0VALUE (GOTO GET'OUT IF ERCODE='MOB' ELSE GOTO
}0NXENT):ERCODE,ERMSNO);
}+IF FN[0]$SIBNOT=SIBPRCD AND FN[2]=6'PROC' DO;
}0V_ST'DESC(4,@FN[3],6,0);
}0V$WP_V$EP;
}0TEMP_CSN(V//NXENT);
}0PNO_TEMP IF TEMP>PNO;
}+ENDIF;
NXENT:}"ENDRPT;
}(NC'PUNT;

GET'OUT:SCOPY(MAINST,6"PROC"//LF'PUNT);
}(CNS(PNO+1,MAINST,0,10//LF'PUNT);
}(CONV'FNAME(USNO,MAINST,6'PROC',FILE);

* CREATE, OPEN, INITIALIZE AND ACTIVATE THIS PROCESS AND COMMIT SUICIDE
CRPR:}#CREATE'MIBOB(FILE,SIBPRCD,UK//EXIT2:ERCODE,ERMSNO);
}(SET'MIBOB'ACCESS(FILE,357B,UK//SF'PUNT);
INIT:}#CREATE'PROCESS(FILE,"",UK//EXIT2:ERCODE,ERMSNO);
}(TABLE(USNO//EXIT2);

ACTV:}#THAT'PRTI_ACTIVATE'PROC(FILE,-1,RES,UK//EXIT2:ERCODE,ERMSNO);
}(ACCT'STR('E',USRNAME,"",ACCOUNT,0//EXIT2); * LOG SUCCESSFUL ENTRY

EXIT1:}"PTR1_PTR2+THAT'PRTI*4;}&/* ENTER USER IN ACTIVE-USERS */
}(PTR1.LINE'FIELD_LNO RSH 1;
}(IF NOT RE'ATTACHING DO;}#/* IF RE-ATTACHING, SAVE ORIGINAL LOGIN TIME */
}+PTR1.MIB'FIELD_USNO;
}+PUT'TIME(PTR1+1);
}(ENDIF;

EXIT:}#DESTRY'THIS'PROC();
}(SP'RETURN(//SF'PUNT);

WHICH:}"PRINT'STRING(-1,"MORE THAN 1 DETACHED PROCESS. CARELESS!!",
}5QUIT'FLAG//QUIT'PUNTX(EXIT,ST4));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT,NAME'CH));
}(PRINT'STRING(-1,"NEXT TIME, DO NOT JUST FLICK YOUR TERMINAL TO 'LOCAL'",
}5QUIT'FLAG//QUIT'PUNTX(EXIT,ST4));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT,NAME'CH));
}(PRINT'STRING(-1,"AND WALK AWAY... YOU MUST EXPLICITLY LOGOUT!!!",
}5QUIT'FLAG//QUIT'PUNTX(EXIT,ST4));
EXIT2:}"QUIT'FLAG_0;
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT,NAME'CH));
}(PRINT'STRING(-1,"ENTER ABORTED",QUIT'FLAG//QUIT'PUNTX(EXIT,ST4));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT,NAME'CH));
}(GOTO EXIT;

ATT:}$GOTO WHICH IF DET'PROC'COUNT>1;

NEW:}$PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
}(PRINT'STRING(-1,"DO YOU WISH TO RECONNECT TO DETACHED PROCESS?}"",
}9QUIT'FLAG//QUIT'PUNTX(EXIT2,ST4));
}(SETS(ST4);
}(READ'LINE(-1,ST4,"",QUIT'FLAG:ST4//QUIT'PUNTX(EXIT2,ST4));
}(IF (NAME'CH_GCI(ST4//NEW))='Y' DO;
}+ATTACH'PROC(THAT'PRTI,LNO RSH 1);
}+RE'ATTACHING _ 1;
}+GOTO EXIT1;
}(ELSEIF NAME'CH='N' DO;
}+GOTO LOOK;
}(ELSE DO;
}+GOTO NEW;
}(ENDIF;

PASW'ERR:ACCT'STR('P',USRNAME,PASSWORD,"",0//EXIT2) IF LENGTH(PASSWORD)#0; * LOG BAD PASSWORD
}(GOTO NAM'ERR1;

NAME'ERR:ACCT'STR('N',USRNAME,"","",0//EXIT2) IF LENGTH(USRNAME)#0; * LOG BAD USER NAME
NAM'ERR1:PRINT'STRING(-1,"&/INVALID",QUIT'FLAG//QUIT'PUNTX(EXIT2,ST4));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
}(CNT_CNT+1;
}(GOTO RESTRT IF CNT<4;
}(GOTO EXIT2;

ERROR:}"PRINT'STRING(-1,"PROCESS ALREADY EXISTS.}"RESTART IT?",
}(QUIT'FLAG//QUIT'PUNTX(EXIT2,ST4));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT2,NAME'CH));
}(LINE_ST4;
}(READ'LINE(-1,LINE,"",QUIT'FLAG:LINE//QUIT'PUNTX(EXIT2,ST4));
}(V_GET'PARAM(LINE);
}(GOTO WHICH IF EMPTY(V) OR COMPARE("YES",V)=0;
}(GOTO ACTV;
}(END;

}'PROGRAM CHECK;

*}%THIS PROGRAM BLOCK CHECKS A STRING PARM FOR CHARACTERS > 77B.
*}%ALL CHARACTERS < 100B ARE PUT DIRECTLY INTO NEWPARM UNCHANGED.
*}%CHARACTERS IN THE RANGE
*}.100B - 177B ARE CONVERTED TO '$''CHR-100B'
*}.200B - 277B ARE CONVERTED TO '%''CHR-200B'
*}.300B - 377B ARE CONVERTED TO '&''CHR-300B'.
*}%NEWPARM IS THEN COPIED BACK ONTO PARM.
*}%ALSO, IF THE DELETE PARAMETER IS 1, THEN ANY BLANK CHARACTERS FOUND
*}%WILL BE DELETED.}"IF 0, THEN THE STRING IS LEFT AS IT IS.

}'DECLARE INTEGER
}*DEL'PARAM;

}'DECLARE CHARACTER 
}*CHAR;

}'DECLARE STRING
}*NEWPARM(144);


}'STRING FUNCTION CHECK(STRING PARM, DEL'PARAM);

}'WHILE 1 DO;
}*IF (CHAR _ GCI (PARM//FAIL)) < 100B DO;
}/WCI(CHAR,NEWPARM//FAIL) IF CHAR # ' ' OR NOT DEL'PARAM;
}*ELSEIF CHAR < 200B DO;
}/WCI ('$',NEWPARM//FAIL);
}/WCI (CHAR-100B,NEWPARM//FAIL);
}*ELSEIF CHAR < 300B DO;
}/WCI ('%',NEWPARM//FAIL);
}/WCI (CHAR-200B,NEWPARM//FAIL);
}*ELSE DO;
}/WCI (006B,NEWPARM//FAIL);}#* 006B IS AN '&'
}/WCI (CHAR-300B,NEWPARM//FAIL);
}*ENDIF;
}'ENDFOR;
FAIL:
}'SCOPY (PARM,NEWPARM//RETURN);
}'RETURN;
}'END;

}(PROGRAM READ'WORD;

}(INCLUDE MACHINE'DECS, ENTCOM;

}(DECLARE STRING WORD;
}(DECLARE INTEGER FIRST;
}(DECLARE CHARACTER IN'CHAR, ESC_302B;


}(ENTRY READ'WORD(WORD), FRETURN;


}(FIRST_1;
}(SETS(WORD);
LOOP:}#IN'CHAR_READ'CHAR(-1,QUIT'FLAG//FAIL1:ERCODE,ERMSNO);
}(IF IN'CHAR=' ' DO;
},GOTO LOOP IF FIRST;
},RETURN (WORD,IN'CHAR);
}(ELSEIF IN'CHAR=NLCH OR IN'CHAR='?' OR IN'CHAR=ESC DO;
},RETURN (WORD,IN'CHAR);
}(ELSEIF IN'CHAR='&Q' DO;
},PRINT'CHAR(-1,'_',QUIT'FLAG//QUIT'PUNTX(FAIL1,IN'CHAR));
},SETS(WORD); RETURN (WORD,IN'CHAR);
}(ELSEIF IN'CHAR='&A' DO;
},PRINT'CHAR(-1,'^',QUIT'FLAG//QUIT'PUNTX(FAIL1,IN'CHAR));
},WORD$WP_INCDES(WORD$WP,-1) IF LENGTH(WORD)>0;
},GOTO LOOP;
}(ENDIF;
}(WCI(IN'CHAR,WORD//FAIL1);
}(FIRST_0;
}(GOTO LOOP;
FAIL1:}"FRETURN (ERCODE,ERMSNO);
}(END;

}(PROGRAM GET'TABLE;

}(INCLUDE USERDECS;

}(DECLARE INTEGER I,PGNO;
}(DECLARE INTEGER ARRAY FN[LUFN];
}(DECLARE STRING NAME1_6"#1:X298-ACTUSR:BIN";
}(DECLARE STRING NAME2_6"#1:REAL-CORE:BIN";
}(DECLARE POINTER PTR4;


}(ENTRY GET'TABLE(), FRETURN;


}(KEY_READ'PROC'PARAM('IKY'//SF'PUNT);
}(NAME'SEARCH(NAME1,FN,1,'',KEY//ERROR1:ERCODE,ERMSNO);
}(MOPEN'FILE(-1,FN,0,KEY:OFTI//SF'PUNT);
BRING'IN:GET'FIRST'PAGE(OFTI:PMTI,PTR2);
}(NAME'SEARCH(NAME2,FN,1,'',KEY//ERROR2:ERCODE,ERMSNO);
}(MOPEN'FILE(-1,FN,0,KEY:OFTI//SF'PUNT);
}(GET'FIRST'PAGE(OFTI:PMTI,PTR3);
}(GET'SECOND'PAGE(OFTI,PTR3 RSH 11:PMTI,PTR4);
}(PTR3_PTR3+PRT'BASE;
}(LNO_READ'PROC'PARAM('TNO'//SF'PUNT);
}(THIS'PRTI_READ'PROC'PARAM('PRT'//SF'PUNT);
}(RETURN;

ERROR1: FRETURN (ERCODE,ERMSNO) IF ERCODE#'NNF';

*}'INITIALIZATION
}(CONV'FNAME(-1,6"X298-ACTUSR",6'BIN ',FN);
}(CREATE'MIBOB(FN,0,KEY//SF'PUNT);
}(MOPEN'FILE(-1,FN,0,KEY:OFTI//SF'PUNT);
}(CR'FILE'PAGE(OFTI,0:PGNO//SF'PUNT);

*}'CHANGE FILE LENGTH IF MAXIMUM LINES SUPORTED BY SYSTEM
*}'EXCEEDS 500.
}(SET'FILE'LENGTH(OFTI,2047//SF'PUNT);
}(GOTO BRING'IN;

ERROR2: FRETURN;

}(END;

}(PROGRAM ON'TABLE;

}(INCLUDE MACHINE'DECS, ENTCOM, USERDECS;

}(DECLARE POINTER PTR1;
}(DECLARE INTEGER UK,USNO,TERM'NO,J,BITS,LOCK'VALUE;
}(DECLARE LONG UNDK,ON'TIME;
}(DECLARE STRING USRNAME(20),S,CODE(10);
}(DECLARE FIELD UNO(0);

}(ENTRY TABLE(USNO), FRETURN;
}(SETS(MAIL,0,0);
}(READ'UP'ITEM('UP',-1,USNO,USRNAME,"LINKS",CODE,KEY:
}-CODE//OK:ERCODE,ERMSNO);

*}'ACQUIRE SYSTEM PRIVILEGES FOR SET'LINE'FIELD BELOW
OK:}%BITS_READ'SPT'FIELD(-1,'SB'//SF'PUNT);
}(SET'SPT'FIELD(-1,'SB',BITS V' 2B7//SF'PUNT);
}(SET'LINE'FIELD(LNO,'LOK',COMPARE(CODE,"NO")//SF'PUNT);

*}'GIVE UP SYSTEM PRIVILEGES
}(SET'SPT'FIELD(-1,'SB',BITS//SF'PUNT);
}(READ'UP'ITEM('UP',-1,USNO,USRNAME,"MAIL",MAIL,KEY:MAIL//NEXT:
}-ERCODE,ERMSNO);
}(SET'UP'ACCESS('UP',-1,USNO,USRNAME,"MAIL",0,-1,KEY//SF'PUNT);
}(PRINT'STRING(-1,MAIL,QUIT'FLAG//QUIT'PUNTX(NEXT,MAIL));
}(PRINT'STRING(-1,"",QUIT'FLAG//QUIT'PUNTX(NEXT,MAIL));

NEXT:}#SETS(MAIL);
}(READ'UP'ITEM('UP',-1,USNO,USRNAME,"NOTICE",MAIL,KEY:MAIL//BYE:
}-ERCODE,ERMSNO);
}(SET'UP'ACCESS('UP',-1,USNO,USRNAME,"NOTICE",0,-1,KEY//SF'PUNT);
}(PRINT'STRING(-1,"&G&G&G&GNOTICE:",QUIT'FLAG//
}-QUIT'PUNTX(BYE,MAIL));
}(PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(BYE,MAIL));
}(PRINT'STRING(-1,NOTICE,QUIT'FLAG//QUIT'PUNTX(BYE,NOTICE));

BYE:}$RETURN;


}(ENTRY CHECK'TABLE(), FRETURN;
}(UK_READ'SPT'FIELD(-1,'UAK'//SF'PUNT);
}(UNDK$UNO_-1;
}(DESTROY'PROC(UNDK,UK);}#/* DESTROY ANY PREVIOUS PROCESSES}#*/
}(PTR1_PTR2+ENTER'LOCK; * LOOK AT ENTER'LOCK TO DECIDE ABOUT ENTRY
AGAIN:}"IF (LOCK'VALUE_$PTR1)<0 DO; * ENTRY FORBIDDEN
}+PRINT'STRING(-1,"&307SORRY, THE 500 IS NOT AVAILABLE&307",QUIT'FLAG
}0//FRET:S,ERCODE,ERMSNO);
}+FRETURN;
}(ELSEIF LOCK'VALUE=0 DO; * SYSTEM NOW COMING UP: WAIT & TRY AGAIN
}+PRINT'STRING(-1,"&307THE 500 IS BEING RESTARTED...TRY AGAIN SHORTLY.&307",
}1QUIT'FLAG//FRET:S,ERCODE,ERMSNO);
}+FRETURN;
}(ELSEIF LOCK'VALUE=1 DO; * MAYBE WE ARE THE FIRST CUSTOMER
}+LOCK();
}+IF $PTR1=1 DO; * CHECK TO MAKE SURE
}.ACCT'STR('I',"","","",1//FRET); * LOG SYSTEM INITIALIZATION
}.$PTR1_2;
}.UNLOCK();
}+ELSE DO; * NO, SOMEONE BEAT US TO THE PUNCH.}"START OVER
}.UNLOCK();
}.GOTO AGAIN;
}+ENDIF;
}(ENDIF;
}(TERM'NO_LNO RSH 1;
}(RUNTIME'FAILURE() IF TERM'NO>MAX'TERMS;
}(SETS(HEADER);
}(READ'UP'ITEM('UP',-1,1,USRNAME,"HEADER",HEADER,KEY:HEADER//BELOW:
}-ERCODE,ERMSNO);
BELOW:}"SETS(NOTICE);
}(READ'UP'ITEM('UP', -1, 1, USRNAME, "NOTICE", NOTICE, KEY: NOTICE//
}-BELOW1: ERCODE, ERMSNO);
BELOW1: RETURN;

FRET:}#FRETURN;

}(END;

}(PROGRAM GET'FIRST'PAGE;
}(INCLUDE USERDECS;

})DECLARE INTEGER OFTI,PMTI,I;
}(DECLARE POINTER P;
}(DECLARE INTEGER FIELD PAG'FL(0:6,12);

})ENTRY GET'FIRST'PAGE(OFTI);
}(ACQUIRE'PMT(-1:PMTI//SF'PUNT);
}(FOR I_1,I+1 WHILE READ'MAP'BYTE(-1,I//SF'PUNT)#0 DO;
}(ENDFOR;
}(SET'MAP'BYTE(-1,I,PMTI//SF'PUNT);
}(MOVE'PAGE'PMT(OFTI,0,PMTI//SF'PUNT);
}(P_I@PAG'FL;
}(RETURN (PMTI,P);

}(ENTRY GET'SECOND'PAGE(OFTI,I);
}(ACQUIRE'PMT(-1:PMTI//SF'PUNT);
}(SET'MAP'BYTE(-1,I,PMTI//SF'PUNT);
}(MOVE'PAGE'PMT(OFTI,0,PMTI//SF'PUNT);
}(P_I@PAG'FL;
}(RETURN (PMTI,P);

}(END;

}(PROGRAM LOGOUT;
}(INCLUDE COMDECS, USERDECS, MACHINE'DECS;
}(ST NAME'ST, USRNAME(30), NAME(30);
}(INT ERMSNO, CUNO, LNO, UNO, COUNT, P;
}(INT MIB'COUNT,I;
}(CHR ERCODE, CH, TYPE;
}(INTARY FN[7], FMTNAME[LUFN];
}(LN UNDK, THEN, NOW;
}(DECLARE LONG PARAMETER DELAY_(1,62341577B);}"/* 5 MINUTES */
}(DECLARE POINTER PTR1;
}(OCTFL UN(0);

}(ENTRY LOGOUT'USER (NAME'ST);
}(SET'PROC'PARAM('LPR',1//SF'PUNT);
}(CUNO_READ'PROC'PARAM('UNO'//SF'PUNT); * GET CURRENT USER NUMBER
}(THAT'PRTI _ READ'PROC'PARAM('PRT'//SF'PUNT); *GET PROCESS NUMBER FOR ACCT'STR FUNCTION

* GET THE USER'S NAME;
}(SETS(USRNAME);
}(READ'UP'ITEM('UP',-1,CUNO,"","N",USRNAME,KEY:USRNAME//SF'PUNT);

* CHECK TO SEE IF LOGOUT PARAMETER SUPPLIED;
}(CH_GCI(NAME'ST//DELET'FL); * TRY TO DELETE FILES IF NO PARAMETER;
}(GOTO GET'OUT IF CH='T'; * SKIP DELETING AND JUST LOGOUT;

* ONLY 'T' IS LEGAL AT PRESENT...OTHER PARAMETERS MAY BE ADDED LATER
}(PRINT'STRING (-1,"LOGOUT PARAMETER INCORRECT.}"RETYPE.&307",
})QUIT'FLAG//QUIT'PUNTX(SPRTN,NAME'ST));
SPRTN:}&SP'RETURN (//SF'PUNT);
DELET'FL:COUNT_0; * NO. OF TIMES THE USER IS LOGGED IN;

* FIGURE OUT HOW MANY TIMES THE USER IS ON;
}(P _ PTR2; * P POINTS TO USER NO. IN ACTIVE USER FILE;
}(FOR I_1 TO MAX'PRT-1 DO;
},SETS(NAME);
},IF $P#0 DO;
}0READ'UP'ITEM('UP',-1,P.MIB'FIELD,"","N",NAME,KEY: NAME
}2//SF'PUNT);
}0COUNT_COUNT + COMPARE(USRNAME, NAME);
},ENDIF;
},P _ P + 4;
}(ENDFOR;
}(IF COUNT=1 DO; * ONLY LOGGED ON ONCE--DELETE FILES;
},UNDK$UN_CUNO; * USER NUMBER DISK ADDRESS
},FOR MIB'COUNT_0 TO 127 DO; * DELETE MIB ENTRIES;
}0READ'MIBOB'INDEX(UNDK,5,FN,MIB'COUNT,KEY
}2//GOTO GET'OUT IF ERCODE='MOB' ELSE GOTO NXENT:
}2ERCODE, ERMSNO);
* READ'MIBOB'INDEX RETURNS FILE NAME IN FN[2] - FN[5] AND FILE TYPE
* FN[6], BUT DELETION REQUIRES A MONITOR-FORMATTED NAME.}"SO WE BCOPY
* THE NAME AND TYPE OF FN TO FMTNAME AND SET UNO, DISK ADDR AND INDEX
* WORDS OF FMTNAME.
}0TYPE_FN[6];
}0FMTNAME[0] _ CUNO;
}0FMTNAME[1] _ 0;
* DON'T DELETE KEY'S, SPCL'S, OR PROC'S;
}0IF TYPE # 6'KEY ' AND TYPE # 6'SPCL' AND TYPE # 6'PROC' DO;
}3FMTNAME[2] _ MIB'COUNT;
}4BCOPY(@FMTNAME[3], @FN[2], 5);
}4DELETE'FILE(FMTNAME, KEY//NXENT: ERCODE, ERMSNO);
}/ENDIF;
NXENT:}&ENDFOR;
}(ENDIF;
}(GOTO GET'OUT;


})ENTRY TLOGOUT'USER (NAME'ST);
}(SET'PROC'PARAM('LPR',1//SF'PUNT);
}(CUNO_READ'PROC'PARAM('UNO'//SF'PUNT);
}(THAT'PRTI _ READ'PROC'PARAM('PRT'//SF'PUNT); *GET PROCESS NUMBER FOR ACCT'STR FUNCTION
}(SETS(USRNAME);
}(READ'UP'ITEM('UP',-1,CUNO,"","N",USRNAME,KEY:USRNAME//SF'PUNT);
GET'OUT:REFUSE'INTS(-1,100//SF'PUNT);
}(REMOVE();
}(ACCT'STR('O',USRNAME,"","",0//SF'PUNT); * LOG LOGOUT
}(PTR1_PTR2+TIME'BASE;
}(THEN_$PTR1;},/* GET TIME ACCOUNT FILE WAS LAST WRITTEN */
}(NOW_READ'CLOCK('RTC'); /* GET PRESENT TIME */
}(BACKUP'ACCT'FILE(PTR1,NOW) IF
}-LONG'LT(LONG'ADD(THEN,DELAY),NOW);
}(DESTRY'THIS'PROC();

})END;

}(PROGRAM BACKUP'ACCT'FILE;
}(INCLUDE USERDECS, COMDECS;

}(DECLARE ARRAY FORMATTED'NAME[8];
}(DECLARE LONG NOW;
}(DECLARE POINTER PTR1;

}(FUNCTION BACKUP'ACCT'FILE(PTR1,NOW);

* MAKE SUB-PROCESS TO RUN AUTO-PFS
}'PFS'SP'NUMBER_CREATE'SSP(-1//SF'PUNT);
}'SPECIAL'SEARCH("#2:EMULATOR:PIF",FORMATTED'NAME,'COM',-1//SF'PUNT);
}'ATTACH(PFS'SP'NUMBER,FORMATTED'NAME,-1//SF'PUNT);

}'SEND'TO'PFS(//QUIT'ANYWAY);
}'$PTR1_NOW;
QUIT'ANYWAY: RETURN;


}'END;

}(PROGRAM OFF'TABLE; INCLUDE USERDECS,MACHINE'DECS;
}(DECLARE LONG PARAMETER WAIT'TIME_(0,1*1000*100);
}(DECLARE INTEGER I,BITS,RUMMY;
}(DECLARE LONG DUMMY;
}(DECLARE INTEGER FIELD LF(0:6,7),LQNK(2:11,23);
}(DECLARE INTEGER ARRAY TABLE[7];
}(DECLARE POINTER PTR1;
}(DECLARE STRING S;

})ENTRY REMOVE();

}(PTR1_PTR2+THIS'PRTI LSH 2;
}($PTR1_0;}//* REMOVE USER FROM ACTIVE-USERS */
}(READ'LINE'TABLE(LNO,TABLE//EXIT1:ERCODE,ERMSNO);
}(IF TABLE[0]$LF#0 DO;*}#BREAK LINKS;
},BITS_READ'SPT'FIELD(-1,'SB'//EXIT1:ERCODE,ERMSNO);
},SET'SPT'FIELD(-1,'SB',BITS V' 2B7
}.//EXIT1:ERCODE,ERMSNO);
GET1:}'MON'LOCK(LINKING:RUMMY//GET3:DUMMY);
},SET'LINE'FIELD(TABLE[0]$LQNK-1,'LF',0
}.//EXIT1:ERCODE,ERMSNO);
},SET'LINE'FIELD(LNO,'LF',0//EXIT1:ERCODE,ERMSNO);
},MON'UNLOCK(LINKING//GET2:DUMMY);
GET2:
},SET'SPT'FIELD(-1,'SB',BITS//EXIT1:ERCODE,ERMSNO);
},PRINT'STRING(-1,"LINK BROKEN",QUIT'FLAG//QUIT'PUNTX(EXIT1,S));
},PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(EXIT1,I));
}(ENDIF;

})PRINT'STRING(-1,"LOGOUT ON}"",QUIT'FLAG//QUIT'PUNTX(EXIT,S));
}(PRINT'DATE'TIME();
}(PRINT'STRING(-1,"TOTAL CHARGES: ",QUIT'FLAG//QUIT'PUNTX(EXIT,S));
}(PRINT'CHARGES(PTR1+1);
}(PRINT'STRING(-1,"PAGE FAULTS:}#",QUIT'FLAG//QUIT'PUNTX(EXIT,S));
}(PRINT'PG'FAULTS();
}(PRINT'STRING(-1,"CPU TIME:}&",QUIT'FLAG//QUIT'PUNTX(EXIT,S));
}(PRINT'CPU'TIME();
}(PRINT'STRING(-1,"CONNECT TIME:}"",QUIT'FLAG//QUIT'PUNTX(EXIT,S));
}(PRINT'DELTA'TIME(PTR1+1);
}(START'OUTPUT(-1,QUIT'FLAG//EXIT:ERCODE,ERMSNO);
EXIT:
}(RETURN;
EXIT1:}"MON'UNLOCK(LINKING//EXIT:DUMMY);
}(GOTO EXIT;

GET3:}#SLEEP(WAIT'TIME) & GOTO GET1;

}(END;

}'PROGRAM SEND'TO'PFS;

*}&THIS FUNCTION PUTS A COMMAND STRING FOR AUTO-PFS IN THE
* FILE APFS-CMNDS, SETS THE UTILITY'S COMMAND STRING TO "AUTO-PFS", AND
* INITIATES A SUB-PROCESS TO EXECUTE IT, THEREBY WRITING OUT THE ACCOUNT
* FILE ON THE DISK.

}'INCLUDE USERDECS, COMDECS;

}'DECLARE ARRAY
}*PMT'ENTRY[5];}&/* HOLDS ONE PMT ENTRY}3*/

}'DECLARE STRING
}*PMT'FLAGS(128:6);}"/* EACH CHARACTER INDICATES WHETHER THE}"*/
}=/*}#CORRESPONDING PMT ENTRY IS IN USE}#*/

}'DECLARE INTEGER
}*IN'USE'BEFORE,}%/* FLAGS WHETHER ENTRY WAS IN USE BEFORE */
}*PMT'INDEX,
}*PFS'CMD'FILE'NUM;

}'MACRO PMT'IN'USE _ PMT'ENTRY[3];




}'FUNCTION SEND'TO'PFS(), FRETURN;

}'LOCK();

* OUTPUT THE COMMANDS TO PFS
}'PFS'CMD'FILE'NUM _
}*OPEN'SEQ'FILE("#1:&"APFS-CMNDS&"",1,6'9SYM',8
}-//BAD'NEWS);
}'OUTPUT'SEQ'FILE(PFS'CMD'FILE'NUM,
})"@SYSTEM-01:&141&165&141)WX732-ACCFIL.#1:X732-ACCFIL.F."
})//BAD'NEWS);
}'CLOSE'SEQ'FILE(PFS'CMD'FILE'NUM//BAD'NEWS);

* REMEMBER WHICH PMT ENTRIES ARE IN USE BEFORE PFS IS CALLED
}'FOR PMT'INDEX _ 1 TO 200B DO;
}*READ'PMT(PMT'INDEX, PMT'ENTRY//BAD'NEWS:ERCODE,ERMSNO);
}*WCI(1 IF PMT'IN'USE ELSE 0, PMT'FLAGS//BAD'NEWS);
}'ENDFOR;

* CALL PFS
}'SET'SAVED'USER(1);
}'SET'COM'LINE("AUTO-PFS");
}'SP'CALL(PFS'SP'NUMBER, 2//GO'ON:ERCODE,ERMSNO);
GO'ON: UNLOCK();

* NOW FREE ALL THE ENTRIES WHICH THE EMULATOR HAS JUST TAKEN FOR PFS
}'FOR PMT'INDEX _ 1 TO 200B DO;
}*READ'PMT(PMT'INDEX, PMT'ENTRY//FRETURN:ERCODE,ERMSNO);
}*IN'USE'BEFORE _ GCI(PMT'FLAGS//FRETURN);
}*DELETE'PMT(PMT'INDEX//IGNORE'ERROR: ERCODE, ERMSNO)
}-IF PMT'IN'USE AND NOT IN'USE'BEFORE;
IGNORE'ERROR:
}'ENDFOR;
}'RETURN;

BAD'NEWS: UNLOCK(); FRETURN;

}'END;

}'PROGRAM LOCK'UNLOCK;
}'INCLUDE USERDECS, MACHINE'DECS;

*}"PROGRAM TO LOCK AND UNLOCK THE ACCOUNT FILE.}"THIS CODE FUNCTIONS
*}&MORE OR LESS THE WAY THE MONITOR OBJECT LOCKS FUNCTION, EXCEPT
*}&THAT THE LOCK IS STORED IN ACTIVE-USERS AND A 3-MINUTE TIMER
*}&IS SET INSTEAD OF THE MONITOR'S 30-SECOND TIMER.

}'DECLARE LONG PARAMETER WAIT'TIME_(1,1222784), /* 3 MINUTES */
}>LWAIT_(0,5*1000*100),}"/* 5 SECONDS */
}>SWAIT_(0,1*1000*100),}"/* 1 SECOND}"*/
}>LONG'ZERO_(0,0);
}'DECLARE INTEGER LKEY, RUMMY;
}'DECLARE LONG LOCK'TIME, NOW, THEN, DUMMY;
}'DECLARE FIELD LWR'QUARTER(1:12,23);
}'DECLARE POINTER PTR1;

}'FUNCTION LOCK();
}'PTR1_PTR2+ACCT'LOCK;
}'WHILE 1 DO;
LOCK1:}$MON'LOCK(ACCTING:LKEY//LOCK1X:DUMMY);
}*THEN_LONG'ADD((NOW_READ'CLOCK('RTC')),WAIT'TIME);
}*THEN$LWR'QUARTER_0;
}*LOCK'TIME_$PTR1;
}*LOCK'TIME$LWR'QUARTER_0;
}*IF (LONG'EQ(LOCK'TIME,LONG'ZERO) OR
}/LONG'LT(LOCK'TIME,NOW)) DO;
}-THEN$LWR'QUARTER_LKEY;
}-$PTR1_THEN;
}-MON'UNLOCK(ACCTING//LOCK2:DUMMY);
LOCK2:
}-RETURN;
}*ELSE DO;
}-MON'UNLOCK(ACCTING//LOCK3:DUMMY);
LOCK3:
}-SLEEP(LWAIT);
}*ENDIF;
}'ENDFOR;

LOCK1X: SLEEP(SWAIT) & GOTO LOCK1;

}'FUNCTION UNLOCK();
}'PTR1_PTR2+ACCT'LOCK;
UNLOCK1: MON'LOCK(ACCTING:LKEY//UNLOCK1X:DUMMY);
}'$PTR1_LONG'ZERO IF PTR1.LWR'QUARTER=LKEY;
}'MON'UNLOCK(ACCTING//UNLOCK2:DUMMY);
UNLOCK2:
}'RETURN;

UNLOCK1X: SLEEP(SWAIT) & GOTO UNLOCK1;

}'END;

}(PROGRAM SLEEP;

*}#THIS FUNCTION WILL BLOCK FOR T CLOCK TIMES.

}'INCLUDE USERDECS;


}(DECLARE INTEGER
}+STATUS'BITS,
}+REAL'TIME'INT _ 2,
}+JUST'WAKEUP _ 0;

}(DECLARE LONG
}+X,Y,
}+TIME'TO'WAKEUP,
}+DELAY'TIME,
}+LZERO _ (0,0);

}(DECLARE FIELD
}+HIGH'WORD(0),
}+LOW'WORD(1),
}+SOURCE(0:0,2),
}+ACTION(0:3,5),
}+BLK(0:11,11);

}(MACRO SETUP'SAB(S,A,B) _ S@SOURCE V' A@ACTION V' B@BLK;



}(FUNCTION SLEEP(DELAY'TIME);

}(TIME'TO'WAKEUP _ LONG'ADD(LONG(READ'CLOCK('RTC')),DELAY'TIME);
}(SET'ICT(WAKEUP'TIMER,SETUP'SAB(REAL'TIME'INT,JUST'WAKEUP,1),
}+THIS'SUB'PROCESS,TIME'TO'WAKEUP//NC'PUNT);
}(BLOCK(4B7 RSH WAKEUP'TIMER//NC'PUNT);

}(RETURN;



}(END;

}(PROGRAM PRINT'DATE'TIME; INCLUDE USERDECS;
}(STRING UTILITY DATE'TIME_82;
}(DECLARE LONG LOGON'TIME,ELAPSED'TIME,TIME;
}(DECLARE POINTER P;
}(DECLARE OCTAL FIELD W0(0),W1(1);
}(DECLARE STRING S(72);
}(DECLARE INTEGER I,PF;

})GOTO RET;

})ENTRY PRINT'DATE'TIME();
}(SETS(S,0,0);
}(PRINT'STRING(-1,DATE'TIME(READ'CLOCK('RTC'),S//SF'PUNT),
})QUIT'FLAG//QUIT'PUNTX(RET,S));
BYE:}$PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(RET,I));
RET:}$RETURN;

})ENTRY PRINT'DELTA'TIME(P);
}(SETS(S,0,0);
}(TIME_READ'CLOCK('RTC');
}(LOGON'TIME$W0_$P; $P_0;
}(P_P+1;
}(LOGON'TIME$W1_$P; $P_0;
}(LONG'SUB(TIME,LOGON'TIME:ELAPSED'TIME);
}(S_DATE'TIME(ELAPSED'TIME,S//SF'PUNT);
}(S$RP_INCDES(S$WP,-8);
}(PRINT'STRING(-1,S,QUIT'FLAG//QUIT'PUNTX(BYE,S));
}(GOTO BYE;

})ENTRY PRINT'PG'FAULTS();
}(SETS(S,0,0);
}(PF_READ'PROC'PARAM('PFC'//SF'PUNT);
}(CNS(PF,S,0,10//BYE);
}(PRINT'STRING(-1,S,QUIT'FLAG//QUIT'PUNTX(BYE,S));
}(GOTO BYE;

})ENTRY PRINT'CPU'TIME();
}(SETS(S,0,0);
}(TIME_READ'CLOCK('CTC');
}(S_DATE'TIME(TIME,S//SF'PUNT);
}(S$RP_INCDES(S$WP,-8);
}(PRINT'STRING(-1,S,QUIT'FLAG//QUIT'PUNTX(BYE,S));
}(GOTO BYE;

})ENTRY PUT'TIME(P);
}(LOGON'TIME_READ'CLOCK('RTC');
}($P_LOGON'TIME$W0;
}(P_P+1;
}($P_LOGON'TIME$W1;
}(RETURN;
}'END;

}'PROGRAM PRINT'CHARGES; INCLUDE USERDECS;

}'DECLARE PARAMETER
}/BASIC'CPU'RATE_1138,}'/* $10.00/HR}"(WAS 5689, $50) */
}/ON'RATE_114;}//*}"$1.00/HR}"(WAS 569, $5)}#*/

}'DECLARE INTEGER ON'TIME,CP'TIME,PF'RATE,
}7CPU'RATE,DOLLAR,CENTS,I,
}7DAY,HOUR,MIN,SEC;

}'DECLARE LONG NOW,THEN,TIME,ON'CHARGE,
}4CPU'CHARGE,CHARGE;

}'DECLARE STRING MONEY(15);

}'DECLARE POINTER PTR1;

}'ENTRY PRINT'CHARGES(PTR1);

}'NOW_READ'CLOCK('RTC');
}'THEN_$PTR1;
}'ANY'TIME'NUM((TIME_LONG'SUB(NOW,THEN)):,,,DAY,HOUR,MIN,SEC);
}'ON'TIME_(((DAY-1)*24+HOUR)*60+MIN)*60+SEC;
}'TIME_READ'CLOCK('CTC');
}'ANY'TIME'NUM(TIME:,,,DAY,HOUR,MIN,SEC);
}'CP'TIME_(((DAY-1)*24+HOUR)*60+MIN)*60+SEC;
}'PF'RATE_READ'PROC'PARAM('PFC'//SF'PUNT)/CP'TIME;
}'IF PF'RATE <= 10 DO;
}*CPU'RATE_BASIC'CPU'RATE;
}'ELSEIF PF'RATE <= 40 DO;
}*CPU'RATE_BASIC'CPU'RATE+((PF'RATE-10)*BASIC'CPU'RATE/30);
}'ELSE DO;
}*CPU'RATE_2*BASIC'CPU'RATE+((PF'RATE-40)*BASIC'CPU'RATE/20);
}'ENDIF;
}'.LDA ON'TIME, .MUL ON'RATE, .STD ON'CHARGE;
}'.LDA CP'TIME, .MUL CPU'RATE, .STD CPU'CHARGE;
}'CHARGE_LONG'ADD(ON'CHARGE,CPU'CHARGE);
}'.ASHD -12, .DIV 100, .STA DOLLAR, .STB CENTS;
}'WCI('$',MONEY//BYE);
}'CNS(DOLLAR,MONEY,0,10//BYE);
}'WCI('.',MONEY//BYE);
}'WCI('0',MONEY//BYE) IF CENTS<10;
}'CNS(CENTS,MONEY,0,10//BYE);
}'PRINT'STRING(-1,MONEY,QUIT'FLAG//QUIT'PUNTX(BYE,MONEY));
BYE:}#PRINT'CHAR(-1,NLCH,QUIT'FLAG//QUIT'PUNTX(RET,I));
RET:}#RETURN;

}'END;

}'COMMON SEQ'FILE'DEFS;

*}&THIS COMMON BLOCK CONTAINS THE DECLARATIONS OF IDENTIFIERS
* USED IN FILE HANDLING OPERATIONS.

}'DECLARE FIELD
}*PAGE'NUM'ADDR}&/* THE PAGE NUMBER OF THE ADDRESS}(*/
}-(0:6,12),
}*PAGES'IN'FILE}&/* NUMBER OF PAGES IN THE FILE}+*/
}-(0:2,12),
}*WORDS'IN'PAGE}&/* WORD NUMBER IN THE LAST PAGE}**/
}-(0:13,23);

}'DECLARE PARAMETER
}*A'PAGE _ 2048;}%/* WORDS TO A PAGE}7*/

}'DECLARE PARAMETER}%/* FOR IOFLAG VALUES}5*/
}*READ'FILE _ 0,
}*WRITE'FILE _ 1,
}*APPEND'FILE _ 2;

}'DECLARE PARAMETER}%/* FOR OBJECT TYPES}6*/
}*SMALL'FILE _ 0,
}*LARGE'FILE _ 1;

}'DECLARE PARAMETER}%/* FOR FILE TYPES}8*/
}*SUBCOMMAND'FILE _ 6'9SUB',
}*SAVE'FILE _ 6'9SAV',
}*BINARY'FILE _ 6'9BIN',
}*SYMBOLIC'FILE _ 6'9SYM',
}*DUMP'FILE _ 6'9DMP',
}*UNKNOWN'FILE _ 6'}$';

}'DECLARE PARAMETER}%/* FOR THE MAXIMUM LENGTH OF FILENAMES}#*/
}*LENGTH'PFS'NAMES _ 13,
}*LENGTH'TSS'NAMES _ 16;

}'DECLARE PARAMETER}%/* FOR USE IN ALLOCATING FIXED AREAS OF}"*/
}*FREE'STORAGE _ 1B5;/*}#STORAGE}=*/

}'DECLARE PARAMETER}'/* FOR USE WITH :9SYM FILES},*/
}+MB_135B,
}+EOF_137B,
}+BLANK_0B,
}+CR_155B,
}+LF_152B;

}'DECLARE PARAMETER
}*NUM'SEQ'FILES _ 3, /* CONTROLS THE NUMBER OF WINDOWS ALLO-}"*/
}=/*}#CATED, WHICH CONTROLS THE NUMBER OF */
}=/*}#FILES WHICH CAN BE OPEN AT ONE TIME */
}*WINDOW'DESC'SIZE}#/* THE NUMBER OF WORDS EACH ENTRY IN THE */
}-_ 21;}+/*}#ARRAY OF WINDOW DESCRIPTORS IS}&*/

}'DECLARE PARAMETER INDEX _ 0; * STRICTLY LOCAL

}'MACRO SET'WINDOW _ DECLARE ARRAY SEQ'FILE'WINDOWS[INDEX] _
}*(FREE'STORAGE), INTEGER INDEX _ INDEX + 1,
}*FREE'STORAGE _ FREE'STORAGE + A'PAGE;

}'DECLARE ARRAY})/* FOR THE ADDRESS OF THE WINDOWS}(*/
}*SEQ'FILE'WINDOWS[NUM'SEQ'FILES] _ (FREE'STORAGE);
}'SET'WINDOW; SET'WINDOW;

}'DECLARE ARRAY})/* OF WINDOW'DESCRIPTORS}1*/
}*SEQ'FILE'TABLE[NUM'SEQ'FILES:WINDOW'DESC'SIZE];

}'DECLARE ARRAYONE
}*OPEN'FILE'TABLE[16];
}=/* ARRAY DETERMINING WHICH FILES ARE OPEN*/
}=/* -1 MEANS THE ENTRY ISN'T USED, OTHER- OTHER-*/
}=/*}#WISE, IT HOLDS THE INDEX OF THE}%*/
}=/*}#WINDOW BEING USED}3*/




}'END;

}'COMMON WINDOW'DEFS;
}'
* THIS COMMON BLOCK DECLARES THE STRUCTURE OF A WINDOW DESCRIPTOR

}'DECLARE SIGNED FIELD
}*PAGE'IN'WINDOW (0:0,11); /* PAGE NUMBER OF THE FILE})*/
}'
}'DECLARE FIELD
}*PMT'INDEX (0:12,19),}%/* PMT INDEX OF THE FILE}+*/
}*WINDOW'IN'USE (0:20,20),
}C/* BIT SIGNALING THE WINDOW IS IN}"*/
}C/*}#USE};*/
}*LARGE'OR'SMALL (0:21,21),/* LARGE OR SMALL FILE}-*/
}*OPERATION (0:22,23),}%/* BITS REPRESENTING WHAT WILL BE}"*/
}C/*}#DONE TO THE FILE}.*/
}*FILE'NUM (1:1,5),}(/* NUMBER OF THE FILE}.*/
}*WINDOW'ADDRESS (1:6,23), /* ADDRESS OF THE WINDOW IN USE}$*/
}*CHARACTER'SIZE (2:0,5),}"/* NUMBER OF BITS PER CHARACTER}$*/
}*CHARS'PER'WORD (2:6,8),}"/* NUMBER OF CHARACTERS PER WORD}#*/
}*CHARS'PER'PAGE (2:9,23), /* NUMBER OF CHARACTERS PER PAGE}#*/
}*NAME'STORAGE (3);}(/* STORAGE FOR THE M1 FORMATTED}$*/
}C/*}#NAME}:*/

}'DECLARE STRING FIELD
}*READ'DESC (11);}*/* STRING DESCRIPTOR FOR A FILE}$*/
}C/*}#WHICH WILL BE READ},*/

}'DECLARE FIELD
}*CHARS'LEFT (15);})/* NUMBER OF CHARACTERS YET TO BE}"*/
}C/*}#READ FROM THE FILE (AFTER THE */
}C/*}#CURRENT PAGE HAS BEEN READ)}#*/

}'DECLARE STRING FIELD
}*WRITE'DESC (16);})/* STRING DESCRIPTOR OF A FILE}%*/
}C/*}#WHICH WILL BE READ},*/

}'DECLARE FIELD
}*LENGTH'IN'CHARS (20);}$/* NUMBER OF CHARACTERS ALREADY}$*/
}C/*}#WRITTEN INTO THE FILE (AFTER}"*/
}C/*}#THE LAST PAGE HAD BEEN}(*/
}C/*}#WRITTEN)}6*/
}'

}'END;

}'COMMON IO'DEFS;

*}&THIS COMMON BLOCK DECLARES THE FIELDS AND PARAMETERS NECESSARY
* TO PERFORM THE INPUT/OUTPUT FOR THIS PROGRAM

}'DECLARE FIELD
}*STATUS(0:0,1),}%/* BITS SIGNIFYING WHY THE READ'STRING}#*/
}=/*}#WAS TERMINATED}6*/
}*CHARS'FOUND}(/* THE NUMBER OF CHARACTERS FOUND}(*/
},(0:2,23);

}'DECLARE PARAMETER}%/* FOR BREAK AND WAKEUP STRATEGIES}'*/
}*NEVER'BREAK _ 0,
}*BREAK'ON'CONTROL _ 1,
}*BREAK'ON'PUN'CON _ 2,
}*ALWAYS'BREAK _ 3;

}'DECLARE PARAMETER}%/* FOR DEVICE TYPES}6*/
}*NULL'DEVICE _ 0,
}*TTY'37 _ 1,
}*TTY'35 _ 2,
}*IBM'2741 _ 3;

}'DECLARE PARAMETER}%/* FOR ECHO STRATEGIES}3*/
}*DO'NOT'ECHO _ 0,
}*ECHO _ 1;

}'DECLARE PARAMETER}%/* FOR STATUS}<*/
}*NUMBER'DESIRED _ 0,
}*BUFFER'EMPTIED _ 1,
}*BREAK'CHAR'FOUND _ 2;

}'DECLARE PARAMETER}%/* FOR THE MODE OF READ'STRING}+*/
}*DESTRUCTIVELY _ 0,
}*NONDESTRUCTIVELY _ NOT DESTRUCTIVELY;

}'DECLARE PARAMETER
}*MOST'POSSIBLE _ -1;/* FOR READ'STRING AND WRITE'STRING}&*/

}'DECLARE PARAMETER}%/* FOR TTY INPUT/OUTPUT LINES},*/
}*LENGTH'TTY'LINES _ 80,
}*MAX'LINE'LENGTH _ 130,
}*USUAL'LINE'LIMIT _ 72;

}'DECLARE PARAMETER}%/* USE TTY 3 FOR THE FTP PSEUDO-TTY LINE */
}*TTY'READ'LINE _ 6,
}*TTY'WRITE'LINE _ 7;

}'DECLARE PARAMETER}%/* USE TTY 16D FOR THE FTP CONTROL LINE}"*/
}*CNTRL'READ'LINE _ 32,
}*CNTRL'WRITE'LINE_ 33;


}'END;


}'COMMON GLOBAL'VARIABLES;

}'INCLUDE
}/COMDECS,
}/USERDECS,
}/SEQ'FILE'DEFS,
}/WINDOW'DEFS,
}/IO'DEFS;

}'DECLARE PARAMETER

}/TRUE_1,
}/FALSE_0;

}'END;

}'PROGRAM ACCNT'FILE;

*THIS FUNCTION WRITES ACCOUNTING INFORMATION ONTO A FILE FROM
*ENTER-LOGOUT VALID CHARACTERS IN THE CALLING SEQUENCE ARE 
*I,K,N,P,E,O ALL OTHERS TAKE THE FUNCTIONS FAIL RETURN.

}'INCLUDE COMDECS,SEQ'FILE'DEFS,MACHINE'DECS,USERDECS;

}'DECLARE FIELD UPUN(0:0,15);

}'DECLARE CHARACTER

}/CH;

}'DECLARE INTEGER
}'
}/ACCNT'FILE'NUM, /* FILE NUMBER}5*/
}/DAY,
}/HOUR,
}/MIN,
}/SEC,
}/I,
}/LOCK'FLAG,}&/* TO CONTROL WHETHER TO LOCK INSIDE*/
}/NUM'LINES,}&/*NUMBER OF CARRIAGE RETURNS RECORD */
}/PAGE'FAULT,}%/*NUMBER OF PAGE FAULTS AT LOGOUT}#*/
}/TERM'NO,}(/*LINE NUMBER OF TERMINAL}+*/
}/UK,
}/USNO;
}'
}'DECLARE LONG

}/CPU'TIME;

}'DECLARE PARAMETER

}/NUM'VAL'CHAR _}%6,
}/USUAL'LINE'LIMIT_ 72,
}/FOUR'LINE'RECORD_4*USUAL'LINE'LIMIT;

}'DECLARE POINTER

}/SAVE'WP;}(/*WRITE POINTER FOR ASSEMBLY'LINE}#*/
}'
}'DECLARE STRING

}/ACCOUNT'FILE _ "#1:X732-ACCFIL", /* SECURITY PURPOSES */
}/CRLF _ "&155&152",
}/ACCOUNT,
}/ASSEMBLY'LINE(FOUR'LINE'RECORD),
}/USRNAME,}0
}/USRNO(10),
}/PASSWORD,
}/TEMP'STRING(USUAL'LINE'LIMIT),
}/V(10);

}'DECLARE CHARACTER ARRAY VALID'CHAR[NUM'VAL'CHAR]_

}/('}"I',
}0'}"K',
}0'}"N',
}0'}"P',
}0'}"E',
}0'}"O');

}'FUNCTION ACCT'STR(CH,USRNAME,PASSWORD,ACCOUNT,LOCK'FLAG),FRETURN;
}'
}'FOR I_0 TO NUM'VAL'CHAR-1 DO;
}/GOTO BEGIN IF CH = VALID'CHAR[I];
}'ENDFOR;
}'FRETURN;
BEGIN: 
}'WCI(' ',ASSEMBLY'LINE//FAIL);
}'NUM'LINES_0;

*WRITE TYPE OF ENTRY ONTO FILE STRING

}'WCI(CH,ASSEMBLY'LINE//FAIL);

*WRITE USER NAME ON FILE STRING FOR 'N','P','E', OR 'O' CASES

}'IF CH # 'I' AND CH # 'K' DO;
}+APPEND(ASSEMBLY'LINE,"}""//FAIL);
}+IF CH='P' OR CH='E' OR CH='O' DO;
}/UK_READ'SPT'FIELD(-1,'UAK'//SF'PUNT);
}/READ'UP'ITEM('UP',-1,0,USRNAME,"#",V,UK:V//SF'PUNT);
}/USNO_SBASE(V).UPUN;
}/CNS(USNO,USRNO,0,10//FAIL);
}/WCI('U',ASSEMBLY'LINE//FAIL);
}/APPEND(ASSEMBLY'LINE,USRNO//FAIL);
}/APPEND(ASSEMBLY'LINE,"}""//FAIL);
}+ENDIF;
}+APPEND(ASSEMBLY'LINE,USRNAME//FAIL);
}'ENDIF;

*IF PASSWORD IS INVALID WRITE ON STRING

}'IF CH='P' DO;
}+IF LENGTH(PASSWORD)+2+LENGTH(ASSEMBLY'LINE)
}-> USUAL'LINE'LIMIT*(NUM'LINES+1) DO;
}/APPEND(ASSEMBLY'LINE,CRLF//FAIL);
}/NUM'LINES_NUM'LINES+1;
}+ENDIF;
}+APPEND(ASSEMBLY'LINE,"}""//FAIL);
}+APPEND(ASSEMBLY'LINE,PASSWORD//FAIL);
}'ENDIF;
}'
*FOR VALID ENTER WRITE ACCOUNT ON STRING
}'
}'IF CH = 'E' AND LENGTH(ACCOUNT) # 0 DO;
}+IF LENGTH(ACCOUNT)+1+LENGTH(ASSEMBLY'LINE)
}-> USUAL'LINE'LIMIT*(NUM'LINES+1) DO;
}/APPEND(ASSEMBLY'LINE,CRLF//FAIL);
}/WCI(' ',ASSEMBLY'LINE//FAIL);
}/NUM'LINES_NUM'LINES+1;
}+ENDIF;
}+WCI('[',ASSEMBLY'LINE//FAIL);
}+APPEND(ASSEMBLY'LINE,ACCOUNT//FAIL);
}+WCI(']',ASSEMBLY'LINE//FAIL);
}'ENDIF;

*GET TERMINAL LINE NUMBER EXCEPT WHEN SYSTEM IS INITIATED

}'IF CH # 'I' DO;
}+TERM'NO _ LNO RSH 1;
}+CNS(TERM'NO,TEMP'STRING,0,10//FAIL);
}+WCI('-',TEMP'STRING//FAIL);
}+CNS(THAT'PRTI,TEMP'STRING,0,10//FAIL);
}+IF LENGTH(TEMP'STRING)+3+LENGTH(ASSEMBLY'LINE)
}-> USUAL'LINE'LIMIT*(NUM'LINES+1) DO;
}/APPEND(ASSEMBLY'LINE,CRLF//FAIL);
}/NUM'LINES_NUM'LINES+1;
}+ENDIF;
}+APPEND(ASSEMBLY'LINE,"}""//FAIL);
}+WCI('L',ASSEMBLY'LINE//FAIL);
}+APPEND(ASSEMBLY'LINE,TEMP'STRING//FAIL);
}'ENDIF;
}'
*GET TIME AND PAGE FAULTS OR CURRENT TIME

}'IF CH = 'O' DO;
}+SETS(TEMP'STRING);
}+PAGE'FAULT_READ'PROC'PARAM('PFC'//SF'PUNT);
}+CNS(PAGE'FAULT,TEMP'STRING,0,10//FAIL);
}+IF LENGTH(TEMP'STRING)+4+LENGTH(ASSEMBLY'LINE)
}-> USUAL'LINE'LIMIT*(NUM'LINES+1) DO;
}/APPEND(ASSEMBLY'LINE,CRLF//FAIL);
}/NUM'LINES_NUM'LINES+1;
}+ENDIF;
}+APPEND(ASSEMBLY'LINE,"}""//FAIL);
}+APPEND(ASSEMBLY'LINE,"PF"//FAIL);
}+APPEND(ASSEMBLY'LINE,TEMP'STRING//FAIL);
}+SETS(TEMP'STRING);
}+CPU'TIME_READ'CLOCK('CTC');
}+ANY'TIME'NUM(CPU'TIME:,,,DAY,HOUR,MIN,SEC);
}+HOUR_HOUR+(DAY-1)*24;
}+CNS(HOUR,TEMP'STRING,0,10//FAIL);
}+WCI(':',TEMP'STRING//FAIL);
}+CNS(MIN,TEMP'STRING,0,10//FAIL);
}+WCI(':',TEMP'STRING//FAIL);
}+CNS(SEC,TEMP'STRING,0,10//FAIL);
}+IF LENGTH(TEMP'STRING)+3+LENGTH(ASSEMBLY'LINE)
}-> USUAL'LINE'LIMIT*(NUM'LINES+1) DO;
}/APPEND(ASSEMBLY'LINE,CRLF//FAIL);
}/NUM'LINES_NUM'LINES+1;
}+ENDIF;
}+APPEND(ASSEMBLY'LINE,"}""//FAIL);
}+WCI('T',ASSEMBLY'LINE//FAIL);
}+APPEND(ASSEMBLY'LINE,TEMP'STRING//FAIL);
}'ENDIF;
}'SETS(TEMP'STRING);
}'TEMP'STRING_DATE'TIME(READ'CLOCK('RTC'),TEMP'STRING//SF'PUNT);
}'IF LENGTH(TEMP'STRING)+2+LENGTH(ASSEMBLY'LINE)
})> USUAL'LINE'LIMIT*(NUM'LINES+1) DO;
}+APPEND(ASSEMBLY'LINE,CRLF//FAIL);
}+NUM'LINES_NUM'LINES+1;
}'ENDIF;
}'APPEND(ASSEMBLY'LINE,"}""//FAIL);
}'APPEND (ASSEMBLY'LINE,TEMP'STRING//FAIL);
}'
*PUT NUMBER OF CARRIAGE RETURNS IN FIRST POSITION OF STRING IF >0
}'
}'IF NUM'LINES>0 DO;
}+SAVE'WP_GETW(ASSEMBLY'LINE);
}+SETS(ASSEMBLY'LINE);
}+WCI('0'+NUM'LINES,ASSEMBLY'LINE//FAIL);
}+SETW(ASSEMBLY'LINE,SAVE'WP);
}'ENDIF;
}'APPEND(ASSEMBLY'LINE,CRLF//FAIL);

*}&LOCK ACCOUNT FILE

}'LOCK() IF LOCK'FLAG=0;

* WRITE ON ACCOUNT'FILE

}'ACCNT'FILE'NUM_OPEN'SEQ'FILE
}6(ACCOUNT'FILE,APPEND'FILE,SYMBOLIC'FILE,8//FAIL1);
}'OUTPUT'SEQ'FILE(ACCNT'FILE'NUM,ASSEMBLY'LINE//FAIL1);
}'CLOSE'SEQ'FILE(ACCNT'FILE'NUM//FAIL1);

* NOW UNLOCK THE ACCOUNT FILE SO OTHERS CAN USE IT

}'UNLOCK() IF LOCK'FLAG=0;
}'RETURN;

* IF THE WRITING OPERATIONS FAIL WE STILL MUST UNLOCK THINGS

FAIL1: UNLOCK();
FAIL:}"FRETURN;

}'END;

}'PROGRAM SETUP'KLUDGE;

*}&THIS FUNCTION DOES WHAT SETUP OUGHT TO DO -- TAKE A VARIABLE
* CHARACTER SIZE.}"UNFORTUNATELY, THE ONLY WAY IT CAN DO IT IS BY DOING
* A SETUP FOR EACH POSSIBLE CHARACTER SIZE.

}'DECLARE STRING FIELD
}*STRING'DESC(0);

}'DECLARE INTEGER
}*BEGIN'ADDRESS,
}*CHARACTER'SIZE,
}*LENGTH;

}'DECLARE STRING
*})KLUDGE,
}*WORKING'NAME;



}'UNKNOWN FUNCTION SETUP'KLUDGE(STRING @KLUDGE, LENGTH, BEGIN'ADDRESS,
}*CHARACTER'SIZE), FRETURN;

}'WORKING'NAME _ KLUDGE.STRING'DESC;
}'IF CHARACTER'SIZE = 6 DO;
}*SETUP(WORKING'NAME, LENGTH, BEGIN'ADDRESS, 6);
}'ELSEIF CHARACTER'SIZE = 8 DO;
}*SETUP(WORKING'NAME, LENGTH, BEGIN'ADDRESS, 8);
}'ELSEIF CHARACTER'SIZE = 12 DO;
}*SETUP(WORKING'NAME, LENGTH, BEGIN'ADDRESS, 12);
}'ELSEIF CHARACTER'SIZE = 24 DO;
}*SETUP(WORKING'NAME, LENGTH, BEGIN'ADDRESS, 24);
}'ELSE DO;
}*FRETURN;
}'ENDIF;
}'KLUDGE.STRING'DESC _ WORKING'NAME;

}'RETURN;



}'END;

}'COMMON ARRAY'DEFS;

*}&THIS COMMON BLOCK DEFINES ALL THE FIELDS USED TO MANIPULATE
* ARRAYS WITH.

}'DECLARE FIELD})/* FOR THE ARRAY DESCRIPTOR ITSELF}'*/
}*INDEXING'ORIGIN (0:2,2),
}*ARRAY'TRAP'BIT (0:3,3),
}*LEB (0:4,4),
}*ITEM'SIZE'LEB0 (0:5,6),
}*ITEM'SIZE'LEB1 (0:5,10),
}*UPPER'BOUND'LEB0 (0:7,23),
}*UPPER'BOUND'LEB1 (0:11,23),
}*ARRAY'DESC'ADDR (1);

}'DECLARE FIELD})/* FOR GENERAL INDIRECT ADDRESS WORDS}$*/
}*IAW'TYPE (0:0,1),
}*IAW'TAG (0:2,4),
}*IAW'TRAP (0:5,5),
}*IAW'ADDRESS (0:6,23);

}'DECLARE PARAMETER}%/* FOR IAW'TYPE}:*/
}*NORMAL'IAW _ 0,
}*FIELD'IAW _ 1,
}*STRING'IAW _ 2,
}*ARRAY'IAW _ 3;

}'DECLARE PARAMETER}%/* FOR IAW'TAG};*/
}*DIRECT _ 0,
}*INDIRECT _ 1,
}*INDEXED _ 2,
}*BASE'INDEXED _ 3,
}*POINTER'DISP _ 4,
}*IND'PTR'DISP _ 5,
}*BASE'INDEX'DISP _ 6,
}*RELATIVE _ 7;


}'END;

}'PROGRAM CONS'ARRAY'DESC;

*}&THIS FUNCTION CREATES AN ARRAY DESCRIPTOR GIVEN THE BASE ADDRESS,
* THE NUMBER OF ELEMENTS, ELEMENT SIZE, AND LOWER BOUND.}"THIS FUNCTION
* FAILS IF ONE THE THE ARGUMENTS ARE INVALID.

}'INCLUDE ARRAY'DEFS;

}'DECLARE ARRAY
}*ARRAY'DESC;

}'DECLARE FIELD
}*MULTIPLIER,}(/* WHAT IT IS DEPENDS ON LEB}-*/
}*UPPER'LIMIT;}'/* WHAT IT IS DEPENDS ON LEB}-*/

}'DECLARE INTEGER
}*BASE'ADDRESS,}&/* FIRST ADDRESS THAT STORAGE BEGINS IN}"*/
}*ELEMENT'SIZE,}&/* NUMBER OF WORDS PER ENTRY}-*/
}*KLUDGE,
}*LARGE'ELEMENT,
}*LOWER'BOUND,}'/* AN ARRAY OR AN ARRAYONE}/*/
}*NO'OF'ELEMENTS,}$/* NUMBER OF ELEMENTS}4*/
}*UPPER'BOUND;}'/* HIGHEST VALID SUBSCRIPT}/*/



}'ARRAY FUNCTION CONS'ARRAY'DESC(BASE'ADDRESS, NO'OF'ELEMENTS,
}*ELEMENT'SIZE, LOWER'BOUND), FRETURN;

* CHECK THE PARAMETERS PASSED TO SEE IF THEY ARE VALID
}'FRETURN IF (BASE'ADDRESS < 0 OR BASE'ADDRESS > (-1)$IAW'ADDRESS);
}'FRETURN IF NO'OF'ELEMENTS < 0;
}'FRETURN IF (ELEMENT'SIZE < 1 OR ELEMENT'SIZE >
}*(-1)$ITEM'SIZE'LEB1 + 1);
}'FRETURN IF (LOWER'BOUND # 0 AND LOWER'BOUND # 1);

* SET UP THE FIELDS FOR SMALL OR LARGE ELEMENT CASES
}'IF ELEMENT'SIZE <= 4 DO;
}*LARGE'ELEMENT _ 0;
}*MULTIPLIER _ ITEM'SIZE'LEB0;
}*UPPER'LIMIT _ UPPER'BOUND'LEB0;
}'ELSE DO;
}*LARGE'ELEMENT _ 1;
}*MULTIPLIER _ ITEM'SIZE'LEB1;
}*UPPER'LIMIT _ UPPER'BOUND'LEB1;
}'ENDIF;

* COMPUTE AND CHECK UPPER'BOUND
}'UPPER'BOUND _ LOWER'BOUND + NO'OF'ELEMENTS - 1;
*}&A CONSTANT OR PARAMETER TAILED WITH A VARIABLE FIELD CAUSES SPL
* TO GENERATE INCORRECT CODE, SO HERE'S THE KLUDGE.
}'KLUDGE _ -1;
}'FRETURN IF UPPER'BOUND > KLUDGE$UPPER'LIMIT;

* CONSTRUCT AND RETURN THE DESCRIPTOR
}'ARRAY'DESC$IAW'TYPE _ ARRAY'IAW;
}'ARRAY'DESC$INDEXING'ORIGIN _ LOWER'BOUND;
}'ARRAY'DESC$ARRAY'TRAP'BIT _ 0;
}'ARRAY'DESC$LEB _ LARGE'ELEMENT;
}'ARRAY'DESC$MULTIPLIER _ ELEMENT'SIZE - 1;
}'ARRAY'DESC$UPPER'LIMIT _ UPPER'BOUND;
}'ARRAY'DESC$ARRAY'DESC'ADDR _ NORMAL'IAW@IAW'TYPE V'
}*INDEXED@IAW'TAG V' 0@IAW'TRAP V' BASE'ADDRESS@IAW'ADDRESS;

}'RETURN ARRAY'DESC;


}'END;

}'PROGRAM OPEN'SEQ'FILE;

*}&THIS FUNCTION OPENS A FILE SPECIFIED BY THE ARGUMENT FILE'NAME
* FOR INPUT OR OUTPUT DEPENDING ON THE SECOND ARGUMENT, IOFLAG.}"THE
* THIRD ARGUMENT, CHAR'LENGTH DETERMINES WHAT THE SIZE OF THE CHAR-
* ACTERS READ FROM OR WRITTEN INTO THE FILE ARE.}"THIS FUNCTION WILL
* FAIL FOR MANY REASONS, SUCH AS IF ANY OF THE SYSTEM CALLS IT USES
* FRETURNS.}"HOWEVER, THE USER CAN CAUSE THE FUNCTION TO FAIL BY PAS-
* SING A BAD FILE NAME, OR BY SPECIFYING AN OBJECT WHICH REALLY ISN'T A
* FILE.}"THIS FUNCTION ALSO FAILS IF THE USER TRIES TO OPEN A FILE WHEN
* HE ALREADY HAS THE MAXIMUM ALLOWABLE NUMBER OF FILES OPEN.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE ARRAY
}*FORMATTED'NAME,}$/* M1 FORMATTED NAME}5*/
}*LENGTH'WORD[3];}$/* VALUE OF THE M1 FORMATTED NAME}(*/


}'DECLARE INTEGER
}*ACCESS'SPEC,}'/* ACCESS SPECIFICATION TO THE FILE}&*/
}*CHAR'LENGTH,}'/* LENGTH OF A CHARACTER IN BITS})*/
}*FILE'LENGTH,}'/* LENGTH OF FILE IN CHARACTERS}**/
}*FILE'NUMBER,}'/* TSS FILE NUMBER}7*/
}*FILE'TYPE,})/* TYPE OF FILE: SYMBOLIC, BINARY, ETC.}"*/
}=/*}#(FILE TYPES DEFINED IN FILE'DEFS)}#*/
}*IOFLAG,},/* OPERATION TO BE PERFORMED ON THE FILE */
}=/*}#(0-RETRIEVE, 1-STORE, 2-APPEND)}%*/
}*GARBAGE,}+/* UNNECESSARY RETURNED VALUES}+*/
}*LAST'PAGE,})/* LAST PAGE OF THE FILE}1*/
}*LAST'WORD,})/* LAST WORD OF THE LAST PAGE OF THE FILE*/
}*OBJECT'TYPE,}'/* TYPE OF FILE}:*/
}=/*}"(0 - SMALL FILE, 1 - LARGE FILE)}%*/
}*PAGE'NUMBER,}'/* PAGE NUMBER OF THE FILE}/*/
}*SEQ'FILE'NUM;}&/* NUMBER OF SEQUENTIAL FILES OPEN}'*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/

}'DECLARE STRING
}*NULL'STRING,}'/* JUST A NULL STRING}4*/
}*FILE'NAME;})/* FILE THE USER WANTS TO OPEN}+*/
}*



}'FUNCTION OPEN'SEQ'FILE(FILE'NAME, IOFLAG, FILE'TYPE, CHAR'LENGTH),
}*FRETURN;

* CAN THE USER OPEN A FILE?
}'FOR SEQ'FILE'NUM _ 0 TO NUM'SEQ'FILES - 1 DO;
}*GOTO SET IF NOT SEQ'FILE'TABLE[SEQ'FILE'NUM]$WINDOW'IN'USE;
}'ENDFOR;
}'RUNTIME'FAILURE();

* SET UP A POINTER TO THE FILE'S WINDOW DESCRIPTOR
SET:}#FILE _ @SEQ'FILE'TABLE[SEQ'FILE'NUM];

* SET UP AN ARRAY DESCRIPTOR
}'FORMATTED'NAME _ CONS'ARRAY'DESC(@(FILE.NAME'STORAGE), 8, 1, 0 //
}*FRETURN);

* GET THE M1 FORMATTED NAME FROM THE FILE NAME TYPED IN BY THE USER
}'NAME'SEARCH(FILE'NAME, FORMATTED'NAME, IOFLAG, FILE'TYPE, -1//
}-FRETURN: ERCODE, ERMSNO);

* MAY HAVE TO BE CHANGED FOR THE APPEND
}'ACCESS'SPEC _ ('WU' IF IOFLAG ELSE 'RU');

* IS THE FILE NEW (FORMATTED'NAME[2] = -1)?
}'IF FORMATTED'NAME[2] = -1 DO;
}*FILE'NUMBER _ OPEN'FILE(-1, FORMATTED'NAME, ACCESS'SPEC, -1//
}-SF'PUNT);
}*FILE'LENGTH _ 0;
}*OBJECT'TYPE _ SMALL'FILE;

}'ELSE DO;
*}'THE FILE ALREADY EXISTS.}"DO THIS TO BE SAFE, THE OLD NAME MAY
* NOT HAVE BEEN A MONITOR FORMATTED NAME.
}*CONV'NAME(FORMATTED'NAME, FORMATTED'NAME, -1:
}-GARBAGE, OBJECT'TYPE, GARBAGE//SF'PUNT);
}*IF (OBJECT'TYPE = SMALL'FILE) OR (OBJECT'TYPE = LARGE'FILE) DO;
}-READ'MIBOB'VALUE(FORMATTED'NAME, 1, LENGTH'WORD, 2, -1//
}0SF'PUNT);
}-FILE'NUMBER _ OPEN'FILE(-1, FORMATTED'NAME, ACCESS'SPEC, -1//
}0SF'PUNT);
}-LAST'PAGE _ LENGTH'WORD[2]$PAGES'IN'FILE - 1;
}-LAST'WORD _ LENGTH'WORD[2]$WORDS'IN'PAGE + 1;
}-FILE'LENGTH _ (0 IF NEXT'FILE'PAGE(FILE'NUMBER, -1//
}0SF'PUNT) = -1
}0ELSE (24/CHAR'LENGTH)*((2048*LAST'PAGE) + LAST'WORD));

}-IF FILE'LENGTH AND IOFLAG = WRITE'FILE DO;
}0DEL'SEQ'FILE(FILE'NUMBER//ABORT);
}0FILE'LENGTH _ 0;
}-ENDIF;
}*ELSE DO;
}-FRETURN;

}*ENDIF;

}'ENDIF;

* FILL UP THE WINDOW
}'FILE.PAGE'IN'WINDOW _ -1;
}'FILE.PMT'INDEX _ ACQUIRE'PMT(-1//SF'PUNT);
}'FILE.WINDOW'IN'USE _ 1;
}'FILE.LARGE'OR'SMALL _ (0 IF OBJECT'TYPE = SMALL'FILE ELSE 1);
}'FILE.OPERATION _ IOFLAG;
}'FILE.FILE'NUM _ FILE'NUMBER;
}'FILE.WINDOW'ADDRESS _ SEQ'FILE'WINDOWS[SEQ'FILE'NUM];
}'FILE.CHARACTER'SIZE _ CHAR'LENGTH;
}'FILE.CHARS'PER'WORD _ 24/CHAR'LENGTH;
}'FILE.CHARS'PER'PAGE _ 4000B*24/CHAR'LENGTH;
}'FILE.CHARS'LEFT _ FILE'LENGTH;
}'FILE.LENGTH'IN'CHARS _ FILE'LENGTH;

}'SET'MAP'BYTE(THIS'SUB'PROCESS, FILE.WINDOW'ADDRESS$PAGE'NUM'ADDR,
}*FILE.PMT'INDEX//SF'PUNT);

*}&THIS IS RIDICULOUS.}"THE STATEMENT SHOULD BE 
*})SETUP(NULL'STRING, 0, FILE.WINDOW'ADDRESS, CHAR'LENGTH);
* EXCEPT THAT SPL WON'T TAKE A VARIABLE CHARACTER LENGTH.
* (THERE ARE SIMILAR STATEMENTS IN MAP'IN'NEXT'PAGE AND CREATE'PAGE)
}'SETUP'KLUDGE(NULL'STRING, 0, FILE.WINDOW'ADDRESS,
}*FILE.CHARACTER'SIZE//ABORT);
}'FILE.READ'DESC _ NULL'STRING;
}'FILE.WRITE'DESC _ (PREPARE'APPEND(FILE, LAST'PAGE//ABORT) IF
}*IOFLAG = APPEND'FILE ELSE NULL'STRING);
}'OPEN'FILE'TABLE[FILE'NUMBER] _ SEQ'FILE'NUM;
}'RETURN FILE'NUMBER;

* SOMETHING WENT WRONG, SO RESET THINGS
ABORT: FILE.WINDOW'IN'USE _ 0;
}'CLOSE'SEQ'FILE(FILE'NUMBER//FRETURN);
}'FRETURN;



}'END;

}'PROGRAM DEL'SEQ'FILE;

*}&THIS FUNCTION DELETES ALL THE PAGES OF AN EXISTING FILE WHICH HAS
* BEEN OPENED FOR OUTPUT.}"THE FUNCTION FAILS ONLY IF ONE OF THE MONITOR
* CALLS IT USES FAILS.}"THE NAME OF THIS FUNCTION ISN'T EXACTLY AC-
* CURATE, BECAUSE IT ACTUALLY ONLY DELETES THE EXISTING PAGES OF THE
* FILE BUT DEL'FILE'PAGES IS EASILY CONFUSED WITH DEL'FILE'PAGE.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*FILE'NUMBER,}'/* TSS FILE NUMBER}7*/
}*PAGE'NUMBER;}'/* PAGE (MEMORY PAGE) NUMBER OF THE FILE */



}'FUNCTION DEL'SEQ'FILE(FILE'NUMBER), FRETURN;

}'PAGE'NUMBER _ 0;
}'WHILE PAGE'NUMBER # -1 DO;
}*DEL'FILE'PAGE(FILE'NUMBER, PAGE'NUMBER//
}-SF'PUNT);
}*PAGE'NUMBER _ NEXT'FILE'PAGE(FILE'NUMBER, PAGE'NUMBER//
}-SF'PUNT);
}'ENDFOR;
}'SET'FILE'LENGTH(FILE'NUMBER, 0//SF'PUNT);

}'RETURN;


}'END;

}'PROGRAM INPUT'SEQ'FILE;

*}&THIS FUNCTION READS A LINE FROM A SPECIFIED FILE AND RETURNS IT
* TO THE CALLING FUNCTION.}"A "LINE" IS A STRING OF CHARACTERS ENDING
* WITH A CARRIAGE RETURN LINEFEED, A CARRIAGE RETURN, OR A LINEFEED.
* THE LINE THE FUNCTION RETURNS HAS HAD ANY MULTIPLE BLANK CHARACTERS
* REMOVED AND THE APPROPRIATE NUMBER OF BLANKS INSERTED.
*}&WHEN THIS FUNCTION IS CALLED THE FIRST TIME AFTER OPENING THE
* FILE, THE GCI AT READ FAILS BECAUSE FILE.READ'DESC WAS SET UP TO A
* LENGTH OF ZERO.}"THE WAY END-OF-FILE IS SIGNALED IN THIS FUNCTION IS
* WHEN IT RETURNS A STRING OF LENGTH ZERO, SO THAT MUST CONSTANTLY BE
* TESTED FOR.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*CHAR,}./* A CHARACTER READ FROM THE FILE}(*/
}*COUNT,}-/* JUST A COUNTER FOR A FOR LOOP})*/
}*FINISHED,}*/* A FLAG SIGNALING THAT THE FILE HAS}$*/
}=/*}#BEEN COMPLETELY READ}0*/
}*FILE'NUMBER;}'/* THE NUMBER OF THE FILE}0*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/

}'DECLARE STRING
}*INPUT'DUMMY,}'/* A STRING CONTAINING A PAGE OF THE FILE*/
}=/*}#UNLESS IT IS THE LAST PAGE WHEN IT}"*/
}=/*}#CONTAINS THE REMAINDER OF THE FILE}"*/
}*OUTPUT'LINE;}'/* THE STRING RETURNED WITH A LINE READ}"*/
}=/*}#FROM THE FILE}7*/



}'STRING FUNCTION INPUT'SEQ'FILE(FILE'NUMBER, OUTPUT'LINE), FRETURN;

}'SETS(OUTPUT'LINE);
* SET UP THE POINTER TO THE FILE
}'FILE _ @SEQ'FILE'TABLE[OPEN'FILE'TABLE[FILE'NUMBER]];

* MAKE A DUMMY ASSIGNMENT OF THE STRING DESCRIPTOR TO KEEP SPL HAPPY
*}#(REMEMBER TO REASSIGN FILE.READ'DESC BEFORE RETURNING)
}'INPUT'DUMMY _ FILE.READ'DESC;

}'FINISHED _ FALSE;
}'WHILE 1 DO;
READ:}%GOTO PAU IF FINISHED;
}*CHAR _ GCI(INPUT'DUMMY//
}-MAP'IN'NEXT'PAGE(FILE:INPUT'DUMMY, FINISHED//FRETURN) &
}-GOTO READ) A' 177B;

* IS IT A MULTIPLE BLANK CHAR
}*IF CHAR = MB DO;
BLANKS:}&GOTO PAU IF FINISHED;
}-CHAR _ GCI(INPUT'DUMMY//
}0MAP'IN'NEXT'PAGE(FILE:INPUT'DUMMY, FINISHED//FRETURN) &
}0GOTO BLANKS) A' 77B;
}-WCI(BLANK, OUTPUT'LINE//RUNTIME'FAILURE()) FOR
}0COUNT _ 1 TO CHAR - 1;
}-CHAR _ BLANK;

* TEST FOR END OF LINE CHARACTER/CHARACTERS
}*ELSEIF CHAR = CR DO;
C'RET:}'GOTO PAU IF FINISHED;
}-CHAR _ GCI(INPUT'DUMMY//
}0MAP'IN'NEXT'PAGE(FILE: INPUT'DUMMY, FINISHED//FRETURN) &
}0GOTO C'RET) A' 177B;

}-IF CHAR = LF DO;
}0WCI(CR, OUTPUT'LINE//RUNTIME'FAILURE());
}-ELSE DO;
}0CHAR _ CHAR V' 200B;
}0INPUT'DUMMY$RP _ INCDES(INPUT'DUMMY$RP, -1);
}0FILE.READ'DESC _ INPUT'DUMMY;
}0RETURN OUTPUT'LINE;
}-ENDIF;
}*ENDIF;
}*WCI(CHAR, OUTPUT'LINE//RUNTIME'FAILURE());
}*IF CHAR = LF OR CHAR = CR DO;
PAU:})FILE.READ'DESC _ INPUT'DUMMY;
}-RETURN OUTPUT'LINE;
}*ENDIF;
}'ENDFOR;

CARR:}"WCI(CR, OUTPUT'LINE//FRETURN);
}'FILE.READ'DESC _ INPUT'DUMMY;
}'RETURN OUTPUT'LINE;




}'END;

}'PROGRAM INPUT'SEQ'FILE';

*}&THIS FUNCTION RETURNS A SPECIFIED NUMBER OF CHARACTERS FROM THE
* FILE.}"ASSUME THE FILE IS IN BINARY, SO DON'T INTERPRET ANYTHING.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*CHAR,}./* A CHARACTER READ FROM THE FILE}(*/
}*COUNT,}-/* JUST A COUNTER FOR A FOR LOOP})*/
}*FINISHED,}*/* A FLAG SIGNALING THAT THE FILE HAS}$*/
}=/*}#BEEN COMPLETELY READ}0*/
}*FILE'NUMBER,}'/* THE NUMBER OF THE FILE}0*/
}*NUMBER'CHARS;}&/* NUMBER OF CHARS TO RETURN}-*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/

}'DECLARE STRING
}*INPUT'DUMMY,}'/* A STRING CONTAINING A PAGE OF THE FILE*/
}=/*}#UNLESS IT IS THE LAST PAGE WHEN IT}"*/
}=/*}#CONTAINS THE REMAINDER OF THE FILE}"*/
}*OUTPUT'LINE;}'/* THE STRING RETURNED WITH A LINE READ}"*/
}=/*}#FROM THE FILE}7*/



}'STRING FUNCTION INPUT'SEQ'FILE'(FILE'NUMBER, OUTPUT'LINE,
}*NUMBER'CHARS), FRETURN;

}'SETS(OUTPUT'LINE);
* SET UP THE POINTER TO THE FILE
}'FILE _ @SEQ'FILE'TABLE[OPEN'FILE'TABLE[FILE'NUMBER]];

* MAKE A DUMMY ASSIGNMENT OF THE STRING DESCRIPTOR TO KEEP SPL HAPPY
*}#(REMEMBER TO REASSIGN FILE.READ'DESC BEFORE RETURNING)
}'INPUT'DUMMY _ FILE.READ'DESC;

}'FINISHED _ FALSE;
}'FOR COUNT _ 1 TO NUMBER'CHARS DO;
READ:}%GOTO PAU IF FINISHED;
}*CHAR _ GCI(INPUT'DUMMY//
}-MAP'IN'NEXT'PAGE(FILE:INPUT'DUMMY, FINISHED//FRETURN) &
}-GOTO READ);
}*WCI(CHAR, OUTPUT'LINE//FRETURN);
}'ENDFOR;
PAU:}#FILE.READ'DESC _ INPUT'DUMMY;
}'RETURN OUTPUT'LINE;




}'END;

}'PROGRAM MAP'IN'NEXT'PAGE;

*}&THIS FUNCTION SETS THINGS UP SO THAT ANOTHER PAGE MAY BE READ BY
* ACQUIRING A PMT INDEX FOR THE NEXT PAGE AND MAPPING IT IN.}"IF IT IS
* SUCCESSFUL IN DOING THAT, THE FUNCTION RETURNS THE STRING DESCRIPTOR
* FOR THE STRING WHICH OVERLAYS THE PAGE OF THE FILE AND A FLAG SIGNAL-
* WHETHER THE FILE HAS BEEN FULLY READ.}"THIS FUNCTION FAILS ONLY ON
* INTERNAL ERRORS.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*CHAR;}./* A CHARACTER READ FROM THE FILE}(*/

}'DECLARE POINTER
}*FILE;}./* POINTER TO THE FILE WINDOW},*/

}'DECLARE STRING
}*INPUT'DUMMY;}'/* STRING THAT CHARACTERS ARE READ FROM}"*/




}'STRING FUNCTION MAP'IN'NEXT'PAGE(FILE), FRETURN;

* IS THE FILE WINDOW AVAILABLE?}"IS THE FILE OPEN FOR INPUT?
}'RUNTIME'FAILURE() IF NOT FILE.WINDOW'IN'USE OR FILE.OPERATION
}*OR FILE.CHARS'LEFT < 0;

}'IF FILE.CHARS'LEFT = 0 DO;
}*SETUP'KLUDGE(INPUT'DUMMY, 0, FILE.WINDOW'ADDRESS,
}-FILE.CHARACTER'SIZE//FRETURN);
}*RETURN (INPUT'DUMMY, TRUE);
}'ENDIF;
}'FILE.PAGE'IN'WINDOW _ FILE.PAGE'IN'WINDOW + 1;
}'CLEAR'PMT(FILE.PMT'INDEX//SF'PUNT);
}'MOVE'PAGE'PMT(FILE.FILE'NUM, FILE.PAGE'IN'WINDOW, FILE.PMT'INDEX//
}*SF'PUNT);

* IF THERE'S MORE THAN A PAGE LEFT
}'IF FILE.CHARS'LEFT > FILE.CHARS'PER'PAGE DO;
}*SETUP'KLUDGE(INPUT'DUMMY, FILE.CHARS'PER'PAGE,
}-FILE.WINDOW'ADDRESS, FILE.CHARACTER'SIZE//FRETURN);
}*INPUT'DUMMY$WP _ INPUT'DUMMY$EP;
}*FILE.CHARS'LEFT _ FILE.CHARS'LEFT - FILE.CHARS'PER'PAGE;

* IF IT'S THE LAST PAGE
}'ELSE DO;
}*INPUT'DUMMY _ DET'END'OF'FILE(FILE//FRETURN);
}'ENDIF;
}'RETURN (INPUT'DUMMY, FALSE);


}'END;

}'PROGRAM DET'END'OF'FILE;

*}&THIS FUNCTION DETERMINES WHERE THE LAST ACTUAL CHARACTER OF THE
* FILE IS.}"THE MONITOR KNOWS THE LENGTH OF THE FILE IN WORDS.}"THE
* REASON THINGS ARE SO INEXACT IS BECAUSE NO ONE KNEW HOW MANY EOF'S OLD
* SPL WROTE INTO FILES.}"THIS FUNCTION WILL SET THE WRITE POINTER OF
* THE STRING TO THE RIGHT PLACE IF THE FIRST EOF IS ANYWHERE IN THE LAST
* WORD OR EVEN IF THERE IS NO EOF WRITTEN.}"THE FUNCTION RETURNS A
* STRING DESCRIPTOR SETUP TO READ HOWEVER MANY CHARACTERS ARE LEFT IN
* THE FILE.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*CHAR,}./* A CHARACTER READ FROM THE STRING}&*/
}*COUNT;}-/* JUST A COUNTER FOR A FOR LOOP}(*/

}'DECLARE PARAMETER
}*CHARS'TO'CHECK _ 3;/* THE SPAN OF CHARACTERS CHECKED WHILE}"*/
}=/*}#LOOKING FOR THE EOF CHARACTER}'*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE WINDOW IN USE}(*/

}'DECLARE STRING
}*LAST'FILE'PAGE;}$/* THE STRING WHICH OVERLAYS THE WORDS}#*/
}=/*}#OF THE FILE}9*/



}'STRING FUNCTION DET'END'OF'FILE(FILE), FRETURN;

}'SETUP'KLUDGE(LAST'FILE'PAGE, FILE.CHARS'LEFT,
}*FILE.WINDOW'ADDRESS, FILE.CHARACTER'SIZE//FRETURN);
}'LAST'FILE'PAGE$WP _ LAST'FILE'PAGE$EP;
}'LAST'FILE'PAGE$RP _ INCDES(LAST'FILE'PAGE$EP, -CHARS'TO'CHECK);

}'FOR COUNT _ 1 TO CHARS'TO'CHECK DO;
}*GOTO END'OF'FILE IF (CHAR _ GCI(LAST'FILE'PAGE) A' 177B = EOF);
}'ENDFOR;
END'OF'FILE:
}'LAST'FILE'PAGE$WP _ INCDES(LAST'FILE'PAGE$RP, -1) IF CHAR = EOF;
}'SETR(LAST'FILE'PAGE, 0);
}'FILE.CHARS'LEFT _ 0;

}'RETURN LAST'FILE'PAGE;


}'END;

}'PROGRAM OUTPUT'SEQ'FILE;

*}&THIS FUNCTION APPENDS THE STRING SPECIFIED BY ITS SECOND ARGUMENT
* TO THE FILE SPECIFIED BY THE SECOND ARGUMENT.}"THE FIRST TIME THIS 
* FUNCTION IS CALLED AFTER OPENING THE FILE, ONE OF THE WCI'S WILL FAIL
* BECAUSE FILE.WRITE'DESC WAS SETUP WITH A LENGTH OF ZERO.}"CREATE'NEW'-
* PAGE IS THEN CALLED TO CREATE ANOTHER FILE PAGE.}"IT IS EXPECTED THAT
* INPUT'LINE WILL BE A STRING IN THE 940 CHARACTER SET, SO THAT THE
* STRING CAN SIMPLY BE WRITTEN INTO THE FILE.}"THIS FUNCTION FAILS ONLY
* IF CREATE'NEW'PAGE FAILS.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*CHAR,}./* A CHARACTER TO BE WRITTEN INTO A FILE */
}*FILE'NUMBER;}'/* THE NUMBER OF THE FILE}0*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/

}'DECLARE STRING
}*INPUT'LINE,}(/* THE STRING FROM WHICH CHARACTERS ARE}"*/
}=/*}#WRITTEN INTO THE FILE}/*/
}*OUTPUT'DUMMY;}&/* A WORKING STRING}6*/



}'FUNCTION OUTPUT'SEQ'FILE(FILE'NUMBER, INPUT'LINE), FRETURN;

}'FILE _ @SEQ'FILE'TABLE[OPEN'FILE'TABLE[FILE'NUMBER]];
}'OUTPUT'DUMMY _ FILE.WRITE'DESC;
}'WHILE 1 DO;
}*CHAR _ GCI(INPUT'LINE//
}-FILE.WRITE'DESC _ OUTPUT'DUMMY & RETURN);
WRITE'CHAR:
}*WCI(CHAR, OUTPUT'DUMMY//OUTPUT'DUMMY _
}0CREATE'NEW'PAGE(FILE//FRETURN) & GOTO WRITE'CHAR);
}'ENDFOR;



}'END;

}'PROGRAM CREATE'NEW'PAGE;

*}&THIS FUNCTION CREATES A NEW FILE PAGE SO THAT MORE CHARACTERS CAN
* BE WRITTEN OUT TO THE FILE.}"IT RESETS THE STRING OUTPUT'DUMMY SO MORE
* CHARACTERS CAN BE WRITTEN INTO IT AND OVERLAYS THE STRING ON THE PAGE
* IT HAS JUST CREATED.}"THE LENGTH OF THE FILE KEPT IN THE WINDOW IS
* INCREMENTED BY A PAGE WORTH OF CHARACTERS.}"IF THE PAGE ISN'T FILLED,
* CLOSE'SEQ'FILE SETS THE EXACT LENGTH WHEN IT TRIES TO CLOSE THE FILE.
* THIS FUNCTION FAILS IF ANY OF THE MONITOR CALLS IT USES FAILS.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/

}'DECLARE STRING
}*OUTPUT'DUMMY;}&/* THE STRING THAT THE CHARACTERS WILL}#*/
}=/*}#BE WRITTEN INTO}5*/



}'STRING FUNCTION CREATE'NEW'PAGE(FILE), FRETURN;

* IS THE FILE REALLY OPEN?}"IS IT OPEN FOR OUTPUT?
}'RUNTIME'FAILURE() IF NOT FILE.WINDOW'IN'USE OR NOT FILE.OPERATION;

* DO THINGS TO MAP IN A NEW PAGE INTO THE WINDOW
}'FILE.PAGE'IN'WINDOW _ FILE.PAGE'IN'WINDOW + 1;
}'CR'FILE'PAGE(FILE.FILE'NUM, FILE.PAGE'IN'WINDOW//
}*SF'PUNT);
}'CLEAR'PMT(FILE.PMT'INDEX//SF'PUNT);
}'MOVE'PAGE'PMT(FILE.FILE'NUM, FILE.PAGE'IN'WINDOW, FILE.PMT'INDEX//
}*SF'PUNT);
}'SETUP'KLUDGE(OUTPUT'DUMMY, FILE.CHARS'PER'PAGE,
}*FILE.WINDOW'ADDRESS, FILE.CHARACTER'SIZE//FRETURN);

}'FILE.LENGTH'IN'CHARS _ FILE.PAGE'IN'WINDOW*FILE.CHARS'PER'PAGE;
}'RETURN OUTPUT'DUMMY;



}'END;

}'PROGRAM PREPARE'APPEND;

*}&THIS FUNCTION IS A SPECIAL CASE OF MAP'IN'NEXT'PAGE WHERE THE
* PAGE WHICH WILL BE MAPPED INTO THE WINDOW IS THE LAST PAGE OF THE FILE.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*LAST'PAGE;})/* THE LAST PAGE OF THE FILE}-*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/

}'DECLARE STRING
}*APPEND'DESC;}'/* THE STRING DESCRIPTOR SET UP SO THAT}"*/
}=/*}#THE FILE CAN HAVE MORE CHARACTERS}#*/
}=/*}#APPENDED TO IT}6*/




}'STRING FUNCTION PREPARE'APPEND(FILE, LAST'PAGE), FRETURN;

* IS THE FILE REALLY OPEN?}"IS IT OPEN FOR OUTPUT?
}'RUNTIME'FAILURE() IF NOT FILE.WINDOW'IN'USE OR
}*FILE.OPERATION # APPEND'FILE;

* DO THINGS TO MAP IN A NEW PAGE INTO THE WINDOW
}'FILE.PAGE'IN'WINDOW _ LAST'PAGE;
}'CLEAR'PMT(FILE.PMT'INDEX//SF'PUNT);
}'MOVE'PAGE'PMT(FILE.FILE'NUM, FILE.PAGE'IN'WINDOW, FILE.PMT'INDEX//
}*SF'PUNT);
*}&CHANGE THE CHARACTER COUNT SO DET'END'OF'FILE DOESN'T CREATE A
* STRING OVER A PAGE LONG.
}'FILE.CHARS'LEFT _ FILE.CHARS'LEFT - FILE.CHARS'PER'PAGE*LAST'PAGE;
}'APPEND'DESC _ DET'END'OF'FILE(FILE//FRETURN);
*}&MOVE THE END POINTER OF THE STRING SO THAT THE STRING IS A WHOLE
* PAGE LONG.
}'APPEND'DESC$EP _ INCDES(APPEND'DESC$BP, FILE.CHARS'PER'PAGE);
}'FILE.LENGTH'IN'CHARS _ FILE.CHARS'PER'PAGE*(FILE.PAGE'IN'WINDOW);

}'RETURN APPEND'DESC;



}'END;

}'PROGRAM CLOSE'SEQ'FILE;

*}&THIS FUNCTION CLOSES THE FILE SPECIFIED BY ITS ONLY ARGUMENT.
* IT IS CALLED TO CLOSE BOTH FILES WHICH WERE OPENED FOR INPUT AND OUT-
* PUT.}"HOWEVER, FOR FILES WHICH HAVE BEEN OPENED FOR OUTPUT, IT MUST
* DETERMINE THE EXACT LENGTH OF THE FILE AND LET THE MONITOR KNOW ABOUT
* IT.}"THE FUNCTION FAILS ONLY FOR INTERNAL REASONS: THE FILE IS ALREADY
* CLOSED, OR ONE OF THE MONITOR CALLS IT USES FAILS.

}'INCLUDE GLOBAL'VARIABLES;

}'DECLARE INTEGER
}*FILE'NUMBER,
}*LENGTH'IN'WORDS;}#/* LENGTH OF THE FILE IN WORDS}+*/

}'DECLARE POINTER
}*FILE;}./* A POINTER TO THE FILE WINDOW}**/



}'UNKNOWN FUNCTION CLOSE'SEQ'FILE(FILE'NUMBER), FRETURN;

}'FILE _ @SEQ'FILE'TABLE[OPEN'FILE'TABLE[FILE'NUMBER]];
* CHECK TO SEE IF WHAT IT IS GOING TO BE CLOSED ALREADY IS
}'RUNTIME'FAILURE() IF NOT FILE.WINDOW'IN'USE;
}'IF FILE.OPERATION DO;
}+OUTPUT'SEQ'FILE(FILE'NUMBER,"&137"// FRETURN);
}*LENGTH'IN'WORDS _
}-(LENGTH(FILE.WRITE'DESC)*(FILE.CHARACTER'SIZE) + 23)/24;
}*SET'FILE'LENGTH(FILE'NUMBER, LENGTH'IN'WORDS -1//
}-SF'PUNT);
}'ENDIF;

* FREE THE WINDOW
}'CLOSE'FILE(FILE'NUMBER//SF'PUNT);
}'FILE.WINDOW'IN'USE _ 0;
}'OPEN'FILE'TABLE[FILE'NUMBER] _ -1;
}'DELETE'PMT(FILE.PMT'INDEX//SF'PUNT);

}'RETURN;



}'END;