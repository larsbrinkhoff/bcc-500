LBLMKR IDENT
* PROGRAM TO OUTPUT MAILING LABELS FROM A FORMATTED INPUT FILE
*}&INPUT FILE SHOULD CONSIST OF A SEQUENCE OF ENTRIES, EACH OF NO
*}&GREATER THAN FIVE LINES.}"EACH LINE SHOULD BE NO LONGER THAN LBLWDTH CHRS.,
*}&ALTHOUGH IF THE LINE IS LONGER THE PROGRAM WILL TRUNCATE IT.
*}&EACH ENTRY MUST BE SEPARATED FROM THE NEXT BY A LINE WHICH BEGINS
*}&WITH ONE OR MORE ASTERISKS.

* PARAMETER(S)
LBLNGTH EQU 5-1}0NO OF LINES IN A LABEL - 1
LBLWDTH EQU 36}1WIDTH OF LABEL ON OUTPUT FORMS
NOBLKS}"EQU 0}2NUMBER OF BLANKS BETWEEN LABELS

* MACRO TO OUTPUT A MESSAGE ON THE TERMINAL.
MSG}$MACRO D,G,2; LDA =G(1); LDB =-1; LDX =1; BRS 34; BRU G(2)
G(1)}#ASC 'D(1)'
G(2)}#EQU *; FRGT G(1); FRGT G(2); ENDM

* TEMPORARIES.
BLKCNT BSS 1
BPTR}#BSS 1
BUF1}#BSS 5*LBLWDTH
BUF2}#BSS 5*LBLWDTH
BUF3}#BSS 5*LBLWDTH
CHRCNT BSS 1
FPTR}#BSS 1
GETCT}"BSS 1
IFNO}#BSS 1
INDEX}"BSS 1
LINENO BSS 1
OFNO}#BSS 1
REVERSE BSS 1
STOP}#BSS 1
SS}%BSS 100
TPTR}#DATA 3*SS-1,3*SS-1
TSTRG}"BSS 2

* PROGRAM STARTS HERE.
START}"MSG ($INPUT FILE: /); CLEAR; BRS 15; BRU START; STA IFNO
S1}%MSG ($OUTPUT FILE: /); CLEAR; LDA =3B6; BRS 16; BRU S1; STA OFNO
S2}%MSG ($REVERSE ORDER OF NAMES?}"/); CIO =0; SKE ='Y'; BRU S3
}'MSG (ES/); LDA =-1; STA REVERSE; BRU S5
S3}%SKE ='N'; BRU S4; MSG (O/); CLA; STA REVERSE; BRU S5
S4}%MSG (}#???/); BRU S2

* INITIALIZATION.
S5}%LDA =NXTC2-1; STA MAIN; TCO =155B; TCO =152B
GO}%CLA; STA STOP

* PROGRAM READS THREE ENTRIES, PLACING EACH INTO SINGLE CHARACTERS STORED
*}&IN SEQUENTIAL MEMORY LOCATIONS.}"THE LINES OF EACH ENTRY BEGIN
*}&EVERY LBLWDTH WORDS TO CORRESPOND TO THE LBLWDTH-CHARACTER WIDTH OF A LABEL.
G1}%LDA =BUF1; BRM MVITEM; BRU G4
}'LDA =BUF2; BRM MVITEM; BRU G5
}'LDA =BUF3; BRM MVITEM; BRU G6

* THEN FIVE LINES ARE OUTPUT, LBLWDTH CHARACTERS FROM EACH OF THE THREE ENTRIES.
G2}%CLA; STA LINENO
G3}%BRM OUTL
}'MIN LINENO; LDA LINENO; SKG =4; BRU G3
}'LDA =155B; CIO OFNO; LDA =152B; CIO OFNO
}'SKN STOP; BRU G1
}'LDA =137B; CIO OFNO; BRS 17; BRS 10
G4}%LDA =BUF2; BRM CLRBUF
G5}%LDA =BUF3; BRM CLRBUF
G6}%LDA =-1; STA STOP; BRU G2

* SUBROUTINE TO READ AN ENTRY, CHR-BY-CHR, INTO THE STORAGE.
*}&SKIPS UNLESS END FILE CHAR IS ENCOUNTERED.
MVITEM ZRO; MRG =2B7; STA FPTR; BRM CLRBUF
}'CLA; STA LINENO; STA CHRCNT; STA INDEX
}'LDP TPTR; STP TSTRG
}'BRM GET1C
}'SKN REVERSE; BRU MVI9
MVI1}#SKE =','; BRU MVI7
MVI2}#BRM GETC; SKE =' '; BRU *+2; BRU MVI2
MVI3}#SKE =','; BRU MVI5
}'BRM SAVSTR; LDA =','
MVI4}#LDX INDEX; STA _FPTR
}'MIN CHRCNT; MIN INDEX
}'LDA CHRCNT; SKG =LBLWDTH; BRU *+2; BRU MVI11
}'BRM GETC; SKE =155B; BRU MVI4; BRU MVI11
MVI5}#SKE =155B; BRU MVI6
}'BRM SAVSTR; BRU MVI11
MVI6}#LDX INDEX; STA _FPTR
}'MIN CHRCNT; MIN INDEX
}'LDA CHRCNT; SKG =LBLWDTH; BRU *+2; BRU MVI11
}'BRM GETC; BRU MVI3
MVI7}#SKE =155B; BRU MVI8
}'LDA =-1; ADM INDEX; BRM SAVSTR; BRU MVI11
MVI8}#WCI TSTRG; BRM GETC; BRU MVI1
MVI9}#LDX INDEX; STA _FPTR
}'MIN CHRCNT; MIN INDEX
}'LDA CHRCNT; SKG =LBLWDTH; BRU MVI14
MVI10}"BRM SKIPCR
MVI11}"BRM SKIPLF; MIN LINENO
}'LDA LINENO; SKG =LBLNGTH; BRU MVI13
}'BRM SKIPSEP
MVI12}"BRM SKIPLF; MIN MVITEM; BRR MVITEM
MVI13}"MUL =LBLWDTH; LSH 23; STA INDEX
}'CLA; STA CHRCNT
}'BRM GETC; BRM SEPTOR; BRU MVI9; BRU MVI12
MVI14}"BRM GETC; SKE =155B; BRU MVI9; BRU MVI11

SKIPCR ZRO; BRM GETC; SKE =155B; BRU *-2; BRR SKIPCR

SKIPLF ZRO; BRM GETC; SKE =152B; BRU *-2; BRR SKIPLF

SKIPSEP ZRO; BRM GETC; BRM SEPTOR; BRU *-2; BRR SKIPSEP

GETC}#ZRO; BRM NXTCHR; BRR MVITEM; BRR GETC

* SUBROUTINE TO GET THE FIRST CHARACTER AFTER A SEPARATOR.
GET1C}"ZRO;
GET1C1 BRM GETC; BRM SEPTOR; BRR GET1C; BRM SKIPLF; BRU GET1C1

* SUBROUTINE TO COPY NAME SAVED ON TSTRG TO BUFFER
*}%ALSO PLACES A SINGLE BLANK INTO THE BUFFER AHEAD OF THE NAME.
SAVSTR ZRO; MIN INDEX
SAVST1 GCI TSTRG; BRR SAVSTR; LDX INDEX; STA _FPTR
}'MIN CHRCNT; MIN INDEX
}'LDA CHRCNT; SKG =LBLWDTH; BRU SAVST1; BRU MVI11

* SUBROUTINE TO CHECK FOR A SEPARATOR LINE.}"SKIPS IF THE A REG.
*}%IS EITHER A '*' OR A BLANK.
SEPTOR ZRO; SKE ='*'; BRU SEPT1
SEPT0}"MIN SEPTOR; BRR SEPTOR
SEPT1}"SKN REVERSE; BRR SEPTOR; SKE =' '; BRU SEPT2; BRU SEPT0
SEPT2}"SKE =155B; BRU SEPT3; BRU SEPT0
SEPT3}"SKE =152B; BRR SEPTOR
}'LDA =NXTC4-1; STA MAIN; LDA =152B; BRU SEPT0

* SUBROUTINE TO OUTPUT A LINE.}"GETS LBLWDTH CHRS FROM EACH OF THE THREE AREAS.
OUTL}#ZRO; LDA =BUF1; BRM OUTPL
}'LDA =BUF2; BRM OUTPL
}'LDA =BUF3; BRM OUTPL
}'LDA =155B; CIO OFNO; LDA =152B; CIO OFNO
}'BRR OUTL

* SUBROUTINE TO OUTPUT A LBLWDTH-CHR PIECE OF A LINE.
OUTPL}"ZRO; MRG =2B7; STA FPTR
}'LDA LINENO; MUL =LBLWDTH; LSH 23; CAX
}'CLA; STA CHRCNT
OUTP1}"LDA* FPTR; BRX *+1; CIO OFNO
}'MIN CHRCNT; LDA CHRCNT; SKG =LBLWDTH-1; BRU OUTP1
}'CLA; LDX =-NOBLKS-1; BRU *+2; CIO OFNO; BRX *-1; BRR OUTPL

* SUBROUTINE TO CLEAR STORAGE FOR SPECIFIED ENTRY.
CLRBUF ZRO; MRG =2B7; ADD =5*LBLWDTH; STA BPTR
}'LDX =-5*LBLWDTH; CLA; STA* BPTR; BRX *-1; BRR CLRBUF

* LINKAGE FOR NXTCHR CO-ROUTINE.
MAIN}#BSS 1
}'BRR NXTCHR
NXTCHR BSS 1
}'BRR MAIN

* ROUTINE TO OBTAIN NEXT CHR FROM THE INPUT FILE.
*}&SKIPS UNLESS END FILE CHAR ENCOUNTERED
NXTC1}"SKE =137B; MIN NXTCHR; BRM MAIN
NXTC2}"CIO IFNO; SKE =135B; BRU NXTC1
}'CIO IFNO; SUB =1; STA BLKCNT
NXTC3}"LDA =' '; MIN NXTCHR; BRM MAIN
}'SKR BLKCNT; BRU NXTC3; BRU NXTC2
NXTC4}"LDA =152B; BRU NXTC1+1}"FORCE EXTRA LF FOR BLANK LINES


}'END

* PROGRAM TO COPY A FILE LINE-BY-LINE, UP TO THE 1ST 72 CHRS.
* THIS PROGRAM MAY BE USED TO REMOVE SEQUENCE NUMBERS FROM CARD IMAGES
*}&AND ALSO COMPACT THE OUTPUT FILE WELL.

* MACRO TO OUTPUT A MESSAGE ON THE TERMINAL.
MSG}$MACRO D,G,2; LDA =G(1); LDB =-1; LDX =1; BRS 34; BRU G(2)
G(1)}#ASC 'D(1)'
G(2)}#EQU *; FRGT G(1); FRGT G(2); ENDM

* TEMPORARIES
BLKCNT BSS 1
BLNKCT BSS 1
CHRCT}"BSS 1
IFNO}#BSS 1
OFNO}#BSS 1
TEMP1}"BSS 1

* PROGRAM STARTS HERE.
START}"MSG ($INPUT FILE: /); CLEAR; BRS 15D; BRU START; STA IFNO
S1}%MSG ($OUTPUT FILE: /); CLEAR; LDA =3B6; BRS 16D; BRU S1; STA OFNO

* INITIALIZE NXTCHR CO-ROUTINE
}'LDA =NXTC1; STA MAIN; TCO =155B; TCO =152B
S2}%CLA; STA CHRCT
S3}%CLA; STA BLNKCT
S4}%BRM NXTCHR; SKE =' '; BRU S6
S5}%MIN BLNKCT; BRM NXTCHR; SKE =' '; BRU *+2; BRU S5
}'SKE =155B; BRU *+2; BRU S6; STA TEMP1
}'LDA BLNKCT; SKG =1; BRU S7
}'LDA =135B; CIO OFNO; LDA BLNKCT; CIO OFNO
}'LDA TEMP1
S6}%CIO OFNO; SKE =152B; BRU S3; BRU S2
S7}%CLA; CIO OFNO; LDA TEMP1; BRU S6

* LINKAGE FOR NXTCHR CO-ROUTINE.
MAIN}#BSS 1
}'BRR NXTCHR
NXTCHR BSS 1
}'BRR MAIN

* NXTCHR ROUTINE.}"OBTAINS ONE CHARACTER FROM THE INPUT FILE UP TO 72 CHRS.
NXTC1}"BRM MAIN
NXTC2}"BRM GETCHR; SKE =135B; BRU NXTC1
}'BRM GETCHR; ADM CHRCT; SUB =1; STA BLKCNT
NXTC3}"LDA =' '; BRM MAIN
}'SKR BLKCNT; BRU NXTC3; BRU NXTC2

* SUBROUTINE TO FETCH A RAW CHR FROM THE INPUT FILE.}"STOPS WITH 72.
GETCHR BSS 1
}'MIN CHRCT; LDA CHRCT; SKG =72; BRU GETC1
}'CIO IFNO; SKE =155B; BRU *-2
}'CLA; STA CHRCT; LDA =155B; BRR GETCHR
GETC1}"CIO IFNO; SKE =137B; BRR GETCHR
}'CIO OFNO; BRS 17; BRS 10

}'END
